{"3697": {"code": ["\nUse Call-Based format\n\n\n\n\nA nested list is a nested list that is a list that is a nested list within another list\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[item, item, item]\nreturn 3\n\n\n\n\nA nested list is a list\n\n\n\n\n```python\nif list_", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\npython\nlist_depth([1, 2, 3])\nreturn 1\n```\n\n\n\n\n\n\n\n\n\n[1, 2, 3, 4]\n\n\n\n\n\nitem\n\n\n\n\n\npython\n[item, item]\n```\n\n\nA nested list is", "\nUse Call-Based format\n\n\n\nA nested list is a list that is a value inside another list\n:\n\n\n\n\n\n\n\n\n\n\nUse Javascript-based format\n\nUse Python 2.6 format\n1, 2, 3, 4, 5, 6\n\n\n\n\n\n\n\nA nested list is a list\n\n\n\n\n```python\n#", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\npython\nlist_depth([])\nreturn 3\n```\n\n\n\nA nested list is a list that is a list that can be used as a value inside another list \n\n\n\n\n\n\n\n\n\nThe depth of a nested list is determined by depth of its items\n\n\n\nA nested list is", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\npython\nlist_depth(l)\nreturn 2\n```\n\n\n\nUse JavaScript format\nA nested list is a list that is not a list that can be nested inside another list\n\n\n\n\n\n\n\nA nested list is a nested list\n\npython\n\n\n\n```python\nlist_", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\npython\n[3, [3, [3, [3], 3], [3, [3, 1], [3, 1], 1]\n```\n\n\n\n\n\n\n\n\n\n[item, item]\n\n\n\n\n\npython\nlist_depth([])\nreturn 1\n\n\n", "\n\n\n\n\n\n\npython\nlist_depth([])\nreturn 1\n```\n\n\n\n\n\nlist_depth([[], [], [], []])\nreturn 2\n```\n\n\n\n\n\n\n\n\na nested list is a list that is a value inside another list  \n\n```python\n\n\n\n\n\n\n\n\n```python\nif", "\nUse Call-Based format\n\n\n\n\n\n\n\nlist_depth(l)\nreturn 2\n\n```python\nlist_depth([l])\nreturn 2\n```\n\n\n\n\n\n\n\n\n\n\n\n\n[item, item]\nreturn 2\n\n\n\n\n\npython\nlist_depth([])\nreturn 1\n\n\nA nested list is", "\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nlist_depth([])\nreturn 1\n\n\n\n\n\n\n\n\n```python\n# python -c\n\n\n\n\n\n\n\n\n\nlist_depth(l)\n\n\n\n\npython\n\n\nA nested list (or *array* in", "\nUse Call-Based format\n\n\n\nA nested list is a list that is a nested list within another list\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[item, item]\nreturn 2\n```\n\n\n\n\nA nested list is a nested list\n\n\n\n\n\n```python\nif l is a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\npython\nlist_depth([1, 2, 3, 4, 5])\nreturn 2\n\n\n\n\n\n\n\nno nested lists\n\n\n\n\n\n\n\nlist_depth([2, [3, [6]]])\nreturn 2\n\n\n\n\n\n\n\nA nested list is", "\n\n\n\n\n\n\n\n\npython\nlist_depth([])\nreturn 1\n```\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n```python\nlist_depth([[1, 1, 1, [1, 1], 1, 1]])```\n\n\n\n\n\n\n\n\n[1, [2", "\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\npython\n[1, 1]\n```\nreturn 1\n```\n\nlist_depth([])\n\n\n\n\n\n\n```python\nlist_depth([1])\nreturn 1\n```\n\n\n\n\n\n\n\n\npython\nlist_depth([])\nreturn 1\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\npython\n[1, 2, 3, 5, 6, 7, 7]\n```\n\n\n\n\n\n\n2.0, [1, 2, 3, 3, 4, 5, 6]\n\n\n\n\n\n\n\n\npython\nlist_depth([])\nreturn 1\n\n\nA", "\n\n\n\n\n\n\n\n\n\n\n\n\nlist_depth(l)\nreturn 2\n```\n\nlist_depth(False)\nreturn 1\n```\n\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\n\nA nested list is a nested list that is itself a list.\n\n\n\n\na nested list is a list that", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\npython\nlist_depth([1, 2, 3, 4, 5])\nreturn 2\n```\n\n\n\n\n\n\n\n\n\n\n[2, [2, [1, [1, 2], 1], 2, 1, 1]\n\n\n\n\npython\n\n\nA nested list (or", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\npython\nlist_depth([1, 2, 3, 4, 5, 6, 7])\nreturn 1\n\n\n\n\n\nl is a nested list, list, array, array, array, array\n\n\n\n\n\n\n\nA nested list is a list\n\n\n\nAn array or array is a nested", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\npython\n[1, 2, 3, 5, 6, 7, 7, 7]\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n[item, item, [item, item], item]\n\n\n\n\n\n\n\tif you", "\nUse Call-Based format\n\n\n\n\n\nA nested list is a nested list of lists\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nA nested list is a list that is a value inside another list\n\n\n\n\n\n\na nested list is a list in JavaScript\n\n\n\nA nested list is a list in JavaScript\n\n\n\na nested list is", "\t\nUse Call-Based format\n\n\n\n\n\npython\nlist_depth([item, item, [item, item, item, item, item, item, item])\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na nested list is a list that is a value inside another list  \n\n\n\n\npython\nreturn 1\n\n\nA nested list is"], "prompt": "\nQUESTION:\nA nested list (or *array* in JavaScript) is a list that apears as a value inside another list, \n```python\n[item, item, [item, item], item]\n```\nin the above list, [item, item] is a nested list.  \n  \nYour goal is to write a function that determines the depth of the deepest nested list within a given list.  \nreturn 1 if there are no nested lists.\nThe list passed to your function can contain any data types.  \n  \nA few examples:\n\n```python\nlist_depth([True])\nreturn 1\n\nlist_depth([])\nreturn 1\n\nlist_depth([2, \"yes\", [True, False]])\nreturn 2\n\nlist_depth([1, [2, [3, [4, [5, [6], 5], 4], 3], 2], 1])\nreturn 6\n\nlist_depth([2.0, [2, 0], 3.7, [3, 7], 6.7, [6, 7]])\nreturn 2\n```\ndef list_depth(l):\n\t\nUse Call-Based format\nANSWER:\n"}}