{"3932": {"code": ["\n# Use Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n# Example\n\n# Story&Task\n\n\n\n\n# Example\n\n# Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n# Output\n\n\n\n# Story&Task\n\n\n# Story", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n# Example\n\n\n\n\n\n\n\n# Example\n\n# Story&Task\n\n Use Call-Based format\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n# Output\n\n# Input/Output\n\n \n# Example\n\n\n# Story&Task\n\n", "\nUse Call-Based format\n\n  Use Call-Based format\n\n \n\n\nUse Call-Based format\n\n Use Call-Based format\n\n \n\n\n# Example\n\n# Story&Task\n\n\n\n\n# Example\n\n\n\n\n\n\n\n# Example\n\n\n\n# Output\n\n # Output\n\n#\n# Story&Task\n\n", "\nUse Call-Based format\n\n# Example\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n\n\n\n\n\n# Example\n\n\n# Example\n\n\n\n\n\n\n\n\n\n# Example\n\n# Output\n\n\n# Example\n\n\n\n# Story&Task\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n# Example\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n# Example\n\n# Output\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n# Output\n\n\n# Example\n\n\n# Story&", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n# Input/Output\n\n# Example\n\n\n\n# Example\n\n\n\n# Story&Task\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Example\n\n# Story&Task\n\n\n# Output\n\n\n# Example\n\n\n# Story", "\nUse Call-Based format\n\n# Example\n\n\n\n\n# Main\n\n\n# Example\n\n\n# Example\n\n\n\n# Main\n\n\n\n\n#\n\n# Output\n\n\n\n\n# Example\n\n\n\n\n# Example\n\n\n# Example\n\n# The \"luxhouse\" format\n\n\n\n# Example\n\n\n# Story&", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n# Example\n\n\n\n\n# Output\n\n# Story&Task\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Output\n\n# Example\n\n\n# Output\n\n\n# Example\n\n\n# Story&", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n# Input/Output\n\n\n\n# Example\n\n\n# Example\n\n# Story&Task\n\n\n\n# Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Story&Task\n\n\n\n# Story&Task\n\n#", "\n\tUse Call-Based format\n\n Story&Task\n\n \n\n\n\n\n\n\n\n\n# Input/Output\n\n \n# Story&Task\n\n\n\n\n# Example\n\n\n# Example\n\n\n\n\n\n\n\n\n# Example\n\n\n# Output\n\n# Example\n\n\n# Input/Output\n\n\n\n# Story&", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Example\n\n\n# Output\n\n\n# Story&Task\n\n# Story&Task\n\n\n\n\n# Example\n\n# Output\n\n\n\n\n\n\n\n\n\n\n# Ability\n\n\n\n# Output\n\n\n# Default\n\n\n\n\n# Story&Task", "\nUse Call-Based format\n\n\n\n\n# Example\n\n  # Use Call-Based format\n\n \n\n\n# Example\n\n\n\n# Example\n\n# Story&Task\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Output\n\n# Example\n\n\n\n#\n\n# Story&Task", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Example\n\n\n# Story&Task\n\n\n\n\n\n\n# Input/Output\n\n\n# Story&Task\n\n\n\n\n\n\n\n\n\n\n# Output\n\n\n# Input/Output\n\n\n\n# Story&Task\n\n# Example", "\n\nUse Call-Based format\n\n\n\n\n\n# Input/Output\n\n\n# Example\n\n\n\n# Story&Task\n# Example\n\n\n\n\n# Input/Output\n\n \n# Example\n\n\n\n\n# Example\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n\n# Example\n\n\n# Example\n\n\n# St", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n# Example\n\n\n# Story&Task\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Story&Task\n\n\n# Output\n\n# Example\n\n\n\n# Output\n\n# Story&Task\n", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n# Story&Task\n\n\n\n# Input/Output\n\n\n# Example\n\n\n\n\n\n\n\n\n# Example\n\n\n# Example\n\n# Output\n\n\n\n\n# Story&Task\n\n# St", "\n# Run-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n# Example\n\n\n\n\n# Run-Based format\n\n\n# Story&Task\n\n\n\n#\n\n\n\n\n\n\n\n# Output\n\n\n\n# Output\n\n# Example\n\n\n\n#\n# Story&Task\n\n#", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n# Example\n\n\n# Story&Task\n\n  Use Call-Based format\n\n\n\n\n\n\n# Example\n\n# Output\n\n\n\n\n\t\n\n\n\n\n\n\n# Example\n\n\n\n\n# Output\n\n\n# Story&Task", "\n\n\nUse Call-Based format\n\n\n - `[output]` integer array `houses`\n\n  Array of positive integers `ith`\n\n \n\n\n\n\n\n\n\n\n\n Example\n\n\n\n#\n\n\n\n\n\n\n\n# Example\n\n\n# Output\n\n\n# Story&Task\n\n# Story&Task\n", "\n# Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n# Story&Task\n\n\n\n\n# Output\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Output\n\n\n\n\n# Output\n\n\n\n# Story&Task\n\n"], "prompt": "\nQUESTION:\n# Story&Task\n The capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all houses in the city were built in one row.\n\n Let's enumerate all the houses from left to right, starting with 0. A house is considered to be luxurious if the number of floors in it is strictly greater than in each house with larger number. In other words, a house is luxurious if the number of floors in it is strictly greater than in all houses, located to the right from it.\n\n The new architect is interested in n questions, the ith of them is the following: \"how many floors should be added to the ith house to make it luxurious?\" (For each i from 1 to n, inclusive). You need to help him cope with this task.\n\n Note that all these questions are independent from each other \u2014 the answer to the question for house i does not affect other answers (i.e., the floors to the houses are not actually added).\n\n# Input/Output\n\n\n - `[input]` integer array `houses`\n\n  Array of positive integers, representing the number of floors in each house.\n\n  The ith element is the number of houses in the ith house.\n\n  `1 \u2264 houses.length \u2264 1000`\n\n\n - `[output]` an integer array\n\n  An array has the same length as input array, the ith element represents the number of floors that should be added to the ith house to make it luxurious.\n  \n# Example\n\n For `houses = [1,2,3,1,2]`, the output should be `[3,2,0,2,0]`.\n ```\n For houses[0], 3 floors should be added, \n then its floors is strictly greater than all houses of right side.\n \n For houses[1], 2 floors should be added.\n \n For houses[2], no need to add floor\n because it's already the luxurious.\n \n For houses[3], 2 floors need to added\n \n For houses[4], no house on the right, \n so no need to add any floor.\n ```\ndef luxhouse(houses):\n\t\nUse Call-Based format\nANSWER:\n"}}