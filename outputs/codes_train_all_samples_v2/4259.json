{"4259": {"code": ["\n### Section:\n## Rule:\n## Rule:\n## Rule:\n## Rule:\n## Rule:\n\n\n\n\n\n\n\n\n\n\n\n 1     1     1     1\n       \n  + pattern(3,1):\n\n\n\n\n    \n\n\n\n\n\n\n\n\n       \n       \n       \n       \n  + pattern(1,1       ", "\n## Rules:\n\n## Note:\n\n### Rule:\n\n## Examples:\n\n### Rules/Note:\n\n  \n\n\n\n\n\n\n        \n       \n     1     1  \n            1  \n           1     1  \n     1\n\n\n\n\n\n\n\n\n\n## Rule:\n\n\n\n\n\n\n            5     5     5     1", "\n## Rule:\n## Note:\n##\n## Note:\n## Rule:\n## Note:\n##\n## Note:\n### Rule:\n\n\n\n\n\n\n\n\n 1     1     1\n       \n  + pattern(5,10):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n       \n               \n        1     1     1", "\n## Function:\n\n## Rule:\n\n## Pattern:\n\n\n\n\n\n\n\n\n## Rules:\n\n |\n\n\n\n\n     1     1     1 \n 1     1     1\n            1     1  \n        1     1     1  \n\n\n    \n\n\n\n \n\n\n\n     1     1\n       \n      \n          3     3", "\n## Task:\n\n## Rule:\n\n## Rule:\n\n## Rule:\n\n## Rule:\n\n\n\n## Arguments:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n              1  \n      1     1  \n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     1     1     1   \n       4     4    ", "\n## Rule:\n\n\n### Function:\n\n## Pattern:\n\n# Description:\n\n# Rule:\n\n\n\n\n\n\n\n\n\n\n        1     1     1  \n\n\n 1     1  \n\n  + pattern(3,2):\n\n\n\n\n\n\n\n\n\n\n\n\n     1\n       \n\n\n  \n          3         3       3", "\n## Rule:\n\n\n### Rules:\n\n### Functions:\n\n*     \n\n\n\n\n 1     1     1  \n 1     1  \n\n\n\n        1     1     1     1     1  \n 1     1     1  \n 1\n 7     7     7    \n\n\n\n\n\n\n\n\n\n   1     1     1     \n\n       \n  +", "\n## Effects:\n\n\n\n\n## Rules:\n\n## Note:\n\n## Description:\n\n## Rule:\n\n\n\n## Note:\n\n\n\n\n\n\n\n\n         1     1\n       \n 1     1\n\n\n        \n\n\n\n\n\n     1     1     1 \n 4     1     1     1  \n            \n          3    ", "\n## Description:\n\n\n\n\n### Rules:\n\n## Examples:\n\n## Pattern:\n\n## Example:\n\n### Pattern:\n\n\n### Rules:\n\n\n\n\n\n\n\n \n            1     1     1\n       \n \n \n\n\n\n\n\n\n\n\n\n     1\n       \n 1     1\n       \n\n          5         5", "\n## Rule:\n\n## Rule:\n\n## Rule:\n\n## Rule:\n\n## Rule:\n\n## Rule:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n          1     1  \n\n        \n\n\n\n\n\n\n\n        \n    ##### Examples\n\n    pattern(1,1):\n\n\n       \n ", "\n## Definition:\n\n\n### Rules/Note:\n\n### Example:\n\n### Functions/Note:\n\n# Pattern:\n\n\n\n\n\n\n\n\n\n\n     1  \n            1  \n            1     1 \n\n       \n   \n    \n\n\n\n\n\n\n       \n       \n       \n 1     1     1\n       \n   \n       \n   ", "\n## Rules/Note:\n\n## Example:\n\n###\n## Example:\n\n### Examples:\n\n## Examples/Note:\n\n\n\n\n\n\n\n\n\n     1     1     1\n       \n  + \n     1  \n\n\n    \n\n\n\n\n\n\n\n\n    pattern(\n        1     1     1\n       \n    \n       \n ", "\n## Example:\n\n## Pattern:\n## Rule:\n## Rule:\n\n\n\n\n\n### Rules:\n\n\n\n\n   \n\n\n\n\n     1\n       \n  + pattern(3,2):\n\n        1     1     1\n       \n\n\n      \n \n\n\n\n\n\n\n\n\n       \n\n       \n  + pattern(2,", "\n\n\n## Rules:\n\n# Pattern:\n\n\t\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n        1     1     1     1\n       \n  + pattern(2,2):\n\n        1     1     1  \n\n\n\n\n\n\n\n\n\n\n\n\n     1     1       \n\n\n        \n           3    ", "\n## Definition:\n## Definition:\n## Definition:\n## Definition:\n## Definition:\n## Definition:\n\n\n\n### Rules:\n\n\n\n\n\n\n\n\n\n         1     1     1  \n 1     1     1 \n\n 7     7     7    \n\n\n\n\n\n\n\n\n 1     1     1   \n               1  \n        \n     \n   ", "\n## Task:\n## Rule:\n## Rule:\n## Rule:\n## Rule:\n## Rule:\n\n\n\n\n\n\n\n\n\n\n     1\n       \n  + pattern(1,2):\n\n        1     1     1\n       \n\n\n\n    \n\n\n\n\n\n\n    \n\n                1\n       \n  +\n          3    ", "\n## Rule:\n\n## Example:\n\n### Example:\n\n## Example:\n\n### Rule:\n\n\n\n\n\n\n### Rules:\n\n Number of Arguments:\n\n   \n\n\n\n\n\n     1     1\n       \n  +\n\n \n\n\n\n\n\n\n\n\n\n\n  + pattern(3,3):\n\n\n       \n ", "\n## Definition:\n\n## Rules:\n\n## Example:\n\n## Rule:\n\n## Rule:\n\n## Parameters:\n\n## Rule:\n\n\n\n\n\n\n\n\n\n    \n\n\n \n            1     1\n       \n     1     1\n\n\n\n\n\n\n    \n    \n\n\n\n\n\n# End of Rules\n\n\n\n", "\n\n\n### Description\n\n\n## Description\n\n\n\n\n\n\n### Rules:\n\n 1     1     1     1     1\n\n### Example:\n\n# Example:\n\n\n\n\n\n\n\n\n \n\n     1     1  \n\n\n\n\n\n\n\n    \n\n\n\n\n\n         1     1     1\n        \n        \n          5", "\n## Rule:\n\n\n# Rule:\n\n    pattern(\n        n       ,        x       ,         n\n       ,        x       ,     n       ,         x        );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     1     1     1    \n\n\n\n\n\n\n\n\n\n     1     1\n       \n  + `"], "prompt": "\nQUESTION:\n## Task:\n\nYou have to write a function `pattern` which returns the following Pattern(See Examples) upto desired number of rows. \n\n* Note:`Returning` the pattern is not the same as `Printing` the pattern.\n\n### Parameters:\n    \n    pattern(        n        ,        x        );\n                    ^                 ^         \n                    |                 |         \n             Term upto which   Number of times  \n              Basic Pattern     Basic Pattern   \n                should be         should be     \n                 created          repeated      \n                                horizontally    \n    \n* Note: `Basic Pattern` means what we created in [Complete the pattern #12](\"http://www.codewars.com/kata/558ac25e552b51dbc60000c3\")\n### Rules/Note:\n\n* The pattern should be created using only unit digits.\n* If `n < 1` then it should return \"\" i.e. empty string.\n* If `x <= 1` then the basic pattern should not be repeated horizontally.\n* `The length of each line is same`, and is equal to the length of longest line in the pattern.\n* Range of Parameters (for the sake of CW Compiler) :\n  + `n \u2208 (-\u221e,50]`\n  + `x \u2208 (-\u221e,25]`\n* If only one argument is passed then the function `pattern` should run as if `x <= 1`.\n* The function `pattern` should work when extra arguments are passed, by ignoring the extra arguments.\n   \n   \n###Examples:\n\n* Having Two Arguments-\n\n + pattern(4,3):\n\n        1     1     1     1\n         2   2 2   2 2   2 \n          3 3   3 3   3 3  \n           4     4     4   \n          3 3   3 3   3 3  \n         2   2 2   2 2   2 \n        1     1     1     1\n       \n  + pattern(10,2):\n\n        1                 1                 1\n         2               2 2               2 \n          3             3   3             3  \n           4           4     4           4   \n            5         5       5         5    \n             6       6         6       6     \n              7     7           7     7      \n               8   8             8   8       \n                9 9               9 9        \n                 0                 0         \n                9 9               9 9        \n               8   8             8   8       \n              7     7           7     7      \n             6       6         6       6     \n            5         5       5         5    \n           4           4     4           4   \n          3             3   3             3  \n         2               2 2               2 \n        1                 1                 1\n\n* Having Only One Argument-\n\n  + pattern(25):\n\n        1                                               1\n         2                                             2 \n          3                                           3  \n           4                                         4   \n            5                                       5    \n             6                                     6     \n              7                                   7      \n               8                                 8       \n                9                               9        \n                 0                             0         \n                  1                           1          \n                   2                         2           \n                    3                       3            \n                     4                     4             \n                      5                   5              \n                       6                 6               \n                        7               7                \n                         8             8                 \n                          9           9                  \n                           0         0                   \n                            1       1                    \n                             2     2                     \n                              3   3                      \n                               4 4                       \n                                5                        \n                               4 4                       \n                              3   3                      \n                             2     2                     \n                            1       1                    \n                           0         0                   \n                          9           9                  \n                         8             8                 \n                        7               7                \n                       6                 6               \n                      5                   5              \n                     4                     4             \n                    3                       3            \n                   2                         2           \n                  1                           1          \n                 0                             0         \n                9                               9        \n               8                                 8       \n              7                                   7      \n             6                                     6     \n            5                                       5    \n           4                                         4   \n          3                                           3  \n         2                                             2 \n        1                                               1\n        \n        \n[List of all my katas](\"http://www.codewars.com/users/curious_db97/authored\")\ndef pattern(n, x=1, *args):\n\t\nUse Call-Based format\nANSWER:\n"}}