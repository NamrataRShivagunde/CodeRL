{"4934": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\nUse Call-Based format\n\nExample input:\n`['ab']`\n\nExample Output:\n`['bb']\n\nExample Output:\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\nWrite a `sort` function", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Python-Based format\n\nExample Input:\n`['ab', 'bb', 'c']`\n\nExample Output:\n`['c']\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n* Write", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nExample Input:\n`['abbbc']`\n\nExample Output:\n`['abbbc']\n\nExample Output:\n\n\n\n\n\n,\n\n\n*\n\n:\n\n\n\n\n\n\n\n\n\n\n\nWrite a `sort` function", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\nExample Input:\n`['abbbc']`\n\nExample Output:\n`['c']\n\nExample Output:\n\n\n\n\n\n\n\n\n\n*`\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n:\n\n\nUse Call-Based format\nExample Input:\n`['ab', 'bb', 'c', 'ab']`\n\nExample Output:\n`['bb']\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a `sort`", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\nExample Input:\n`['abbbc']`\n\nExample Output:\n`['abbbc']`\n\nExample\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a `sort` function", "\nUse Call-Based format\n`\nUse Call-Based format\n\nExample:\n\tsort(words)\n\nUse Call-Based format\n\n\n:\n\nExample:\n\n\n\nExample:\n\n:\n\n\n*\n\t\n\n\n*\n\n:\n\n\nUse Generator-Based format\n\n\n\n\n\n\n\t\n\n\nWrite a `sort`", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\n\nWrite a `sort` function that will sort a massive list of words in caseless, lexographic order\nExample Input:\n`words`\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\nWrite a `sort` function", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\nExample Input:\n`['b', 'bb', 'c']`\n\nExample Output:\n\n\n\n\n\n\n\ndef\n\n\n\n*\n\n:\n\n\n\n\n\nWrite a sort function\n\n\n\n\n\n\nUse Python:\n\n", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\nUse Call-Based format\nExample Input:\n`['a', 'b', 'c']`\n\nExample Output:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nWrite a `sort", "\nUse Call-Based format\nWrite a `sort` function that will sort a list of strings in caseless, lexographic order\nQUESTION:\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\t\n\t\n\n\n*\n\n\n\n\nUse Call-Based format\n\n\nUse Generator format\n\n\n\n\n\n\n\n\nWrite a `", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n`\n\nUse Call-Based format\n\nExample Input:\n`['abbbc']\n\nExample Output:\n\n\n\n\n:\n\n\n\n\n\n*\n\n:\n\n\n\n\n\nWrite a `sort` function\n\n\n\n\n\t\n\nUse", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nExample Input:\n`['b', 'c']`\n\nExample Output:\n`['ab']\n\nExample Output:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a `sort` function\n\nExample Input:\n\n\n", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n`\n\nUse Call-Based format\nExample Input:\n`['b', 'c']`\n\nExample Output:\n`\n\n\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample:\n\n\n\n\n\nUse", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\n`alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n\nExample Input:\n`words`\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef\n\n\nUse", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\n`\n\nUse Call-Based format\nExample Input:\n`['b', 'ba']\n\nExample Output:\n`['c']\n\n\n\n\n\n\n,\n\n\n*\n\n:\n\n\n\n\n\n\n\nExample:\n\n\n\n\nUse Python", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nExample Input:\n`['ab', 'c', 'bb', 'bb', 'b', 'c']`\n\nExample Output:\n\n\n\n\n\n,\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\nExample Input:\n\n\n\n\nUse", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nExample Input:\n`['b', 'ab']`\n\nExample Output:\n`['bb']`\n\nExample Output:\n\n\n\n\n\n\n,\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\t\n\nWrite a `sort`", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\nExample Input:\n`['ab', 'bb', 'c']`\n\nExample Output:\n\n\n\n\n\n,\n\n\n\n*\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a `sort`", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\nExample Input:\n`['ab']`\n\nExample Output:\n`['bb']\n\nExample Output:\n\n\n\n\n\n\n\n\n\n\n*`\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a `"], "prompt": "\nQUESTION:\nWrite a `sort` function that will sort a massive list of strings in caseless, lexographic order.\n\nExample Input:\n`['b', 'ba', 'ab', 'bb', 'c']`\n\nExpected Output:\n`['ab', 'b', 'ba', 'bb', 'c']`\n\n* The argument for your function will be a generator that will return a new word for each call of next()\n* Your function will return its own generator of the same words, except your generator will return the words in lexographic order\n* All words in the list are unique\n* All words will be comprised of lower case letters only (a-z)\n* All words will be between 1 and 8 characters long\n* There will be hundreds of thousands of words to sort\n* You may not use Python's sorted built-in function\n* You may not use Python's list.sort method\n* An empty list of words should result in an empty list.\n* `alphabet = 'abcdefghijklmnopqrstuvwxyz'` has been pre-defined for you, in case you need it\ndef sort(words):\n\t\nUse Call-Based format\nANSWER:\n"}}