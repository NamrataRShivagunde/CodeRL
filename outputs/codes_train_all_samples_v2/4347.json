{"4347": {"code": ["\n# Example\n\n# Call-Based format\n\n\n# Input/Output\n\n# Example\n\n# Use Call-Based format\n\n# Task\n\n# Task\n\n\n\n\n# Task\n# Task\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n\n# Task\n\n# Task\n", "\n# Example\n\nUse Call-Based format\n\n\n\n\n\n# Task\n\n\n# Task\n\n# Input/Output\n\n\n# Task\n# Task\n\n\n\n\n# Task\n\n# Task\n\n# Task\n\n\n\n\n\t\n\n# Task\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n# Task\n Call two", "\n\t\nUse Call-Based format\n Task\n\n integer `friendsLeft`\n\n# Example\n\n\n\t\nUse Call-Based format\n\n\n# Task\n\n\n\n\n\n# Task# Task\n\n\n\n\n\t\n\n# Task\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n\n\n\n# Task\n# Task\n Call two", "\n# Task\n\n# Example\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n# Task\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n\t\nUse Call-Based format\n\n\n# Task\n\n\n\n\n\n\n\n\n\n# Task\n# Task\n\n\n\n# Task\n\n    Call two", "\n# Input/Output\n\n\n\nUse Call-Based format\n\n# Task\n# Task\n\n\n\n\n# Task\n# Task\n\n# Task\n\n\n\t\n# Task\n\n# Task\n\n# Task\n\n\n\n\t\n\n# Task\n\n\n\n# Task\n\n# Task\n\n# Task\n\n\n# Task\n# Task\n\n    You", "\n# Example\n\nuse Call-Based format\n\n# Input/Output\n\n\n\n\n\n# Task\n\n# Task\n\n # Output\n\n# Input/Output\n\n\n# Task\n\n\n# Task\n\n\n\n\n\t\n\n# Task\n\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n# Task\n", "\n# Example\n\n\n\n# Use Call-Based format\n\n# Task\n\n# Task\n\nUse Call-Based format\n\n\n\n# Output\n\n\n# Task\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n\n# Task\n\n\n# Task\n\n# Task\n", "\n# Input/Output\n\n\n\n\n\n# Task\n\n# Task\n\n [input, output]\n\nUse Call-Based format\n\n# Example\n\n\n\n# Task\n\n# Task\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n# Task\n Call", "\n# Example\n\n\n\n\n\n\n# Task\n\n# Task\n\n# Input/Output\n\n# Example\n\n\n\n# Task\n\n# Task\n\n # Task\n\n\n\t\n\n# Task\n# Task\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n# Task\n# Task\n\n\n# Task\n\n# Task\n\n#", "\n# Task\n\nUse Call-Based format\n\n# Input/Output\n\n\n\n# Example\n\n\n# Task\n\n\n\n# Input/Output\n\n\n# Example\n\n# Task\n\n\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\t\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n# Task\n Call", "\n# Task\n\n\n\n# Example\n\n\n# Task\n\n# Task\n\n# Input/Output\n\n\n - `[input]` a boolean value\ndef is_equally_strong(yourLeft, yourRight, friendsLeft, friendsRight):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task", "\n# Input/Output\n\n\n\n\n# Task\n\n\n# Task\n\n # Input/Output\n\n\n - `[input]` a boolean value\ndef is_equally_strong(yourLeft, yourRight, friendsLeft, friendsRight):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n", "\n# Example\n\n\n\n\n\n\n# Task\n\n# Task\n\n[output]\n\n\n# Task\n\n\nUse Call-Based format# Task\n\n # Input/Output\n\n\n\n\n\t\n# Task\n# Task\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n# Task\n\n\n# Task\n\n# Task\n Call two", "\n# Example\n\n\n\n\nUse Call-Based format\n\n# Task\n\n# Task\n\n\n\n# Input/Output\n\n\n# Task# Task\n# Task\n\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\n\t\n# Task\n\n\n\n\n\n# Example\n\n\n# Task\n\n\n\n\n\n# Task\n Call", "\n# Example\n\n   if are_equally_strong(yourLeft, yourRight, friendsLeft, friendsRight):\n Task\n\n Task\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\t\n\n# Task\n# Task\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n Call", "\n# Task\n\nUse Call-Based format\n\n\n\n# Input/Output\n\n\nUse Call-Based format\n\n# Task\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n\n\t\n# Task\n# Task\n\n\n\n\n\n# Task\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n# Task\n Call", "\n# Task\n# Task\n\n [output]\n\n\n# Example\n\n# Input/Output\n\n# Task\n\n\n# Input/Output\n\n\n# Task\n\n# Task\n\n\n\n\t\n\n# Task\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n\n# Task\n\n\n# Task\n\n# Task\n Call two arms", "\n# Example\n\n# Call-Based format\n\n\n\n# Task\n\nUse Call-Based format\n\n# Task\n\n\n\n\n# Task\n\nUse Call-Based format\n# Task\n\t\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n\n\n# Task\n\n# Task", "\n# Example\n\n\n\n\n\n# Task\n\n# Input/Output\n\n\n - `[output]` a boolean value\ndef are_equally_strong(yourLeft, yourRight):\n\n# Example\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n\n\n# Task\n\n# Task", "\n# Example\n\n\t\t# Call-Based format\n\t\n\t\t# Task\n\t\t# Task\n\n\n\n# Task\n\n\n# Task\n\n\n\n\n# Task\n# Task\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n# Task\n"], "prompt": "\nQUESTION:\n# Task\n Call two arms equally strong if the heaviest weights they each are able to lift are equal.\n\n Call two people equally strong if their strongest arms are equally strong (the strongest arm can be both the right and the left), and so are their weakest arms.\n\n Given your and your friend's arms' lifting capabilities find out if you two are equally strong.\n\n# Example\n\n For `yourLeft = 10, yourRight = 15, friendsLeft = 15 and friendsRight = 10`, the output should be `true`;\n \n For `yourLeft = 15, yourRight = 10, friendsLeft = 15 and friendsRight = 10`, the output should be `true`;\n \n For `yourLeft = 15, yourRight = 10, friendsLeft = 15 and friendsRight = 9,` the output should be `false`.\n \n# Input/Output\n\n\n - `[input]` integer `yourLeft`\n\n    A non-negative integer representing the heaviest weight you can lift with your left arm.\n    \n\n - `[input]` integer `yourRight`\n\n    A non-negative integer representing the heaviest weight you can lift with your right arm.\n\n\n - `[input]` integer `friendsLeft`\n\n    A non-negative integer representing the heaviest weight your friend can lift with his or her left arm.\n\n\n - `[input]` integer `friendsRight`\n\n    A non-negative integer representing the heaviest weight your friend can lift with his or her right arm.\n\n\n - `[output]` a boolean value\ndef are_equally_strong(your_left, your_right, friends_left, friends_right):\n\t\nUse Call-Based format\nANSWER:\n"}}