{"4647": {"code": ["\n\n\n\n\n\n\n\n# Example\n\n1.3.5\n1.3.4.3.5\n\n\n\n\n## Results\n\n### Kata\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\")\nget_neighborhood(\"von\")\n\n\n\n#", "\n\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 1, 1, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Note\n# All the below is in a separate task.\n\n# Note\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat", "\n\n# Example\n```\n\n# Kata\n\n\n\n\n# Tasks\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Example\n```\n\n# Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat, (1,1))\n\n\n\nget_", "```\n\n# Description\n\n\n\n\n## Example\n\n# Example:\n\n# The neighbourhood type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 1, 1]\nget_neighborhood(\"\")\n", "```\n\n## Input\n\n# Input\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[n]\n[m]\n[m]\n[n]\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1]\n\n\n", "\n\n# Example\n\n\n\n\n\n\n# Description\n\n## Example\n\n## Kata\n\n\n\n\n\n\n\n\n\n\n# Hard Kata\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat, (0,0)) == [1, 1, 1]\nget_neighborhood(\"von\")\n\n\n", "```\n\n\n\n# Example\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 1, 1, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n```\n\n# Von Neumann\n\n\n\nneighborhood(\"moore\", mat, (0,", "\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\nThe neighbourhood of a cell\n```\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 2, 3, 4]\n\n___\n\n\n\n\n\n\n\n\nget_neighbor", "\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n# Kata\nGiven a matrix and an index:\n\n[0,1,2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n```\n\n\nget_neighborhood(\"moore\", mat)\n\n\n[1, 3]\n1", "```\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n- The \"moore\" type is used in the output `mat[0][0]` and `mat[0][0]` are used in the output `mat[m]`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\",", "\n\n\n\n# Example\n## Example\n\n\n\n\n# Example\n\n\n\n\nget_neighborhood(\"moore\", mat, (0,0)) == [0, 0, 1, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat)\n\n\nget_neighborhood(\"", "```\n\n\n\n\n\n\n\n\n\n\n\n# Example\n```\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 2, 3, 4]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"kata\")\n\n___\n\n\n\n\nget_neighborhood(\"mo", "\n# Example\n\n\n\n\n# Test\n\nNote:\n\n\n\n\n## Kata\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n## Kata\n\n# Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\nget_neighborhood(\"moore\", mat)\n\n\n\n\nget_neighborhood", "```\n\n\n\n\n# Example\n\n\n\n\n\n\n\n# Example\n\"James\":\n\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1,1,1,1]\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat,", "```\n\n\n\n\n\n# Example\n\n\n\n## Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\nget_neighborhood(\"kata\") == [0, 1, 2]\nget_neighborhood(\"kata\") == [0, 1]\n\n___\n\n\n\n\n\n\nneighborhood(\"moore\", mat", "```\n\n## Description\n##\n\n\n\n# Example\n\n# Usage\n#\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat, (0,0)) == [1, 1, 1]\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[0] == 1\n[1] == 2", "\n\n# Description\n\n\n\n# Example\n\n# Example\n\n## Examples\n\n# Example\n\n[n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 2, 3, 4, 5,", "```\n\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\") == [0, 0, 0, 0]\nget_neighborhood(\"moore\") == [1, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\nneighborhood(\"moore\", mat, (0", "\n\n## Example\n\n\n\n\n# Example\n## This kata collection\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore\", mat, (1,1)) == [1, 5]\nget_neighborhood(\"von\")\n\n\n", "\n\n## Example\n\n\n\n\n\n\n# Example\n\n# Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n```\n\n# Kata\n\n\nget_neighborhood(\"moore\", mat, (0,0)) == [1, 2]\n\n\n\n\n\n\n\n\nget_neighborhood(\"moore"], "prompt": "\nQUESTION:\nThis kata is the second part of a series: [Neighbourhood kata collection](https://www.codewars.com/collections/5b2f4db591c746349d0000ce). If this one is to easy you can try out the harder Katas.;)\n\n___\nThe neighbourhood of a cell (in a matrix) are cells that are near to it. There are two popular types:\n- The [Moore neighborhood](https://en.wikipedia.org/wiki/Moore_neighborhood) are eight cells which surround a given cell.\n- The [Von Neumann neighborhood](https://en.wikipedia.org/wiki/Von_Neumann_neighborhood) are four cells which share a border with the given cell.\n\n___\n\n# Task\nGiven a neighbourhood type (`\"moore\"` or `\"von_neumann\"`), a 2D matrix (a list of lists) and a pair of coordinates, return the list of neighbours of the given cell.\n\nNotes:\n- The order of the elements in the output list is not important. \n- If the input indexes are outside the matrix, return an empty list.\n- If the the matrix is empty, return an empty list.\n- Order of the indices: The first index should be applied for the outer/first matrix layer. The last index for the most inner/last layer. `coordinates = (m, n)` should be apllied like `mat[m][n]`\n\n___\n\n## Examples\n```\n\\ n   0    1    2    3    4\nm  --------------------------\n0  |  0 |  1 |  2 |  3 |  4 |\n1  |  5 |  6 |  7 |  8 |  9 |\n2  | 10 | 11 | 12 | 13 | 14 |\n3  | 15 | 16 | 17 | 18 | 19 |\n4  | 20 | 21 | 22 | 23 | 24 |\n   --------------------------\n\nget_neighborhood(\"moore\", mat, (1,1)) == [0, 1, 2, 5, 7, 10, 11, 12]\nget_neighborhood(\"moore\", mat, (0,0)) == [1, 6, 5]\nget_neighborhood(\"moore\", mat, (4,2)) == [21, 16, 17, 18, 23]\nget_neighborhood(\"von_neumann\", mat, (1,1)) == [1, 5, 7, 11]\nget_neighborhood(\"von_neumann\", mat, (0,0)) == [1, 5]\nget_neighborhood(\"von_neumann\", mat, (4,2)) == [21, 17, 23]\n```\n___\n\nTranslations are appreciated.^^\n\nIf you like chess take a look at [Chess Aesthetics](https://www.codewars.com/kata/5b574980578c6a6bac0000dc)\n\nIf you like puzzles and take a look at [Rubik's cube](https://www.codewars.com/kata/5b3bec086be5d8893000002e)\ndef get_neighbourhood(n_type, mat, coordinates):\n\t\nUse Call-Based format\nANSWER:\n"}}