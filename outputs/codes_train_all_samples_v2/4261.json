{"4261": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n# Task\n# Task\n\nWalk(a)\n\n# Example\n\n\n\n\n# Task\n# Task\n\n\n\n\n\n\n# Task\n\n\n\n\n# Input/Output\n\n\n\n\n# Answer\n\n# Task\n\n# Task\n\n# Task\n A robot is standing", "\nUse Call-Based format\n\n\n\n# Task\n\n# Answer\n\n\n# Example\n\n\n\n\nUse Call-Based format\n# Task\n\n # Output\n\n\n# Input\n\n\t\n\t\n# Answer\n\n\n\n\n\t\n# Answer\n\n\n\n\n# Task\n\n\n# Answer\n\n# Task\n# Task\n\n  A robot is", "\nUse Call-Based format\n# Example\n\n\n\n\nUse Call-Based format\n\n# Task\n\n# Task\n\nWalk(a):\n\t\n\n# Task\n\n\n\n# Task\n\n\n\n# Task\n# Output\n\n\n\n\n# Answer\n\n\n\n\n# Task\n\n\n# Answer\n\n# Task\n\n# Task\n\n  A", "\nUse Call-Based format\n\n\n# Example\n\n\n# Example\n\n# Output\n\n\n# Task\n\n\n# Task\n\n\nUse Call-Based format\n# Answer\n\n\t\n\n\n# Input/Output\n# Output\n\n# Answer\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n# Task\n A robot is stand", "\nUse Call-Based format\n# Example\n\n\n\n# Task\n\n# Output\n\n\n# Example\n\n# Example\n\n\n# Input/Output\n\nUse Call-Based format\n# Example\n\n\n\n# Output\n\n# Answer\n\n\n\n\n# Answer\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n# Task\n\n# Task\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n# Task\n\nWalk(a):\n\t\nUse Call-Based format\n\n# Example\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n\t\n\n\n\n\n# Task\n\n\n# Task\n\n# Task\n\n\n# Task\n# Task\n\n  A robot", "\nUse Call-Based format\n# Example\n\n\n\n# Input/Output\n# Output\n# Answer\n\n# Task\n\n# Example\n\n# Answer\n\n\n\n# Input/Output\n\n  A list of commands\n\n  Constraints:\n\n# Answer\n\n\n\n# Answer\n\n\n\n# Task\n\n# Task\n\n# Output\n# Task\n A robot", "\nUse Call-Based format\n# Example\n\n\n\n\n# Task\n\n\n# Task\n\n\n\n\n# Task\n\n\n# Task\n\n\n # Output\n\n\n\n# Input\n\n\n# Answer\n\n# Task\nWalk\n\n\n\n\n\n\n# Answer\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n# Task\n A robot", "\nUse Call-Based format\n\n\n\n\n# Task\n\n\n\n# Task\n\n\n# Example\n\n# Output\n\nTrue\n# Example\n\n# Input\n\n  [i]\n\n  [K]\n\n\n\n\n# Answer\n\n\n\n\n# Answer\n\n\n\n\n\n\n# Answer\n\n# Task\n\n# Task\n\n# Task", "\nUse Call-Based format\n\n\n# Task\n\n\n\n\n# Task\n\n\n# Task\n\n\n\n# Task\n\n\n# Example\n\n\nUse Call-Based format\n# Task\n\n\n\n \n\n# Task\n\n\n\n\n\t\n# Answer\n\n\n\n\n# Answer\n\n\n# Task\n\n\n# Task\n\n  A robot", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n# Task\nWalk\n\n# Example\n\n\n\n# Task\n\n# Task\n\n\n\n\n\n\n# Task\n# Task\n\n\n\n# Task\n\n\n\n\n\n\n# Answer\n\n# Task\n\n# Task\n\n# Answer\n\n\n# Task\n\n  # Task", "\nUse Call-Based format\n\n\n\n# Task\n\n# Input/Output\n\n\n# Example\n\n 1 \u2264 a \u2264 a\n\n# Example\n\n\n\n# Answer\n\n\n\n# Example\n\n# Answer\n\n\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Answer\n\n# Task\n\n  A robot", "\nUse Call-Based format\n\n\n\n# Task\n\n# Task\n\nWalk(a):\n\t\nUse Call-Based format\n\n# Example\n\n# Example\n\n# Example\n\n\n\n# Output\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n\n# Task\n A robot is", "\nUse Call-Based format\n\n\n\n\n\n# Task\n\n\n# Task\n\n\n\n# Example\n\n\n\n# Example\n\n# Command\n\n\n# Answer\n\n\n\n\n# Task\n\n# Answer\n\n\n\n\n\t\n\n\n\n\n\n# Task\n\n# Task\n\n# Answer\n\n\n# Task\n# Task\n\n  A", "\nUse Call-Based format\n\n# Input/Output\n\n\n\n\n# Example\n\n\n# Output\n\n\n# Task\n\n\n# Task\n\n# Answer\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n\t# Answer\n\n\n\n\n# Task\n\n\n# Task\n\n# Task\n\n# Answer\n\n\n# Task\n\n#", "\nUse Call-Based format\n\n\n\n# Task\n\n# Task\n\n# Answer\n\ntrue\n\n\n\n\n# Input/Output\n\n\n\n# Task\n\n# Task\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n# Answer\n\n# Task\n\n# Task\n\n# Task\n\n  A robot is stand", "\nUse Call-Based format\n\n\n\n\n# Task\n\n# Task\n\n\n\n# Task\n\n\n\n# Example\n\n# Task\n# Output\n\n\n\n\n# Task\n\n# Task\n# Task\n\n\n\n\n# Task\n\n# Answer\n\ntrue\n\n\n# Answer\n\n# Answer\n\n\n# Task\n# Task\n A robot is", "\nUse Call-Based format\n\n\n\n# Example\n\n\n# Task\n\n\n# Task\nWalk(a):\n\t\nUse Call-Based format\n\n# Example\n\n\n\n\n# Answer\n\n\t\n\n#\n# Answer\n\n\n\n\n# Answer\n\n\n\n# Task\n\n\n\n# Task\n\n\n# Task\n\n\n# Task\n", "\nUse Call-Based format\n# Example\n\n\n\n# Example\n\n\n# Task\n# Example\n\n\n\n# Task\n\n\n# Example\n\n\n# Task\n# Example\n\n\n\n\n# Task\n\n# Example\n\n\n\t\n\n\n# Task\n\n\n\n\n\n# Answer\n\n# Answer\n\n# Task\n# Task\n A robot is", "\nUse Call-Based format\n# Example\n\n\n\n# Example\n\n\n# Example\n\nWalk\n\n# Example\n\n# Task\n\n\n\n# Task\n\n\n\n# Task\n\n\n\n\n\n# Task\n# Output\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Task\n\n# Task\n A robot"], "prompt": "\nQUESTION:\n# Task\n A robot is standing at the `(0, 0)` point of the Cartesian plane and is oriented towards the vertical (y) axis in the direction of increasing y values (in other words, he's facing up, or north). The robot executes several commands each of which is a single positive integer. When the robot is given a positive integer K it moves K squares forward and then turns 90 degrees clockwise.\n\n The commands are such that both of the robot's coordinates stay non-negative.\n\n Your task is to determine if there is a square that the robot visits at least twice after executing all the commands.\n\n# Example\n\n For `a = [4, 4, 3, 2, 2, 3]`, the output should be `true`.\n\n The path of the robot looks like this:\n\n ![](https://codefightsuserpics.s3.amazonaws.com/tasks/robotWalk/img/path.png?_tm=1486563151922)\n\n The point `(4, 3)` is visited twice, so the answer is `true`.\n\n# Input/Output\n\n\n - `[input]` integer array a\n\n  An array of positive integers, each number representing a command.\n\n  Constraints:\n  \n  `3 \u2264 a.length \u2264 100`\n  \n  `1 \u2264 a[i] \u2264 10000`\n\n\n - `[output]` a boolean value\n\n  `true` if there is a square that the robot visits at least twice, `false` otherwise.\ndef robot_walk(a):\n\t\nUse Call-Based format\nANSWER:\n"}}