{"3790": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nReturns:\n\nsum(arr)\n\n```if:c\n\ndef\n```else\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c\nIn R", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse R\nUse Call-Based format\n\nUse Call-Based format\n\n```if:c\n\n\n```else:\n\n\n\n```\n\n\n\ndef\n\n\n\n\n\n\n\n\n```else:\n\n\n\n\n\n\n\n\n```if:b\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nIf you like this Kata, you should use list data structure.\n\nIf you like this Kata:\n\n\n\n\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:a\nIn", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\treturn sum(arr)\n\n\n\nif:e\n\nif:e\nreturn 1\n\nif:r\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```else:\n\n\n```if:e\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\t\n\nIn this Kata, you will be given an array of arrays\n\nUse Call-Based format\n\n\n\t\n\n\n\n```else:\n\n\n\n\n\n\n```endif```\n\n\n``", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t# Run a Kata task\n\t# Run a Kata task\n\ndef\n\n\n\n\n\t\n\n\n\n```endif```\n\n\n\n\n\n\n\n\n\n\nIn this Kata, you will be", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nif:k\nIn this Kata, you will use a function to count the number of unique arrays\n\ndef\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n```if:c\n\n\n\n\n\n\n\n\n```if:r\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n```else`\n\nIf you like this Kata, you are going to use list data structure\n```\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nif:a\nUse Call-Based format\nelse:\n\nif:a\nin R\n\n\n\n\ndef solve(arr, n):\n\n\n\n\n\n\n\n\n\n```endif`\n\n\n\n\n\n\n\n\n\n```if:a", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n\nReturns:\n\t\nSum of unique arrays\n\nReturns:\n\t\nSum of arrays\n\nReturns:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:a", "\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n#1\n#2\n#3\n#4\n#5\n#6\n#5\n\ndef\n\n\n\n\n\n\n\n\n```else:\n\n\n\n\n\n\n\n\n```else:\n\n\n\n``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\nReturns:\n\t\nSum of unique arrays\n\n```if:c\nIn R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#!python\n\n\n```if", "\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n```if:n\nIn N\nIn N, but not in R\nIn R, and not in R\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n```endif```\n\n\n\n\n\n\n\t\n\n\n```if:a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\ndef count(arr):\n\treturn sum(arr)\n\ndef solve(arr):\n\t\n\n\n\n\n\n\n\n\n```else:\n\n\n\n\n\n\ndef\n\n\n\n```if:", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\t\n\n\n\n\n\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\t\nReturns:\n\t\n\n\t\n\n\n\n\t\n\n\n\n```endif```\n\n\n\n\n\n\n\t\n\n\n```if:", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n```if:c\n\ndef solve(arr):\n\t\n\n\n\n\n\n\n\n\n```else:\n\n\n\n\n\n\n```endif`\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\treturn sum(c(1, 2, 4, 5, 6))\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n```endif```\n\n\n\n\n\n\n\n\n```if:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n\n\treturn len(arr)\n\nUse Call-Based format\n\n\n\n\n```else:\n\n\n\n\n\n\n```else:\n\n\n```if:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nWanted in R:\n\n[Sum of integer combinations]\n\n\n\n\n\t\ndef\n\n\n\n\n\n\n\n\n```else:\n\n\n\n\n\n\n\n```else:\n\n\n\n```if:b\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ndef\n\t\nUse Call-Based format\n\n\n\n\t\n\n\n\n```else:\n\nUse Call-Based format\n\n\n\ndef\n\nIn this Kata,"], "prompt": "\nQUESTION:\nIn this Kata, you will be given an array of arrays and your task will be to return the number of unique arrays that can be formed by picking exactly one element from each subarray. \n\nFor example: `solve([[1,2],[4],[5,6]]) = 4`, because it results in only `4` possiblites. They are `[1,4,5],[1,4,6],[2,4,5],[2,4,6]`. \n\n```if:r\nIn R, we will use a list data structure.\nSo the argument for `solve` is a list of numeric vectors.\n~~~\nsolve(list(c(1, 2), 4, c(5, 6)))\n[1] 4\n~~~\n```\n\nMake sure that you don't count duplicates; for example `solve([[1,2],[4,4],[5,6,6]]) = 4`, since the extra outcomes are just duplicates. \n\nSee test cases for more examples.\n\nGood luck!\n\nIf you like this Kata, please try:\n\n[Sum of integer combinations](https://www.codewars.com/kata/59f3178e3640cef6d90000d5)\n\n[Sum of array singles](https://www.codewars.com/kata/59f11118a5e129e591000134)\ndef solve(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}