{"4634": {"code": ["\n\n\n\n\n\n\n\n\n\n\n# Task\n Pac-Man\n\n\n\n\n\n\n\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\n\n\n\n\n\n\n\n\n\n# Action\n\n\n\n\n# Task\n\n  `Pac-Man", "\n\n\n\n\n\n\n\n\n\n\n\n\n# Input/Output\n\n\n\n\n# Example\n\n\n  Number of coins `N`\n  Number of enemies `PM`\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n# Output\n\n# Task\n\n\n  O = [Pac-Man", "\n\n\n\n\n# Example\n\n\n\n\n# Example\n\n\n# Output\n\n\n  # Pac-Man\n  # enemies\n  # PM\n\n\n\n# Example\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n# Task\n\n\n\n# Task\n\n  # The length of `PM`", "\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n \n\n  OOOO\n  OOOO\n  OOOO\n  OOOO\n  OOO\n \n\n \n \n\n\n\t\n\n\n\n\n\n\n\n# Task\n\n\n# Example\n\n  # Task\n\n  # Task\n  #\n", "\n\n\n\n# Example\n\n\n# Print\n\n\n\n\n# Test\n\n\n\n# Task\n\nPac-Man(N, PM, enemies)\n\n# Example\n\n\n\n \n\n\n\n\n\t\n\n\n\n\n# Example\n\n\nOOOO\n\n\n# Task\n\n\n\n# Example\n\n\n  # Normal\n\n", "\n\n\n# Output\n\n\n\n\n\n\n\n\n# Call-Based format\n\n# Task\n\n\n\n\n  Number of coins\n  Pac-Man\n  Pac-Man\n  OOO\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\nPac-Man\n\n# Task\n\n\n  OxO\n  O", "\n\n\n\n\n# Example\n\n\n\n\n\n# Example\n\n  OOOO\nOOOO\nOOOO\nPOOO\nPOO\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n\n\n# Example\n\n\nOOOO\n\nPac-Man", "\n\n\n\n\n\n\n# Example\n\n  N = 4\npm = [1, 2]\n\n  enemies = [3]\n\n  #\n\n \n\n\n\n\n\n\n\n# Example\n\n\n\n#\n\n\n\n\n# Example\n\n\n\n\n#\n\n\n# Example\n\n  N = 4\n\n  PM =\n", "\n\n\n# Example\n\n\n# Example\n\n\n# Example\n\n  1.\n  2.\n  2.\n  1.\n  1.\n  1.\n  1.\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Run\n\n# Run\n\n\n\n# Task\n\n# Task\n \n# Task", "\n\n\n  OOO\n  OOO\n  OOO\n  OOO\n  OOO\n  OOO\n  OOO\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Task\n\n\n\n# Task\n\n  O = [Pac-Man", "\n\n\n\n\n\n# Input/Output\n\n# Example\n\n\n# Call-Based format\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n \n\n\n \n \n \n\n\n \n \n\n# Task\n\n\n  Pac-Man\n  Pac-Man\n \n \n \n \n  `#", "\n\n\n\n\n# Example\n\n\n\n# Example\n\n  N = 4\n  PM = [0, 1]\n  enemies = [[0, 1]]\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n# Task\n\n\n# Example\n\n\n  # Pac-Man", "\n\n\n\n\n\n# Example\n\n\n\n# Example\n\nPac-Man\nPac-Man\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n  Pac-Man", "\n\n\n\n\n\n# Example\n\n\n\n\n# Example\n\n\nPac-Man\n\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\nOOOO\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n  |---|", "\n\n```\n\n\n \n \n \n \n \n \n \n \n  OOOO\n  OOO\n  OOOO\n  OOOOO\n\n\n\n \n \n \n\n\n\n# Example\n\n\n\n\n\n# Example\n\n\n\n# Task\n\n\n\n\n# Task\n\n  OO\n\n", "\n\n\n\n\n# Example\n\n\n  pac_man(N, PM, enemies)\n\n# Example\n\n \n\n\n\n# Task\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n # Task\n Pac-Man\n\n\n\n\n# Output\n\n\n# Task\n\n  `", "\n\n\n\n\n\n\n# Example\n\n N = 4\n PM = [1, 2, 3]\n enemies = [1, 2]\n\n\n\n\n# Example\n\n\n\n\n\n\n\n# Input/Output\n\n\n\n\n\n\n\n\n\n# End\n\n\n\n# End\n\n\n\n# End\n\n\n\n  # Input\n", "\n\n\n\n\n\n\n\n\n  # Use Call-Based format\n\n  # Run-Based format\n\n  # The gamefield size\n\n  N, PM, enemies\n\n  # The field size\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\nOOOO\n\nPac-", "\n\n```\n\n\n\n\n\n\n# Example\n\n#\nPac-Man\n\n\n# Task\n\nPac-Man\n\nPac-Man\n\nOOOO\nOOOO\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Output\n\n\n# Example\n\n\n# Task\n\n#", "\n\n\n\n\n\n#\n\n#\n\n# Example\n\n# Task\n Pac-Man\nPac-Man\nPac-Man\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Input/Output\n\n# Example\nPac-Man 2\nOOOO\n\n\n\n# Example\n\n\n"], "prompt": "\nQUESTION:\n# Task\n Pac-Man got lucky today! Due to minor performance issue all his enemies have frozen. Too bad Pac-Man is not brave enough to face them right now, so he doesn't want any enemy to see him. \n \n Given a gamefield of size `N` x `N`, Pac-Man's position(`PM`) and his enemies' positions(`enemies`), your task is to count the number of coins he can collect without being seen.\n\n An enemy can see a Pac-Man if they are standing on the same row or column. \n \n It is guaranteed that no enemy can see Pac-Man on the starting position. There is a coin on each empty square (i.e. where there is no Pac-Man or enemy).\n\n# Example\n\n For `N = 4, PM = [3, 0], enemies = [[1, 2]]`, the result should be `3`.\n```\nLet O represent coins, P - Pac-Man and E - enemy.\nOOOO\nOOEO\nOOOO\nPOOO```\nPac-Man cannot cross row 1 and column 2. \n\n He can only collect coins from points `(2, 0), (2, 1) and (3, 1)`, like this:\n ```\nx is the points that Pac-Man can collect the coins.\nOOOO\nOOEO\nxxOO\nPxOO\n ```\n\n# Input/Output\n\n\n - `[input]` integer `N`\n\n  The field size.\n\n\n - `[input]` integer array `PM`\n\n  Pac-Man's position (pair of integers)\n\n\n - `[input]` 2D integer array `enemies`\n\n  Enemies' positions (array of pairs)\n\n\n - `[output]` an integer\n\n  Number of coins Pac-Man can collect.\n  \n  \n# More PacMan Katas\n\n - [Play PacMan: Devour all](https://www.codewars.com/kata/575c29d5fcee86cb8b000136)\n\n - [Play PacMan 2: The way home](https://www.codewars.com/kata/575ed46e23891f67d90000d8)\ndef pac_man(N, PM, enemies):\n\t\nUse Call-Based format\nANSWER:\n"}}