{"3457": {"code": ["\n\n\n\n~~~else:nasm\n\nUse Call-Based format\n\n\n~~~else:nasm\n\n\n\n\n~endif\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n*Use Call-Based format\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n\n```python", "\n\n\n\n\n*Use Call-Based format.*\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n```python", "\n\n\n\nUse Call-Based format\n~~~else:nasm\n\nUse Call-Based format\n\n\n\n~else:nasm\n\n\n~~~endif\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n```python\n```\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n```python\n\n``", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nif-not:nasm\n\n\n\n```python\nfinal_grade(exam, projects)```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n```", "\n~~~endif\n\n\n\n\n\nRun this function with nasm:\n\n```python\nnasm.py\n```\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n```python\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n```python\n", "\n\n\n\n\n*Use Call-Based format.\n\nUse Call-Based format\n\n\nnasm\n\n\n\n\n\n~~~else:nasm\n\n\n\n\n\n\n\n\n~~~endif\n\n```python\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n``", "\n~~~if-not:nasm\n\n\n\n\n\n~endif\n\nNOTE:\n\n**This function is called from nasm**\n\n\n\n~~~endif\n\n\n\n\n\n\n**note**\n\n\n\n\n\n~~~endif\n\n\n\n~~~endif\n\n~~~endif\n\n\n\n\n\n\n~~~if", "\n\n\n\n\nUse Call-Based format\n~~~else:nasm\n\nUse Call-Based format\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n*Use Call-Based format\n\n\n\n~~~endif\n\n\n~~~endif\n\n\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n~~~else:nasm\n\nUse Call-Based format\n\n\n\n~endif\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n~~~endif\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n``", "\n\n\n\n\n~~~endif\n\nUse Call-Based format\n\n*Use Call-Based format.\nUse Call-Based format\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n~~~endif\n\n\n~~~endif\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n~~~endif\n\n\n~~", "\n\n\n\n\n*Use Call-Based format.\n*Use Call-Based format.\n*Use Call-Based format\n\nADDITIONAL:\n\nUse Call-Based format\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n*Use Comparison and", "\n~~~if:nasm\nUse Call-Based format\n\n\n\n:\n\n~endif\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n```python\nfinal_grade(exam, projects)\n```\n\n\n\n\n\n~~~endif\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif", "\n\n\nnasm\n\n*Use Call-Based format.\n*Use Call-Based format\n\n\n\n\n\n\n~~~endif\n\nUse Call-Based format\n\n\n\n\n\n\n\n~~~endif\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n\n\n~~~endif:nasm\n\n\n~~", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n~~~endif\n\nUse Call-Based format\n\n\n~endif\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\nfinal_grade(100, 100)\n\n~~~endif\n", "\n\n~~~if:nasm\n\nUse Call-Based format\n\n\n~~~endif\n\n:\n\n~endif\n\n\n\n~~~endif\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n```", "\n\n\n\n*Use Call-Based format.\n*Use Call-Based format.\n\nUse Call-Based format\n\n\n~endif\n\nnasm:\nnasm\n\n\n\n\n\n\n\n\n\n*Use Call-Based format.\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n```python", "\n\n\n\n\n\n\n\n~~~if-not:nasm\n\nUse Call-Based format\n~~~\n\n\n\n\n\n\n\n\n\n\n\nfinal_grade(100, 3)    # 100\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n~~~endif\n```python\n\n", "\n\n*Use Call-Based format.\n\n\n\nUse Call-Based format\n\n\n~~~endif\n\nNASM:\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n~~~endif\n\n\nfinalGrade:\n", "\n\n\n\nUse Call-Based format\n\n*Use Call-Based format.\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\nUse Call-Based format\n\n\n\n~~~endif\n\n\n\n~~~endif\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n```python\n\n", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n~~~else:nasm\n\n```python\nimport nasm\n```\n\n~~~else:nasm\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n~~~endif\n\n\n\n\n\n~~~endif\n\n\n\n```python"], "prompt": "\nQUESTION:\nCreate a function finalGrade, which calculates the final grade of a student depending on two parameters: a grade for the exam and a number of completed projects.\n\nThis function should take two arguments:\nexam - grade for exam (from 0 to 100);\nprojects - number of completed projects (from 0 and above);\n\nThis function should return a number (final grade).\nThere are four types of final grades:\n- 100, if a grade for the exam is more than 90 or if a number of completed projects more than 10.\n- 90, if a grade for the exam is more than 75 and if a number of completed projects is minimum 5.\n- 75, if a grade for the exam is more than 50 and if a number of completed projects is minimum 2.\n- 0, in other cases\n\nExamples:\n\n~~~if-not:nasm\n```python\nfinal_grade(100, 12)  # 100\nfinal_grade(99, 0)    # 100\nfinal_grade(10, 15)   # 100\nfinal_grade(85, 5)    # 90\nfinal_grade(55, 3)    # 75\nfinal_grade(55, 0)    # 0\nfinal_grade(20, 2)    # 0\n```\n~~~\n\n*Use Comparison and Logical Operators.\ndef final_grade(exam, projects):\n\t\nUse Call-Based format\nANSWER:\n"}}