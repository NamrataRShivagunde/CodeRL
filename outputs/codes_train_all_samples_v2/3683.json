{"3683": {"code": ["\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\n\n\n\n\nUse Call-Based format 1\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nkata:\n\nkata.kata.kata\n\n\n\n\n\n```python", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\nUse Python Call-Based format 1\n\n\n\n\n\n\n\t\n{\n\ts\n\t\nUse Python Call-Based format\n\t\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nprint", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\n\n\n\n\n\n\n\t\nUse Python format\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n```python\nprint letter_count('arithmetics')\n```\n\n\n\n\n\n", "\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\nUse Python-Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\nletter_count('arithmetics') #=> 1\n```\n\n\n\n\n\n\n\n```python\n\n", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based syntax\nletter_count('arithmetics') #=> {'letter': 1, 'value': 1}\n\n\n\n\n\n\n\n\n\n\nIn this kata", "\n:\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nUse Python call-based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nIn this kata, you've've used kata, you've count lowercase letters in a given", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\nUse Function-Based format 1\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nif", "\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n\t\n\n\n\n\nExample:\n\t\nUse Call-Based format 2}\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nIn this kata, you", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nkata:\n\nIn this kata, you've added kata\n\n\n\n\n\n```python", "\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\nKata:\nIn this kata, you've used the kata kata, you've now count lowercase letters in a string\n\n\n\n\n", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\t\nUse Python format\n\n\nUse Call-Based format\n\nletter_count('ar') #=> 1\nletter_count('ar') #=> 1\nletter_count('t') #=> 1\n\n\n\n\n\n\n\n\n\n\n\nIn this", "\n:\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\ns = 'a'\n\t\nUse Call-Based format\n\n\nletter_count('arithmetics') #=> { 'letter': 1, 'value': 1 }\n\n\nUse Call-Based format\n\n\n\n\n\nIn this k", "\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nUse Hash-Based format 1}\n\n\n\nUse Python code\n\n\nUse Python format\n\n 1\n\n\n\nUse Call-Based format\n\n\n```python\nletter_count('arithmetics') #=> 2\n\n\n\n\n\n", "\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\n\n\nUse Hash-Based format\n\nUse Call-Based format\nletter_count('arithmetics') #=> {\"letter': 1, \"value\": 1}\n\n\n\n\n\n\n\n\n\n\n\nIn this k", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n`\n\n\t\n:\n\n\n\n\t\n\n\n\n\n\n\n\nUse Python format\n\n\n\n\n\nUse Python format\nIn this kata, you've made a kata with the kata.\n\n\n\n\n\nIn this kata, you", "\n:\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\t\nUse Python format\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse String-Based format\n\nletter_count('arithmetics') #=> {\"letter\": 2, \"value\": 2}\n\n\n\n\n:\n\n\n\n\n\n\n\n\nIn this kata", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Python format\n\n\n\n\nUse Python format\n 1, 2, 3, 4, 5, 7, 8, 9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this kata, you've added the kata kata, you've already calculated", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format 1\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n #=> 1\n\n\n\nUse Call-Based format\nIn this kata, you've used the kata format\n\n\n\n\n\nIn this kata,", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n 1\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\nletter_count('arithmetics') #=> 1\nletter_count('arithmetics') #=> 1\n\n\n\n\n:\n\n\n\n\nIn this kata,", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n 1\n\n\n\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format 1\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nKata:\n\n\n\nkata\n\n\n\n\n\n```python\nkata ="], "prompt": "\nQUESTION:\nIn this kata, you've to count lowercase letters in a given string and return the letter count in a hash with 'letter' as key and count as 'value'. The key must be 'symbol' instead of string in Ruby and 'char' instead of string in Crystal.\n\nExample: \n\n```python\nletter_count('arithmetics') #=> {\"a\": 1, \"c\": 1, \"e\": 1, \"h\": 1, \"i\": 2, \"m\": 1, \"r\": 1, \"s\": 1, \"t\": 2}\n```\ndef letter_count(s):\n\t\nUse Call-Based format\nANSWER:\n"}}