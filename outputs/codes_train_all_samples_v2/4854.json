{"4854": {"code": ["\n\n\n\n\npython\npoint1 = [5, 7]\ncount_circles(list_of_circles, point1)\n\n\n\n\n\n\n\n\n\n\n\n point1 = point2 = point3 = point3 = point2 = point3 = 0\n\n\n\n\n\n\n\n\n\n\n point1 =\n\npython\n [2, 4]", "\n\n\ncount_circles(list_of_circles, point3) == 4\n\n\n\npython\n\n\n\n\n\npoint1 =\n\n\n\n point1 = point2 = point3 = point4 = point3 = point1 = point4 = point3 = point4 =\n\n\n\n\n\n\n\n\n\n point1 =\n\n [10, 6]", "\n\n\n\n\npython\nlist_of_circles = ([[1, 2], [3, 4]]\n\n\n\npoint3 = point1 = point2 = point1 = point3 = point2 = point3 = point3 = point2 = point3 = point3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n point1\n\n point4 =", "\n\n\n\n\npython\nlist_of_circles = ([[1, 2], [3, 4], [3, 4]]\n\n```python\n\n\n\n\n point1 =\n\n\n\n\n point1 =\n\n\n\n\n point4 = point1 = point3 = point2 = point2\n\n\n\n\n\n\n point\n\n [0, 2]", "\n\n\n\n\npython\npoint1 = [1, 6] # P1\npoint2 = [10, 6] # P2\npoint3 = [1, 6] # P3\n\npython\n\n\n\n\npoint1 =\n\n\n\n point1 =\n\n\n\n\n\n\n\n\n\n\n\n point1 =\n\n [10, 6] # P3", "\n\n\n\n\npython\ncount_circles(list_of_circles, point1) == 0\n\npython\npoint3 = point1 = [1, 4] # P3\ncount_circles(list_of_circles, point3) == 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n point\n\n [3,", "\n```python\ncount_circles(list_of_circles, point) == 3\n```\n\n\n\n\n\n\n\n\n\n\npoint1 =\n\n\n\n point1 = point2 = point3 = point4 =\n\n\n\n\n```python\n\n\n\n\n\n\n point1 =\n\n [10, 6] # P3\npoint4", "\n\n\ncount_circles(list_of_circles, point1) == 4 #(The four circles have P1 inside)\n\n\n\n\n\n\n\n\n\npoint\n\n\n\n [10, 4] # P3\n\n\n\n\n point1 =\n\n\n\n\n\n point1 =\n\n\n```python\n point1 = [2, 4", "\n\n\ncount_circles()\n\n```python\ncount_circles()```\n\n\n\n\n\n\n\n\n\npoint1 =\n\n\n\ncount_circles(list_of_circles, point2) == 4\n```\n\n point1\n\n\n\n point1\n\n\n\n\n\n\n point1 =\n\n [10, 6]", "\n\n\n\n\n\npython\nlist_of_circles = ([[1, 2], [2, 3]]]\n\n```python\npoint1 = [0, 2]\npoint3 = [1, 2]\n\n\n\n\n\n\n\n\n\n point1 =\n\n\n point1\n\n\n\n\n point1 =\n\n\n [10, 6] #", "\n\n\n\n\n\npython\nlist_of_circles = ([[1, 2], [2, 3]]]\n\n```python\n\n\n\n\n\npoint1 =\n\n\n\n point1 = P3 = point4 = point5 = point6 = point4 = point5\n\n\n\n\n\n\n\n1\n\n point1 =\n\n\n [2,", "\n\n\n\n\npython\npoint1 = [10, 6] # P1\npoint2 = [10, 6] # P2\n\npython\ncount_circles(list_of_circles, point3) == 0\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n point1 =\n\n\n [10, 6] #", "\n\n\n\n\n\n\n```python\nlist_of_circles = ([[[-3,2], [1,2], [2,3], [4,3]]]\n\n\n\n\n point1 =\n\n\n\n point1 =\n\n\n point1 =\n\n\n\n\n\npoint1 = point2 = point3 =\n\n [1, 2] #", "\n\n\n\n\npython\nlist_of_circles = ([[1, 4], [1, 4]]\n\n```python\n\n\n\n\n\npoint1 =\n\n\n\n\n [1, 6] # P3\npoint4 = point1 = [1, 6]\n\n\n\n\n point1 =\n\n\n\n point1 =\n\n\n [1,", "\n\n\n\n\n\npython\nlist_of_circles = ([[1, 2, 3], [[1, 2], [[2, 2], [2, 2]]]\n```\n\npython\npoint1 = [1, 2] # P1\npoint2 = [2, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\npython\nlist_of_circles = ([[1, 2], [2, 3], [4, 3]]\n\n\n\n\n\npython\n\n\n\n\n\npoint1 =\n\n\n\n point1 = point2 = point3 = point3 = 0\n\n\n\n\n\n point1 =\n\n\n\n\n\n point1 =\n\n\n [5, 7", "\n\n\n\n\npython\nlist_of_circles = ([[1, 2], [2, 3], [1, 2]]]\n\npython\npoint3 = point1 = [1, 2]\n\n```python\n\n\n\n\n\n\n\n\n point1 =\n\n\n\n\n\n\n\n\n\npoint1 =\n\npoint\n\n [2, 4", "\n\n\n\n\npython\nlist_of_circles = ([[1, 2], [2, 3]]\n\n```python\n\n\n\n\n point1 =\n\n\n\n point1 = point2 = point3 = point4 = point3 = point1 = point3 =\n\n\n point1 =\n\n\n\n point1 =\n\n [10, 6] # P", "\n\n\n\n\npython\nlist_of_circles = ([[-3, 2], [1, 2], [1, 2], [2, 2]]]\n\npython\npoint3 = point1 = [10, 6] # P3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n point1 =\n\n [10, 6]", "\n\n\n\n\npython\ncount_circles(list_of_circles, point1) == 0 #(The circles have P1 inside) == 0\n\npython\npoint3 = point1\n\n\n\n\n\npoint1 =\n\n\n\n point1 =\n\n\n\n\n\n\n\n\n\n\n point1 =\n\n [10, 6] # P3"], "prompt": "\nQUESTION:\nA circle is defined by three coplanar points that are not aligned.\n\nYou will be given a list of circles and a point [xP, yP]. You have to create a function, ```count_circles()``` (Javascript ```countCircles()```), that will count the amount of circles that contains the point P inside (the circle border line is included).\n\n```python\nlist_of_circles = ([[[-3,2], [1,1], [6,4]], [[-3,2], [1,1], [2,6]], [[1,1], [2,6], [6,4]], [[[-3,2],[2,6], [6,4]]]\n\npoint1 = [1, 4] # P1\ncount_circles(list_of_circles, point1) == 4 #(The four circles have P1 inside)\n```\n\nIt may happen that the point may be external to all the circles.\n\n```python\nlist_of_circles = ([[[-3,2], [1,1], [6,4]], [[-3,2], [1,1], [2,6]], [[1,1], [2,6], [6,4]], [[-3,2],[2,6], [6,4]]]\n\npoint2 = [10, 6] # P2\ncount_circles(list_of_circles, point2) == 0 #(P2 is exterior to the four circles)\n```\nThe point may be in the circle line and that will be consider as an internal point of it, too. \nFor practical purposes a given point ```P``` will be in the circle line if: \n         |r - d|/r < 10^(-10)\n\n```r```: radius of the circle that should be calculated from the coordinates of the three given points.\n\n```d```: distance from the point ```P``` to the center of the circle. Again we have to do a calculation, the coordinates of the center should be calculated using the coordinates of the three given points.\n\nLet's see a case when the pints is in the circle line.\n\n```python\nlist_of_circles = ([[[-3,2], [1,1], [6,4]], [[-3,2], [1,1], [2,6]], [[1,1], [2,6], [6,4]], [[[-3,2],[2,6], [6,4]]]\n\npoint3 = point2 = [2, 6] # P3\ncount_circles(list_of_circles, point3) == 4 #(P3  is an internal point of the four circles)\n```\n\nAll these three cases are shown in the image below:\n\n\n\nYour code should be able to skip these cases:\n\n- inexistent circle when we have three points aligned\n\n- undefined circles when two or three of given points coincides.\n\nFirst ten people to solve it will receive extra points.\n\nHints: This kata will give you important formulas: ```Give The Center And The Radius of Circumscribed Circle. (A warm up challenge)```\n```http://www.codewars.com/kata/give-the-center-and-the-radius-of-circumscribed-circle-a-warm-up-challenge```\n\nFeatures of the tests:\n\n```N: amount of Tests```\n\n```n: amount of given circles```\n```x, y: coordinates of the points that define the circle```\n```xP, yP: coordinates of the point P```\n```N = 500```\n```10 < n < 500```\n```-500 < x < 500, -500 < y < 500```\n```-750 < xP < -750, -750 < yP < -750```\ndef count_circles(list_of_circles, point):\n\t\nUse Call-Based format\nANSWER:\n"}}