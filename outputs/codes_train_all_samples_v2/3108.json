{"3108": {"code": [":\n\nUse Call-Based format:\n\n\n\n\n\n:\n\n\n\n\n\n\ndef\n\n\t\n:\n\n\n\n\n\n\t\nUse Function-Based format\n\n\n:\n\n\n\n\n\n:\n\n\n\nUse Call-Based format\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\t\n\n``", "::\n\n\nUse Call-Based format\n\n\t\n:\n\n\n\n\t\n\t\n:\n\n\n\n\n\t\n\n\n:\n\n\n1 * 5 = 1\n2 * 5 = 2\n3 * 5 = 3\n\n```\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n```\n\n```", "::\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\ndef\n\n\t\n:\n\n\nUse String format\n\n\n\t\n\n:\n\n\n\n```\n\n:\n\n\n```\n\n\n\nUse Call-Based format\n\n\n:\n\n```\n\n\n\n\n```\n\n\n\n``", "::\n\n\nUse Call-Based format\n\n\t\n:\n\nUse Call-Based format\n\n\n\n\t\n:\n\n\n\n\n\t\t\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n```\nstring\n1 * 5 = 5\n```\n\n\n\n\n:\n\n\n\n\n\t\n\n\n```\n\n``", "::\n\nUse Call-Based format\n\n\n\n:\n\n```\n\nUse Call-Based format\n\n\n\n\n\t\n\t\nUse Call-Based format\n:\n\n```\n\n\n\n\n\t\n\n```\n:\n\n\n\n:\n\n\n```\n\n\n```\n\n\n\n\n\n\n\t\tyield\n\n``", ":\n\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\t\t\n\n:\n\n\n\n\n\n\t\nUse Call-Based format\n\t\n\n:\n\n\n```\n\n\n\n```\n\n\n:\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n\n\t\n\n```\n", ":\n\n:\n\n\n\n\n\t\n\n:\n\n\n\n\ndef\n\t\n\t\n:\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n:\n\n\n\n\n```\n\n:\n\n```\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n", "::\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n:\n\n\nUse Call-Based format\n\n.\n\n\n\t\n\t\n:\n\n\n\n\n\t\t\n\n:\n\n\n\n\n```\n\n\n```\n:\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n", ":\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n```\n\n\t\n\t\n:\n\n\n\n\t\t\n\n\n:\n\n\n\n\n:\n\n```\n\nUse Call-Based format\n\n```\n\n\n```\n\n\n```\n\n\n\n\n\n```\n\n\n\ndef\n\n```", ":\n\t\nUse Call-Based format:\n\t\n\nUse Call-Based format\n\n\n:\n\t\n\n\n\n\n\n\t\n:\n\t\n\n\n\n\t\n\n:\n\n\n\n\n```\n\n\n:\n\n\n```\n\n\n\n\n:\n\n\n\n```\n\n\n\n```\n\n\n\n```\n", ":\n:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\t\n\t\n:\n\n\nUse Call-Based format\n\n\n\t\t\n\n:\n\n```\nUse Call-Based format\n\n\n```\n\n```\n:\n\n\n\n```\n\n\n\n\n:\n\n\n\n\t\n\n```\n\n``", ":\n\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n\n\n\t\n:\n\n\n\n\n\t\n\n\n:\n\n\n\n\n\n:\n\n`number` must be an integer from 1 to 10\n\n\n\n```\n\n\n\nUse Call-Based format\n\n```\n\n\n\n\n\n\t\n\n\n```", ":\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n\t\n:\n\n\n\n\n\t\n\n\n\n\n\n```\n\n\n\nUse Call-Based format:\n\n```\n\nUse Call-Based format\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n", ":\n\n:\n\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\t\n\t\n:\n\n\n\n\n\t\n\n:\n\n\n\n\n```\n\n:\n\n\n\n\n```\n\n\n```\n\n\n:\n\n\n```\n\n\n\n,\n\n```\n", ":\n:\n\n\n\n:\n\n\n\n\n\n\t\n:\n\n\n\nUse Call-Based format\n\n\n\t\treturn\n\n:\n\n\nUse Call-Based format\n\n\n```\n\n\n\n```\n:\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n\n\n\n\t\n\n\n```\n", ":\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\n\t\n:\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\t\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n```\n", ":\n\n:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\t\n\t\n:\n\n\n\n\n\t\t\n\n:\n\n\n\n```\n\n\n:\n\n\n```\n\n\n```\n\n\n```\n\n:\n\n```\n\n\n\n\n\n```\n\n\n\n```\n\n", ":\n:\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\nUse Call-based format:\n\n\n\n\n\t\n\n:\n\n\n\n```\n\n```\n:\n\n\n\n```\n\n\n```\n\n\n```\n\n:\n\n```\n\n\n\n\n\t\n\n\n```\n\n", ":\n\n:\n\n\n\n\n\n:\n\n```\n\n\n\n\n\t\n\t\nUse Call-Based format\n:\n\n```\n\n\n\n\t\n\n\n```\n\n```\n:\n\n\n```\n\n```\n:\n\n\n\n```\n\n\n```\n\n\n\n\n\n\n\t\n\n```", ":\n\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n\ndef\n\n\t\n:\n\n\n\n\n\n\t\n\n:\n\n\n\n```\n\n```\n:\n\n\n\n```\n\n\n```\n\n\n```\n\n:\n\n\n\n\n\t\n\n\n```\n\n1 * 5 == 5"], "prompt": "\nQUESTION:\nYour goal is to return multiplication table for ```number``` that is always an integer from 1 to 10.\n\nFor example, a multiplication table (string) for ```number == 5``` looks like below:\n\n```\n1 * 5 = 5\n2 * 5 = 10\n3 * 5 = 15\n4 * 5 = 20\n5 * 5 = 25\n6 * 5 = 30\n7 * 5 = 35\n8 * 5 = 40\n9 * 5 = 45\n10 * 5 = 50\n```\n\nP. S. You can use ```\\n``` in string to jump to the next line.\ndef multi_table(number):\n\t\nUse Call-Based format\nANSWER:\n"}}