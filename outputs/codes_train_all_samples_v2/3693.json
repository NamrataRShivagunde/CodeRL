{"3693": {"code": ["\n\n**Simple Assignment:**\n\n**Example:**\n\n**Example:**\nKata.makeNegative(1); // return -1\n`\n```\n\n\n\n\nQUESTION:\n\n\n\nQUESTION:\n\n\n\n\n\n``\n````\n\n```\n\n\n\n``````\n\n```\n``` k", "\n\n**Simple assignment:**\n\n**Example:**\n\n**Example:**\nKata.MakeNegative(1);  # return -1\n`\n```\n\n\n\n\nQUESTION:\n\n\n\nQUESTION:\n\n\n\n\n``\n````\n\n```\n\n\n\n\n```\n```\n```\n```", "\n\n\nmakeNegative(1); // return -1\nmakeNegative(0); // return -0\n\nQUESTION:\nmakeNegative(1); // return -1\n\n\n\n\n\n`\n```\n`\n`\n````\n\n````````\n\n\n```\n\n\n\n``````\n```\n```\n```", "\n**Example:** return -1\n```\n\n\n\n\n\n\n\n\n\n``` // return -1\nmakeNegative(1); // return -1\nmakeNegative(0); // return -0\n\n\n`\n``````\n```\n\n\n\n\n\n\n\n\n\n```\n```\n``` kanji\nKata.make", "\n\n**Example:**\n** Example:**\n\n**Example:**\n** Example:**\n**Example:**\n\n**Example:**\n**\n```\n\n\n`\n```\n\n```\n`\n``\n```\n````\n`````\n\n`\n\n\n\n```\n\n\n\n```\n``` k", "\n\n**Simple Assignment:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n`\n```\n\n\n`\n```\n```\n```\n`\n`````\n```\n`\n``````\n\n`\n\n\n```\n``````\n\n```\n", "\n\n\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n\n\n`\n```\n\n```\n\n``\n\n````\n\n`\n\n\n`\n`\n`\n\n```\n``` K", "\n\n\n\n**Example:**\n\n**Example:**\n\nKata.makeNegative(1)    # return -1\nKata.makeNegative(0);\n\n\n\n`\n```\n`\n```\n\n`\n````\n\n`\n```\n\n```\n\n\n\n``````\n```\n```\n``", "\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n```\n```\n\n\n\n**Example:**\n\n\nQUESTION:\n\n\n\n\n\n\n``\n\n````\n\n\n\n\n\n```\n```\n```\n```\n```", "\n\n\n\nmakeNegative(1);\nmakeNegative(0);\nmakeNegative(1);\nmakeNegative(0);\n\nQUESTION:\n\nMake negative 1\nmakeNegative 1\n\n\n```\n\n\n\n```\n```\n```````\n`\n\n```\n\n\n```\n```\n```\n\n```\n``", "\n\n**Simple assignment:**\n\n**Example:**\n\n**Example:**\nKata.makeNegative(1);   # return -1\n`\n```\n\n\n`\n```\n\n\n\n\n`\n````\n````\n````\n````\n\n\n`\n\n\n`\n\n\n\n```\n``` k", "\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n`\n```\n\n\n`\n```\n```\n```\n`\n`\n\n````\n``````\n```\n\n\n```\n\n\n\n\n```\n```\n```\n``", "\n\n\n\nmakeNegative(1);\n// return 1\nmakeNegative(0);\nreturn 0\n\n\n\n\n```\n\n\n\n\n`\n`\n```; // return 0\n```\n\n\n`\n```\n```\n\n\n```\n\n\n\n\n```\n```\n``````\n```\n``` kata", "\n\n**Example:**\n** Example:**\n** Example:**\n**Example:**\n** Example:**\n** Example:**\n** Example:**\n`\n```\n\n\n\n\n\n\n\n\n`\n````\n```\n```\n``````\n\n`\n\n\n```\n``````\n\n```\n", "\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n`\n```\n\n\n`\n```\n`\n```\n\n`\n```\n\n```\n````\n````\n````\n\n`\n\n\n\n\n\n\n```\n``` K", "\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n`\n```\n\n\n`\n```\n`\n```\n\n``\n\n`\n``````\n\n`\n\n\n\n```\n```\n\n```\n```", "\n\n**Example:**\n\nMakeNegative(1);  # return -1\nKata.MakeNegative(0);  # return -0\n`\n\n\n\n`\n\n\n\n`\n``\n\n```\n`\n```\n```\n\n\n\n\n\n\n\n\n\n```\n```\n```\n```\n``` jem", "\n\n\n\n\n\n\n**Example:**\n\nmakeNegative(1);  // return -1\nmakeNegative(1);  // return -1\nmakeNegative(0);    // return -0\nmakeNegative(0);    // return 0\n\n**Example:**\n\n\n\n\n``\n````\n\n``\n```\n```\n", "\n\n**Example:** return 0\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n\n**Example:**\n`\n```\n\n\n`\n````\n```\n\n``\n```\n`\n``````\n\n`\n\n\n```\n\n\n```\n```", "\n\n\nmakeNegative(1);\nmakeNegative(0);\nmakeNegative(1);\nmakeNegative(0);\nmakeNegative(0);\nreturn 0\n\n\n\n\n`\n\n`\n```\n```\n```\n```\n````\n``\n\n\n```\n\n\n\n\n`\n```\n```\n```\n"], "prompt": "\nQUESTION:\nIn this simple assignment you are given a number and have to make it negative. But maybe the number is already negative?\n\n**Example:**\n``` c\nmakeNegative(1); // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0); // return 0\n```\n``` cfml\nmakeNegative(1); // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0); // return 0\n```\n``` csharp\nKata.MakeNegative(1); // return -1\nKata.MakeNegative(-5); // return -5\nKata.MakeNegative(0); // return 0\n```\n``` java\nKata.makeNegative(1); // return -1\nKata.makeNegative(-5); // return -5\nKata.makeNegative(0); // return 0\n```\n``` python\nmake_negative(1);  # return -1\nmake_negative(-5); # return -5\nmake_negative(0);  # return 0\n```\n``` javascript\nmakeNegative(1); // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0); // return 0\nmakeNegative(0.12); // return -0.12\n```\n``` typescript\nmakeNegative(1); // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0); // return 0\n```\n``` cpp\nmakeNegative(1); // return -1\nmakeNegative(-5); // return -5\nmakeNegative(0); // return 0\n```\n``` haskell\nmakeNegative    1 -- return -1\nmakeNegative (-5) -- return -5\nmakeNegative    0 -- return 0\nmakeNegative 0.12 -- return -0.12\n```\n``` ruby\nmakeNegative(1); # return -1\nmakeNegative(-5); # return -5\nmakeNegative(0); # return 0\n```\n``` coffeescript\nmakeNegative 1    # return -1\nmakeNegative -5   # return -5\nmakeNegative 0    # return 0\n```\n``` elixir\nmake_negative 1    # return -1\nmake_negative -5   # return -5\nmake_negative 0    # return 0\n```\n``` go\nMakeNegative(1)    # return -1\nMakeNegative(-5)   # return -5\nMakeNegative(0)    # return 0\n```\n``` julia\nKata.makeNegative(1)  # return -1\nKata.makeNegative(-5) # return -5\nKata.makeNegative(0)  # return 0\n```\n``` kotlin\nKata().makeNegative(1)  // return -1\nKata().makeNegative(-5) // return -5\nKata().makeNegative(0)  // return 0\n```\n``` asm\nmake_negative(1);    // return -1\nmake_negative(-5);   // return -5\nmake_negative(0);    // return 0\n```\n``` groovy\nKata.makeNegative(1)    // return -1\nKata.makeNegative(-5)   // return -5\nKata.makeNegative(0)    // return 0\n```\n``` php\nmakeNegative(1)    // return -1\nmakeNegative(-5)   // return -5\nmakeNegative(0)    // return 0\nmakeNegative(0.12) // return -0.12\n```\n```racket\n(make-negative 1)    ; -1\n(make-negative -5)   ; -5\n(make-negative 0)    ; 0\n(make-negative 0.12) ; -0.12\n```\n\n**Notes:**\n\n- The number can be negative already, in which case no change is required.\n- Zero (0) is not checked for any specific sign. Negative zeros make no mathematical sense.\ndef make_negative( number ):\n\t\nUse Call-Based format\nANSWER:\n"}}