{"3338": {"code": ["\n:\n\ndef zeros_counter(input) ->\n:\n\n\n\n\n\n\n:\n\n\n[0,1] -> [3,1]\n\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n[1,1,1,0,1,1] -> [3]:\n\n\n\n\n\n[", "\n:\n\n\n\n\n\nUse Call-Based format\n\ndef zeros_counter(input):\n\n\n:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\nzeros_counter(input) -> [2,1]\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n[1,1] ->\n\n\n[", "\t:\n\n\n#\n\n\nUse Call-Based format\n\nzeros_counter(input) -> [3,1]\n\n\n\n\n:\n\n\n\t\n:\n\n\n\n\n\n\n[1, 1, 1, 1, 0, 1] -> [3,1]\n:\t\n:\n\n\n\n\n\ncounter(input)\n\n\n\n", "\t:\n\n\n:\t\n\n\nUse Call-Based format\nzeros_counter(input)\n\n\n:\n\nzeros_counter(input)\n\n\n\t:\n\t\n\n\n\n\n\n\n\n\n[0,1] -> [1,2,3,1] -> [4,1]\n\n\n\n\n\n\ncounter(input)\n\n\n", "\t:\n\n\n\n\n\n\nUse Call-Based format\n\n\ndef zeros_counter(input):\n\t\nUse Call-Based format\n\n\n:\n\n\n:\n\n\n\n\n\n:\n\n\n# [1,1] -> [3,1]\n# [1,1] -> [3,1]\n:\n\n\ncounter\n\n\n[", "\t:\n\n\n\t\n\t\n\nzeros_counter(input)\n\n\n:\n\n\n\n:\n\n\n\n\n[0,1,1,1,1,0,0,0,1] -> [1,1]\n_counter(input)\n:\n\n\n\n\n\n\n\n\n[1,1] -> [2]\n\n\n\n", "\n:\n\n\ndef zeros_counter(input):\n\t\nUse Call-Based format:\n\n\n\n\n\n:\n\n[0,1] -> [3,1]\n\n\n:\n\n\n\n\n:\n\n:\n\n\n\n[1,1,1,1,0,1] -> [3]\n:\n\n\n\n\n\n[1", "\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\ndef zeros_counter(input):\n\t\nUse Call-Based format\n\n\n:\n\n\n\t:\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n[1,1] -> [3,1]\n\n\n\n\n\n\n\n\n\n\n[1,1", "\n\n:\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\t\n\n\n:\n\n\n\n\t\n:\n\n\n\n\n\n\n\n\n\n\n\n[0,1] -> [3,1] -> [3,1]\n\n\n\nUse Call-Based format\n\n\n\n[1,1] ->counter(input)\n", "\n:\n\n# Use Call-Based format\n\n\n\nzeros_counter(input)\n\n\n:\n\n\n\t\n:\n\n\n\n\n[0,1] -> [0,1] -> [1,1]\n:\n\n\n\n\n[0,1] -> [3,1]\n\n\n\n\n:\n\ncounter(input)\n\n\n", "\n:\n\n:\n\nUse Call-Based format\n\nzeros_counter(input) -> [3,1]\n\n\n\n\n:\n\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n[2,1,3,1,1] -> [1,3]\n\n\n\n\n\n\ncounter(input)\n\n\n\n[2", "\t:\n\n\n\n\t\n\n\n\nzeros_counter(input) -> [3,1]\n\n\n\n\n:\n\nzeros_counter(input) -> [3,1]\n\n\n:\n\n\n\n\n\n\n\n\n\n[1,1] -> [3,1]\n\n\n\n\n:\n\n(input)\n\n\n\n\n[", "\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\ndef zeros_counter(input)\n\n\n:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n[1,1] -> [3,1]\n\n\nUse Call-Based format\n\nQUESTION:\n\n\n\n\n\n[3,1] -> [3]\n\n\n", "\t\n:\n\n\n\n\n\n\n\n\n\n\n:\n\n\ndef zeros_counter(input):\n\t\n\n\t\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n.\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n[1,1,0,1,0,1] ->\n\n\n\n[", "\n:\n\n\n\n\n\t\n\n\n\n\ndef zeros_counter(input):\n\n\n\n:\n\n\t\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\"\"\"\n\n\n\n\nUse Call-Based format\n\n\n\n\n[2,1,1,1,0,0] -> [3,1]\n\n\n\n", "\n:\n\n\n#\n\n\n\n\n# Use Python-based format\ndef zeros_counter(input):\n\n\n:\n\n\t:\n\n\n\n\n\n[0,1] -> [3,1]\n:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n[1,1,1,1] ->\n\n\n\n", "\n:\n\n\n# Use Call-Based format\n\n\n\n\n\n\n:\n\nzeros_counter(input):\n\n\t\n:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n:\n\n[0,1,2,1,1,1,0,0,1] -> [3,1]\n\n:\n\n\n\n\n\n", "\t:\n\t\n\n:\t\n\ndef zeros_counter(input):\n\n\n:\n\nzeros_counter(input) -> [3,1]\n\n\n\n:\n\n\n\n\n\n\n\n.\n\nUse Call-Based format\n\nNOTE:\n\n\n\n\n\n:\n\n[1,1,1,0,0] ->\n\n\n[", "\n\nUse Call-Based format:\n\n\n\n\n\n\ndef zeros_counter(input):\n\t\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n[0,1,1,1,1,0,1,1,1]\n\n\n\n\ncounter(input)\n\n", "\n:\n\n\nUse Call-Based format\n\n\n\n3,1\n\n\t\n\n\n:\n\n\n\nzeros_counter(input) -> [3,1]\n\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n[1,1,1,1,1] -> [3]\n:\n\n\n\n\n\n[1"], "prompt": "\nQUESTION:\nTranform of input array of zeros and ones to array in which counts number of continuous ones:\n\n[1, 1, 1, 0, 1] -> [3,1]\ndef ones_counter(input):\n\t\nUse Call-Based format\nANSWER:\n"}}