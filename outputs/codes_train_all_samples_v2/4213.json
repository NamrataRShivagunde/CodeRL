{"4213": {"code": ["\n\n\n\n\n\n\n\n\narray_info(x)\n\nAdded Difficulty\n-------\n\nAnother difference in the language\n------\n\n\n\n\narray_info([1,2,3.33,4,5.01,3.01,5.01])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrief\n=====", "\n\n\n\n\n\n\n\n\narray_info(x)\n\nAdded Difficulty\n======\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\narray_info([1,2,3.33,4.01,5.01,5.01,2,3,1,1,1])\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\nAdded Difficulty\n===========\n\nUse Call-Based format\n=====\n\n\n\n\n\n\n\nBrief\n======\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n\n\n\n\nBrief\n---\n\nSometimes you're heading\n=====\n\nSometimes you'll", "\n\n\n\n\n\n\n\n\n\nOutput\n------\n\n\n\n\n\n    No item count, no item count, no item count, no item count, no item count\n   \nInput\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdded Difficulty\n=====\n\nBrief\n=====\nBrief\n=====\n\n\n```", "\n\n\n\n\n\n\n\n\n\n   \nBrief\n=====\n\n\n[0,1,2,3.33,4.01,5.01,3.33,3.33,5.01,5.01,5.01,1]    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\nAdded Difficulty\n=====\n\n\n\narray_info([1,2,3.33,4.01,5.01])\narray_info([0.001,2,3.33,4.01])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrief\n=====\nSometimes", "''\n\n\n\n\n\n\n\n\n\n    \nType:\n\nBrief\n=====\n\nYour function will be called\n=====\n\nInput\n=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdded Difficulty\n======\n\n\nOutput\n======\n\nNo item count\n----\n\n\narray_info([5", "\n\n\n\n\n\n\n\n\n\n\t\nInput\n=====\n\nInput array\n-------\n\n\n\n\n\nArray length\n=====\nOutput length\n=====\n\n\n\n\n\n\n\n\n  * This function is a function!\n\n* Output array\n---\n\n\n\n\n\n\n\n\n\n\n\nBrief\n=====\n\nThis function is", "\n\n\n\n\nAdded Difficulty\n-------\n\nUse Call-Based format\n----------------\n\nUse Call-Based format\n-----\n\nOutput\n=====\n\n\n\n\n\n\n\n\n\nAdded Difficulty\n=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narray_info(x)\n\n\nAdded Difficulty\n=====\n\n\n", "\n\n\n\nOutput\n======\n\n\n\n\nInput\n=====\n\n\n\n\n\n\n\n[1,2,3.33,4.01,5.01,3.33,5.01,3.33,5.01]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#    Return the length of the input array\n#", "\n\n\n\n\n\n\n\n\n\n   \n\n\n\n[array length]\n[array length]\n\narray_info([])\n\n```\n\n\n\n\n\n\n\n\n\narray_info('')\n\nAdded Difficulty\n=====\nThe function should be called\n======\n\n\n\n\n\n\n\n\n\nReturns\n====\n\n\n\n\n", "\n''''\n\n\n\n\n\n\n\nInput\n=====\n\n\n\n\n\n\n\n\n\n[1,2,3,5,3,4,5,3,2,3,3,4,5,4,3])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrief\n=====\n\nSometimes you're heading", "\n    ```    \n\n\n\n\n\n\n\n\n\n''''\n\nBrief\n=====\n\n\narray_info([1,2,3.33,4.01,3.33,5.01])\n\n\n\n\n\n\n\n\n\n\n\n\n\narray_info([1,2,3.33,4.01])\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n \nBrief\n=====\n\n\n    ``\narray_info(x)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n##\n\n\n# The following information is taken from the code below\n#\narray_info([1,2,3.33,4", "\n\n\n\n\n\n\n\n\n\n\n \nBrief\n======\n\n\narray_info([0,1,2,3,3.33,4,5.01,2.01])\n\n\n\n\n\n\n\n\n\n\nAdded Difficulty\n======\n\n\n\n\n\n\nOutput\n======\nBrief\n=====\n\n\n``", "\n\n\n\n\nAdded Difficulty\n=====\nThe function needs to be called with the following informations:\n\nInput\n======\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narray_info()\n\nAdded Difficulty\n=====\nThe function will be called with all the information!\n\nInput\n=====\n\n\n\n\n\n[1", "\n\n\nInput\n=====\n\nThe input is an array\n======\n\n\n\n\n\n\n\n\n\nAdded Difficulty\n----------------\n\nAdded Difficulty\n----------------\n\nThe input is an array\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narray_info(x)\n\nAdded Difficulty\n=====\n\n\n\n\n\n", "\n\n\n\n\n\n\nInput: \n \n\narray_info(1)\n  array_info(1)\n \n\nAdded Difficulty\n-------\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n\n\n**\n\n\n  \"Brief\"\n\n\n\n``", "\n\n\n\nInput\n-------\n\n\n\n\n\n\n\n\nBrief\n=====\n\n\n\n\nInput array\n======\n\n\n\n\n\n\n\n\n\narray_info([1,2,3,3.33,3.01,4.01,3.02,5.01])\n\nAdded Difficulty\n----------------\n\n\n\n\n\n\n", "\n```\n\n\n\n\n\n\n\n\n\n\nBrief\n======\n\n\n[0.001,1,2,3,4,5,2,2,3,3,4,5,3,3,3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdded Difficulty\n======\n\n    The function will be called"], "prompt": "\nQUESTION:\nBrief\n=====\nSometimes we need information about the list/arrays we're dealing with. You'll have to write such a function in this kata. Your function must provide the following informations:  \n\n* Length of the array\n* Number of integer items in the array\n* Number of float items in the array\n* Number of string character items in the array\n* Number of whitespace items in the array\n   \nThe informations will be supplied in arrays that are items of another array. Like below:\n\n`Output array = [[array length],[no of integer items],[no of float items],[no of string chars items],[no of whitespace items]]`\n\nAdded Difficulty\n----------------\nIf any item count in the array is zero, you'll have to replace it with a **None/nil/null** value (according to the language). And of course, if the array is empty then return **'Nothing in the array!**. For the sake of simplicity, let's just suppose that there are no nested structures.   \nOutput\n======\nIf you're head is spinning (just kidding!) then these examples will help you out-   \n```\n   \narray_info([1,2,3.33,4,5.01,'bass','kick',' '])--------->[[8],[3],[2],[2],[1]]    \narray_info([0.001,2,' '])------------------------------>[[3],[1],[1],[None],[1]]   \narray_info([])----------------------------------------->'Nothing in the array!'\narray_info([' '])-------------------------------------->[[1],[None],[None],[None],[1]]\n  \n  ```    \nRemarks\n-------\nThe input will always be arrays/lists. So no need to check the inputs.    \nHint\n====\nSee the tags!!!   \nNow let's get going !\ndef array_info(x):\n\t\nUse Call-Based format\nANSWER:\n"}}