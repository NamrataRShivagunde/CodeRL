{"4535": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nInput: string str\n\nOutput: Z array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstr_ = ['", "\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nCall-Based format:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0   0   0   0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[8", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nCall-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstr_ = \"[0", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n a   b   c   d   e   f   g   x   z\n\n\n\n\n\n 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstr_ = \"abc", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n\nchar str\n\n\n\n\n\n\n\n\n\n\n\n\n a   b   c   d   e   f   g   y\n\n\n\n\n\n\n\n 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:           ", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n 0,   0,   0,   0,   0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nIndex:        0   1   2   3   4   5   6   7   8   9   10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[8", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nZ-algorithm\n\n\n\nUse Call-Based format\n\n\nZ-algorithm:\n\n\nUse Call-Based format\n\nOutput: string str \n\n\n\n\n\n\n\n\n\n\n\n\n\n 3\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:           ", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nCall-Based format\n\n\n a   b   c   d   e   f   g   b   z\n\n\n\n\n\n\n 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[3, 0", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nExample:\n\n\nIndex:\n\nText:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0   0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0,   1,   0,   0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[8, 0", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0   0   1   0   0   0   0   1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nZ-algorithm:\n\nUse Call-Based format\n\nInput: string str\n\nOutput: Z array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nCall-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n 0   0   0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:   ", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nIndex:          0   1   2   3   4   5   6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 2   0   0   0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe goal", "\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nZ-algorithm:\n\nUse Call-Based format\n\nInput: string str\n\nOutput: string str\n\n\n\n\n\n\n\n\n\n\n\n 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n 1   2   3   2   1   2   1   1   1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[", "\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n 0,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex:            "], "prompt": "\nQUESTION:\nThe goal of this Kata is to remind/show you, how Z-algorithm works and test your implementation.\n\nFor a string str[0..n-1], Z array is of same length as string. An element Z[i] of Z array stores length of the longest substring starting from str[i] which is also a prefix of str[0..n-1]. The first entry of Z array is meaning less as complete string is always prefix of itself.\n\nExample:\n\nIndex:            0   1   2   3   4   5   6   7   8   9  10  11\n\n\nText:             \"a   a   b   c   a   a   b   x   a   a   a   z\"\n\n\nZ values:         [11,   1,   0,   0,   3,   1,   0,   0,   2,   2,   1,   0]\n\n\n\nYour task will be to implement Z algorithm in your code and return Z-array.\n\nFor empty string algorithm should return [].\n\nInput: string str \n\nOutput: Z array\n\nFor example:\n\nprint zfunc('ababcaba')\n\n[8, 0, 2, 0, 0, 3, 0, 1]\n\nNote, that an important part of this kata is that you have to use\nefficient way to get Z-array (O(n))\n\ndef zfunc(str_):\n\t\nUse Call-Based format\nANSWER:\n"}}