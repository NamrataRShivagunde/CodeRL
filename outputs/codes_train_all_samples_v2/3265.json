{"3265": {"code": [":\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n:\n\n\n  The number of tests = 6\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ntriang_mult(5)  ---", ":\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n\n\n    use call-based format:\n\n \n    \n\n    n\n    3  2  3   4\n    \n   :\n:\n\n\n\n\n:\n\n\n\n\n\n\n:\n\npython\ntriang_mult(10)\n\n\n\n\n\n```", ":\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\ntriang_mult(5)\n\n```python\nprint(total_sum)\n\n\n\n```", ":\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format\n\nNOTE:\n\t\nUse Call-Based format\n\n:\n \n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n```python\ntriang_mult(3)\n\t\n```\n\n```python\n", ":\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n:\n\t\n\n\n:\n\n\n\n\n\n\n\n\npython\ntriang_mult(5)  ----> [total_sum, total_even_sum, total_odd_sum]\n```\n\n\n\n\n:\npython\n\n\n\n\n```python\ntriang", ":\n\t\nUse Call-Based format\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n:\n\t\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n```python\ntriang_mult(5)\n```\n\n\n``", ": Use Call-Based format:\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\t\n     \n\n\t\nUse Call-Based format\n:\n\n\t\nUse Call-Based format\n\n:\n\n \n\n\n\n\n\n```python\ntry:\ntotal_triangle\n\n```\n\n\n\n\n\n\n\n```python\n", ": Use Call-Based format:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n:\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n```python\ntriang_mult(5)  ----> [total_even_", ":\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\n```python\ntriang_mult(5)```\n\n:\n:\n\n\n\n\n:\n\n\n\n```python\n\n\n\n\n\n\n\n```python\ntriang_mult(5)", ":\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n:\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\nNB:\n\nUse Call-Based format\n\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n\t\"\"\"\n\n\n\t# TODO", ":\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\t\n\n\t\ttotal_triangle_sum\n\t\ttotal_even_sum\n\t\ttotal_odd_sum\n\n:\n:\n\n\n\n:\n\n\n\n\n:\npython\ntriang_mult(5)\n\n\n```python", ":\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n:\n\t\nUse Call-Based format\n\nExample:\n\n    \n                                          \n   1   2   3   4   3   4   2\n:\n:\n\n\n\n:\n\n\n\n\n:\npython\ntriang_mult(5)\n\n\n```python\n", ":\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\nUse Call-Based format\n\n___________________________________\n                                             \n        n                                             \n\t\n:\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n```python\ntriang_mult(5", ":\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n:\n\n        total_triangle_mult(n)\n\t\nThe number of tests = 50\n\n```python\nn = 5\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n\npython\ntriang_mult(5)\n\n\n\n```python\ntriang", ":\n\t\nUse Call-Based format:\n\t\n\n\n\n\n:\n\n\n\n\n\n\n\nCall-Based format\n:\n\t\nUse Call-Based format\n\n  \n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n    def triang_mult(n):\n\t\n\t\n\n\n\t\n```python\ntri", ":\n\t\nUse Call-Based format\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n:\n\n\n\n:\n\n\n\n\n:\n\npython\ntriang_mult(5)\n\t\n\n\n\n```python\n", ":\n\n\n\n:\n\n\n\n\n:\n\n   1     2     3     4     5     6\n    \n\n\t\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\"\"\"\n\n\n\ndef triang_mult(n):\n\t\n\t# total_even", ": Use Call-Based format:\n\n\n\n:\n\n\n\n\n:\npython\ntriang_mult(n)\n\t\n\n\n:\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n#!/usr/bin/env python\n\n#!/usr/bin/env python\n\n\n```", ":\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\nCall-Based format:\nUse Call-Based format\n\n\n\n   \t\n\nCall-Based format\n\n:\n \n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n\"\"\"\n\n    return [n]\n\n\n    def triang_mult(", ": Use Call-Based format\n:\n\n\n: Use Call-Based format\n\n\n\n\n: Use Call-Based format\n\nn = 100\n\n3 = 3\n2 = 2\n3 = 2\n\n\n::\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n#\n# The following line included:\n#\n1   2   3   4  "], "prompt": "\nQUESTION:\nSee the following triangle:\n```\n____________________________________\n 1                                      \n 2   4   2                              \n 3   6   9   6   3                      \n 4   8   12  16  12  8   4             \n 5   10  15  20  25  20  15  10  5   \n ___________________________________\n \n```\nThe total sum of the numbers in the triangle, up to the 5th line included, is ```225```, part of it, ```144```, corresponds to the total sum of the even terms and ```81``` to the total sum of the odd terms.\n\nCreate a function that may output an array with three results for each value of n.\n```python\ntriang_mult(n)  ----> [total_sum, total_even_sum, total_odd_sum]\n```\nOur example will be:\n```python\ntriang_mult(5) ----> [225, 144, 81]\n```\n\nFeatures of the random tests:\n```\nnumber of tests = 100\n49 < n < 5000\n```\nEnjoy it!\nThis kata will be translated in another languages soon\ndef mult_triangle(n):\n\t\nUse Call-Based format\nANSWER:\n"}}