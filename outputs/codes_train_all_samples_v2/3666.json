{"3666": {"code": ["\t\nUse Call-Based format\t\n?(str):\n\t\nUse Ruby-Based format\n\t\nUse Call-Based format::\n\n\n\n\t\nUse Ruby-Based format:\n\n\t\n:\n:\nUse Call-Based format\n\t\n\n:\n\n\n\nUse Python-Based format\nSTRING:\n:\n\n\n\n\n\n\n    **String", "\t\t\n(str)\n\nUse Ruby-Based format\nANSWER:\n\n\t\nUse Call-Based format::\n\n\n\n\n:\n\n, `false/False` otherwise.\n\n\t\n:\n\n\n\n\t\n\n:\n\n\n\nUse Call-Based format\n\nQUESTION:\n\n\n\n\n\n\t\n\n\n    This method will", "\t\nUse Ruby-Based format\n(string)\n\n\t\nUse Native-Based format::\n\n\n\n\t\nUse Python-Based format\nANSWER:\n\n.use_call_based_format\n\n.call_based_format\n\n:\n\t:\n:\n\t\t:\n\n\n\n\n\n\n\n\n\n\n\n\n\t>>> from yarg", ":\t\n\n\t\nUse Call-Based format:\n:\n\n\n\t\nUse Native-Based format\nANSWER:\n\ndef whitespace(string):\n\t\nUse Python-Based format\nANSWER:\n\n\nUse Python-Based format\nANALYZE:\n\n:\n,\t:\n\n\n\t\n:\n\n:\n\n\n\n\n\n\t\t#", ":\t\n\n\t\nUse Ruby-Based format\nANSWER:\n:\n:\n\n\n\n\nUse Python-Based format\nANSWER:\n\nfunction whitespace(string):\n\t\nUse Python-Based format\nANSWER:\n\nfunction whitespace(string):\n\t\t:\n,\t::\n\t\n:\n\n:\n:\n\n\n    string = 'abc", ":\t\n?(string):\n\t\nUse Call-Based format\t\nUse Python format::\n\n\n\n\nUse Python-Based format\nAN:\n\n:\n\n\n\t\n:\n:\n\t\n\n:\n\nUse Ruby-Based format\n\n\t\n\n\n\n:\n\nUse Python-Based format\nAN:\n\t\n\n\n    * `whitespace", "\t\t\n(str):\n\t\nUse Ruby-Based format\n\t\nUse Call-Based format:\nUse Ruby-Based format:\n\n\n\nUse Python-Based format\n\nUse Ruby-Based format\nANALYZE:\n\n:\n\n\t::\n\n\t\n:\n\n\nUse Python-Based format\n\n\n\n\t\n\n\n* This function will return", ":\n:\n?(string):\n\n\t\nUse Ruby-Based format:\n:\n\t\nUse Ruby-Based format\n\n\n\n\n\nUse Call-Based format:\n\n\t\n:\n:\n\n\n\t\n\n:\n\nUse Python-Based format\n\n\n\nUse Python-Based format\n\n\n\t\n\n\t\nUse Python-Based format\nPRE", "\t\t\n\nif\t\nUse Call-Based format\nANSWER:\n\n::\n\n\n\n\nUse Ruby-Based format\nAN:\n\n\n:\n\n\n\n\t\nUse Ruby-Based format:\n\n\n\n\t\n\n:\n\nUse Python-Based format\n\n\n\n\n\n\n\n\t\n\n\n# Use Ruby-Based format\n# ", ":\n:\n?(string):\n\t\nUse Call-Based format\n\t\nUse Ruby-Based format::\n\n\n\n\n\n\n\n\t\nUse Python-Based format:\n\n\t\n:\n:\n\nUse Python-Based format\n\t\n\n:\n\n\n\nUse Python-Based format\nPATH:\n:\n:\n\t\n\n\n\t>>> from", ":\n:\n\nUse Ruby-Based format\nANSWER:\n?(str):\n\t\nUse Ruby-Based format\n\t\nUse Python format::\n\n\n\n\n:\n\n\n\t\n\n:\n:\n\n\t\n\n:\n\nUse Call-Based format\n\n\n\nUse Python-Based format\n\n\n\n\n\n    This function performs the following two", ":\n\nUse Call-Based format:\n?(str):\n\t\nUse Ruby-Based format\n\n\t\nUse Call-Based format::\n\n\n\n:\n\n\t\nUse Python format\n\nANSWER:\n\n:\n\n\n\n\t\n\n:\n\n\n\n\n:\n\n:\n\n\n\n\t\nUse Call-Based format\n\n\n   ", ":\t\n\n\t\nUse Python-Based format::\n\n\n\n\nUse Python-Based format\n\nQUESTION:\n\nUse Ruby-Based format\nANSWER:\n\nUse Ruby-Based format\nQUESTION:\n\nUse Python-Based format\nQUESTION:\n\n:\n:\n\t::\n\t\t:\n\n:\n:\n\n\n    # ---", ":\t\nUse Python-Based format\n\n\t\nUse Python-Based format::\n\n\n\t\nUse JavaScript-Based format\nANALYZE:\n\t\n:\n\nUse Ruby-Based format\n\n\t:\n:\n\t\n\n:\n\n\n\nUse CoffeeScript format\n:\n\n\t\n\n\n\n    \"\"\"\n\n    if not isinstance(string", ":\t\n\n\t\nUse Ruby-Based format:\n:\n\nUse Ruby-Based format\n\n\n\t\nUse JavaScript-Based format\nANSWER:\n\n\n\n\n\n:\n\n\t\n\n\n\n\n\n\n\t\n\n:\n\n\n\t\nUse Python-Based format\nSTRING:\n\t\n\n\n\n\n\n\t\n\n\n* https://github", ":\t?(str):\n\t\n\t\nUse Ruby-Based format::\n\n\nif string.strip()!= '':\nreturn False\n\n\n:\n\n\t\n:\n:\n\n\n\n\t\n\n:\n\nUse Call-Based format\n\n\nUse Python-Based format\n\nANSWER:\n\n\n\n\n\n\n\n\t\n\n\n\n   ", "\t\n\n\t\nUse Call-Based format\nANSWER::\nUse Ruby-Based format:\n\n\n\n\nUse Python-Based format\nAN:\n\n:\nUse Ruby-Based format\n\n\t:\n:\n\n\t\n\n:\nUse Python-Based format\n\n\t\n\n\n:\n\n\n\t\n\n\n\t:param string:\n\t\nThe", "\n\t\nUse Ruby-Based format\n\t\nUse Python-Based format?(str):\n\t\nUse Ruby-Based format\n\t\nUse Call-Based format::\n\n\n\n:\n\nUse Ruby-Based format\n\t\n:\n:\n\n\n\t\n:\n\n\n\nUse Python format\nAN:\n\n\n:\n\t\n\n\n    This function will", ":\n:\n\n\n\t\nUse Ruby-Based format::\n\n\n\n# Use Call-Based format\n#\n\nUse Python-Based format:\n\n\t\n:\n:\n\nUse Python-Based format\n\t\n\n:\n\n\n\n\nUse Python-Based format\n:\n\n\n\n\n\n\n[python-2.7]\n\n# The off", ":\n\nUse Python-Based format:\n\n\n\t\nUse Ruby-Based format::\n\nUse Ruby-Based format\n\n\n\nUse Call-Based format\nANALYSIS:\n\n\n:\n\n\t\n:\n\n:\n\n\t\n\n:\n\n\n\nUse Python-Based format\nREQUIRE:\n:\n:\n\n\n* This is not documented"], "prompt": "\nQUESTION:\nImplement `String#whitespace?(str)` (Ruby), `String.prototype.whitespace(str)` (JavaScript), `String::whitespace(str)` (CoffeeScript), or `whitespace(str)` (Python), which should return `true/True` if given object consists exclusively of zero or more whitespace characters, `false/False` otherwise.\ndef whitespace(string):\n\t\nUse Call-Based format\nANSWER:\n"}}