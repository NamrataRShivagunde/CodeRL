{"4930": {"code": ["\n\npython\narr = [1, 2, 3] # 1 is for the first group\nn = 1\n\n\n\n\n\npython\narr = [1, 2, 3]\n\nAUDIT:\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\narr = [1,", "\nUse Call-Based format\n\npython arr = [1, 2, 3, 4, 2, 3]\nn = 3\n\n\n\n\npython arr = [1, 2]\nn = 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\nThe function will not output more", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\npython\narr = [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n\n```python\narr =", "\n\nCall-Based format\n\n\n\n\npython arr = [1, 2, 3, -2, -1, 4, -2, -1, -1, 2, 1, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_zero_sum_groups\n\n\n\n\n\n\n\n```python\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\npython\narr = [1, 2, 3]\nn = 2\n\nReturns:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n```python\narr = [1, -1, 2", "\n\npython\narr = [1, 2, 3] # 1 + 2 = 0\narr = [1, 2, 3] # 3 + 2 = 0\n\n\n\n\npython\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\narr = -1\nn = 3\n\n\n\n\n\n\n``", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\npython\narr = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n```python\narr = [1", "\npython\narr = [1, 2, 3, 4, 5, 6, 7]\nn = 3\n\n\n\n\npython\narr = [1, 2, 3]\nn = 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\narr = [1, 2, 3]\n\n\npython\n\n\n\n\n", "\n\npython\narr = [1, -1, -2, 1, -1, -1, 1, -1, -1, 1]\n\n\n\n\npython\narr = [1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n\n\n\n\n\n\n```python\narr = [1,", "\n\npython\narr = [1, 2, 3, 4, 5, 1, 2, 3, 4]\nn = 3\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\narr = [1, 2, 3]\n\n```python\n\n\n\n\n", "\n\npython\narr = [1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\npython\narr = [1, -1, 2, 3]\n\n\n``", "\n\npython\narr = [1, 2, 3, -2, 4, -2, -1, -2, -1, -1]\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\npython\n\narr = [1, 2, 3]\nn = 3\n\n\n\n", "\n\npython\n\nprint(\"find_zero_sum_groups(arr, n) == [1, 2, 3]\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\narr = [-1, 1, 2, 3, -2, 4, -1, 2, 3]\n\n\n\n\n\n\n\n\npython\n\n\n\n```python", "\n\npython\n\nfind_zero_sum_groups(arr, n):\n\t\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n\n\n```python\narr = [1", "\nUse Call-Based format\npython arr = [1, 2, 3, 4, 5, 2, 3, 2, 4]\n\n\n\n\n\npython arr = [1]\n\n\n\n\n\n\n\n\n\nYou are given an array of positive and negative integers\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n```python\narr = [", "\n\nUse Call-Based format\n\npython arr = [1, 2, 3]\nn = 2\n\n\n\n\n\npython arr = [1, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\npython\narr = [1, 2, 3]\n\n#\n\n\n```", "\n\nUse Call-Based format\n\n\n\n\n\n\npython\narr = [1, 2, 3, 4, 2, 3, 4, 5, 3, 1, 2]\nn = 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\n```python\narr = [1,", "\n\t\nUse Call-Based format\n\npython arr = [1, 2, 3, 4, 5, -3, -2, 1, 2, 3]\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\narr = [1, 2, 3]\n\npython\n\n\n\n```", "\n\nUse Call-Based format\n\n\n\n\n\n\n\npython\n\narr = [1, 2, 3, -2, 4, -1, -2, -1, -1, -1, -1, -1, -1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf all elements are", "\nUse Call-Based format\npython arr = [1, 2, 3, 4, 5, 3, 2]\n\n\n\n\npython arr = [1, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nThe function will output an alerting message\n\npython\n\n\n```python arr ="], "prompt": "\nQUESTION:\nYou are given an array of positive and negative integers and a number ```n``` and ```n > 1```. The array may have elements that occurs more than once.\nFind all the combinations of n elements of the array that their sum are 0.\n```python\narr = [1, -1, 2, 3, -2]\nn = 3\nfind_zero_sum_groups(arr, n) == [-2, -1, 3] # -2 - 1 + 3 = 0\n```\nThe function should ouput every combination or group in increasing order.\n\nWe may have more than one group:\n```python\narr = [1, -1, 2, 3, -2, 4, 5, -3 ]\nn = 3\nfind_zero_sum_groups(arr, n) == [[-3, -2, 5], [-3, -1, 4], [-3, 1, 2], [-2, -1, 3]]\n```\nIn the case above the function should output a sorted 2D array.\n\nThe function will not give a group twice, or more, only once.\n\n```python\narr = [1, -1, 2, 3, -2, 4, 5, -3, -3, -1, 2, 1, 4, 5, -3 ]\nn = 3\nfind_zero_sum_groups(arr, n) == [[-3, -2, 5], [-3, -1, 4], [-3, 1, 2], [-2, -1, 3]]\n```\nIf there are no combinations with sum equals to 0, the function will output an alerting message.\n\n```python\narr = [1, 1, 2, 3]\nn = 2\nfind_zero_sum_groups(arr, n) == \"No combinations\"\n```\nIf the function receives an empty array will output an specific alert:\n```python\narr = []\nn = 2\nfind_zero_sum_groups(arr, n) == \"No elements to combine\"\n```\nAs you have seen the solutions may have a value occurring only once.\nEnjoy it!\ndef find_zero_sum_groups(arr, n):\n\t\nUse Call-Based format\nANSWER:\n"}}