{"4173": {"code": ["\n\n# Example\n\nant([[1], [0], [0], [1]])\n\n\n\n\n\n\n\n\n\n-- The `dir` parameter should be 0 or 1.\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n### Input\n\n\n\n\n\n\n\n\n\n### Example\n\n\n[Langton's ant", "\n# Example\n\n# Langton's ant\n#\n\n#\n\n\n\n\n# Performant\n\n# Example\n\n\n\n\n\n\n\n\n### Input\n\n\n\n\n*\n\n\n\n\n\n\n\n\nLangton's ant(grid, column, row, n, dir)\n\n### Output\n\n\n\n\n\n\n\n\n## Example\n\n", "\n\n\n\n# A Gradley\n\nant([[1]], 0, 0, 1)\n\n## Input\n\n* `grid` - the input\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n**Note**\n\n\n\n\n\nant([[1], [0]], 0", "\n\n\n\n\n\n\n# Pre-defined\n\nlangton_ant(grid, n, dir)\n\n### Input\n\nThe input `grid` is a two dimensional array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Notes\n\nLangton's ant is a two dimensional array\n\n\n\n\n\n\n\n\n## Effects\n\n\n", "\n    #\n        return\n\n## Input\n\n\n**Note**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* - a two dimensional array of `n` cells\n* `dir` - the current direction of ant\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n\n\n\n\n## Example\n\n\n\n", "\n\n\n\n\n\n\n\n[Langton's ant](https://en.wikipedia.org/wiki/Langton%27s_ant)\n\n### Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nLangton's ant\n\n**Note**\n\n\n\n\n\n\n\n\n### Example\n\n\nant([[1]", "\n`\n\n\n\n\n\n\n\n\n\n`\n# Runs\n\n[Langton's ant(grid, column, row, n, dir = 0):\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n# Example:\n\nant([[1]], 0, 1)\n\n\n\n\n\n\n\n\n\n# Example:", "\n\n\n\n\n# Example:\n\n# langton's ant\n#\n\n#\n\n\n\n\n\n\n\n\n* `dir` - direction of ant\n* `n` - number of iterations\n\n### Examples\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n### Effects\n\n\n\n\n\n\n# Example:\n\n#", "\n\n## Example\n\n[Langton's ant]\n\n\n\n\n\n\n\n\n\n\n\nn = 3\n\n## Input\n\nThe input is a two dimensional array of two dimensional arrays of two dimensional arrays\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n\n\n\n\n    [2]\n    `row`", "\n\n\n\n\n\n\n\n\n\nNo input\n\n**Note**\n\n* `dir` - direction of ant\n* `n` - number of iterations\n\n**Note**\n\n*\n\n## Usage\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example\n\n\n\n\n\t# Represents", "\n\n\n\n# Example:\n\nant([1, 1, 1, 1, 1])\n\n### Example:\n\nant([1, 1, 1])\n\n### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n### Parameters\n\n\n\n\n\n## Examples\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n### Input\n\n\n\n\n\n\n\n\n\n# Run-Based\n\n#\n\n\n\n\n\n\n\n\n\n\nLangton's ant(grid, column, row, n, dir)\n\n## Effects\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n[1]", "\n\n\n\n\n\n\n\n\nThe function starts with `grid`\n\n**Note:**\n\n* `direction` - the direction of the ant's iteration\n* `n` - number of iterations\n\n**Note:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Langton's ant](https://en.wik", "\n\n\n\n\n\n\n\n\n[Langton's ant]\n\nThe ant is a function that is called by a lot of generators.\n\n### Examples\n\n**NOTE:**\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nLangton's ant\n\n### Example\n\n\n\n\n\n\n\n\n\n### Example\n\n\n[1]\n", "\n\n\n\n\n\n\n\n\n\n\n# Arguments\n\n\ngrid - two dimensional array of two dimensional arrays of two dimensional arrays of two dimensional arrays of two dimensional arrays\n\n# `n` - number of iterations\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n## Description\n\n\n\n\n\n## Examples\n\n## Parameters", "\n\n\n\n\nUse Call-Based format\n\n# Pre-defined format\n\nant([[0, 1], [0, 1]]\n\n### Input\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nLangton's ant\n\n### Examples\n\nant([[1]])\n\n\n\n\n\n\n\n## Example\n\n", "\n\n## Input\n\n\n\n\n\n\n\n\n\n\n\n#\n\nLangton's ant(grid, column, row, n, dir):\n\t\n### Step\n\n\n*\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n### Examples\n\nLangton's ant\n\n\n\n\n\n\n\n\n\n### Example\n\n\n[1,", "\n\n\nant(grid, column, row, n, dir = 0):\n\n### Input\n\n* `grid` - the input\n* `n` - the iteration\n\n### Rules\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n### Example\n\n\n\n\n\n## Example\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n**Note**\n\n**note**\n\n* `direction` - the current direction of the iteration\n* `n` - the current iteration\n* `grid` - the input grid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n\n\n\n\n[Langton's ant](https://", "\n\n\n\n\n\n\n\n\nant([[1], [0], [1], [0], [0], [0], [0], [0]\n\n### Functions\n\nThe function `ant`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLangton's ant\n\n### Effects\n\n\n\n\n\n\n## Example:\n\n"], "prompt": "\nQUESTION:\n[Langton's ant](https://en.wikipedia.org/wiki/Langton%27s_ant) is a two-dimensional Turing machine invented in the late 1980s. The ant starts out on a grid of black and white cells and follows a simple set of rules that has complex emergent behavior.\n\n## Task\n\nComplete the function and return the `n`th iteration of Langton's ant with the given input.\n\n### Parameters:\n\n* `grid` - a two dimensional array of `1`s and `0`s (representing white and black cells respectively)\n* `column` - horizontal position of ant\n* `row` - ant's vertical position\n* `n` - number of iterations\n* `dir` - ant's current direction (0 - north, 1 - east, 2 - south, 3 - west), **should default to 0**\n\n**Note:** parameters `column` and `row` will always be inside the `grid`, and number of generations `n` will never be negative.\n\n## Output\n\nThe state of the `grid` after `n` iterations.\n\n## Rules\n\nThe ant can travel in any of the four cardinal directions at each step it takes. The ant moves according to the rules below:\n\n* At a white square (represented with `1`), turn 90\u00b0 right, flip the color of the square, and move forward one unit.\n* At a black square (`0`), turn 90\u00b0 left, flip the color of the square, and move forward one unit.\n\nThe grid has no limits and therefore if the ant moves outside the borders, the grid should be expanded with `0`s, respectively maintaining the rectangle shape.\n\n## Example\n\n```python\nant([[1]], 0, 0, 1, 0)   # should return: [[0, 0]]\n```\n\nInitially facing north (`0`), at the first iteration the ant turns right (because it stands on a white square, `1`), flips the square and moves forward.\ndef ant(grid, column, row, n, direction = 0):\n\t\nUse Call-Based format\nANSWER:\n"}}