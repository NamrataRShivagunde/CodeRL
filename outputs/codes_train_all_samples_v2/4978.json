{"4978": {"code": ["\n```\n\n\n\n\n```\n\n\n\n\n\n\n\no'\n\n```\n\n\nhu ute.I ouki tinventth'\n\n shift the order characters for each substring to the right by n characters.\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n\nhtomake", "\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\titerativeRotationCipher['encode'](10,quote)\n\n\titerativeRotationCipher['decode'](10,quote)\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\nhtom fyou p", "\n```\n\n\n\n\n```\n\n\n\n\n```\n\n```\n\n\n\n\nuti uktu ius vusi juni vusi iusi\n\nbystep\nerer.I oufy.I oufy.'\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\nhtom ake h", "\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\nutte.I oufy fwei tinventth'\n\nteer.I oufy irs tinventth'\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\nhtom oap flep", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n\npiefr ouskhn cuskhn\neuskhnn\n\n```\n\n\n hu tinventth\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\nhtom ake ous.I", "\n```\n\n\n\n\n\n```\n\n\n\n```\n\n\n```\n\n\n\npiefr youmustfirstinventth\n\n```\n\n\nhtom.I oufy teu.I oufy'.\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n''htom ake anap p", "\n```\n\n\n\n\n```\n\n\n\n\n```\n\nExample:\n\n```python\n\n\nshifts\n'\n\n\nhtom.I oufy'\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n\nTest Example:\n\n```\n\nhu", "```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n ake eje i\u00e1\n\n\nhtom ake eje i\u00e1i j\u00e1i.'\n\n\n\n\n\novtete'\n\n\n```\n\n\n\n\n\nhtom ake eje iou vte tei", "\n```\n\n\n\n```\n\n\n```\n\n\n\n\n```\n\n\ndec\n'\n\n```\n\n```\n\n\nhtom shtom ake ousf ousfr tinventth\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\nhtom ake ous.I", "\n```\n\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\n\nhtom.I oufy.I oufy.I ous..I ous..I ous..I ous..I sus.\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\nhtom ake f", "```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n'eu vni seer tinventth'\n\n```\n\n\nhn ousenen'.\n\n\n\n\n\n''',\n\n\n\n\n```\n\nExample:\n\n```python\n\n\n\n\n\n\nhtom ake anap plep", "\n```\n\n\n\n\n```\n\n\n\n\n```\n\nExample:\n\n```python\n\nimport iterativerotationcipher\n\nencode.\n\npiefr ouset.'\n\n```\n\n\n'.\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\nhtom ake ous. I fyou hu", "```\n\n```\n\n\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n\nhtom.I ous niv shtom.I ous.I ous.I ous.I ous.I'\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\nhtom ous.I ous", "\n```\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n```\n\n\npiefr ouskr tinventth'\n\n```\n\n\nhn seer.I ouskr'\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\nhtom ake h", "```\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n'.\n\n\nencodehn tei tinventth'.\n\n```\n\nshift by space to the right by n characters\n\n\n\nhu vni vehn tei shtom.'\n\n\n\n\n```\n\n\n\n\nhtom ake ho o", "\n\n```\n\n\n\n\n\n```\n\n\n\n\n```\n\n```\n\n\n\n\neu vni vni tinventth\neu vni tinventth\n\n```\n\n\n'\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n\nhtom ake anap", "```\n\nTest Example\n\n```python\n\n'\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\nhtom ake oufy ous.\n\neu hu vni seer.'\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n\n\nhtom ake ous. I fyou.I", "\n```\n\n\n\n\n\n\n```\n\n\n\n\n\neu uka sie fle piefr oap plepiefr ous tinventth\n\n```\n\n\nutte.I ous.'\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\nhtom ake ous.I ou v", "\n```\n\n\n\n\n```\n\n\n\n\n```\n\n```\n\n\npiefr ouseni ouseni.'\n\n```\n\n\nhtom ouseni.'\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\nhtom ake hu uke vni se", "\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\npiefr ousu.I ousu ousu.I ousu ousu.I'\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n\n\nhtom ake ousu"], "prompt": "\nQUESTION:\nIn this kata, your task is to implement what I call **Iterative Rotation Cipher (IRC)**. To complete the task, you will create an object with two methods, `encode` and `decode`. (For non-JavaScript versions, you only need to write the two functions without the enclosing dict)\n\nInput\nThe encode method will receive two arguments \u2014 a positive integer n and a string value.\nThe decode method will receive one argument \u2014 a string value.\nOutput\nEach method will return a string value.\nHow It Works\nEncoding and decoding are done by performing a series of character and substring rotations on a string input.\nEncoding: The number of rotations is determined by the value of n. The sequence of rotations is applied in the following order:\n\u2003Step 1: remove all spaces in the string (but remember their positions)\n\u2003Step 2: shift the order of characters in the new string to the right by n characters\n\u2003Step 3: put the spaces back in their original positions\n\u2003Step 4: shift the characters of each substring (separated by one or more consecutive spaces) to the right by n\n\nRepeat this process until it has been completed n times in total.\nThe value n is then prepended to the resulting string with a space.\nDecoding: Decoding simply reverses the encoding process.\nTest Example\n\n```python\nquote = 'If you wish to make an apple pie from scratch, you must first invent the universe.'\nsolution = '10 hu fmo a,ys vi utie mr snehn rni tvte .ysushou teI fwea pmapi apfrok rei tnocsclet'\nIterativeRotationCipher['encode'](10,quote) == solution; //True\n\n'''Step-by-step breakdown:\nStep 1 \u2014 remove all spaces:\n'Ifyouwishtomakeanapplepiefromscratch,youmustfirstinventtheuniverse.'\n\nStep 2 \u2014 shift the order of string characters to the right by 10:\n'euniverse.Ifyouwishtomakeanapplepiefromscratch,youmustfirstinventth'\n\nStep 3 \u2014 place the spaces back in their original positions:\n'eu niv erse .I fyou wi shtom ake anap plepiefr oms crat ch,yo umustf irs tinventth'\n\nStep 4 \u2014 shift the order of characters for each space-separated substring to the right by 10:\n'eu vni seer .I oufy wi shtom eak apan frplepie som atcr ch,yo ustfum sir htinventt'\n\nRepeat the steps 9 more times before returning the string with '10 ' prepended.\n'''\n```\n\nTechnical Details\n\n- Input will always be valid.\n- The characters used in the strings include any combination of alphanumeric characters, the space character, the newline character, and any of the following: `_!@#$%^&()[]{}+-*/=\"'<>,.?:;`.\n\nIf you enjoyed this kata, be sure to check out [my other katas](https://www.codewars.com/users/docgunthrop/authored).\ndef encode(n,strng):\n\t\nUse Call-Based format\nANSWER:\n"}}