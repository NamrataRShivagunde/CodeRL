{"4249": {"code": ["\nUse Call-Based format\n\n\n# Base64 Numeric Translator\n\nUse Call-Based format\n\nExample:\nbase64_to_base10(string):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n```\n#\n\n\n\n\n\n\n# Base64 Numeric Translator\n", "\nUse Call-Based format\n\nBase64 Numeric Translator\n\nExample:\nbase64_to_base10(\"B\")\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n:\n\n#\n#\n\n# Base64 Numeric Translator\n\n\n\n# Base64 Numeric", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nExample:\nbase64_to_base10(\"/A/B\")\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n# Base64 Numeric Translator\n\n\n\n\n\n\n\nBase\n\n\n\n\n\n\n# Base64 Numeric Translator\n#", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n\n\n\n\t\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n#\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n# Base64", "\n\n\n\nbase64_to_base10(string)\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n\n# Base64 Numeric Translator\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n#\n\n#\n\n\n\n# Base64 Numeric Translator\n\n#\n\n\n\n\n\n## Base64 Numeric Translator", "\nUse Call-Based format\n\n# Base64 Numeric Translator\n\n\n\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n:\n\n\n\n\n\n# Base64 Numeric Translator\n\n#\n#\n\n\n\n\n## Base64 Numeric Translator\n", "\n\nUse Call-Based format\n\nbase64_to_base10(string):\n\nUse Call-Based format\n\n\n\n\n\nExample:\nbase64_to_base10(\"AB\")\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n", "\n\n\nBase64 Numeric Translator\n\nThe (Base 10) numbering system is (Base 2) and (Base 16)\n\nExample:\n\nbase64_to_base10(\"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n#\n\n\n\nBase 64:\n\n#\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n", "\n\nUse Call-Based format\n\n\n\nBase64 Numeric Translator\n\nExample:\nbase64_to_base10(\"A\")\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n#\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n# Base64 Numeric Translator", "\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\nBase64 Numeric Translator\n\nExample:\nbase64_to_base10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n#", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nbase64_to_base10(number):\n\nUse Call-Based format\n\nExample:\n\nbase64_to_base10(number):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#", "\n\nUse Call-Based format\n\n\nbase64_to_base10\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\nBase 64:\n#\n\n\n\n\n\n\n\n# Base64 Numeric Translator", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nExample:\nbase64_to_base10(string)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n#\n\n\n\n#\n#\n\n# Base64 Numeric Translator\n\n\n\n\n## Base", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nExample:\nbase64_to_base10(number)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n#\n\n\n\nBase 64\nbase\nbase64\n\n\n\n\n\n# Base64 Numeric Translator\n", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\nUse Call-Based format\n\nExample:\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n## Base", "\n# Use Call-Based format\n\n\nBase64 Numeric Translator\n\nExample:\n\nbase64_to_base10(\"/\")\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n# Base64", "\nUse Call-Based format\n\n\nBase64 Numeric Translator\n\nExample:\n\nbase64_to_base10(number):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n:\n\n\n\n\n\n\n#\n\n\n\n# Base64 Numeric Translator\n\n\n\nbase\n# Base64 Numeric", "\n\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\nBase64 Numeric Translator\n\n### Base64 Numeric Translator\n\n### Base64 Numeric Translator\n\n\n\n\n\n\n\n\n\n\n:\n# Base64 Numeric Translator\n\n\n\n\n\n:\n\n\n\n:\n\n\n\n#\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n", "\n\n\nBase64 Numeric Translator\n\nExample:\nbase64_to_base10(string)\n\nUse Call-Based format\n\n\n:\n\n\n\n\n# Base64 Numeric Translator\n\n\n\n\n\n# Base64 Numeric Translator\n:\n\n\n\n\n\n# Base64 Numeric Translator\n\n###\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n#", "\n# Call-Based format\n\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\n# Base64 Numeric Translator\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Base64 Numeric Translator\n\n:\n\n\n###\n\n\n\n\n\n```\n#\n\n\n\n\n\n\n\n\n# Base64"], "prompt": "\nQUESTION:\n# Base64 Numeric Translator\n\nOur standard numbering system is (Base 10). That includes 0 through 9. Binary is (Base 2), only 1\u2019s and 0\u2019s.  And Hexadecimal is (Base 16) (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F). A hexadecimal \u201cF\u201d has a (Base 10) value of 15. (Base 64) has 64 individual characters which translate in value in (Base 10) from between 0 to 63.\n\n####Write a method that will convert a string from (Base 64) to it's (Base 10) integer value.\n\nThe (Base 64) characters from least to greatest will be\n```\nABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\n```\nWhere 'A' is equal to 0 and '/' is equal to 63.\n\nJust as in standard (Base 10) when you get to the highest individual integer 9 the next number adds an additional place and starts at the beginning 10; so also (Base 64) when you get to the 63rd digit '/' and the next number adds an additional place and starts at the beginning \"BA\".\n\nExample:\n```\nbase64_to_base10(\"/\") # => 63\nbase64_to_base10(\"BA\") # => 64\nbase64_to_base10(\"BB\") # => 65\nbase64_to_base10(\"BC\") # => 66\n```\n\nWrite a method `base64_to_base10` that will take a string (Base 64) number and output it's (Base 10) value as an integer.\ndef base64_to_base10(string):\n\t\nUse Call-Based format\nANSWER:\n"}}