{"3618": {"code": ["```\n\nNOTE:\n\n\n\n\n\n\n\n[ 2, 3, 5,45,45]\n[ 5, 5, 5,45,45]\n\n```\n\n\n\n\n\n5,5,5,5]\n```\n\n\n\n\n\n```\n\n[ 2, 3, 5,45]\n\n5,5,45]", "```\n\n\n\n\n\n\n\n\n\n\n\n\n\n5,5,45,45] that then becomes [5,5,5,45,45] that then becomes [5,5,5,45,45]\n\n\n\n5,5,45]\n\n`\n\n\n\n\n```\n\n5,45] becomes\n[]\n-1", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n[2, 3, 5,45,45]\n\n```\n\nThe rule:\n\n[ 5, 5,5,45,45]\n```\n\n 5,45,45]\n\n\n\n```\n\n\n\n\n[5,45,45] becomes```\n-1,", "\n```\n\nNOTE:\n\n\n\n\n\n\n\nNOTE:\n\nThis rule is in the following example:\n\n```\n\n\n\n\n```\n\n\n\n[5,5,5,5,45,45]\n\n\n5,5,45]\n[]\n\n\n\n\n\n\n5,5] becomes\n```\n-2", "```\n\n\n\n\n\n\n\n\n\n\n\n\n[ 2, 3, 5,45,45]\n\n\n\n\n5,5,45,45]\n```\n\nEXAMPLE:\n\n```\n[5,5,5,45,45]\n```\n\n\n\n\n\n```\n5,5,45]\n\n-2", "\n```\n\n\n\n\n\n\n\n\n\n\n5,45,45]\n\n```\n\nHow to get around this rule:\n\n[ 2, 3, 5,45,45]\n\n```\n\n-1,5,45]\n[,45]\n\n\n\n\n```\n\n5,45,45] becomes\n-1,", "\n```\n\n\n\n\n\n\n\n\n\n[ 2, 3, 5,45,45]\n\n\n```\n\n\n\n[ 2, 3, 5,45,45]\n\n```\n\n5,5,45,45]\n\n```\n\n\n\n\n\n```\n\n5,5,45]\n```\n-2,", "```\n\n\n\n\n\n\n\n\n\n\n5,5,45,45]\n[ 0, 0, 0,45,45] that then becomes\n[ 0, 0, 0,45,45] that then becomes\n\n\n\n5,45,45]\n\n```\n\n\n\n\n\n```\n5,45] becomes\n\n-1,-", "```\n\n\n\n\n\n\n\n\n\n\n\n\n5,5,45,45]\n\nThis is an example:\n\n\n\n\n5,5,45,45] that then becomes `[-1,-1,0,37,37]`\n\n```\n\n\n\n\n```\n\n5,5,45]\n```\n-2", "```\nA:\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n[ 2, 3, 5,45,45]\n[ 0, 0, 0,45,45]\n\n\n\n\n5,5,45,45]\n```\n\n\n\n\n\n```\n\n[,45,45] becomes```\n-1,", "\n```\n\n\n\n\n\n\n\n\n[2,3,5,45,45]\n\n\n```\n\n5,5,45,45]\n\n\n[ 2,3,5,45,45]\n\n\n5,5,45]\n\n\n\n\n\n```\n\n5,5,45] becomes\n```\n-2,", "```\n\n\n\n\n\n\n\n\n\n\n5,5,45,45] that then becomes `[5,5,5,45,45]` that then becomes `[-3,-3, 0,37,37]`.\n\n\n\n\n5]\n\n\n\n\n\n\n```\n\n[,5,45] becomes\n```\n-2", "```\n\n\n\n\n\n\n\n\n\n```\n\n5,5,45,45] that then becomes [5,5,5,45,45] that then becomes [5,5,5,45,45] that then becomes\n\n\n5,45,45][]\n\n\n\n```\n\n5,5] becomes\n5,5,45", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n[5,5,5,45,45]\n\n```\n\n\n\n\n\n5,5,45,45] that then becomes\n[ 0,-1, 0,38,38]\n\n```\n\n\n\n\n\n\n[,5]\n\n\n\n```\n5", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5, 5,45,45] becomes [5,5,5,45,45] that then becomes [5,5,5,45,45] that then becomes\n\n\n5,45]\n\n\n```\n\n\n\n\n\n5]\n```\n\n\n-5,-", "\n```\n\n\n\n\n\n\nThe rule is:\n\n```\n\n\n\n\n\n\n\n5,5,45,45]\n\n\n\n\n5,5,45,45]\n```\n\n\n\n```\n\n\n\n\n\n```\n\n5,5,45,45]\n```\n\n\n\n```\n-", "```\n`\n\n`\n\n```\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n5,5,45,45]\n```\n\n\n\n\n5,5,45,45]\n```\n\n\n```\n\n\n\n\n```\n\n5,5,45,45]\n```\n-2,", "\n```\n\n\n\n\n\n\n\n\n\n\n\n5,5,45,45] that then becomes `[5,5,5,45,45]` that then becomes `[-1,-1,0,37,37]`.\n\n\n\n\n5]\n\n```\n\n\n\n\n```\n\n\n```\n-1, 0,", "\n```\n\n\n\n\n\n\nThe rule:\n\n```\n\n\n*:1 based\n\n\n\n\n\n```\n\n\n5,5,45,45]\n\n\n\n5,5,45]\n```\n\n\n```\n\n\n\n\n```\n\n5,5,45]\n[,45]\n\n``-", "```\n\nUsage:\n\n```\n\n`\n\n```\n```\n\n```\n\n\n```\n\n\n\n5,5,45,45] that then becomes `[5,5,5,45,45]`.\n\n`\n\n```\n```\n5\n\n\n\n\n\n\n]\n```\n 5, 0,"], "prompt": "\nQUESTION:\nA core idea of several left-wing ideologies is that the wealthiest should *support* the poorest, no matter what and that is exactly what you are called to do using this kata (which, on a side note, was born out of the necessity to redistribute the width of `div`s into a given container).\n\nYou will be given two parameters, `population` and `minimum`: your goal is to give to each one according to his own needs (which we assume to be equal to `minimum` for everyone, no matter what), taking from the richest (bigger numbers) first.\n\nFor example, assuming a population `[2,3,5,15,75]` and `5` as a minimum, the expected result should be `[5,5,5,15,70]`. Let's punish those filthy capitalists, as we all know that being rich has to be somehow a fault and a shame!\n\nIf you happen to have few people as the richest, just take from the ones with the lowest index (the closest to the left, in few words) in the array first, on a 1:1 based heroic proletarian redistribution, until everyone is satisfied.\n\nTo clarify this rule, assuming a population `[2,3,5,45,45]` and `5` as `minimum`, the expected result should be `[5,5,5,42,43]`.\n\nIf you want to see it in steps, consider removing `minimum` from every member of the population, then iteratively (or recursively) adding 1 to the poorest while removing 1 from the richest. Pick the element most at left if more elements exist with the same level of minimal poverty, as they are certainly even more aligned with the party will than other poor people; similarly, it is ok to take from the richest one on the left first, so they can learn their lesson and be more kind, possibly giving more *gifts* to the inspectors of the State!\n\nIn steps:\n```\n[ 2, 3, 5,45,45] becomes\n[-3,-2, 0,40,40] that then becomes\n[-2,-2, 0,39,40] that then becomes\n[-1,-2, 0,39,39] that then becomes\n[-1,-1, 0,38,39] that then becomes\n[ 0,-1, 0,38,38] that then becomes\n[ 0, 0, 0,37,38] that then finally becomes (adding the minimum again, as no value is no longer under the poverty threshold\n[ 5, 5, 5,42,43]\n```\n\nIf giving `minimum` is unfeasable with the current resources (as it often comes to be the case in socialist communities...), for example if the above starting population had set a goal of giving anyone at least `30`, just return an empty array `[]`.\ndef socialist_distribution(population, minimum):\n\t\nUse Call-Based format\nANSWER:\n"}}