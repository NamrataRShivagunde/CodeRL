{"3950": {"code": ["\n\n\nfind_int_inrange(a, b)\n\nReturn an array of scores\n\nExample:\n\ninteger = 1234\n\nsecond score\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\n\n\n\n\n\n\n\n\n```python\ninteger = 1 +", "\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\ninteger = 1234 ---> (1 + 2 + 3 + 4) < (1 + 2 + 3 + 4) < (1 + 4) <\n\n\n\n\n\n\n\n\n\n\n\n\n\nmax_am_div = 2\n\n\n\n\n```", "\n\nfind_int_inrange(integer, max_am_div)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n```\n\n\n\n\n\n```\n# The function above calculates the", "\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\nThe function will output two scores for one integer.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A example for finding the first integer:\n# 1)\n# 2)", "\n\n\nfind_int_inrange(a, b)\n\nEITHER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninteger = 1234 ---> (123 + 234 + 234) + (123 + 234 + 234)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nfind_", "\n\n\nfind_int_inrange(a, b)\n\nANALYSIS:\n\n**First score**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\n\n\n\n``Second score``", "\n\n\nfind_int_inrange(integer, max_am_div)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(integer, max_am_div)\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(123, 366)\n\n\n\n\n\n\n\n``Second score``\n", "\n\n\nfind_int_inrange(a, b) < 5\nfind_int_inrange(a, b) < 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\nTHIS ARE OK\n\n\n\n\n\n\n\n\n\n    TODO\n\n\n\n\n", "\n\n\nfind_int_inrange(integer, max_am_div)\n\n``Second score**: The sum of all the integers obtained from a range \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(integer)\n\n\n\n\n\n\nThe function is called by ``find", "\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b) ---> [a, b]\n```\n\n\n\n\n\n\n\n```python\n", "\n\n\nfind_int_inrange(10, 15)\n\nExample:\n\nfind_int_inrange(10, 15)\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(1, 5)\n\n\n\n\n**First score**\n\nWe", "\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\nReturn:\n\n```python\n\ninteger = 1234\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\n\n\n\n\n\n\n\n\n\n\n\nThe function returns an array of scores", "\n\n\nfind_int_inrange(100, 500)\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninteger = 1234 ---> (1 + 2 + 3 + 4) < (12 + 2 + 3) < (2 + 3) <...< kn\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n", "\n\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\ninteger = 1234 ---> (1 + 2 + 3 + 4) < (1 + 2 + 3)\n\n\n", "\n\n\nfind_int_inrange(integer, max_am_div)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\n\n\n\n\n\npython\n\n\n\n``3```\n\n# 1) b", "\n\n\nfind_int_inrange\n\nUsage:\n\n\n\n\n\nfind_int_inrange\n\nExample:\n\n```python\nfind_int_inrange\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange\n\n\n\n\n\n\n```python\ninteger = 1234 ---> (", "\n\n\nfind_int_inrange(a, b)\n\n\n\n\n\n\n\n\n\n\nCall-Based format\n\n\n\n\n\n\n\n\ninteger = 123 --->\ninteger + 357 <... < k1 < k2 < k3 <... < k3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n``#```python\n", "\n\n\nfind_int_inrange(10, 10)\n\nReturns:\ninteger\n\nReturns:\ninteger\n\nNBNBNBNBNBNBNB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\n\n\n\n\n\n\n``Second score``\n\n#", "\n\n\nfind_int_inrange(a, b)\n\nThe function returns an array of scores, one for each integer.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_int_inrange(100, 500)\n\nQUESTION:\n\nWe are interested with two scores\n\n\n\n\n\n```", "\n\n\nfind_int_inrange\n\n\n\n\n\n\ninteger = 123\ninteger = 123\ninteger = 123\ninteger = 123\ninteger = 123\ninteger = 123\n\n**Question**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Tests\n\n\n\n\n# Tests\n#\ninteger = 2"], "prompt": "\nQUESTION:\nWe are interested in obtaining two scores from a given integer:\n\n**First score**: The sum of all the integers obtained from the power set of the digits of the given integer that have the same order \n\nE.g:\n```\ninteger = 1234 ---> (1 + 2 + 3 + 4) + (12 + 13 + 14 + 23 + 24 + 34) + \n(123 + 124 + 134 + 234) + 1234 = 10 + 120 + 615 + 1234 = 1979\n```\n**Second score**: The sum of all the integers obtained from the all the contiguous substrings of the given integer as a string.\n\nE.g.\n```\ninteger = 1234 ---> (1 + 2 + 3 + 4) + (12 + 23 + 34) + (123 + 234) + 1234 = 10 + 69 + 357 + 1234 = 1670\n```\nThe first integer, higher than ```100```, that has both scores with ```3``` common divisors is ```204```. Its first score is ```258``` and the second one ```234```. The common divisors for both scores are ```2, 3, 6```.\n\nIn fact the integers ```294``` and ```468``` are the ones in the range ```[100, 500]```, that have both scores with ```7``` common divisors, the maximum amount of common factors in that range.\n\nYour task in this kata is to create a function that may find the integer or integers that have the maximum amount of common divisors for the scores described above.\n\nThe example given above will be:\n```python\nfind_int_inrange(100, 500) == [7, 294, 468]\n```\nAs you can see, the function should receive the limits of a range [a, b], and outputs an array with the maximum amount of factors, ```max_am_div``` and the found numbers sorted\n```\nfind_int_inrange(a, b) ----> [max_am_div, k1, k2, ...., kn] # k1 < k2 < ...< kn\n```\nThe function may output only one number.\n```python\nfind_int_inrange(100, 300) == [7, 294]\n```\nEnjoy it!\n\nFeatures of the random tests:\n```\n100 < a < b < 55000 \n```\ndef find_int_inrange(a, b):\n\t\nUse Call-Based format\nANSWER:\n"}}