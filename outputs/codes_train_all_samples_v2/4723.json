{"4723": {"code": ["\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\t\n\n\n\n\n\t\n\t\n\n\n\ngreet(name)\n\nUse Call-Based format\n\n\t\n\n\n\n.\n\nStarts with a capital letter.\n\n\n\n\n\n\n```\ndef\n\n\nWrite a method that takes a argument", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Python format\nCALL-Based:\n\n\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\t\n\n\n\n.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nWrite a method that takes a argument as", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\"JIN\"  --> \"Hello JIN!\"\n\"JOK\"   --> \"Hello Jok!\"\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nWrite a method that takes a single argument", "\n\n\n\nUse Call-Based format\t\nUse Call-Based format\n\n\n\"JUID\"  --> \"Hello JUID!\"\n\n\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\ngreet(name):\n\n\nWrite a method that takes an", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\"JUN\"  --> \"Hello Jun!\"\n\n\n\n\n\n\n\n\t\n\n\t\n\ndef\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nWrite a method that takes a name as name.\n\n\n\n\n\nWrite a method", "\n\t\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\"John\"  --> \"Hello John!\"\n\"John\"  --> \"Hello John!\"\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\nWrite a method that takes an argument", "\n\nUse Call-Based format\n\t\n```\ndef greet(name):\n\n\n\nUse Call-Based format\n\n\n\n\"JACK\"  --> \"Hello Jack!\"\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nWrite a method that takes an argument as name", "\n\n\n\n\n\nUse Call-Based format\n\n\n\"JIK\"  --> \"Hello JIK!\"\n\n\n\n\t\n\n\n\"\n\"JIK\"  --> \"Hello JiK!\"\n\n\t\n\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nWrite a method that takes a single argument as", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\ndef greet(name):\n\t\n\n\n\n\n\n\t\nUse Call-Based format\n\n```\n\n\n\n\n\n\n\n\n\n\nReturns the greeting string\n\n\n\nGreet the name\n\n\n\n\n\n\nWrite a method that takes a name", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\"jack\"  --> \"Hello Jack!\"\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nWrite a method that takes", "\n\n\n\n\nUse Call-Based format\n\n\n\n\"Jack\"  --> \"Hello Jack!\"\n\"Jack\"  --> \"Hello Riley!\"\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n.\n\n\n\n\n\nUse String-Based format\nNOTE:\n\n\n\n\n\n\n\n## Examples:\n\n``", "\n\n\n\n\nUse Call-Based format\n\n\n\n\ndef greet(name):\n\n\nUse Call-Based format\n\nUse Call-Format\n\nUse String-Based format\n\n```\nif greet(name):\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\nWrite a method that takes", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\"JACK\"  --> \"Hello Jack!\"\n\"JACK\"  --> \"Hello Riley!\"\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\t\n\n:\n\n\n\n\nGreet\n\n\n\n\n\n\n\n# Examples:\n\n```", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\t\nUse Call-Based format\n\n\n```\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nWrite a method that takes a string as name.\n\n\n\ndef\n\n\n\nWrite", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n`\n\ndef greet(name):\n\n\n\n\n\n\t\nUse Call-Based format\n\ndef greet(name):\n\t\n\n\n\n\n\n\n:\n\n\n\n\nGreet the method.\n\n\n\n\n\nWrite a method", "\n\n\n\nUse Call-Based format\n\n\n\n\n\"Jack\"  --> \"Hello Jack!\"\n\n\n\n\n\n\n\n\n\t\n@call\ndef greet(name):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\nThe name must be a string.\n\n\n\ndef\n\n\nWrite", "\n\n\n\n\n\nUse Call-Based format\n\n\n\"JUN\"  --> \"Hello Jun!\"\n\"RACK\"  --> \"Hello Riley!\"\n\n\t\n\n\n\n\n\t\n\n\n\ndef\t\n\n\n.\n\n\n\n\nUse Call-Based format\nGreet a method.\n\nName must be\n\n\n\n\nWrite a", "\n\n\n\nUse Call-Based format\n\n\n\n\n\"Jack\"  --> \"Hello Jack!\"\n\"Jack\"  --> \"Hello Jack!\"\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\nEnds with a exclamation point.\n\n\n\n\n\n\n\nWrite a method that takes a single", "\n\n\n\n\n\nUse Call-Based format\n\n\n\"JUN\"  --> \"Hello Jun!\"\n\"JACK\"  --> \"Hello Jack!\"\n`\n\n\n\t\n\n\n\n\n\t\t\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\nEXAMPLE:\n\n\n\n\n\n\n\nWrite a method that takes", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\ndef greet(name):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n```\ndef\n\nWrite a method that"], "prompt": "\nQUESTION:\nWrite a method that takes one argument as name and then greets that name, capitalized and ends with an exclamation point.\n\nExample:\n\n```\n\"riley\" --> \"Hello Riley!\"\n\"JACK\"  --> \"Hello Jack!\"\n```\ndef greet(name):\n\t\nUse Call-Based format\nANSWER:\n"}}