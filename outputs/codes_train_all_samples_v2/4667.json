{"4667": {"code": ["\n\n\n\n\n\n# Replay\n\n\n\n\n\n\n\n\n\n      1 \u2191 \u2191\n      2 \u2191\n      3 \u2191\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      A \u2191\n\n   \n\n\n\n\n\n# W", "\n\n\n\n\n\n\n# Printer\n\n\n\n\n\n\n\n\n \n \n     \n\n\n  \n     C \u2191 \u2191 \u2191    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Printer\n\n\n\n  # Printer\n\n      B \u2191 \u2191 \ufffd\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n# Time\n\n\n \u2191 \u2191\n\n\n     \n          | \u2191 | \n          | \u2191 |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n      | \u2191 |  \n      | \u2191 | \n      | |", "\n\n Story\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u2191\n      c \u2191\n      B \u2191\n      C \u2191\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Says\n\n\n## Lots\n\n\n\n\n\n\n\n          | ", "\n\n Awesome\n\n\n\n\n\n\n\n\n\n\n# Awesome\n\n\n \n  | \u2191\n  | \u2191\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Iterations\n\n# Iterations\n\n\n      |  a  |", "\n\n\n\n# Note\n\n  I am not able to visualise the diagram of the main road.\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n# I18n\n\n\n  \u2191 \u2191 \u2191\n\n\n ", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          | \u2191 | \n          | \u2191 | \n          | \u2191 |   \n          | \u2191 | \n          | \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Representations\n\n\n## Example", "\n\n Example\n\n\n# Testing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n       \n       \n   \n   \n   \n\n\n\n# Barbus\n\n# Hard\n\n\n\n\n\n\n\n\n\n        C#\n\n        # Inference\n\n          |  a  |   \n          | \n\n     ", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n     B  C  B  C  B  C  C  C  C  C  C\n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Hangup\n\n\n \n\n\n\n\n\n\n  # Welcome\n\n \n  | ", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Music\n\n\n   \n\n   \n   \n     \n\n\n\n     \n      C#\n\n\n\n\n\n\n\n\n\n\n# Damn\n\n\n## Reports\n\n\n  A \"Kata Task\"\n\n \n\n \n \n \n  I \u00ednd", "\n\n Kata Task\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Travel\n\n\n\n        | \u2191\n        | \u2191     |\n        | \u2191\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Construction\n\n\n        |  |", "\n\n Aromaticity\n\n\n\n\n\n\n\n\n\n\n\n\n  # Carry\n\n\n  # Carry\n\n\n \n\n\n\n\n\n   \n   \n\n \u2191\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        B \u2191\n\n\n       \n\n\n        \u2191\n\n", "\n\n\n\n\n\n\n# Iron\n\n\n\n\n\n\n\n# James\n\n\n## Representation\n\n\n# Lots of people\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n      X \u2191\n      B \u2191\n\n\n\n\n\n", "\n\n Example\n\n# South Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIter 7Iter 8Iter 9Iter 10Iter 9Iter 11\n\n\n\n\n\n\n\n\n\n\n\n\n# Lindily\n\n\n\n\n\n\n\n\n  # Aim to do it!\n\n\n     \n\n\n\n    a \ufffd", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u2191\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    1Iter 1Iter 1Iter 1Iter 2Iter 3Iter 3Iter 4Iter 5Iter 6Iter 7Iter 8Iter 9Iter 10Iter 11Iter 12Iter 13Iter 12Iter", "\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIter \n\n\n \u2191 \n    \n\n\n\n## Example\n\n\n# Story\n\n\n\n \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191\n\n\n\n\n\n\n\n\n \u2191", "\n\n\n\n\n\n\n\n# Re-animating\n\n\n\n\n\n\n\n\n\n\n      7\n      8\n      9\n     \n\n\n \u2191\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n# Analisy\n\n        | \u2191\n\n        | \u2191\n        | \ufffd\n", "\n\n Example\n\n          |  X  |\n          |  X  |\n          |  X  |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The \"tested\"\n\n\n\n\n\n\n          |  |\n          |  |", "\n\n\n\n\n\n\n\n# Example\n\n# Example\n\nA few people on the main road\n\n      1  | \u2191 | \u2191 |\n      3  | \u2191 |   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        ## Example 2", "\n\n\n\n\n\n\n\n\n\n\n\n\n# Lint\n\n\n\n\n          |  X  | \u2191 | \n          | \u2191 | \n          | \u2191 | \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    C#\n\n    # All the cars on the"], "prompt": "\nQUESTION:\n# Story\n\nWell, here I am stuck in another traffic jam.\n\n\n*Damn all those courteous people!*\n\nCars are trying to enter the main road from side-streets somewhere ahead of me and people keep letting them cut in.\n\nEach time somebody is let in the effect ripples back down the road, so pretty soon I am not moving at all.\n\n(Sigh... late again...)\n\n\n\n## Visually\n\nThe diagram below shows lots of cars all attempting to go North.\n* the `a`,`b`,`c`... cars are on the main road with me (`X`)\n* the `B` cars and `C` cars are merging from side streets\n\n\n\n          |  a  |   \n          |  b  | \u2191  \n  --------+  c  |  \n     BBBBBB  d  |   \n  --------+  e  |  \n          |  f  | \u2191\n          |  g  |   \n  --------+  h  |\n      CCCCC  i  |\n  --------+  j  | \u2191\n          |  k  |\n          |  l  |\n          |  m  |\n          |  X  | \n           \n\n\nThis can be represented as\n\n* `mainRoad` = `\"abcdefghijklmX\"`\n* `sideStreets` = `[\"\",\"\",\"\",\"BBBBBB\",\"\",\"\",\"\",\"\",\"CCCCC\"]`\n\n# Kata Task\n\nAssume every car on the main road will \"give way\" to 1 car entering from each side street.\n\nReturn a string representing the cars (up to and including me) in the order they exit off the top of the diagram.\n\n## Notes\n\n* My car is the only `X`, and I am always on the main road\n* Other cars may be any alpha-numeric character (except `X` of course)\n* There are no \"gaps\" between cars\n* Assume side streets are always on the left (as in the diagram)\n* The `sideStreets` array length may vary but is never more than the length of the main road\n* A pre-loaded `Util.display(mainRoad,sideStreets)` method is provided which may help to visualise the data\n * (Util.Display for C#)\n\n## Example\nHere are the first few iterations of my example, showing that I am hardly moving at all...\n\n\nInitialIter 1Iter 2Iter 3Iter 4Iter 5Iter 6Iter 7\n\n\n\n      a   \n      b\n      c  \nBBBBBBd   \n      e  \n      f\n      g   \n      h\n CCCCCi\n      j\n      k\n      l\n      m\n      X \n\n\n\n      b   \n      c\n      d \n BBBBBB   \n      e  \n      f\n      g   \n      h\n CCCCCi\n      j\n      k\n      l\n      m\n      X\n\n\n\n      c   \n      d\n      B\n BBBBBe\n      f  \n      g\n      h   \n      i\n  CCCCC\n      j\n      k\n      l\n      m\n      X\n\n\n\n       d\n       B\n       e\n   BBBBB\n       f\n       g\n       h\n       i\n   CCCCC\n       j\n       k\n       l\n       m\n       X\n\n\n\n     B\n     e\n     B\n BBBBf\n     g\n     h\n     i\n     C\n CCCCj\n     k\n     l\n     m\n     X\n    \n\n\n\n     e\n     B\n     f\n  BBBB\n     g\n     h\n     i\n     C\n CCCCj\n     k\n     l\n     m\n     X\n\n\n\n\n     B\n     f\n     B\n  BBBg\n     h\n     i\n     C\n     j\n  CCCC\n     k\n     l\n     m\n     X\n\n\n\n\n     f\n     B\n     g\n   BBB\n     h\n     i\n     C\n     j\n  CCCC\n     k\n     l\n     m\n     X\n\n\n\n\n\n:-) \n\nDM\ndef traffic_jam(main_road, side_streets):\n\t\nUse Call-Based format\nANSWER:\n"}}