{"3877": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\nT9 typing predictor\n\nExample:\nT9(words, seq)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\nSuggest:\n\nT9 typing predictor\n\n\n\n\n|  1 ", "\nUse Call-Based format\n\n```\n\nExample:\n```python\nT9(words, seq) returns ['Hello']\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq):\n\n---\n\nT9 typing predictor\n\n\n\n|  1", "\nUse Call-Based format\n\n\n\n\n\nT9:\n\nUse Call-Based format\nExample:\nT9(words, seq)\n\nExample:\n\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9:\n\nT9 typing predictor\n\nExample:\n\n\n\n\n\n|  |  |", "\nUse Call-Based format\n\n```\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n```python\nT9([], '43556') returns ['Hello']\n```\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t```python\nT9(", "\nUse Call-Based format\n\n\n\nUsage:\n```python\nT9(words, seq)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n|  2  |  3  |  5  |\n\n\n```python\n\n\n\n```python\nT9", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nT9 typing predictor\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\nSuggested:\n\nT9(words, seq)\n\nSuggested:\n\n\n|", "\nUse Call-Based format\n\n```\n\nUse Call-Based format\nEXAMPLE:\n\nT9(words, seq)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\n\nT9\n\n\n|  1  |  2  | ", "\nUse Call-Based format\n\n\n\n\n\n\n```python\nT9(words, seq)\n```\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```python\n\n\n\n\n\n\n\n\n\n\n\nT9:\n\n\n\n\n\nT9:\n\nT9\n|  3  |", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9 typing predictor\n\nExample:\n\nT9(words, seq)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    T9(words, seq)\n\n    \"\"\"\n\n       \n\n   \n\n\n\n\n    \"\"\"\n    # if the", "\n\n\n\n\nUse Call-Based format\n\n\nT9(words, seq)\n\nReturns:\nlist\n\nReturns suggestions\n\nExample:\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\n\n\n\n\nT9(words, seq)\n\n\n|  1 ", "\nUse Call-Based format\n\n```\n\n\n\nT9(words, seq)\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\nThe T9 typing predictor works as follows:\n\n\n\n\n\n\n\n\n\npython\nT9(['hello', 'world'], '43556')\n```\n\n\n\n\n\n|  1", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nT9 typing predictor\n\nExample:\n\nT9(['hello', 'world']) returns ['Hello']\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9:\n\n\n-----|-----|-----", "\nUse Call-Based format\n\n\n\n\n\n\nT9(words, seq)\n\n\n\n\n\n\nT9 typing predictor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9:\n\nT9 typing predictor\n\nReturns:\n\n[str]\n\nExample:\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\n\n\n\nT9(words, seq):\n\nUse Call-Based format\n\n\n\nT9:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\nSuggested:\n\nT9(words, seq)\n\nSuggested:\n\n\n| ", "\nUse Call-Based format\n\n\n```python\nT9(words, seq)\n```\n\nUse Call-Based format\n\n\n\n\n```python\n\n```python\n\n```python\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n       python\n\nT9(words, seq)\n\n\n|  2", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nT9(words, seq)\n\nExample:\n```python\nT9([], '43556') returns ['hello']\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    if words is None:\n       ", "\nUse Call-Based format\n\n\n\n\n\n\nT9(words, seq)\n\n\nExample:\n```python\nT9([], '43556') returns ['Hello']\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9:\n\n\npython\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nT9:\n\tUse Call-Based format\n\nExample:\n\tT9(words, seq)\n\nReturn:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\n\n\n\n\nT9(words, seq)\n\n|  1 ", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExamples:\n\nT9(words, seq)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9(words, seq)\n\nSuggest:\n\nT9(words, seq)\n\n\n\n\n|  1", "\n\n\n```python\nT9(words, seq)\n```\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT9:\n\nT9 typing predictor\n\n\n\n\n|  1  |"], "prompt": "\nQUESTION:\nThe T9 typing predictor helps with suggestions for possible word combinations on an old-style numeric keypad phone. Each digit in the keypad (2-9) represents a group of 3-4 letters. To type a letter, press once the key which corresponds to the letter group that contains the required letter. Typing words is done by typing letters of the word in sequence.\n\nThe letter groups and corresponding digits are as follows:\n```\n -----------------\n|  1  |  2  |  3  |\n|     | ABC | DEF |\n|-----|-----|-----|\n|  4  |  5  |  6  |\n| GHI | JKL | MNO |\n|-----|-----|-----|\n|  7  |  8  |  9  |\n| PQRS| TUV | WXYZ|\n -----------------\n```\n\nThe prediction algorithm tries to match the input sequence against a predefined dictionary of words. The combinations which appear in the dictionary are considered valid words and are shown as suggestions.\n\nGiven a list of words as a reference dictionary, and a non-empty string (of digits 2-9) as input, complete the function which returns suggestions based on the string of digits, which are found in the reference dictionary.\n\nFor example:\n```python\nT9(['hello', 'world'], '43556') returns ['hello']\nT9(['good', 'home', 'new'], '4663') returns ['good', 'home']\n```\n\nNote that the dictionary must be case-insensitive (`'hello'` and `'Hello'` are same entries). The list returned must contain the word as it appears in the dictionary (along with the case).\n\nExample:\n```python\nT9(['Hello', 'world'], '43556') returns ['Hello']\n```\n\nIf there is no prediction available from the given dictionary, then return the string containing first letters of the letter groups, which correspond to the input digits.\n\nFor example:\n```python\nT9([], '43556') returns ['gdjjm']\nT9(['gold', 'word'], '4663') returns ['gmmd']\n```\ndef T9(words, seq):\n\t\nUse Call-Based format\nANSWER:\n"}}