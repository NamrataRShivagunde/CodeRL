{"3507": {"code": ["\n\n\n\n\n\n## Note\n\nNote:\n\n\n\n\n\n#\n\n\n## Example\n\n# Alice and Bob\n\n## Example\n\n## Example\n\n## Check\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example\n\n## Example\n\n\n\n\n\n\n\n\n## Output\n##\n\n\n\n## Example\n``", "\n\n\n  delete_nth(order,max_e)\n\n  delete_nth([0,2],1)\n\n \n\n\n\n\n\n\n\n\n\n\n\n \n\n## Task\n\n\n\n \n\n## Task\n\n\n\n\n\n\n\n\n## Task\n\n## Task\n\n\n\n\n\n\n## Task\n\n##", "\n\t\n\n\n\n## Example\n\n\n# Alice and Bob\n## Example\n\n# The return array length\n\n## Example\n\n## Create an output array\n\n## Example\n\n## Create an output array\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n## Example\n\n## Example\n\n\n\n\n\n\n### Example 1", "\n## Example\n\n\n\n\n\n\n\n\n#\n## Output format\n\n## Example\n\n## Alice, Bob, Eiffel\n\n\n\n\n\n\n\n## Example\n\n\n\n## Task\n\n\n\n\n\n\n## Example\n\n## Example\n\n## Task\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example 2:", "\n\n\n\n\n## Example\n\n\n\n\n\n# Use Python\nreturn del_nth([order,max_e])\n#\n\n\n\n\n\n## Task\n\nDelete the number in lst\n#\n\n\n\n\n\n\n## Example\n\n## Task\n\n\n\n\n## Example\n\n## Task\n\n\n\n\n\n\n## Task\n\n## Example", "\n\n\nDelete n-th number of elements in the list lst.\n\n~~~if:nasm\n\n\n\n\n\n\n\n\n\n\n\n#\n\n## Example\n\n## Run-Based format\n\n## Run-Based format\n\n\n\n \n \n\n\n\n\n\n## Run-Based format\n\n\n\n\n\n### Alice and Bob\n", "\n\n\n\n\n\n\n\n\n\t# Run the script\n## Example\n\ndelete_nth([order,max_e,out,szout])\n\n# Example\n\n\n\n\n\n\n## Task\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n## Example\n\n## Task:\n\n##\n\n\n\n\n\n## Task:\n\n", "\n\n\n\n\n\n\n\n\n\n## Example\n\n## Function\n\n## Example\n\nDelete a list of numbers\n\n## Example\n\n## Returns\n\n\n\n\n \n\n## Function\n\n\n\n\n## Example\n\n## Example\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n## Example", "\n\n\n## Example\n\nDelete all numbers in a list\n\n## Example\n\nDelete all numbers in a list\n\n## Example\n\ndelete_nth ([1,2,3,1,2,3])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n## Task\n\n##", "\n## Example\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Call-Based format\n\n## Example\n\n## Delete\n\ndelete_nth([order,max_e,order,max_e])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n## Example\n\n\n\n\n\n\n## Example 2\n", "\n## Example\n\n\n\n\n\n\n\n\n# Little trick\n\n\n## Example\n\n## Call-Based format\n\n## Alice and Bob\n\nAlice and Bob are in the same order!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Alice and Bob\n\n\n\n\n\n## Example\n\n##", "\n\n\n\n\n\n\n\n\n## Example\n\n* Create a new array with the number N\n* Create an array with the number N\n* Create an array with the number N\n* Create an array with the number N\n\n**Example**\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n## Example\n## Reorder\n\n~~~", "\n\n\n\n\n## Input\n\n## Output\n\n\n\n\n\n\n\n## Call-Based format\n\n## Example\n\n## Use Call-Based format\n\n## Example\n\n## List of numbers\n\n##\n\n\n \n \n\n\n \n\n\n\n\n\n\n\n### The number of times\n\n###\n\n\n\n\n## Example\n\n##", "\n\n\n\n\n\n\n## Example\n\nUse Call-Based format\n```python\ndelete_nth([order,max_e])\n\n### Example\n\n## Example\n\nDelete Nth\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Call-Based format\n\n###\n\n\n\n\n\n  if N", "\n## Example\n\n\n\n\n\n\n\n\n\n# Todo:\n# Create a function for creating an array\n#\n\n## Note\n\n\n\n \n\n## Example\n\n##\n\n## Example\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n## Example\n\n## Run-Based\n\n##\n\n\n\n\n\n## Example\n\n", "\n\n\n\n\n\n\n\n\n## Code\n\nUse Call-Based format\n\n## Call-Based format\n\n# Luckel tower\n\n## This is only for the return array\n\n \n\n\n\n\n \n \n \n\n\n \n \n\n\n\n\n\n\n## Example\n\n## Example\n\n\n\n \n\n\n  if", "\n## Example\n\n\n\n\n\n\n\n\n#!python\n#!python\n#!python\n\ndelete_nth([order,max_e,order,max_e,order])\n#!python\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n## AIRS\n\n## AIRS notes\n\n\n\n\n\n\n##", "\n\n\n\n\n\n\n\n\n# Example\n\t\ndelete_nth([1,2,3,1,2,3])\n\n# Example\n\n## Example\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n## Example 1", "\n\n\n\n\n\n\n\n\n## Sense\n\n# Note:\n\n\t\n\n## Function\n\n\n\n\n \n  #\n## N-way\n\n\n\n## Way\n\n## Example\n\n  # Show 20-way\n \n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## This is just an example", "\n## Example\n\n\n\n\n\n\n\n## Example\n\n## Example\n\nDelete numbers\n\n## Example\n\nUse Call-Based format\n\n## Example\n\n## Example\n\n\n\n\n\n\n\n \n\n## Example\n\n\n\n\n \n \n\n\n\n\n\n\n### Example\n\n###\n\n\n\n## Example\n\n## Hint:"], "prompt": "\nQUESTION:\n## Enough is enough!\n\nAlice and Bob were on a holiday. Both of them took many pictures of the places they've been, and now they want to show Charlie their entire collection. However, Charlie doesn't like these sessions, since the motive usually repeats. He isn't fond of seeing the Eiffel tower 40 times. He tells them that he will only sit during the session if they show the same motive at most N times. Luckily, Alice and Bob are able to encode the motive as a number. Can you help them to remove numbers such that their list contains each number only up to N times, without changing the order?\n\n## Task\n\nGiven a list lst and a number N, create a new list that contains each number of lst at most N times without reordering. For example if N = 2, and the input is [1,2,3,1,2,1,2,3], you take [1,2,3,1,2], drop the next [1,2] since this would lead to 1 and 2 being in the result 3 times, and then take 3, which leads to [1,2,3,1,2,3].\n\n~~~if:nasm\n## NASM notes\n\nWrite the output numbers into the `out` parameter, and return its length.\n\nThe input array will contain only integers between 1 and 50 inclusive. Use it to your advantage.\n~~~\n\n~~~if:c\nFor C:\n* Assign the return array length to the pointer parameter `*szout`.\n* Do not mutate the input array.\n~~~\n\n## Example\n```python\n  delete_nth ([1,1,1,1],2) # return [1,1]\n  \n  delete_nth ([20,37,20,21],1) # return [20,37,21]\n```\ndef delete_nth(order,max_e):\n\t\nUse Call-Based format\nANSWER:\n"}}