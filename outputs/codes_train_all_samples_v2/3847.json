{"3847": {"code": ["\n\n\n\n\n\n\n\n\n\n\n\n\nLyd's:\n\t```\n\n\n\n\n\n\n\n\t\n\n\n```\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nAnother kata:\n\n```\n\nFloyd's:\n\n```\n\n\n\n```\n\n\n\n\n\n```", "\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\u03bc=3\n\u03bb=3\n\u03bc=3,\u03bb=3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1, 2, 3, 6, 3, \u03bb\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Kata algorithm is a call-Based algorithm.\n\nThis kata is a call-Based algorithm.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n    \u03bc \u2208 2 \n\n", "\n\n\n\n\nThe cycle detection algorithm is implemented by the function of iteration\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\nThe function is not called kata\n```\n\n```\n\n\n\n\n```\n\n\ufffd", "\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe kata is followed by a cycle detection algorithm:\n\n```\n\n\n\u03bc = \u03bb \u2212 1\n\n```\n\n\n\n```\n\n\n\n\n", "\n\n\n```\n\n\n\t\nCall-Based format\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n\n  \u00b9\n\n\n\n\n\n```\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\u03bc = \u03bc+\u03bb\n\u03bb = \u03bc+\u03bb+\u03bb\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u03bc = \u03bc+\u03bb\n\n\n\n\n\n``", "\n\n\n\n\n\n\n\n\n\n\nThis kata will return a function for a given sequence of iterated function values\n\nExample:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n \u2191\n\n\n```\n\n\n\n```\n\n\u03bc", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n \n\n\n\n\n\n\u03bc \u2212 2, \u03bb \u2212 3,..., \u03bb \u2212 2\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n    \u03bc \ufffd", "\n\n\n\nThe cycle detection algorithm is used to detect the cycle.\n\nExample:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\t\nThis kata is followed by a cycle detection algorithm:\n\n```", "\n\n\n\n\n\nThe function is called with an array of iterated function values.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA kata will be followed by a cycle detection algorithm.\n\n```\n\n\n\n\n\n\n```\n\n```\n\n\ufffd", "\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe cycle detection is used for the kata algorithm.\n\nThis kata uses a deterministic sequence:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n1, 2,", "\n\n\n\n\nCall-Based format:\n\n\n\n\n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \u03bc \u2212 3, \u03bb \u2212 1, \u03bb \u2212 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\u03bc ", "\n\n\n\n\n\n\n\n\n\n\n\n\nThe sequence is the function of the kata.\n\nThe function of the kata.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n\n```\n\n\u03bc ", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\u03bc = 1, \u03bb = 1, \u03bc = 2, \u03bb = 2\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe function is built using the following algorithm:\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\t\n\n\n\n\n\n1 \u2212 \u03bc \u2212 \u03bb \u2212 \u03bc \u03bb \u2212\n\n\n\n\n\n\n\n\n\n\n\n\n\n`\n\n```\n", "\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe function is called by the kata\n```\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n\n```\n\n \u03bc \u2212 1\n\n\n\n```\n", "\n\n\n\n\n\n\nThe call-Based format\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe kata will return a function of `cycle`.\n\n```\n\n\n\n\n```\n\n\u03bc", "\n\n\n\n\n\n\n\n\nThe cycle detection algorithm:\n\n\n\n\n\nThe cycle detection algorithm:\n\n```\n\n\n\n\n\n\n\t\nThe cycle detection algorithm is a function of the loop\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1.5.1\n\n\n\n\t\n```", "\n\n\n\n\n\n\n\nThis kata is a function for finding the cycle of function values.\n\n```\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1, 3, 2, 3, 2, 3, 2, 2, 1, 3, 3\n\n\n\n```\n"], "prompt": "\nQUESTION:\nIn computer science, cycle detection is the algorithmic problem of finding a cycle in a sequence of iterated function values.\n\nFor any function \u0192, and any initial value x0 in S, the sequence of iterated function values\n\n    x0,x1=f(x0), x2=f(x1), ...,xi=f(x{i-1}),...\n\nmay eventually use the same value twice under some assumptions: S finite, f periodic ... etc. So there will be some `i \u2260 j` such that `xi = xj`. Once this happens, the sequence must continue by repeating the cycle of values from `xi to xj\u22121`. Cycle detection is the problem of finding `i` and `j`, given `\u0192` and `x0`. Let `\u03bc` be the smallest index such that the value associated will reappears and `\u03bb` the smallest value such that `x\u03bc = x\u03bb+\u03bc, \u03bb` is the loop length.\n\nExample:\n\nConsider the sequence: \n```\n2, 0, 6, 3, 1, 6, 3, 1, 6, 3, 1, ....\n```\n\nThe cycle in this value sequence is 6, 3, 1.\n\u03bc is 2 (first 6)\n\u03bb is 3 (length of the sequence or difference between position of consecutive 6).\n\nThe goal of this kata is to build a function that will return `[\u03bc,\u03bb]` when given a short sequence. Simple loops will be sufficient. The sequence will be given in the form of an array. All array will be valid sequence associated with deterministic function. It means that the sequence will repeat itself when a value is reached a second time. (So you treat two cases: non repeating [1,2,3,4] and repeating [1,2,1,2], no hybrid cases like [1,2,1,4]). If there is no repetition you should return []. \n\n\nThis kata is followed by two other cycle detection algorithms: \nLoyd's: http://www.codewars.com/kata/cycle-detection-floyds-tortoise-and-the-hare\nBret's: http://www.codewars.com/kata/cycle-detection-brents-tortoise-and-hare\ndef cycle(sequence):\n\t\nUse Call-Based format\nANSWER:\n"}}