{"3408": {"code": ["\n\n\n\n## Add check digit\n\nadd_check_digit(number):\n\n\n\n\n\n\n## Add check digit\n\nadd_check_digit(number)\n\n## Check digit method\n\nCheck digit\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n## Add check digit\n\nremainder\n\n\n\n\n\n## Logic\n\n", "\n## Add check digit\n\n\n\n\n\n\n\n\n\n## Building function\n\n## Building function\n\n## Building function\n\n## Building method\n\n## Building function\n\nreturns number\n\n## Building function\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Output\n\n\n\n\n## Output\n\n\n##", "\n## Add check digit\n\n\n\n\n\n\n\n\n\n## Functional\n\n#\n\n## Add check digit\n\n#\n\n\n\npython\n\n## Check Digits\n\n\n\n\n\n## Add check digit\n\nCheck digit:\n\n\n\n\n## Logic\n\n## Logic\n\n###\n\n\n## The method\n\n\n\n\n## Example\n\n", "\n## Add check digit\n\n\n\n\n## Add check digit\n\nThe input number is a string containing a single digit\n\ninput\n\n\n\n\n\n## Add check digit\n\npython\n\n\n\n\t\t\n## This method\n\n##\n\n\n\n\n\n\n\n## Recalculation method\n\n\n\n\n\n\n\n## Recalculation method\n\n##\n\n##", "\n## Add check digit\n\n\n\n\n\n\n\n\n\n## Adding check digit\n\n \n\n## Call-Based format\n\n \n\n\npython\n\n\n## Add Check digit\n\n \n\n\n## Add check digit\n\n \n\t\n\n## Add check digit\n\n\n\n\n\n\n\n\n\n## Add check digit\n\n \n\n## Check", "\n## Add Check Digits\n\n\n\n\n\n\n\n\n\n## Adding check digit\n\nadd_check_digit(number)\n\n#\n\n## Methods\n\n## Add check digit\n\n\n\n\n\n## Methods\n\n##\n\n\n\n\n\n\n\n\n## Formulas\n\n## Formulas\n\n\n\n\n\n\n\n## Methods\n\n\n##", "\n## Functional format\n\n# Add check digit\n\n\n\n\n\n\n\n\n## Functions\n\n## Add check digit\n\n# Add check digit\n\nremainder = 1\n\n#\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Compatibility method\n\n### Check Digits\n\n\n\n\n\n\n## Extraction", "\n\t\n\n\n\n## Add Check Digits\n\nThis algorithm is implemented by adding a check digit to the input number.\n\n\n\n\n\n\n\n## Extra information\n\n\n\n \n\n## Add Check Digits\n\n\n\n\n\n\n\n\n\n## Check Digits\n\nCheck digit\n\n\n\n\n\n\n\n## Check Digits\n\n### Number of", "\n## Add Check Digits\n\n\n\n\n\n\n\n\n\n\n## Add check digit\n\nremainder   :  7    3    6    2\n\ncheck digit :  7\n\n\n\n\n\n\n## Add check digit\n\n\n\n\n\n\n\n\n\n\n\n## Add check digit\n\n*\n\n\n\n## Add check digit\n\n\n## Re", "\n\t\n\n\n\n## Methods\n\n## Add check digit\n\n## Number\n\nnumber = number + 1\n\n## Remainder\n\n## Product code\n\n##\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n## Check Digits\n\nSum of the products\n\n\n\n\n\n\n```", "\n## A simple method\n\n\n\n\n\n\n\n\n## Check Digits\n\nThe check digit is added to the input number.\n\nremainder = 3*6\ncheck digit = 1\n\n## The function\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Functional\n\n## Functions\n\n\n\n\n\n\n\n## Functional\n\n", "\n## Example format\n\nA simple approach is implemented by adding a check digit to a number.\n\n\n\n\n\n\n\n\n\n\n\n## Add Check Digits\n\n## Add check digit\n\n\n\n\n\n\n## Add check digit\n\n\n\n\n\n\n\n\n\n\n## Update\n\n## Check digit\n\n\n\n\n\n\n\n## Return\n\n\n", "\n## Add check digit\n\n\n\n\n\n\n\n## Methods\n\n## Recalculate\n\nremainder = 7 mod 11 = 1\ncheck digit   = 7 mod 11 = 2\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Additional method\n\n\n## Check Digits\n\n\n\n\n\n## Substitute\n\n", "\n\t\n\n\n\n# Check digit method\n\n## Check Digits\n\nCheck digit\n\nCheck digit\n\n\n\n\n\n\n\n## Adding Check Digits\n\n\n\n\nremainder = 2 + 3 + 6 + 7\n\n\n#\n\n\n\n\n\n\n\n\n\n\n## Remainder\n\nremainder = 7\n\n\n\n\n\n## Example 1", "\n## Add Check Digits\n\n\n\n\n\n\n\n\n## Data Format\n\n## Data Format\n\nproduct sum = 2*3 + 3*6 + 5*5 + 6*3 + 7*6 = 7\nremainder   = 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##\n\n\n## End\n\n\n\n\n## Check Digits", "\n## Add Check Digits\n\n\n\n\n\n\n\n\n## Calculation method\n\nThe input number is a string\n\ninput:  4\n\nremainder    : 7\n\ncheck digit   : 6\n\nremainder   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n## Recalculation method\n\n\n\n\n\n##", "\n## Example\n\n## Check Digits\n\nadd_check_digit(number)\n\n\n\n\n\n\n\n\n## Calculation method\n\nThis method is implemented for the following examples:\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Recalculation method\n\nremainder = 2*3\n\n\n\n\n\n\n## Recalculation", "\n\n\n\n\n## Add Check Digits\n\nadd_check_digit(number)\n\n## Recalculate check digit\n\nremainder = 7 + 10 = 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Additional methods\n\n\n\n\n\n\n\n\n\n\n## Add Check Digits\n\n\n\n\n\n\n## Add Check Digits\n\n\n", "\n## Example\n\n## Calculation method\n\n# Calculation method\n\n\n\n\n# Add check digit\n\n# Check digit\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Add check digit\n\n\n\n\n\n\n\n\n\n\n\n\n## Calculation method\n\nAdds check digit\n\n\n\n\n\n\n\n\n\n## For method\n\n\n", "\n## General\n\nThis method will be used to calculate the product code\n\n\n\n\n\n\n\n\n## Add check digit\n\nNumber is a call-based format\n\ninput: \"036532\"\n\nremainder:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Check Digits\n\n\n\n\n\n## Functions\n\n##\n"], "prompt": "\nQUESTION:\n## Check Digits\n\nSome numbers are more important to get right during data entry than others: a common example is product codes.\n\nTo reduce the possibility of mistakes, product codes can be crafted in such a way that simple errors are detected. This is done by calculating a single-digit value based on the product number, and then appending that digit to the product number to arrive at the product code.\n\nWhen the product code is checked, the check digit value is stripped off and recalculated. If the supplied value does not match the recalculated value, the product code is rejected.\n\nA simple scheme for generating self-check digits, described here, is called Modulus 11 Self-Check.\n\n## Calculation method\n\nEach digit in the product number is assigned a multiplication factor. The factors are assigned ***from right to left***, starting at `2` and counting up. For numbers longer than six digits, the factors restart at `2` after `7` is reached. The product of each digit and its factor is calculated, and the products summed. For example:\n\n```python\ndigit     :  1    6    7    7    0    3    6    2    5\nfactor    :  4    3    2    7    6    5    4    3    2\n           ---  ---  ---  ---  ---  ---  ---  ---  ---\n             4 + 18 + 14 + 49 +  0 + 15 + 24 +  6 + 10 = 140\n```\n\nThen the sum of the products is divided by the prime number `11`. The remainder is inspected, and:\n\n* if the remainder is `0`, the check digit is also `0`\n* if the remainder is `1`, the check digit is replaced by an uppercase `X`\n* for all others, the remainder is subtracted from `11`\n\nThe result is the **check digit**.\n\n## Your task\n\nYour task is to implement this algorithm and return the input number with the correct check digit appended.\n\n## Examples\n\n```python\ninput: \"036532\"\n\nproduct sum = 2*2 + 3*3 + 5*4 + 6*5 + 3*6 + 0*7 = 81\nremainder   = 81 mod 11 = 4\ncheck digit = 11 - 4 = 7\n\noutput: \"0365327\"\n```\ndef add_check_digit(number):\n\t\nUse Call-Based format\nANSWER:\n"}}