{"3646": {"code": ["\n\n\n\n\n----------------------------\n\n\n\n\n**Percolation**\n\nA simple example with the `kata Shuffle It Up!!\n\nLet's see the sum of the permutations for the same element:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n``` \narr = [1,", "\n\n\n \n\n```\n\n\n\n\n\n\n\n1:\n\n \n\n```\n\n\n\n\n\n```\n\n1:\n\n\n\n\n\n\n \n\n\n\n```\n\n      (2, 4, 3)\n``` \n\n \n\n```\n\n\n\n\n\n:\n\n```\nlength of the array", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n10\n\n\n\narr = [1, 2, 3, 4]\n\n```\n\n\n\n\n```\n\n\n\n      (1, 2, 3)\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n```\n\n```\n\nLet", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe amount of fixed points are equal to the array length, the number of unique permutations are `8`\n\n\n\n\n\narr = [1, 2, 3]\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1, 2, 3, 4\n\n\n is the same", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narray length\n      (arr)\n```\n\n\n\n\n---\n\n\n\n**1**\n\n\n      (1, 2, 3)\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n```\n\n```\n\nTo see", "\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\narr = [1, 2, 3, 4]\n```\n\n\n\n\n\n\n``` \n\n\n\n```\n\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n:", "\n\n\n2\n1 ** 3 ** 2 ** 2 ** 1 **\n2 ** 3 **\n\n\n\n\n\n\n\n\n\n\n\n```\ntotal amount of permutations\n\n```\n\n\n\n```\n\n\n\n \n \n\n\n\n\n \n\n\n\n\n```\n\n\n      (0, 1, 2, 3)\n``` \n\n:", "\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 by 1 by 1 by 1\n\n2 by 1 by 1\n\n2 by 1 by 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n\n```\n", "\n\n\n\n\n\n\n\n\n2 at index 3\n```\n\n**1**\n\nThe total amount of permutations with coincidences at index 4\n```\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n```\n\n\n```", "\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n1.\n1.\n\n\n\npermutations\n```\n0, 1, 2, 3, 4\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n```\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\nlength of the array\n\nlength of the array\n\n\n- amount of fixed points\n\nlength of the array\n\nlength of the array\n\nlength of the array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\narr = [1, 2", "\n\n\n\n\n\n\n\n\n\n1, 2, 3, 4, 5, 6\n\n9, 7, 8\n\n1, 6\n1, 7\n\n5, 6\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n = [1, 2, 3]\n\n\n```\n\n\nFor a", "\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n\n\n\n\n\n\narr = [1, 2, 3, 4]\n```\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n```\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n    **test:**\n\n      1\n      (1, 1, 2, 3)\n``` \n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n```\n\n```\n\n```\n\n``", "\n\n\n\n\n\n\n\n\n\n\n\nThe permutation functions\n\n```\n\ncount of permutations\n\n```\n\n\n\n1)\n1\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n\n```\n\n```\n\n\n```\n\n```\n\n```\n ", "\n\n\n\n\n\n\n\n- All we can do is have an array of 4 elements.\n\nAll we can do with 4 elements.\n\nSo,\n\n\n\n\n\n\n\n1, 2, 3, 4, 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\none per element at index 0\n", "\n\n\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 8\n\n\n\n\n\n\n\n\n\n\n\n\n1, 2, 3, 4, 5, 7, 6, 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n``", "\n\n\n\n\n1:\n\n2:\n3:\n\n2:\n\n\n\n\n\n\n\n1:\n\n1:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1:\n\n3:\n\n1\n      (3, 2, 4)\n```\n\n:", "\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n\nlength of the array,\n\namount of fixed points,\n\namount of coincidence,\n\namount of coincidence\n```\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n      (1, 2, 3)\n``` \n,", "\n\n\n\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\nmaximal amount of permutations of the array\nmaximal amount of permutations of the array\nmaximal amount of permutations of the array\nmaximal amount of permutations of the original array\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, the amount of fixed points,"], "prompt": "\nQUESTION:\nWe have an integer array with unique elements and we want to do the permutations that have an element fixed, in other words, these permutations should have a certain element at the same position than the original.\n\nThese permutations will be called: **permutations with one fixed point**.\n\nLet's see an example with an array of four elements and we want the permutations that have a coincidence **only at  index 0**, so these permutations are (the permutations between parenthesis):\n``` \narr = [1, 2, 3, 4]\n      (1, 3, 4, 2)\n      (1, 4, 2, 3)\nTwo permutations matching with arr only at index 0\n``` \n\nLet's see the permutations of the same array with only one coincidence at index **1**:\n``` \narr = [1, 2, 3, 4]\n      (3, 2, 4, 1)\n      (4, 2, 1, 3)\nTwo permutations matching with arr only at index 1\n```\nOnce again, let's see the permutations of the same array with only one coincidence at index **2**:\n``` \narr = [1, 2, 3, 4]\n      (2, 4, 3, 1)\n      (4, 1, 3, 2)\nTwo permutations matching with arr only at index 2\n```\nFinally, let's see the permutations of the same array with only one coincidence at index **3**:\n``` \narr = [1, 2, 3, 4]\n      (2, 3, 1, 4)\n      (3, 1, 2, 4)\nTwo permutations matching with arr only at index 3\n```\nFor this array given above (arr) :\n\n- We conclude that we have 8 permutations with one fixed point (two at each index of arr).\n\n- We may do the same development for our array, `arr`, with two fixed points and we will get `6` permutations.\n\n- There are no permutations with coincidences only at three indexes.\n\n- It's good to know that the amount of permutations with no coincidences at all are `9`. See the kata Shuffle It Up!!\n\nIn general:\n\n- When the amount of fixed points is equal to the array length, there is only one permutation, the original array.\n\n- When the amount of fixed points surpasses the length of the array, obvously, there are no permutations at all.\n\nCreate a function that receives the length of the array and the number of fixed points and may output the total amount of permutations for these constraints.\n\nFeatures of the random tests:\n```\nlength of the array = l\nnumber of fixed points = k\n10 \u2264 k \u2264 l \u2264 9000\n```\nSee the example tests!\nEnjoy it!!\n\nRuby versin will be released soon.\n\n#Note: This kata was published previously but in a version not well optimized.\ndef fixed_points_perms(n,k):\n\t\nUse Call-Based format\nANSWER:\n"}}