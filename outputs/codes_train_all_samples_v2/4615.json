{"4615": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nOur AAA company is in need for a real world problem\n\n**Note:**\n\n\n\n\n\n\n\nOur AAA company is in need with call-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# [0,1,2,3,4,", "\n\n\nlogistic_map(width,height,xs,ys)\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(3,3,[0,0,1],[0])\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(width,height,xs,ys)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(width,height,xs,ys)\n\n\n\n\n\n\n\n\n```python\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n```python\nlogistic_map(3,3,[0,1,2,3])```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(2,2,[])\n\n\n\n\n\t#", "\n\n\nlogistic_map(width,height,xs,ys)\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOur AAA company is in need\n\n\n\n\n\n\n```python\nlogistic_", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nlogistic_map(3,3,[],[])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nlogistic_map(3,3,[],[])```\n\n\n\n\n", "\n\n\nlogistic_map(width,height,xs,ys)\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(3,2,[0],[])\n\n\n\n", "\n\n\nlogistic_map(width,height,xs,ys)\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nlogistic_map(2,2,[0,0],[0])\n\n\nOur", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nlogistic_map(width,height,xs,ys)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(width,height)\n\n\n\n\n\n\n\n```", "\n\n\n\n\nUse Call-Based format\n\n\n\nlogistic_map(3,3,[],[])\n\nReturns:\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(width,height,[0,0])\n\n\n\n\n\n\n\n```python\nlogistic_map", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nOur AAA company is in need to be able to use call-based formats\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nlogistic_map(3,3,[],[])\n\n\n\n\n```python\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nOur AAA company is in need to be in need\n\nReturns:\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n```python\nlogistic_map(2,2,[],[])\n\n\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\npython\nlogistic_map(3,3,[0,0,1,2,3])\n\n**Note:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(2,2)\n\n\n\n\n\n\n\n\n```python\nlogistic_map(", "\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n```python\nlogistic_map(3,3,[],[])\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAA company is in need\n\n\n\n\n\n\n**Note:**\nOur", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAA company is in need\n\n`python -m fizzbuzz_map.py`\n\n\n\n\n\n\n\n\n\n```python\n", "\n\n\nlogistic_map(width,height,xs,ys,xs,ys,xs,ys)\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Note:**\n\nOur AAA company is\n\n\n\n#", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nlogistic_map(width,height,xs,ys,xs,ys,ys)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlogistic_map(3,3,[0,0],[0])\n\n\n\n\n\n\n\n\n```python", "\n\nUse Call-Based format\n\n\n\n\n\npython\nlogistic_map(2,2,[],[])\n\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nlogistic_map(width,height,xs,ys,[0])\n```\n\n\n\n\n\n#", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nOur AAA company is in need with call-based format\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nfor x in xs:\n", "\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOur AAA company is in need with call-based format\n\n\n\n\nOur AAA company is in need with call-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nlogistic_map(3,"], "prompt": "\nQUESTION:\nOur AAA company is in need of some software to help with logistics: you will be given the width and height of a map, a list of x coordinates and a list of y coordinates of the supply points, starting to count from the top left corner of the map as 0.\n\nYour goal is to return a two dimensional array/list with every item having the value of the distance of the square itself from the closest supply point expressed as a simple integer.\n\nQuick examples:\n\n```python\nlogistic_map(3,3,[0],[0])\n#returns\n#[[0,1,2],\n# [1,2,3],\n# [2,3,4]]\nlogistic_map(5,2,[0,4],[0,0])\n#returns\n#[[0,1,2,1,0],\n# [1,2,3,2,1]]\n```\n\nRemember that our company is operating with trucks, not drones, so you can simply use Manhattan distance. If supply points are present, they are going to be within the boundaries of the map; if no supply point is present on the map, just return `None`/`nil`/`null` in every cell.\n\n```python\nlogistic_map(2,2,[],[])\n#returns\n#[[None,None],\n# [None,None]]\n```\n\n**Note:** this one is taken (and a bit complicated) from a problem a real world AAA company [whose name I won't tell here] used in their interview. It was done by a friend of mine. It is nothing that difficult and I assume it is their own version of the FizzBuzz problem, but consider candidates were given about 30 mins to solve it.\ndef logistic_map(width,height,xs,ys):\n\t\nUse Call-Based format\nANSWER:\n"}}