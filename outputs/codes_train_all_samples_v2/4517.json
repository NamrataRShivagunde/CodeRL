{"4517": {"code": ["\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nComplete the function that takes a string as an input\nUse Call-Based format\n\n\n\n\n\n\n\"hello\", \" \", \"o\", \"d\", \" \", \"r\", \"o\", \"r\", \"o\", \"o\"]\n\n\n\n\n\n\n\nComplete the function that", "\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n''\n# Example\ndef odd_one_out(s):\n\t\n\n\nUse Call-Based format\n\n\n\n\"oooooo\"   -->  []\n\"ooo\"\n\n\n\n\n\n\n\n\n\n\n\nComplete the function", "\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n:\n:\nComplete the function that takes a string as an input\nUse Call-Based format\n\n\n# Example\nfunction(s):\n\t\nUse Call-Based format\n:\n\n\n\n\"\n\n\n\n# Examples\n\n\n##", "\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n## Example\ndef odd_one_out(s):\n\t\nUse Call-Based format  [\"\", \" \", \" \", \" \", \" \"],\n\n\n## Example\n\n\n\"\n\n\n## Examples\n\n\nComplete", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n:\n\nComplete the function that takes a string as input\nUse Call-Based format\n\n\n\n[\"\", \" \"]\n\n```\ndef odd_one_in(s):\n\nUse Call-Based format\n\n\n\n\n\n\n\n```\ndef call_based", "\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n:\n\n\n\n:\nComplete the function that takes a string as input\n:\n\n\n\n\n\n\n\n## Examples\n\ndef odd_one_out(s):\n\nUse Call-Based format\n\n\n\n\n## Examples\n\n\"Hello World\"\n\n\n\n\n\n\n\n##", "\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n:\n\n\n\n\t\n:\n\n:\n\n\n\n\n## Example\ndef odd_one_out(s):\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n## Examples\n\n## Examples\n## Example\n\n## Examples\n\n\n\nComplete", "\n:\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\nComplete the function that takes a string as an input and returns a list of all the unpaired characters.\n\n**Notes:**\n*\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n```\ndef call_based(s):\n\t\n\n##", "\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\nComplete the function that takes a string as input\nUse Call-Based format\n\n\n\n\n\"OoOoOoOoOoOoO\"\n\n\n\n## Example\n\n\n\n## Examples\n\n\n\n##", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n:\n\n\n## Example\n\n## Example\n\n# Example\n\n\n\n\n\n\n\"woo\", \"o\", \"w\", \"o\", \"o\", \"o\", \"r\", \"w\", \"o\"]\n\n\n\n\"\n\n\n\n\n## Example", "\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n:\n\n\nComplete the function that takes a string as an input\n\n\nUse Call-Based format\n\n\n\n\"oooooooo\"        -->  [\"o\"]\n\"ooooooooooo\"     -->  []\n\n\n\n\n\n\n\n\n\n##", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t:\n\n\nComplete the function that takes a string as an input\n\n\n\n## Example\n\ndef odd_one_out(s):\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\nComplete the function that takes a string as an input,", "\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\nComplete the function that takes a string as input, and return a list of all the unpaired characters\n\n\n\n\n\n\"a\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\"]\n\n\n\n\n\n\"\"\"\n", "\n:\n\n\n:\n\n\n\n\n\n\n\t\n:\n\n\n\n\n:\n:\nComplete the function that takes a string as an input\n\nUse Call-Based format\n\n\n\n\n\n\"hooo\"      -->  []\n\"w\"          -->  []\n\"H\"\n\n\n\n## Example\n\n\n\n\n## Examples\n\n\n", "\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n:\n:\nComplete the function that takes a string as an input\n\n\n\n\n\n\"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\",\n\n\n\n\n\n\n\n\n\n\n## Examples", "\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\t\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\"hoooo\", \"o\", \"r\", \"d\", \"e\", \" \"\n\"\n\n## Examples\n\n\n\n\n\n\n## Example\n\n\n\n", "\n:\n\n\n:\n\n\n\n\n\n:\n\n\n\n:\n:\nComplete the function that takes a string as an input\nUse Call-Based format\n\n\n\n\n\"foo\", \"f\", \"g\", \"o\", \"\", \"h\", \"o\", \"w\", \"o\", \"r\", \"o\"]\n\n\n\n\n\n\n\n\n## Examples", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n```\ndef odd_one_out(s):\n\t\nUse Call-Based format\n:\n\n\"f\"      -->  [\"f\"]\n\"x\"\n\n\n\n\n\n\n\n\n## Examples\n\n\nComplete the", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nComplete the function that takes a string as an input\n\n\nUse Call-Based format\n\n\n\"y\", \"z\", \"Y\", \"z\", \"o\", \"o\", \"o\", \"o\", \"o\"]\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n:\n:\n\nA function that takes a string as an input\nUse Call-Based format[]\n\n## Examples\n\ndef odd_one_out(s):\n\t\n\n\n:\n\n\n\n\n\"Hello World\"\n\n\n\n\n\n### Example\n\n###"], "prompt": "\nQUESTION:\nComplete the function that takes a string as an input, and return a list of all the unpaired characters (i.e. they show up an odd number of times in the string), in the order they were encountered as an array. \n\nIn case of multiple appearances to choose from, take the last occurence of the unpaired character.\n\n**Notes:**\n* A wide range of characters is used, and some of them may not render properly in your browser.\n* Your solution should be linear in terms of string length to pass the last test.\n\n\n## Examples\n\n```\n\"Hello World\"   -->  [\"H\", \"e\", \" \", \"W\", \"r\", \"l\", \"d\"]\n\"Codewars\"      -->  [\"C\", \"o\", \"d\", \"e\", \"w\", \"a\", \"r\", \"s\"]\n\"woowee\"        -->  []\n\"wwoooowweeee\"  -->  []\n\"racecar\"       -->  [\"e\"]\n\"Mamma\"         -->  [\"M\"]\n\"Mama\"          -->  [\"M\", \"m\"]\n```\ndef odd_one_out(s):\n\t\nUse Call-Based format\nANSWER:\n"}}