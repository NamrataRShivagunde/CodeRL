{"4045": {"code": ["\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nn: string\n\n\nUse Call-Based format\n\nnumber([\"a\", \"b\", \"c\"]) # => [\"1: string\", \"2: string\"]\n\n\n\n\n\n\n\n\n\n**Example:", "\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\nUse Function-Based format\n\n\nUse Call-Based format\n\n\nnumber([1: string]) # => [1: string]\nnumber([2: string]) # => [2: string]\n\n\n\n\n\n\n\n**Example", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nnumber([\"1: string\", \"2: string\", \"3: string\", \"4: string\", \"5: string\", \"6: string\"]) # => 1\n\n\n\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\n\nUse Function-Based format\n\n\nUse Call-Based format\n\n\nnumber([\"a\", \"b\", \"c\"]) # => [\"a\", \"b\", \"c\"]\n\n\n\n\n\n\n\n\n\t\n\n\nYou", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\nUse function or line numbering format\n\nUse Call-Based format\n\nnumber([\"a\", \"b\", \"c\", \"d\"] # => [\"a\", \"b\", \"c\", \"d\"]\n\n\n\n\n\n\n\n\t\n\nYou can", "\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Function-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nnumber([1: string]) # => 1\n\n\n\n\n\n\n\n\n\nYour team is", "\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nnumber(1): string # => \"1: string\"\nnumber(2: string # => \"2: string\") # => \"3: string\"\n\n\n\n\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nnumber([1: string]) # => 1\nnumber([1: string: string: string: string: string: string: string: string: string]) # => string\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nnumber(n: string) # => \"n: string\"\nnumber(n: string) # => \"n: number\"\n\n\n\n\n\n\n\n\n\n**Example:**\n", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\t\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n1: line numbering starts at 1\n2: string numbering starts at 2\n3: string numbering starts at 3\n\n\n\n # => [n: string]\n\n\n\n\n\n\n**Example:**\n", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nnumber([1: string]) # => [1: string]\nnumber([2: string]) # => [2: string]\n\n\n\n\n\n\n\n\nYour", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nnumber(n): string # => [1: string]\nnumber(string) # => [n: string]\n\n\n\n\n\n\n\n\n    Use a function which takes a list", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nnumber([1, \"string\"] # => 1\nnumber([1: string]) # => 3\n\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\nWrite a function which returns each line prepended by the correct numbering.\n\n\n\n# => [n: string]\n\nUse Call-Based format\n\nYour team has written a fancy new text editor.\n\n\n\n\n**Example:**\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Wrapper format\n\n\n\n\t\n\n\n\n\n\nWrite a function which takes a list of strings.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# TODO:\n\n\n\n`python -m\nnumber([\"a\", \"b\", \"c\"]):", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nnumber([1: \"a\", \"2: \"], \"n: \"): \"a\", \"n: \"): \"a\"\n\n\n\n\n\n\n\n\n\n\n**This example is a fancy", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ndef\t\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nnumber([\"1: string\"]) # => \"1: string\"\nnumber([\"2: string\"] # => \"2: string\"\n\n\n\n\n\n\n\n\n`#```", "\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nnumber([\"1: string\", \"2: string\", \"3: string\"] # => 1: string\n\n\n\n\n\n\n\n\n\n`#```", "\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nnumber(\"1: string\") # => \"1: string\"\nnumber(\"2: string\" # => \"2: string\") # => string\n\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nnumber(n: string) # => [n: string]\nnumber(n: string) # => n: string\n\n\n\n\n\n\n\n\nYour"], "prompt": "\nQUESTION:\nYour team is writing a fancy new text editor and you've been tasked with implementing the line numbering.\n\nWrite a function which takes a list of strings and returns each line prepended by the correct number.\n\nThe numbering starts at 1. The format is `n: string`. Notice the colon and space in between.\n\n**Examples:**\n\n```python\nnumber([]) # => []\nnumber([\"a\", \"b\", \"c\"]) # => [\"1: a\", \"2: b\", \"3: c\"]\n```\ndef number(lines):\n\t\nUse Call-Based format\nANSWER:\n"}}