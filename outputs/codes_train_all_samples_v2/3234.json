{"3234": {"code": ["\n```python \nselectSubarray()```\n\n\n\n\n\n\n\n```python \nselectSubarray()```\n\nThis function will be used in Javascript.\n\n\n\n\n\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\npython\n\nselectSubarray()\n\n```python \n\n\n\n\n```python", "\n\n\nselectSubarray()\n\nExamples:\n\n```python \nselectSubarray()```\n\nSelecting an array with a subarray with a selected amount of elements. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\n\n", "```\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray(arr) == [arr]\n\n\n\n`\n\n\n\n\n\n\n```python \nselectSubarray()```\n\nThis function returns the selected subarray\n```\n\n\n\n\n\n\npython \nselectSubarray(arr, [1, 2, -8", "```\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\npython \nselectSubarray(arr)\n```\n\n\nselectSubarray(arr)\n```\n\n\n\n\n\n\npython \nselectSubarray()\n\n\n\n\n```", "```\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\n\n\n```\n\n\n```\n\npython \nselectSubarray()\n```\n\nselect_subarray()\n```\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\n[1, 2, -8", "```\n\n\nselectSubarray()\n\n\n\n\n\n\nselectSubarray()\n\n\nselectSubarray()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\npython \nselectSubarray()\n```\n\npython \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n``", "```\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\n```\n\n\n\n\n```\n\n```\n\npython \nselectSubarray(arr, [0])\n```\n\nThe function will return the selected array.\n```\n\n\n\n\n\n\n\n\n\n```python ", "```\n\n\n\n\n\n\nselectSubarray(arr)\n\n\"\"\"\n\n\n\n\n\n\n\n[1, 23, 2, -8, 5, 23]\n\n\n`\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n\n```python\n\nselectSubarray()\n\n\n\n\n\n\n```python \nselectSub", "```\n\n\n\n\n\n\n\n\n[1, 2, -8, -8]\n\n```python \nselectSubarray()\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n\n```python \nselectSubarray()```\n\n\n\n\n\n\n\n```python", "\n\n\n\n\n\n\nselectSubarray()\n\nThe following two cases are possible:\n\n```python \nselectSubarray()```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\nThe function to calculate the selectSubarray function:\n\n\n\n[1, 2,", "```\n\n```\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray(arr, q)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nselectSubarray()\n\n```python \nselectSubarray()```\n\nThe following two examples:\n\n```python \n\n\n\n\n\n", "```\n\npython \nselectSubarray()\n\n\n\n\n\n\nselectSubarray()\n\nThe function is called for each element.\n\nThe function is called for each element.\n\nExample:\n\n```python \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, 2, -8,", "\n\n\n\n\npython \nselectSubarray()\n```\n\n\n\n\n\n\n\n\n\n\n\nselectSubarray()\n```\n\n\n\n\n\n\n```\n\n\nselectSubarray()\n```\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```\n\n\n\n[1, 2, -", "```\n\n\n\n\n\n\nselectSubarray()\n\nBUT:\n\nA simple example:\n\n```python \nselectSubarray()```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\npython \nselectSubarray()\n```\n\n\n\n\n```python \nselect", "\n```python \nselectSubarray()```\n\n\n\n\n\n\nselectSubarray()\n\n\n\n\n\n\n\n\n\n\n\n```python \nselectSubarray(arr)```\n\n\n\n\n\n\n\n\npython\nselectSubarray()\n\n```python \nselectSubarray()```\n\n\n\n\n\n```python", "```\n\n\n\n\npython \nselectSubarray()\n\n```python\n\nselectSubarray()```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n```python \nselectSubarray()```\n\n```python \nselectSubarray()```\n\n```", "```\n\n\n\n\npython \nselect_subarray()\n```\n\nselectSubarray()\n\nSelecting subarray from left to right:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n\n```python \nselectSubarray()```\n\n\n\n[1, 2,", "```\n\n\n\n\n\n\nselect_subarray()\n\nThe function will take out all the array elements, they will be selected at the right place.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n\n```python \nselectSubarray()\n\n\n\n\n\n\n```python \nselect", "```\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray(arr, 0) == [1, 0]\n```python \nselectSubarray(arr, 0) == [1, 0]```\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray()\n\n\n\n\n``n``", "```\n\n\n\n\n\n\n\n\n\n\npython \nselectSubarray(arr, -8, -8)\n```\n\n\n\n```\n\n\n\n\n\n\n```python \nselectSubarray()```\n\nThe following function would be used:\n\n```python \n\n\n\n\n\n\n\n\n\n\n\n\n```"], "prompt": "\nQUESTION:\nYou will be given a certain array of length ```n```, such that ```n > 4```, having positive and negative integers but there will be no zeroes and all the elements will occur once in it.\n\nWe may obtain an amount of ```n``` sub-arrays of length ```n - 1```, removing one element at a time (from left to right). \n\nFor each subarray, let's calculate the product and sum of its elements with the corresponding absolute value of the quotient, ```q = SubProduct/SubSum``` (if it is possible, SubSum cannot be 0). \nThen we select the array with the lowest value of ```|q|```(absolute value)\n\ne.g.: we have the array, ```arr = [1, 23, 2, -8, 5]```\n```\nSub Arrays            SubSum    SubProduct         |q|\n[23, 2, -8, 5]         22         -1840         83.636363\n[1, 2, -8, 5]           0           -80          No value\n[1, 23, -8, 5]         21          -920         43.809524\n[1, 23, 2, 5]          31           230          7.419355  <--- selected array\n[1, 23, 2, -8]         18           368         20.444444\n```\nLet's compare the given array with the selected subarray:\n```\n[1, 23, 2, -8, 5]\n[1, 23, 2,     5]\n```\nThe difference between them is at the index ```3``` for the given array, with element ```-8```, so we put both things for a result ```[3, -8]```.\n\nThat means that to obtain the selected subarray we have to take out the value -8 at index 3.\nWe need a function that receives an array as an argument and outputs the the pair ```[index, arr[index]]``` that generates the subarray with  the lowest value of ```|q|```.\n\n```python \nselect_subarray([1, 23, 2, -8, 5]) == [3, -8]\n```\nAnother case:\n```python \nselect_subarray([1, 3, 23, 4, 2, -8, 5, 18]) == [2, 23]\n```\nIn Javascript the function will be ```selectSubarray()```.\n\nWe may have some special arrays that may have more than one solution as the one that follows below.\n```python \nselect_subarray([10, 20, -30, 100, 200]) == [[3, 100], [4, 200]]\n```\nIf there is more than one result the function should output a 2Darray sorted by the index of the element removed from the array.\n\nThanks to Unnamed for detecting the special cases when we have multiple solutions.\n\nFeatures of the random tests:\n```\nNumber of tests = 200\nlength of the array, l, such that 20 <= l <= 100\n```\n\nEnjoy it!!\ndef select_subarray(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}