{"4722": {"code": ["\nUse Call-Based format\n\n\n\n\n# Challenge : \n\nWrite a function that takes a single argument `n`.\n\n\n\n\n\n\n\n\n> -23\n\n--- \n\n\n\n\n> -210\n\n--- \n\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n\n# Evaluation : \n\n\n# Challenge : \n", "\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n---\n\nUse Call-Based format\n\n---\n\nUse Call-Based : \n\n-\n\n\n\n\n\n\n\n\n\n\n> -12\n\n--- \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n#\n\n# Challenge", "\nUse Call-Based format\n\n---\n\n\n\n\n# Challenge : \n\n\n\n# Challenge : \n\n- Number, +, -, /, *, /, /,\n\n\n\n\n\n\n\n\n\n> 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n# Challenge :", "\n\nUse Call-Based format\n\n\n\n# Challenge : \n\n\n\n\n\n# Challenge : \n\n\n\n\n\n\n\n\n\n \n\n# Challenge : \n\n> -20\n\n---\n\n \n\n\n\n\n\n--- \n\n\n\n\n\n\n# Challenge : \n\n# Challenge : \n\n> -18\n\n\n\n#", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Challenge : \n\n- Use a function that takes one argument `n` and evaluates it as a number. \n\n-\n\n---\n\n\n\n\n\n\n\n> 218\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n> -20\n\n\n\n\n# Challenge :", "\nUse Call-Based format\n\n---\n\n\n\n\n\n\n\n# Challenge : \n\n# Commands : \n\n-\n\n\n\n> 1\n\n--- \n\n# Examples : \n\n-\n\n\n> 0\n\n--- \n\n\n\n\n\n\n\n\n\n\n---\n\n \n\n\n\n\n\n\n\n\n# Challenge : \n\n# Ch", "\nUse Call-Based format\n\n\n\n\n\n\n\n# Note : \n\n- The function name must be a valid Python function. \n\n-\n\n\n\n\n\n\n\n\n\n> 1\n\n---\n\n# Note : \n\n\n\n\n\n\n---\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n---\n\n\n\n# Challenge", "\n\n\n\n\n# Challenge : \n\n\n\n\n\n# Examples : \n\n# Examples : \n\n- n is a string representation of a number\n- n is a number\n- n is a string representation of a number\n- n is a string representation of a number\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Ch", "\n\n\n\n\n\n\n# Challenge : \n\n- Use Call-Based format\n\n-\n\n\n# Challenge : \n\n\n\n\n\n\n\n> -2\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n-\n\n---\n\n\n\n\n\n\n# Challenge : \n\n# Challenge", "\nUse Call-Based format\n\n\n\n\n\n\n# Challenge : \n\n- A string containing a number will be converted to a number.\n---\n\nUse Call-Based format\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n\n\n\n# Challenge : \n\n#", "\n\nUse Call-Based format\n\n--- \n\n\n\n\n\n\n\n\n\n# Challenge : \n\n- Use `print()` or `print()` to print a string representation of a function\n\n-\n\n\n\n\n\n\n> -1\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n> 1\n\n\n\n# Challenge : \n\n", "\n\n\nUse Call-Based format\n\n---\n\nUse Call-Based format\n\n# Examples : \n\n    e(\"a\")\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n> -17\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n", "\nUse Call-Based format\n\n\n\n\n# Challenge : \n\n-\n\n\n\n\n# Challenge : \n\n- The function is not a function. \n\n- The function is not a function. \n\n--- \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n\n# Note : \n\n- All", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n# Challenge : \n\nWrite a function that takes a single argument `n`.\n\n\n\n\n\n\n\n\n\n\n\n\n> -1718181818\n\n\n\n\n\n\n\n---\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n# Challenge", "\nUse Call-Based format\n\n\n\n\n\n\n\n# Challenge : \n\n# Commands : \n\n- x = x*x\n- y = y*y\n\n--- \n\n\n\n\n\n\n\n\n\n> -1\n\n\n\n\n\n\n\n---\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n# Challenge : \n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Challenge : \n\n-\n\n\n\n> -20\n\n--- \n\n# Syntax : \n\n-\n\n--- \n\n\n\n\n\n\n\n\n\n\n\n--- \n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n# Challenge :", "\nUse Call-Based format\n\n--- \n\n\n\n\n\n\n\n\n\n# Challenge : \n\nWrite a function that takes an input string representation of a simple mathematical expression\n\n--- \n\n\n\n\n\n\n\n\n> 0\n\n--- \n\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n\n\n# Challenge : \n\n", "\nUse Call-Based format\n\n \n\nUse Call-Based format\n\n---\n\nUse Call-Based format\n\n# Note : \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n> 0\n\n--- \n\n\n\n\n\n\n\n\n--- \n\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n# Challenge : \n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Challenge : \n\n- A function that takes a single argument `n` and evaluates it as a number\n-\n\n\n\n\n\n\n> 219\n\n--- \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n\n\n\n# Challenge : \n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Challenge : \n\nUse Call-Based format\n\n-\n\n--- \n\nUse Call-Based format\n\n--- \n\n\n\n\n\n\n\n> -1223\n\n--- \n\n\n\n\n\n\n\n\n\n# Challenge : \n\n\n> 0\n\n\n\n# Challenge : \n"], "prompt": "\nQUESTION:\n# Challenge : \n\nWrite a function that takes a single argument `n` that is a string representation of a simple mathematical expression and evaluates it as a floating point value. \n\n# Commands : \n- positive or negative decimal numbers\n- `+, -, *, /, ( / ).`\n\n---\n\nExpressions use [infix notation](https://en.wikipedia.org/wiki/Infix_notation). \n\n# Evaluation : \n\nOperators should be evaluated in the order they appear and not as in `BODMAS`, though brackets __should__ be correctly observed. \n\nThe function should return the correct result for any possible expression of this form.\n\n# Note : \n\n- All given input will be valid.\n- It will consist entirely of numbers or one of the operators.\n- Parentheses will alway be matched.\n- Use of `eval` or its equivalent is forbidden\n- use of `exec` is forbidden (Python) \n- Use of `Function` or any of their (Function, eval) equivalent is also forbidden.\n- Using `require` is also forbidden. (`import` for python)\n- Using more than 7 (8 for python) lines is also forbidden.\n- Using more than 260 (JS) / 240 (python) characters is also forbidden.\n- Having more than 100 chars per line is forbidden.\n- Having more than 6 semi-colons is forbidden\n\nand that is about it.\n\n--- \n\n# Examples : \n\n    e(\"2*3*4*5+99\")               ---> 219\n    e(\"2*3*4*5+99*321-12312312\")  ---> -12242013\n    e(\"1-2*2/2*2-1*7+3\")          ---> -18\n\n---\ndef e(s):\n\t\nUse Call-Based format\nANSWER:\n"}}