{"3085": {"code": ["\n\n\n\n\n\n\n\n     aks_test(p)\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\t\nAKS test for a number:\n\n     x^3 \u2212 1 \u2212 2 \n\t\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\t\n\n\n\n\n\n\n    AKS test\n\n   \n\n   \n\n   \n\n\n\n\n     \tAKS test\n    \t\n   \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAKS test\n\n\n\n\n\n\n\n\n    AKS test\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\nThe AKS algorithm for testing whether a number is prime or not.\n\n\n\n\n \n\n\n\n\n     x^3 \u2212 3x^2 + 3x^3\n\n   \n\n\n\n\n\n   \n\n\n\n\n\n   \n\n   \n\n\n    AKS test for", "\n\t\n\t\n\n\t\n\n\t\nUse Call-Based format\n\n\n\t\n\n\n\n\t\nAKS test: \n\n\t\n\n\n\n\n\n\n\n\n\n\n \n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\nAKS:\n\n\tAKS test\n\n\n\n\n\n\n\t\n\n\t", "\n\n\n\nAKS test for a number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  AKS test for a number\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n  AKS test for a number\n\n \n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n    \n\n\n\n    \n\n   \n\n    \n    AKS test\n\n    AKS test\n\n    AKS test\n\n\n\n\n    AKS test\n\n\n\n\n\n\n\n\n\n \n\t\n\n\n\nAKS test\n\n\nAKS test\n\n\n   \n\n\n\n\n\n     (x", "\n\n\n\n\n\n\n    AKS test:\n   \n\n    AKS test:\n   \n   \n\n\n\n    \n    aks_test(p)\n\n\t\nUse Call-Based format\n\n\n \n\n\n\n\n\n\n\n\n\n\nAKS test\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n", "\n\n\n\n\n\n\n    \n\n\n\t\nAKS test\n\n\t\n\n\n\t\n\n\n\n    \n\n\t\nThe AKS test for checking whether a number is prime.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  The AK", "\n\n\n\n\n\t\n\tAKS test\n\n\tAKS test \n\n\tAKS test\n\n\tAKS test\n\t\n\n\n\n\t\n:\n\t\n \n\n     \n\n\n \n\n     \n\n\n\n\n\n\n\n\n\n\nAKS test\n\nAKS test\n\n\n\n\n\n\n\n    \n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAKS test\n\n\n\n\n     (x \u2212 1)^2 \u2212 1 \u2212 2 \u2212 2 \n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 1\n\n\n# 2\n\n", "\n\n\n\n\n\n\n\n\n    AKS test\n\n\n    AKS test\n\n    AKS test\n\n    AKS test\n\n   \n\n   \n\n:\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\"\"\"\n\n    # The AKS test", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     (x^3 \u2212 1)^3 \u2212 3x^2 \u2212 1x^2 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n\n\n\n\n\n\n\n\n\n\n   1. The same test is", "\n\t\tUse Call-Based format\n\n\t\tExample:\n\n\t\taks_test(p)\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe function is called the AKS test\n\n\n\n \n\n\n\n\n \n\n    \n\n   \n\n\n\n\n\n\n\n\n    AKS:\n\n\t", "\n\t\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\t\n\nAKS test\n\n\n\n\n    \n \n\n\n\n\n\n\n\n     (x \u2212 1)^3 \u2212 2\n     \n\n\n\n\n \n\n\n\n\nAKS\n\n\n\n\n\n\n\n\n\n\tThe AK", "\n\nQUESTION:\n\n    The AKS test is a function for testing whether a number is prime or not.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\t \n\t \n", "\n\n\n\n\n\n\n\n\n\n\nThe AKS test for a number is a simple function.\n\nThe aks_test function is a call-based algorithm.\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\t\nAKS test for all the prime numbers of a number.\n\n\t\n\n\n\n\n\n\n\n\n# The first example", "\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n    AKS test:\n\n    \n\n\n\n\n\n The aks_test_function()\n\n   \n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n     (x \u2212 1)^3\n\n\n\n\n\n\n\t", "\n\n\n\n\n\n\n\n\n\n     1.\n\n\n    1.\n\n    2.\n\n    3.\n\n    4.\n\n   \n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n    return aks_test(", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nAKS test:\n\n     x \u2212 1 \u2212 2 \n\n\n\t\n\n\n \n\n     x \u2212 1 \u2212 2\n    \n\n\n\n\n\n\n\n\n   \n\n   \n\n\n\n    AKS test", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n The AKS algorithm for testing whether a number is prime\n\n     (x^3 \u2212 1)^2 \u2212 3x^2\n\n     \n\n    \n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "prompt": "\nQUESTION:\nThe AKS algorithm for testing whether a number is prime is a polynomial-time test based on the following theorem: \n\nA number p is prime if and only if all the coefficients of the polynomial expansion of `(x \u2212 1)^p \u2212 (x^p \u2212 1)` are divisible by `p`.\n\nFor example, trying `p = 3`:\n\n     (x \u2212 1)^3 \u2212 (x^3 \u2212 1) = (x^3 \u2212 3x^2 + 3x \u2212 1) \u2212 (x^3 \u2212 1) = \u2212 3x^2 + 3x \n    \nAnd all the coefficients are divisible by 3, so 3 is prime.\n\nYour task is to code the test function, wich will be given an integer and should return true or false based on the above theorem. You should efficiently calculate every coefficient one by one and stop when a coefficient is not divisible by p to avoid pointless calculations. The easiest way to calculate coefficients is to take advantage of binomial coefficients: http://en.wikipedia.org/wiki/Binomial_coefficient and pascal triangle: http://en.wikipedia.org/wiki/Pascal%27s_triangle . \n\nYou should also take advantage of the symmetry of binomial coefficients. You can look at these kata: http://www.codewars.com/kata/pascals-triangle and http://www.codewars.com/kata/pascals-triangle-number-2\n\nThe kata here only use the simple theorem. The general AKS test is way more complex.  The simple approach is a good exercie but impractical. The general AKS test will be the subject of another kata as it is one of the best performing primality test algorithms.\n\nThe main problem of this algorithm is the big numbers emerging from binomial coefficients in the polynomial expansion. As usual Javascript reach its limit on big integer very fast. (This simple algorithm is far less performing than a trivial algorithm here). You can compare the results with those of this kata: http://www.codewars.com/kata/lucas-lehmer-test-for-mersenne-primes Here, javascript can barely treat numbers bigger than 50, python can treat M13 but not M17.\ndef aks_test(p):\n\t\nUse Call-Based format\nANSWER:\n"}}