{"4805": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\nUse Python-Based format\n\n\n\n\n\nYou will check whether the array contains the value `elem`.\n\n\n\n\n\n\n\nYou will need to provide an array `a`.\n~if:bracket\n~\n\t\n\nYou will will", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\nUse Python-Based format\n\n\n\n\n\n\n\n(contains '(1 2 3)')\n(contains '(1 2 3)')\n~~\n\n\n\n\n\n\n\nYou will will be given an array `", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\ndef\n\n\n~if:elem\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n~\n\n\n\n```swift:\nif", "\nUse Call-Based format\n\n\n\n\n\n\n\nreturn #t\nreturn #f\n\n```\n\n\t\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\n\n~\n", "\n\n\n\nUse Call-Based format\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\ndef contains(x):\n\t\n\t\n\n~if:bracket\n\n\n\n\n~\n\n\n\n\n\n\n\n\n\n\n\n\n\n```swift:\n#t", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nreturn #t\nreturn #f\n\n\n\t\nUse Python-Based format\n\n\n\n\t\n\n\n\n\n\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nreturn #t\n\n```swift\n\n\n\n\n\n\n\t\nUse Python 3 Call-Based format\n\n\n\n\n\n\n\n(contains '(1 2 3) 3) ; returns #t\n```\n\n\n\n\n\n\nYou will be given `a` and", "\n\n\n\n\nUse Call-Based format\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\n\t\n\n\n~if:swift\n\n\n\n\n~\n\n\n\n\n\n\n\n\n~else:swift\n\n\n\n\n```swift:\n#t", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Python format\n\n\n\n\t\n\n\n\n\n\nCheck whether the array contains the value `x`\n\n\n\n\n\nYou will need to check whether the array contains the value `x`.\n\n~else:swift\n\n\n\nYou will will then given", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nreturn #t\nreturn #f\n\n\n\n\n\n\n\n\t\nUse Python-based format\n\nYou will have to call the check function.\n\n~if:bracket\n\n\n\n\n```\n\n```\n\n\n\n\n\n\t\n\n\n```swift", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n#\n\t\nUse Python-Based format\n\n\n\n\t\nYou will have to call the function `check` on the provided `seq`\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n~\n\n~end:swift\n\n\n\n\n```swift\nYou will", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nreturn seq.check(elem)\n\nUse Call-Based format\n\nPREFIX:\n\n\n\n\n~~\n\t\n\n\n\n\n\n\n\n\n\n```\n\n```\n\nYou will need to supply the array and value\n```\n\n~\n\nYou will", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nreturn True\n\n\n\n\t\nUse Python format\n\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\nThe `check` function is called by the `check` function\n\n(contains '(1 2 3)') ; returns #t\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nYou will be given an array and a value.\n\n\n\n\n\n\n\n\n\t\nUse Python 3 Call-Based format\nYou will be given an array and value `x`.\n\n~\n\n\n\n\n```\n\n\n\n\n\n\n\n```swift:\nThe type of the", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\t\nUse Python-Based format\nYou will need to give you an array and a value `elem`.\n\n\n\n\n\n\n\n\n\n\nYou will have to give you an array.\n~\n\n\nYou will will given", "\nUse Call-Based format\n\n\n\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\n\ndef\n\n\n\n\n\t\n\n\n\n\n\n\n\n```\n\n\nYou can only check values of the type `String` or `Int`.\n\n\n\n\nWe will", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n\n\n\t\n\n~\n\t\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\nA `a` is an array\nb` is a string\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n~else:swift\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```swift:\nYou will", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Python-Based format\n\n```swift`\n```\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n(contains '(1 2 3) 3) ; returns #t\n\n\n\n~\n\n\nYou will will be given an array `", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\n\n\n\n\n\t\nThe array must be a list, a string or an array of strings, or a number.\n\n\n\n\nUse Call-Based format\n\n\n\n\nYou will have to call `check`.\n\n\n\n\nYou will be given an array `a"], "prompt": "\nQUESTION:\nYou will be given an array `a` and a value `x`. All you need to do is check whether the provided array contains the value.\n\n~~~if:swift\nThe type of `a` and `x` can be `String` or `Int`.\n~~~\n~~~if-not:swift\nArray can contain numbers or strings. X can be either.\n~~~\n~~~if:racket\nIn racket, you'll be given a list instead of an array. If the value is in the list,\nreturn #t instead of another value that is also considered true.\n```racket\n(contains '(1 2 3) 3) ; returns #t\n(contains '(1 2 3) 5) ; returns #f\n```\n~~~\n\nReturn `true` if the array contains the value, `false` if not.\ndef check(seq, elem):\n\t\nUse Call-Based format\nANSWER:\n"}}