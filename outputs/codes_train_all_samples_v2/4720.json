{"4720": {"code": ["\n## Example\n\n\n\n\n\n\n\n## Heterogeneous Arrays\n```\n\n       \n\n\n\n\n\n], [], [] ] ) == (1,)\n\n## Heterogeneous Arrays\n```\n\n## Example\n\n\n\n\n\n\n\n] ],\n                                                  ) == (3,)\n\n\n\n                           3] ],\n", "\n\n## Example\n\n\n\n\n\n\n\n\n\n## Example\n\n## Note\n\nA 1D array is a rectangular array\n```\nhyperrectangularity_properties(arr)\n\n\n\n\n\n] ], [], [])\n\n\n\n\n\n\n\n\n] ], [])\n\n## Example\n\n\n\n                               3] ], []", "\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n       \n\n## Example\n```\n# Heterogeneous Arrays\n\n                                [ 1, 1, [], [2, 2, 2] ]\n\n## Example\n\n\n\n\n\n\n\n\n## Example\n\n] ], [])\n\n### Example\n\n\n\n\n 3], [4", "\n\n\n\n\n\n\n## Examples\n\n# Hyperrectangular_properties\n\n# Heterogeneous arrays\n\n## Heterogeneous arrays\n\n## Examples\n\n## Heterogeneous arrays\n\n\n\n\n\n\n\n\n], []]\n\n\n\n\n\n\n\n\n]  ) == (1,)\n\n\n\n\n           3]]\n                                )", "\n## Example\n```\n\n\n\n\n\n\n\n\n\n## Example\n\n## Note\n\nA rectangular array is a rectangular array\n```\n\n\n\n\n\n## Example\n] ],\n]\n\n\n## Example\n\n## Note\n\n\n\n\n\n\n\n\n\n## Example\n\n] ],\n                                             \n\n                                  3], [", "\n\n\n\n\n## Example\n\n\n\n## Heterogeneous Arrays\n```\n\n\n\n\n\n\n\n\n\n] ], [0, [], [1,2,3] ])\n\n## Heterogeneous Arrays\n```\n\n\n\n\n\n\n\n]\n\n## Heterogeneous Arrays\n\n\n\n## Heterogeneous Arrays", "\n\n\n\n\n\n\n\n\n\n## Examples\n```\n\n## Wild\n\n# Heterogeneous Arrays\n\n# For N-dimensional arrays\n\n\n\n\n\n\n\n### Heterogeneous Arrays\n```\n 3]] ) ==  None\n\n\n\n\n\n\n\n] ] ) ==  None\n\n\n\n\n                              3]] ) ==", "\n## Example\n\n\n\n\n## The function is based on the array length\n###\n\n\n\n## Example\n## Example\n\n\n\n\n\n## Heterogeneous Arrays\n###\n\n\n\n## Example\n]\n\n]\n\n\n## Examples\n## Example\n\n\n\n\n\n\n]\n                                                  ) ==  None\n\n\n\n\n                           [3]", "\n\n\n\n\n\n\n\n\n\n## Heterogeneous Arrays\n\n\n\n\n\n\n] ] ) ==  (3,)\n\n## Heterogeneous Arrays\n\n\n\n\n\n```\n\n\n\n1, [2,3] ], [0,1,2,3]]\n```\n\n\n                                [3] ], [3,", "\n\n\n\n## Note\n\n\n\n\n\n\n## Example\n```\n\n\n\n## Example\n```\n\n\n\n\n\n### Example\n```\n]\n [3,4]])\n\n### Example\n\n## Example\n\n\n\n\n\n\n] ], \n                                [ [ 0, 1, 2] ]\n\n\n\n                                                 3], [", "\n## Examples\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n## Heterogeneous Arrays\n```\n\n\n## Heterogeneous Arrays\n```\n\n\n 3]]\n\n## Example\n\n\n\n\n## Examples\n\n\n\n\n]  ) == (0,)\n\n\n\n\n                                3] ],\n                                [ 1,", "\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n]\n                                              ) ==  (1, 3)\n```\n\n\n\n## Example\n```\n\n# Example\n\n\n```\n\n\n\n]\n\n## Note\n## Example\n```\n\n\n\n                            [3, 4, 5]] ],\n                            [ 0,", "\n\n\n\n\n## Example\n```\n\n\n\n\n\n\n## Example\n```\n\n\n## Heterogeneous Arrays\n```\n\n\n\n## Example\n]\n                                  ) ==  (3,)\n\n## Example\n\n\n\n\n\n\n\n\n\n ], [3,4,5,6])\n\n\n\n                                [3]],", "\n\n\n\n\n\n\n\n\n## Example\n\n## Heterogeneous Arrays\n```\n\n\n\n\n### Heterogeneous Arrays\n```\n\n\n\n\n\n### Heterogeneous Arrays\n```\n\n 3] ] ) ==  None\n\n\n\n\n\n\n\n\n]]\n\n\n\n\n\n 3, 4]] ] ) ==  None", "\n```\n\n\n\n\n## Note\n\n\n\n## Example\n```\n\n# Heterogeneous Arrays can appear too\n\n\n\n\n## Example\n\n\n\n\n] ], [], [], [])\n\n\n\n\n\n\n\n\n\n]])\n```\n\n## Example\n## Note\n\n\n\n 3], [4, 5]] )", "\n\n\n\n\n\n\n\n\n## Example\n```\n\n\n\n\n## Example\n```\n\n\n\n## Example\n```\n\n# Heterogeneous Arrays can appear too\n\n 3] ] ) == (2,)\n\n\n\n\n\n\n\n\n\n] ],\n                            ) == (2,)\n\n\n\n\n\n 3] ]", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Heterogeneous Arrays\n\n                            [3]]    \n                           \n\n## Example\n## Note\n\nA 1D array is a rectangular array\n## Example\n```\n\n1D array is a rectangular array\n\n\n\n\n\n\n]\n\n\n## Example\n## Example\n\n\n\n 3],", "\n## Example\n\n\n\n\n\n\n\n\n## Heterogeneous Arrays\n```\n\n\n\n## Heterogeneous Arrays\n\n\n\n\n## Heterogeneous Arrays\n```\n\n 3, 4]]\n```\n\n\n\n\n\n\n\n[3,4,5]] ]\n```\n\n\n\n                             3] ], \n                                  ", "\n\n\n\n\n\n\n\n\n\n### Heterogeneous Arrays\n## Note\n\n\n\n\n### Heterogeneous Arrays\n### Example\n```\n\n# Dimensions\n\n3] ], [], [], [])\n\n### Heterogeneous Arrays\n###\n\n\n\n\n\n\n ], [], []\n\n## Example\n\n\n                                [ 3", "\n\n\n\n\n\n\n\n\n## Example\n\n## Heterogeneous Arrays\n```\n\n\n\n## Heterogeneous Arrays\n```\n\n# Heterogeneous Arrays\n\n\n\n\n [3] ], [] ]\n```\n\n\n\n\n\n\n\n\n] ]\n\n\n## Heterogeneous Arrays\n\n [], [3]"], "prompt": "\nQUESTION:\nIn this kata, we will check is an array is (hyper)rectangular.  \nA rectangular array is an N-dimensional array with fixed sized within one dimension. Its sizes can be repsented like A1xA2xA3...xAN. That means a N-dimensional array has N sizes. The 'As' are the hyperrectangular properties of an array.\n\nYou should implement a functions that returns a N-tuple with the arrays hyperrectangular properties or None if the array is not hyperrectangular.\n```\nhyperrectangularity_properties(arr)\n```\n## Note\nAn empty array IS rectagular and has one dimension of length 0\n```\nhyperrectangularity_properties([]) == (0,)\n```\n## Example\n```\n1D array\nhyperrectangularity_properties([1,2,3]) == (3,)\n\n2D arrays  \n\nhyperrectangularity_properties(\n                                [[0,1,2],\n                                 [3,4,5],           \n                                 [6,7,8]] ) == (3,3)                              \nhyperrectangularity_properties(\n                                [[0,1,2],\n                                 [3,4,5]] ) == (2,3)\nhyperrectangularity_properties( \n                                [[0,1,2],\n                                 [3,4]  ] ) == None\n3D arrays  \nhyperrectangularity_properties(  \n                                [\n                                 [ [0], [2] ],\n                                 [ [0], [2] ],  \n                                 [ [0], [2] ]\n                                              ] ) == (3,2,1)    \nhyperrectangularity_properties(  \n                                [\n                                   [[0],[2]],\n                                   [[0],[2,2]],   \n                                   [[0],[2]]\n                                              ] )  ==  None \nhyperrectangularity_properties(\n                                [[ [], [], [] ]]\n                                                ) ==  (1,3,0) \n```\n### Heterogeneous Arrays can appear too\n```\nhyperrectangularity_properties(      \n                                [[0,1,2],\n                                 3,   \n                                 [[4],5,6]] ) ==  None\nhyperrectangularity_properties(      \n                                [1,\n                                 [1,2],   \n                                 [[3],[4,[5]],[6]]\n                                                  ] ) ==  None\n                                                  hyperrectangularity_properties(\n                                [[ [], [] ], [] ]\n                                                  ) ==  None\nhyperrectangularity_properties(\n                                [ 1, [], [2, [3]] ]\n                                                  ) ==  None\n```\nThe first property shows the length of the outer layer. The second of the layer one step deeper and so on. The function should handle higher dimensions too.\n\n\n## Input\n##### N-dimensional array of integers\n\n## Expected Ouput\n##### An N-tuple with the hyperrectangularity properties\ndef hyperrectangularity_properties(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}