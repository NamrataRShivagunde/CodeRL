{"4849": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*The Kata will control if you do not use the original `split()` function*\n\n*The Kata will control if you do not use the\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n* This Kata will", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*\n\nUse Call-Based format\n\n\n*This Kata will control if you are using call-based format\n*This Kata will control if you are using\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* When you", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n*This Kata will control if you have a generator!*\n*\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Kata:\n\n\n**This Kata:**\n\n* When", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n*The Kata will control if you are using the built-in split method*\n\n\n\n\nUse Generator-Based format\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n* This Kata will control if you", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*\n\n\n*This Kata will control if the new function is using the built-in `rsplit()` method*\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n*\n\n\n\n* This Kata will control", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*\n*\n\t\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n*This Kata will control if you can do things!*\n\n\n", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n*\n\n*The Kata will control if you're using a generator?*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*This Kata will control if you are using generator:\n\n\n* This", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n*The Kata will control if you need to use the original function **can** use the original function **can** use\n\n\t\n\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n*\n\n\n* It's", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nI am using the call-based format\n\nNOTE:\n\n\n*\nThis Kata will control if you can use a generator format\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n* This K", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n*\nUse Call-Based format\n*\n\n:\n\n\n\n\n\n\n\n\n\n\nThis Kata will do:\n\n\n\nQUESTION:\n\n", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n*The Kata will control if you need to use a new function\n*\n\n*\n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n* This Kata will control", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nHowever!\n\nThis Kata will not work with the same call-based format.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n* This Kata will control if", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*This Kata will control if you need to use a generator of `rsplit()` or `split('')`*\n*\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n* This Kata will control", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*\n\n*\n*\n*\n*\n\t\nUse Call-Based format\n\n\n*\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n* This Kata will control if you can", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n*\n\t\nUse Call-Based format\n\n\n*This Kata will control if your function is using Call-Based format*\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n* This Kata will control", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n*This Kata will control if you are using call-based format*\n\n*\n\n\n\n\n\n\n\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n* The Kata will control if you", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n*This Kata will control*\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n* This Kata will control if you", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*\n\nUse Call-Based format\n\n\n*This Kata will control the original string\n*This Kata will control the new function\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n* This Kata will", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n*\n\n*\n\t\nUse Call-Based format\n\n\n*This Kata will control if you are using generator format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n* It's not possible to write some real", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n*This Kata will control if you use a generator!*\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n* This Kata will control if"], "prompt": "\nQUESTION:\nQuite recently it happened to me to join some recruitment interview, where my first task was to write own implementation of built-in split function. It's quite simple, is it not?\n\nHowever, there were the following conditions:\n\n* the function **cannot** use, in any way, the original `split` or `rsplit` functions,\n* the new function **must** be a generator,\n* it should behave as the built-in `split`, so it will be tested that way -- think of `split()` and `split('')`\n\n\n*This Kata will control if the new function is a generator and if it's not using the built-in split method, so you may try to hack it, but let me know if with success, or if something would go wrong!*\n\nEnjoy!\ndef my_very_own_split(string, delimiter = None):\n\t\nUse Call-Based format\nANSWER:\n"}}