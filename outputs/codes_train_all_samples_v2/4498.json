{"4498": {"code": ["\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\treturn roman\n\t\n\n\n\n\nRoman numeral is a Roman numeral\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> from rosettacode.org import solution", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\ndef decode(roman):\n    return roman\n\n\nExample:\n\n```python\n\n\n\n\n\n\n\n\n\n\nEXAMPLE:\n\n# Roman numeral (number)\n\n\n\n\n\n\n\n\n\n# Rom", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef decode(roman):\ndef decode(roman):\n\t\n\t\n\nExample:\n\n\t\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The function that returns the value of the function", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\ndef decode(roman):\n\t\n\t\treturn roman.decode(roman)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n```python\n{\n\n\n\n    >>> from rosettacode", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def decode(roman):\n\t    return roman.decode('M')\n\t\n\n\t\n\n\n\n\nCreate a function that returns a numeric decimal integer.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Create a function that takes a Roman num", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\t\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\n\n\n\n\nCreate a function that takes a Roman numeral\n\n\n\n\n\n\n\n\n\n\n\n\nQUESTION:\n\nCreate a function that takes a number\n", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nReturns:\n21\n\n\nCreate a function that returns a numeric decimal integer.\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\t\nExample:\n\t\ndef solution(roman):\n\t\n\n    To", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ndef decode(roman):\nreturn roman\n\n\n\nUse Call-Based format\ndef decode(roman):\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    TODO:\n    This", "\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\tUse Call-Based format\n\n\n\t\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nQUESTION:\n\nCreate a function that takes a Roman numeral as its argument\n\n\n\n\n\n\n\n\n    This", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\ndef decode(roman):\n\t\n\n\t\n\n\n\n\nUse Call-Based format\n\n\n\n\nCreate a function that takes a Roman numeral as its argument\n\n\n\n\n\n\n\n\n\n\n\n    To validate the", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\ndef decode(roman):\n\t\n\n\t\n\n\n\n\n\n\n\nCreate a function that takes a Roman numeral as its argument and returns the numeric decimal integer.\n\n\n\n\n\n\n\n\n\n\n    Question:\n\n    Create a function that takes", "\n\n\n\n\n\n\n\n\n\n\n    int(1)\n    int(1)\n    float(1)\n    float(1)\n\n\n\ndef decode(roman):\n\t\n\t\n\n\n\n\n\n\n\n1:\n\n2:\n\n\n\n\n\n\n\n1:\n\n1:\n\n2:\n\n\n\n1", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> from rosettacode.org import string\n    >>>\n\n\n\n    To validate a function that takes a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ndef decode(roman):\nreturn roman\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nCreate a function that takes a Roman numeral.\n\n\n\n\n\n\n\n\n\n\n\n\n\n    A function that takes a", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef decode(roman):\n    return roman.decode('xx')\n\n\nUse Call-Based format\n\ndef solution(roman):\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe following code shows the solution:\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nEXAMPLE:\n\nThe function that returns a numeric decimal integer\n\n\n\n\n   ", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\nCreate a function that takes a Roman numeral as its argument\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample:\n\n```python\n\n\n\n    >>> from roset", "\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ndef decode(roman):\n\t\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The \"MCMXC\" is a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef decode(roman):\n\treturn roman\n\t\nUse Call-Based format\ndef decode(roman):\n\n\n\n\nCreate a function that takes a Roman numeral\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    An example", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\ndef decode(roman):\n\t\n\n\t\nUse Call-Based format\n\n\nAPI:\n\nCreate a function that takes a Roman numeral as its argument\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    I18N:\n   "], "prompt": "\nQUESTION:\nCreate a function that takes a Roman numeral as its argument and returns its value as a numeric decimal integer. You don't need to validate the form of the Roman numeral.\n\nModern Roman numerals are written by expressing each decimal digit of the number to be encoded separately, starting with the leftmost digit and skipping any 0s. So 1990 is rendered \"MCMXC\" (1000 = M, 900 = CM, 90 = XC) and 2008 is rendered \"MMVIII\" (2000 = MM, 8 = VIII). The Roman numeral for 1666, \"MDCLXVI\", uses each letter in descending order.\n\nExample:\n\n```python\nsolution('XXI') # should return 21\n```\n\n```Elixir\nSolution.decode(\"XXI\") # should return 21\n```\n\nHelp:\n```\nSymbol  Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1,000\n```\n\n*Courtesy of rosettacode.org*\ndef solution(roman):\n\t\nUse Call-Based format\nANSWER:\n"}}