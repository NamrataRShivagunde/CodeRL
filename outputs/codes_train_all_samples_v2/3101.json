{"3101": {"code": ["\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n:\n\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n:\n\nGiven a list of words. Find all pairs", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n\n:\n\n:\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nwords:\n\t\nUse Call-Based format\n:\n\n\n\n\n:\n\n\t\nGiven a list of", "\n:\n\t\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\t\n\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n:\n\nGiven a list of unique words, find all pairs", "\nUse Call-Based format:\n\nUse Call-Based format\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\n:\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n:\n\nA list of unique words (i, j)", "\n:\n\n\n\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\t\n\n\n\n\n:\n:\n\n\n\n\n\t\nUse Call-Based format:\n\t\nUse Call-Based format\n\n\n\n\n:\n\n\n\n:\n\nA list of words is a list of unique", "\nUse Call-Based format:\n\n\n\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n:\n:\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse list of unique words\n\n\n\n\n\n\n\n\"\"\"\n\n\n    if type(words) is", "\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n:\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n'+ palindrome_pairs(words):\n\nUse Sequence-Based format\n\n\n\n:\n\nGiven a list of words. Find all", "\nUse Call-Based format:\n\t\n\nUse Call-Based format\t:\n\t\n\n\n\n:\n\t\n\n\n\n\t\n:\n:\n\t\n\n\n\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\"\"\")\n:\n\n\n\n:\n\n\"\"\")\n\n\n\nKEYWORD", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n:\n\nGiven a list of words and a list", "\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\n:\n\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n[i]\n\n\n\n\nwords = [words[i], words[j]]\n\n\n:\n\nGiven", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\n\n:\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse palindrome_pairs(words):\n\nUse Call-Based format\n\n\n:\n\nGiven a list of unique words.", "\n:\n\t\n\n\nUse Call-Based format\n\t\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n\t\n:\n\n:\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n\n\n\"\"\", \"\n\n\n:\n\n''', \"\n''\", \"i\", \"j", "\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\n\n\"\"\")\n\n\n\nUse Call-Based format\n\"\"\")\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n\n\n    # pylint:", "\n:\n\n\nUse Call-Based format\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n:\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n''')\n\n:\n\n\n\n\n:\n\n''')\n\n", "\n\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\n\nUse Call-Based format:\n\n\n\n\t\n:\n:\n\n\n\nUse\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n''''''''''''''''''''''''''''''''''", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n:\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n''''''''''''''''''''''''''''''''''''''''\n\n\n", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\t\n:\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n  [i, j]\n\nUse palindrome_pairs(words)\n\n\n\n\n\n\n:\n\nGiven a list of", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n    The palindrome_pairs function is a very useful alternative to use a list of indices\n\n\n\n\n:\n\n", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\nUse\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n''''''''')\n:\n\n\n\n\n:\n\n'''\n\n\nPalindrome:\n", "\n:\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\n:\n\nGiven a list of unique words. Find"], "prompt": "\nQUESTION:\nGiven a list of unique words. Find all pairs of distinct indices (i, j) in the given list so that the concatenation of the two words, i.e. words[i] + words[j] is a palindrome.\n\nExamples:\n\nNon-string inputs should be converted to strings.\n\nReturn an array of arrays containing pairs of distinct indices that form palindromes. Pairs should be returned in the order they appear in the original list.\ndef palindrome_pairs(words):\n\t\nUse Call-Based format\nANSWER:\n"}}