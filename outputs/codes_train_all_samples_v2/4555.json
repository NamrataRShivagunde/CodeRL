{"4555": {"code": ["\n\n\n\n\nUse Call-Based format\n\n# Do names have colors?\n\n# Do names have colors?\n\n\n\n# Do names have colors?\n\n# Do names have colors?\n\n#\n\n\n:\n\n\n\n\n:\n\n + +\n:\n\n\n\n\n\n# Good!\n:\n\n\n\n:\n\n# Do names have", "\n\n\n\nUse Call-Based format\n\n# Do names have colors?\n\n# Do names have colors?\n\n:\n\n\n\n\n\n\n\n:\n# Do names have colors?\n\n\n\n\n:\n\n  mod 256 = 229  -->  hex: B5\n\n\n:\n \n\n\n:\n#\n#\n:\n# Do names", "\n\t\t\"\"\"\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n:\n\n# Do names have colors?\n\n\n\n\n\n# Do names have colors?\n\n:\n mod 256 = 130  -->\n\n:\n \n\n\n:\n\n#\n\n#\n\n:\n#", "\n\n\n\n# Use Call-Based format\ndef string_color(name):\n\t\nUse Call-Based format\nANSWER:\n\n# Use Call-Based format\n\n\n\n:\n\n #\n\n\n\n\n\n:\n\n\n\n\n:\n mod 256 = 203 \n\n:\n #\n\n\n:\n#\n\n\n:\n# Do names", "\n\tUse Call-Based format\n\n\n\n\n\n# Do name have colors?\n\n:\n\n# Do name have colors?\n\n\n\n# Do name have colors?\n\n\n\n:\n\n\n\n\t\n# Do name have colors?\n\n:\n  \n\n:\n \n\n\n\n#\n\n\n\n\n:\n# Do names have colors", "\nUse Call-Based format\n\n\n\n\n\n:\n\n\n# Do names have colors?\n\n# Do names have colors?\n\n# Do names have colors?\n\n#\n\n\n\n\n\n:\n\n\n\n\n\n:\n \n\n:\n\n\n\n\n# Do names have colors?\n\n#\n\n:\n\n# Do names have colors?", "\n# Use Call-Based format\n#\n\nUse Call-Based format\n#\n\n\n\n\n\n#\n\n:\n\n#\n\n\n#\n\n\n\n:\n\n# Use Call-Based format\n\n\n\n\n:\n\n mod 256 = 204\n#\n\n:\n\n \n\n\n\n#\n\n\n\n:\n# Do names have colors?", "\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n# Do names have colors?\n\n# Do names have colors?\n\n\n\n\n\n\n:\n# Do names have colors?\n\n\n\n\n\n:\n\n + +\n\n:\n\n\n\n\n# Use Call-Based format\n\n#\n\n\n\n\n\n# Do names", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n:\n\n\n# Do names have colors?\n\n# Do names have colors?\n\n#\n\n\n\n:\n\n\n\n\n\n\n\n:\n mod 256 = 0  -->\n\n\n:\n #\n\n\n\n#\n\n\n\n\n:\n# Do names have colors", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\n\n\n\n\n:\n# Do names have colors?\n\n# Do names have colors?\n\n\n\n\n:\n mod 256 = 135  -->\n\n\n:\n #\n\n#\n\n\n\n\n\n:\n# Do names have colors", "\n\nUse Call-Based format\n\n\n\n\n:\n# Do you have colors?\n\n\n# Do you have colors?\n\n# Do you have colors?\n\n#\n\n\n\n\t\n:\n\n\n\n\t\n\n:\n mod 256 = 130  -->\n\n\n:\n \n\n\n\n:\n#\n\n#\n\n:\n# Do", "\n\n\n  name\n  color\n  name\n  color\n  color\n  color\n\n \n  color\n\n\n:\n\n\n\n\n\n:\n\n\n \n\t\n\n\n# Use Call-Based format\n:\n\n mod 256 = 229  -->\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n:\n\n# Do names", "\n\t\nUse Call-Based format\n\n\n\n\n\n:\n# Do names have colors?\n\n\n\n\n# Do names have colors?\n\n# Do names have colors?\n\n#\n\n:\n\n\n\n\n\n\n:\n mod 256 = 229  -->  hex: C\n\n\n\n #\n\n\n\n\n:\n# Do names have colors?", "\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n# Do names have colors?\n\n\n\n\n# Do strings have colors?\n\n# Do names have colors?\n\n#\n:\n\t\n\n\n\n:\n \n\n:\n\n\n\n\n\n# Just one color!\n:\n\n \n\n:\n#", "\n\nUse Call-Based format\n\n\n\n\n\n# Do names have colors?\n\n# Do names have colors?\n\n# Use Call-Based format\n:\n\n\n\n\n\n\n:\n\n\n\n\n\t\n\n:\n\n mod 256 = 229  -->\n\n\n:\n #\n\n\n#\n\n:\n# Do names have colors?\n#", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n# Do names have colors?\n\n:\n\n\n\n\n\n\n\n:\n# Do names have colors?\n\n\n\n\n:\n mod 256 = 20\n\n\n\n:\n\n\n\n\n\n\n# What colors are you doing?\n\n\n \n\n:\n# Do names", "\n\n# Use Call-Based format\n\n\n\n# Use Call-Based format\n:\n\n\n#\n\n#\n# Use Call-Based format\n\n#\n#\n:\n\n\n\n\t\n\n# Do names have colors?\n:\n mod 256 = 229\n74 * *\n:\n #\n\n\n:\n#\n\n#\n\n:\n# Do", "\n\n\n# Use Call-Based format\n\ndef string_color(name):\n\t\nUse Call-Based format\nANSWER:\n\n# Use Call-Based format\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n:\n mod 256 = 202  -->  hex: E5\n\n\n\n #\n\n\n\n\n# Make a function that takes in", "\n\t\nUse Call-Based format\n\n\n\n\n\n# Do names have colors?\n\n# Do names have colors?\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n mod 256 = 229  -->  hex: B5\n\n74\n\n:\n\n #\n\n\n:\n\n#\n\n#\n:\n\n# Do", "\n# Do the names have colors?\n# Do the name have colors?\n# Do the name have colors?\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\t\nUse Call-Based format\n\n:\n\n mod 256 = 229  -->\n\n\n:\n\n #\n\n\n:\n\n\n\n:\n# Do names have"], "prompt": "\nQUESTION:\n# Do names have colors?\n\n*Now they do.*\n\nMake a function that takes in a name (Any string two chars or longer really, but the name is the idea) and use the ascii values of it's substrings to produce the hex value of its color! Here is how it's going to work:\n\n* The first two hexadecimal digits are the *SUM* of the value of characters (modulo 256).\n* The second two are the *PRODUCT* of all the characters (again, modulo 256, which is one more than `FF` in hexadecimal).\n* The last two are the *ABSOLUTE VALUE of the DIFFERENCE* between the first letter, and the sum of every other letter. (I think you get the idea with the modulo thing).\n\nFor example `\"Jack\"` returns `\"79CAE5\"`, which is... **baby blue!**\n```\n\"Jack\"  #  \"J\" = 74, \"a\" = 97, \"c\" = 99, \"k\" = 107\n\n74 + 97 + 99 + 107 = 377                   -->  mod 256 = 121  -->  hex: 79\n74 * 97 * 99 * 107 = 76036554              -->  mod 256 = 202  -->  hex: CA\n74 - (97 + 99 + 107) = -229  --> abs: 229  -->  mod 256 = 229  -->  hex: E5\n```\n\nNOTE: The function should return `None/nil` when the input is less than two chars.\ndef string_color(name):\n\t\nUse Call-Based format\nANSWER:\n"}}