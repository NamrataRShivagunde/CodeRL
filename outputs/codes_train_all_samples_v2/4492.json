{"4492": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nred + blue + green = white\n\nblue + red + green = black\n\nred + blue + green = white\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\npython\nred + blue + green = black\n\n```python\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nred + blue + green = black\n\nred + blue + green = white\n\nblue + green + red = yellow\n\nblue + red + green = cyan\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n* This function will return a string in", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nred + blue + green = black\nblue + red + green = cyan\n\nred + blue + green = blue + red + green = white\n\n\n\n\n\n\n\n\n\n\n\n\nYou're looking through different hex codes\n\npython\nred + blue =\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nred + blue + green = blue\n\nred + blue + green = green\n\nblue + red + green = blue\n\n\n\n\n\n\n\n:\n\n\n\n\npython\n\n\n\n\nThis function will return the value of the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nred + blue + green + blue\n\nred + blue + green = blue\n\nblue + blue + red = green\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n#000101  #0001 ", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nred + blue = blue\n\nred + blue + green = red\n\nblue + green = blue\n\nred + blue + green = green\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#100000\n\n#000000\n#100000\n#00000\n\n\n\n\n#", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nred + blue + green = black\n\nred + blue + green = cyan\n\nblue + red + green = blue\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\npython\nred + blue + green = black\n\n\n\n\n```", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\nred + blue + green = black\n\nred + blue + green = white\n\n\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nYou're looking through different hex codes\n\n\n\n\n\n    1)\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\nred + blue + green = black\n\nblue + red + green = white\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nred + blue + green = blue\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nred + blue + green = black\n\nblue + red + green = white\n\nred + blue + green = white\n\n\n\n\n\n\n\n\n\n\n\n\nUse Hex-Based format\n\npython\nred + blue + green = black\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nred + blue + green = blue\n\nred + blue + green = green\n\nblue + red + green = cyan\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#00000001\n#0000000101\n\n\n\n\n#0000000101\n\n\n#", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nred + blue + green = green\nblue + red + green = blue\n\nred + blue + green = cyan\n\nblue + red + green = black\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\nhex_color()\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nred + blue + green = blue + green\n\nred + blue + green = cyan + green\n\ngreen + blue + red = blue + green\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n#00000001  #000001 ", "\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nred + blue + green = blue + red\n\nred + blue + green = cyan\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\npython\n\n\n\n```python\nif len(codes)", "\n\n\n\n\n\n\n\n\nhex_color(codes)\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nred + blue + green + red = green + blue = blue\n\nred + blue + green = blue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n    #000001  = 0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nred + blue + green = white\n\nblue + red + green = black\n\nred + blue + green = blue\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nYou're looking through different hex codes\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nred + blue + green = white\n\nred + blue + green = blue\n\nblue + red + green = white\n\n\n\n\n\n\n\n\n\n\n\n\nYou're looking through different hex codes\n\npython\n\n\n\n#100000  #000000  #", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nred + blue + green = green\nblue + red + green = black\n\nred + blue + green = black\n\nred + blue + red = blue + green\n\n\n\n\n\n\n\n:\n\n\n\n\n\npython\nred + blue = green\n\n#\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nred + blue + green = blue\n\nred + blue + green = green\n\nblue + red + green = white\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\npython\nred + blue = blue\n\nblue + red =\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nred + blue + green = white\n\ngreen + blue + red = black\n\n\n\n\n\n\n\n\n\n\n\n#00000001 + #000001  + #00101 \n\n\n\n"], "prompt": "\nQUESTION:\nYou're looking through different hex codes, and having trouble telling the difference between  #000001  and  #100000 \n\nWe need a way to tell which is red, and which is blue!\n\nThat's where you create ```hex_color()```!\n\nIt should read an RGB input, and return whichever value (red, blue, or green) is of greatest concentration!\n\nBut, if multiple colors are of equal concentration, you should return their mix!\n\n```python\nred + blue = magenta\n\ngreen + red = yellow\n\nblue + green = cyan\n\nred + blue + green = white\n```\n\nOne last thing, if the string given is empty, or has all 0's, return black!\n\nExamples:\n```python\nhex_color('087 255 054') == 'green'\nhex_color('181 181 170') == 'yellow'\nhex_color('000 000 000') == 'black'\nhex_color('001 001 001') == 'white'\n```\ndef hex_color(codes):\n\t\nUse Call-Based format\nANSWER:\n"}}