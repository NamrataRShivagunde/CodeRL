{"3152": {"code": ["# Example:\n# Task:\n# Task:\n# Example:\n# Task:\n# Task:# Example:\n# Task:\n\ndef,# Task:\n:\n\n\n\ndef,\n:\n# Task:\n# Task:\n:\n\n:\n:\n\n\n\n\n\ndef\n# Task:\n# Task:\n#\n\ndef\n:\n", "\nUse Call-Based format\n\n# Example:\n# Task:\n# Example:\n# Example:\n# Example:\n# Task:\n\n# Example:\n# Example:\n#,# Task:\n:\n\ndef,\n:\n# Task:\n:\n::\n\n\n\n\n,\n\n# Task:\n\n\n\ndef\n:\n# Task:", "\n# Example:\n# Test:\n# Example:\n# Example:\n# Task:# Example:\n\ndef,\n:\n\nUse Call-Based format# Task:\n# Task:\n# Task:\n# Task:\n## Task:\n:\n:#\n:::\n\n\n\n\n:\n#\n\n\n\n\n# Task:\n:\n#", "# Example:\n# Call-Based format# Example:\n# Example:\n\ndef\n# Task:\n# Example:\n# Task:\n\n# Example:\n# Example:\n# Example:\n## Task:\n\n\ndef,#:\n:\n#::\n\n\n\n\n\ndef\n\n\n\n# Task:\n# Task:\n\n:\n#", ":\n\n\nUse Call-Based format\n# Task:\n# Task:\n# Task:\n# Task:\n# Task:\n\n# Task:\n# Task:\n# Task:\n\n,\n:\n\ndef,,\n:# Task:\n,\n::\n\n\n\n\n,\n\n\n\n\n\n# Task:\n# Task:\n\n:\n", "# Example:\n# Task:\n# Example:\n# Example:\n# Example:# Example:\n\ndef,# Example:\n# Task:\n\n\n\ndef,\n# Task:\n:\n# Task:\n\n\n:\n:\n\n\n\n\n\nResult: 0\n\n# Task:\n# Task:\n#\n\n\n\ndef\n:\n# Task", "# Example:\n\n# Code:\n# Code:\n# Value:\n# Value:\n# Value::\n\ndef,:\n:\n# Task:\n# Task:\n\n# Example:\n# Value:\n#\ndef,\n:#:\n\n::\n\n\n\n\n:\n# Task:\n#\n\n\n\n\n# Task:\n:\n", "\nUse Call-Based format\n\n# Description:\n# Task:\n# Task:\n# Task:\n# Task:\n# Task:\n\nExample:\n\n#,# Task:\n:\n\ndef\ndef,\n:\n# Task:\n:\n\n:\n:\n\n\n\n\n\ndef\n\n# Task:\n\n\ndef\n# Task:\n:", "# Example:\n# Use Call-Based format# Example:\n# Example:\n\ndef\n# Task:\n# Example:\n:\n# Task:\n# Task:\ndef,# Task:\n:# Task:\n# Task:\n:\n\n::\n-\n\n\n\n\n# Task:\n# Task:\n\ndef\n\n\n\ndef\n:\n#", ":\n# Run-Based format# Run-Based format\n# Run-Based format\n\nUse Call-Based format\n# Task:\n# Task:\n# Task:\n# Task:\n#,# Task:\n\ndef\ndef,# Task::#:\n# Task:::\n\n\n\n\n:\n\n#\n\n\ndef\n# Task:\n:\n", ":\nUse Call-Based format\n\ndef\n# Task:\n# Task:\n# Task:\n\nUse Call-Based format\n:\n\n# Task:\n# Task:\n\ndef,# Task:\n:\n# Task:\n:\n\n:\n:\n\n\n\n\n\ndef\n\n# Task:\n# Task:\n#\n\ndef\n# Task:", ":\nUse Call-Based format\n# Task:\n# Task:\n# Task:\n\n# Example:\n# Task:\n# Example:\n# Task:\n# Example:\n#,# Task:\n:\n\n\ndef,# Task::#:\n\n::\n\n\n:\n\n:\n#\n\n\n# Task:\n\n# Task:\n:", ":\nUse Call-Based format# Task:\n# Task:\n# Task:\n# Task:\n# Task:\n# Task:\n\n#,\n:\n# Task:\n\n\ndef,\n# Task::# Task:\n:\n\n:\n:\n\n\n# Task:\n\n\n:\n# Task:\n#\n\n:\n\ndef\n:\n", "# Example:\n# Example:\n# Use Call-Based format# Example:\n\ndef\n# Task:\n# Example:\n# Example:\n# Example:\n# Task:\n\ndef# Task:\n:\n\n\ndef,\n:#:\n\n::\n\n\n\n\n:\n# Task:\n#\n\n\n\n# Task:\n\n#:\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n# Example:\n# Task:\nimport kata\n\n\n# Task:\n:\n\n\ndef\n\n# Example:\n# Task:\n\n# Task::# Task:\n:\n\n:\n:\n\n\n\n\n\ndef\n\n\n\n\n# Task:\n\n# Task:\n:", "# Example:\n# Task:\n# Task:\n# Task:# Task:\n\ndef,# Task:\n# Task:\n\n\n\ndef,# Task:\n# Task:\n:# Task:\n# Task:\n\n\n:\n:\n\n-\n\n\n# Task:\n\n\n\n# Task:\n#\n\n\n\n\n\ndef\n:\n", "# Example:\n# Language:\n# Language:\n# Call-Based format:\n\ndef,\n# Task:\n# Task:\n# Task:\n\n\n\n\ndef,# Task:\n:# Task:\n# Task:\n\n:\n:\n-\n\n\n\n\n\n\ndef\n# Task:\n\n\n\n\n\n\ndef\n\n#\n#", "# Example:\n# Task:\n# Example:# Example:\n# Example:\n# Example:\n\ndef,# Example:\n# Task:\n\n# Task:\n# Task:\ndef,# Task::# Task:\n:\n\n:\n:\n\n\n\n:\n\n\ndef\n# Task:\n\n\n\n\n# Task:\n:\n# Task", ":\n# Use Call-Based format# Task:\n# Task:\n# Task:\n# Task:\n# Task:\n\ndef,# Task:\n:\n\n\ndef:\n\t\n# Task:\n# Task:\n# Task::\n:\n\n:\n:\n\n\n\n\n:\n# Task:\n#\n\n\n\ndef\n# Task::", ":\n# Usage-Based format# Task:\n\nUse Call-Based format\n# Task:\n# Task:\n\nExample:\n# Task:\n# Task:\n\n,# Task:\n:\n\ndef:\n\ndef,# Task::\n:\n\n::\n\n\n\n\n\ndef\n# Task:\n\n\n\ndef\n# Task:\n:"], "prompt": "\nQUESTION:\n# Task:\nThis kata asks you to make a custom esolang interpreter for the language [MiniBitMove](https://esolangs.org/wiki/MiniBitMove). MiniBitMove has only two commands and operates on a array of bits. It works like this:\n\n- `1`: Flip the bit at the current cell\n- `0`: Move selector by 1\n\nIt takes two inputs, the program and the bits in needs to operate on. The program returns the modified bits. The program stops when selector reaches the end of the array. Otherwise the program repeats itself. **Note: This means that if a program does not have any zeros it is an infinite loop**\n\nExample of a program that flips all bits in an array:\n```\nCode: 10\nBits: 11001001001010\nResult: 00110110110101\n```\n\nAfter you're done, feel free to make translations and discuss this kata.\ndef interpreter(tape, array):\n\t\nUse Call-Based format\nANSWER:\n"}}