{"4639": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Python format\n\n\n\n# The following code is used in the Wikipedia:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n```python\npower_of_two(x)\n```\n~\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n# Examples\n#\nUse Call-Based format\n\n~\n\n\n\n\n\n\n\nreturn 1\n\n\n\n# Examples\n\n\n\n\n\n\n# Examples\n# Examples\n\n## Examples\n# Example:\n\n>>>\n\n\n\n~\n\n\n# Example 2\n#\n#", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npowerOfTwo(x)\n\n```\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n```\n\n\n```python\nmov ed", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nuse Call-Based format\n\ndef power_of_two(x):\n\t\nUse Call-Based format\n\n\n~\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~if:nasm\n```python\nmov edi, 0\n\n\n\n~~", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nuse nasm\n```python\npython\npython\npython\npython\n```\npython\n\n\n\n~\n\n\n\n\n\n\n\n\n\n\ndef powerOfTwo(x):\n\t\nUse Call-Based format\n\n\n\n~\n\n\n```python\nmov", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nuse Call-Based format\n\nfunction power_of_two(x):\n\nUse Call-Based format\n\n\n~\n\n\n\n\n\n\n\n\n\n\n\n\n\npower_of_two(2) ==> False\n\n\n\n```python\nmov edi", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Python format\n\n\nUse Python format\n\n\n\n\t\nUse Python-Based format\n\n\n\nUse Python-Based format\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nmov edi", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Python format\n\n\n\n\nreturn power_of_two(x)\n\n# Example\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n# Example 3\n# Example 4\n_2\n# Example 5\n\n\t", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n \ncall power_of_two(x)\n  # => False\n\n \n\n# Examples\n\n# Use Python format\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n## Examples\n\n\n\n\n\n\n# Example 2:\n\n~~", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn x > 0\n\n\n## Examples\n\n### Example\n\n\n\nUse Python format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\npower_of_two(1)\n\n\n\n```", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\npython\npython\npython\npython\npython\npython\npython\n\npython\npython\n\npython\n\n\n\n\n\n~\n\n\t\n\n\n\n\n\n\n\n\n\n## Examples\n\n\n\n\n\n# Examples\n## Examples\n\n\n>>> from utool.", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n# Examples\n\n# Use Python format\n\n# Use Python-Based format\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\npowerOfTwo(2)\n\n\n\n## Example\n\n\n\n\n\n\n```python\nmov edi, 0", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n# Examples\n\n# Usage-Based format\n#\nUse Call-Based format\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples\n#\n\n\n\n\n# Example 1:\n#\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ncall power_of_two(x)\nreturn x\n\n## Examples\n\n\nuse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n\n### Number format\n## Examples:\n\n#", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Python format\n\n\nUse Python code\n\nreturns false\n\n\n\n# Use Python-Based format\n\n\n\n\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> print('# Power_of", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Python format\n\n\nUse Python code\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\npower_of_two(2)\nreturn False\n\n\n\n\n>>> from backports.n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n# power_of_two(x):\n\n\n\n\n\n\n\n\n\n\n\n\npower_of_two(0)\n\n# Example\n#\n\n\n\n# Use Python\n#\nif (", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nuse Call-Based format\n\n## Examples\n\n\nUse Python-Based format\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n## Examples\n## Examples\n\n## Examples\n\n~\n\n\n\n>>> from any_", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\npython\npython2\npython3\npython3\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n# if\nif (nasm)\n```python\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Use Call-Based format\n\n#\n\npower_of_two(1024)  ==> False\n\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\npower_of_two(2)\n==> True\n\n\n\n# Beware:\n\n~~~"], "prompt": "\nQUESTION:\nComplete the function `power_of_two`/`powerOfTwo` (or equivalent, depending on your language) that determines if a given non-negative integer is a [power of two](https://en.wikipedia.org/wiki/Power_of_two).  From the corresponding Wikipedia entry:\n\n> *a power of two is a number of the form 2^(n) where **n** is an integer, i.e. the result of exponentiation with number two as the base and integer **n** as the exponent.*\n\nYou may assume the input is always valid.\n\n## Examples\n\n~~~if-not:nasm\n```python\npower_of_two(1024) ==> True\npower_of_two(4096) ==> True\npower_of_two(333)  ==> False\n```\n~~~\n~~~if:nasm\n```\nmov edi, 0\ncall power_of_two    ; returns false (zero)\nmov edi, 16\ncall power_of_two    ; returns true (non-zero)\nmov edi, 100\ncall power_of_two    ; returns false\nmov edi, 1024\ncall power_of_two    ; returns true\nmov edi, 20000\ncall power_of_two    ; returns false\n```\n~~~\n\nBeware of certain edge cases - for example, `1` is a power of `2` since `2^0 = 1` and `0` is not a power of `2`.\ndef power_of_two(x):\n\t\nUse Call-Based format\nANSWER:\n"}}