{"4674": {"code": ["\n#\n\n#\n\n\n\n# Note:\n#\n# Notes:\n#\n#\n\n\n\n\n\n\n# Note:\n#\n\n\n\n#\n#\n# Note:\n#\n\n\n# Notes:\n#\n# Notes:\n#\n# Notes:\n#\n# Notes:\n# Notes:\n\n### Example:\n\n\n\n\n", "\n\n\n\n# Notes:\n\n\n\n\n\n# Notes:\n#\n\n\n# Notes:\n#\n\n\n\nst = \"COLIN,AMANDBA,AMANDAB,CAROL\"\n\n# Notes:\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n-\n\n\n\n\n# Notes:\n\n\nnames: \"", "\n\n\n# Notes:\n#\n\n\n\n# Notes:\n#\n\n# Notes:\n#\n# Note:\n\n\n\n\nst, we, n, weights, length, length, length, length, weight, som, weight\n# Notes:\n\n\n\n\n\n\n\n\n\n\n# Notes:\n\n\n\n# NOTE:\n#     st: \"", "\n\n\n# Use Call-Based format\n\nnames: \"COLIN,AMANDBA,AMANDAB,CAROL\"\nweights: [1,2,3]\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n#\n\n\n\n# Example:\n#\n\n# The function should return the", "\n\n\n# Examples:\n# 1:\nst = \"A\", we = \"B\"\n# 2:\n\n#\n\n# Examples:\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n### Example:\n\n- names: \"colin,amandba\"\n\n\n\n\n\n\n\n\n\n# TODO", "\n\n\n\n\n\n\n\n\n\n\n\n# Notes:\n#\n# TODO:\n\n- Run a task,\n# NOTE:\n\n-\n\n\nst, we, n, weights\n\n\n\n\n\n### Example:\n\n#\n\n\n\n# Notes:\n\n\n\n# Notes:\n\n\n# Notes:\n#\n# names: \n\n", "\n# Examples Test Cases:\n\n\n\n\n\n\n\n\n\n# Example:\n\n-\n\n\n\n\nst = \"COLIN\"\nwe = \"COLIN\"\n\n### Example:\n\n-\n\n\n\n\n### Example:\n\n-\n\n\n\n\n\n\n\n# Example:\n\n#\n\n# names: \n\n# firstnames:", "\n\n\n\n\n\n\n\n\n\n\n# Notes:\n\n-\n\n\nst: \"COLIN,AMANDBA,AMANDAB,CAROL\"\nwe: \"CAROL\"\n\n### Example:\n\n-\n\n\n\n\n\n\n\n\n\n\n\n# Notes:\n#\n\n# Example:\n\n# names: \n\nst", "\nUse Call-Based format\n\n# Notes:\n\n\n\n\n\n# Notes:\n# Notes:\n\n# Notes:\n# Notes:\n# Notes:\n#\n\n# Notes:\n#\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n\n\n\n\n\n# Notes:\n#\n\n\n\n\n\n# Notes:\n# how often", "\n# Run-Based format\n# Example:\n#\n\n# Note:\n#\n\n\n\n\n# Notes:\n# Notes:\n# Note:\n\n\n\n# Notes:\n\n\n\n\n\n\n\n\n\n# Return:\n\n\n\n\n\n\n### Example:\n\n###\n\n\n\n# Notes:\n#\n\n# Notes:\n# `", "\n# Example:\n#\n\n# Example:\n#\n\n\n# Notes:\n#\n\n\n\n# Use Call-Based format\n# Note:\n#\n\n\n\n\n\n\n\n\n-\n\t\n# Notes:\n#\n\n\n# Notes:\n#\n\n# Notes:\n#\n\n# Example:\n#\n\n### Example:\n\n\n", "\n\n\n# Notes:\n#\n\n\n# Notes:\n#\n\n# Notes:\n#\n#\n\n\n\nname, som, n, weights\n# Notes:\n#\n\n\n\n# Notes:\n#\n\n\n# Notes:\n# Notes:\n# Notes:\n#\n\n\n\n\n# Example:\n#\n\n### Example:\n\n\n", "\n# Notes:\n#\n\n# Notes:\n#\n\n\n\n# Notes:\n# Notes:\n#\n\n# Notes:\n#\n\n\n\n\n\n\n\n\n\n# Notes:\n#\n#\n\n\n### Note:\n#\n\n\n\n\n\n# Notes:\n#\n#\n\n# The rank for a participant is given by the number `", "\n# Notes:\n#\n\n# Notes:\n#\n\n\n\n- Return:\n\n- return: the firstname of the participants with the rank `n`.\n\n### Example:\n\n-\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n\n\n\n\n\n\n\n# Notes:\n#\n\nnames = [\n  \"COLIN", "\n\n\n\n# Notes:\n#\n\n\n\n\n\n# Notes:\n#\n\n\n# Notes:\n#\n\n\n\nn: 2\n\n### Example:\n\n#\n\n\n\n\n# Notes:\n#\n\n# Notes:\n#\n\n\n\n### Example:\n\n#\n\n\n\n\n# Notes:\n\nnames = [1,", "\n# Example:\n#\n\n\n\n\n\n# Notes:\n#\n\n#\n\n\n- name: `som` is the firstname of the participant.\n\n- rank: `n` the rank of the participant. \n\n# Notes:\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n#\n\n# names: \"COL", "\n# Example:\n#\n\n\n\n\n#\n\n\n# Notes:\n#\n# return:\n\n\n\n\n\n \n# Winner:\n#\n\n\n\n\n#\n# return: [firstname, som, n]\n\n### Example:\n#\n\n\n\n\n\n\n\n### Example:\n\n- parameters:\n\n-\nnames:", "\n\n\n# Note:\n#\n\n\n\n\n# Notes:\n#\n\n\n\n\n\n\n# Note:\n#\n\n\n\n\n# Return:\n\n# Name (firstname, rank, weight)\n# Weight (int)\n# Length (int)\n\n### Example:\n\n#\n\n\n\n\n\n\n\n\n# Besides `a", "\n\n\n\n\n\n\n# Note:\n# The function should return a string.\n# Notes:\n#\n\n# Notes:\n#\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n\n# Wishes for a more general use case\n#\n# `n`: 1\n#\n#\n\n\n# the number of participants\n#\n# rank", "\n# Example:\n#\n\n\n\n\n# Examples:\n#\n# Note:\n#\n\n\n# Notes:\n#\n\n\n\n\n\n\n\n\n# Notes:\n#\n\n\n\n\n# Example:\n#\n\n# Note:\n#\n# Notes:\n#\n# Notes:\n#\n#\n# TODO:\n#     st, we"], "prompt": "\nQUESTION:\nTo participate in a prize draw each one gives his/her firstname. \n\nEach letter of a firstname\nhas a value which is its rank in the English alphabet. `A` and `a` have rank `1`, `B` and `b` rank `2` and so on. \n\nThe *length* of the firstname is added to the *sum* of these ranks hence a number `som`. \n\nAn array of random weights is linked to the firstnames and each `som` is multiplied by \nits corresponding weight to get what they call a `winning number`.\n\nExample:\n```\nnames: \"COLIN,AMANDBA,AMANDAB,CAROL,PauL,JOSEPH\"\nweights: [1, 4, 4, 5, 2, 1]\n\nPauL -> som = length of firstname + 16 + 1 + 21 + 12 = 4 + 50 -> 54\nThe *weight* associated with PauL is 2 so PauL's *winning number* is 54 * 2 = 108.\n```\nNow one can sort the firstnames in decreasing order of the `winning numbers`. When two\npeople have the same `winning number` sort them *alphabetically* by their firstnames.\n\n### Task:\n\n- parameters: `st` a string of firstnames, `we` an array of weights, `n` a rank \n\n- return: the firstname of the participant whose rank is `n` \n(ranks are numbered from 1)\n\n### Example:\n```\nnames: \"COLIN,AMANDBA,AMANDAB,CAROL,PauL,JOSEPH\"\nweights: [1, 4, 4, 5, 2, 1]\nn: 4\n\nThe function should return: \"PauL\"\n```\n# Notes:\n- The weight array is at least as long as the number of names, it can be longer.\n\n- If `st` is empty return \"No participants\".\n\n- If n is greater than the number of participants then return \"Not enough participants\".\n\n- See Examples Test Cases for more examples.\ndef rank(st, we, n):\n\t\nUse Call-Based format\nANSWER:\n"}}