{"4327": {"code": ["\n\n\nKata based on \"Chameleon\" puzzle: https://www.braingames.ru/?path=comments&format=call-based\n\n\n\n\n  \n\n  \n\n\n  \n  \n  \n\n  \n  \n\n\n  \n\n  \n\nStory:  \n**Story**  \nStory:  \n\n  \n", "\t\nUse Call-Based format\n\n\n\n\n\nStory:  \nKata based on \"Chameleon\" puzzle.  \n\n*Input:*  \nChameleons are coded as integer\n\n  \n\n\n\n\n\n\n\n\n  \n\n\n\n  \n\n  \n\nStory:  \n  \n  \n**Story**  \n", "\nCall-Based format\n\n\n\n\nStory:  \n\nChameleon:  \nChameleons are only considered if they have different color.  \n\n**Usage**  \nKata based on \"Chameleon\" puzzle\n  \n\n\n\n\n\n\n  \n\n\n\n  \n  \n\n\n\n  \n  \n\n\n  \n  ", "\nUse Call-Based format\n\n\n\nKata:\n  \nChameleons\n  \n\n\n\n\n\n\n\nStory:  \n\n**Story:**  \nChameleon\n  \n\n  \n  \n  \n\n\n\n\n\n\n\n  \n\nStory:  \nChameleon\n  \n\n\n**Story:", "\nUse Call-Based format\n\n\n\nCall-Based format\n\nStory:*  \nKata.Chameleon(chameleons, desiredColor):\n\nUse Call-Based format\n\n**Story:*  \n\n\n\n\n\n\n   \n\n\n\n\n  \n\n\n\n  \n  \n\n  \n  \n  \n**Story:", "\n`Kata.Chameleon`:\nCall-Based format\n\n\n\n\nStory:  \n**Story**  \nKata based on \"Chameleon\" puzzle:\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n  \n  \n\nStory:  \n**Story**  \n\n\n**Story:", " \n\nUse Call-Based format\n\n\n\n\nKata:\n\nStory:   \n\n*Input:*  \nChameleons are coded as an array of integers\nChameleons are counted from 0 to 5. \n\n\n\n\n\n\n\n  \n\n\n\n  \n  \n\n\n\n\n  \n  \n  \n  \n  \n**Story", "\nUse Call-Based format\n\n\n\nKata(chameleons, desiredColor):\n\nUse Call-Based format\n\n\nStory:  \n\n\n\nStory:  \n\n  \n\n  \n\n\n\n\n\n  \n  \nStory:  \n**Story**  \nThe chameleon is a population\n\n\n\n  \n**", " \n\t\tReturn type `int`\n\t\nTIP:  \n\t\tReturn type `int`\n\n\n\n\n\n\n\n\n\nStory:  \n\n**Problems**  \n\n\n  \n  \n\n  \n\n\n\n  \n\nStory:  \n**Story**  \nThe island.  \n\n\n\n\n**Story:", "\nUse Call-Based format\n\n\nChameleon on island: \n\n*Input:*  \nChameleons to change color\n  \n\n  \n\n\n\n\n\n  \n\n\n  \n  \n  \n\n\n\n\n\n\n\nStory:  \n**Story**  \nStory island:  \n\n\n\n  \n**St", "\nCall-Based format\nEXAMPLE:\n  \n\n\n\n\nStory:  \n**Story:**  \nChameleon for the current color.\nChameleon for the current color:  \n\n\n\n\n\n\n  \n  \n\n\n\n  \n\n\n\n  \n  \n\nStory:  \n\n  \n**Story:**", "\nKata:\n  \n\n\nCall-Based format\n\nKata:\n  \nStory:  \nChameleon for a given color\n  \n\n\n\nStory:  \n\n  \n  \n  \n\n\n\n\n\n  \n      \nStory:  \n\n**Story**  \n\n\n  \n\n\n**Story**  \n", "\nCall-Based format\n\n\n\nStory:  \n  \nNote:  \n  \nChameleons can be applied to two or more chameleons. \n  \n*Input:*  \n\n\n\n\n\n  \n  \n  \n\n\n\n\n\n\n\n  \n\nStory:  \n**Story**  \n\n  \n**Story", "\nStory:  \n\nKata based on \"Chameleon\" puzzle\n\n\n\nNote:  \n**Keyword**  \nChameleons are used for testing.\n  \n*Input:*  \n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n  \n\nStory:  \n\n**Note**  \n\n  \n**", "\nUse Call-Based format\n\n\n\nStory:  \n\nChameleons to be considered a color.\n\nAUDIT:  \n\n\n\n:  \n\n\n\n\n  \n  \n\n \n\t\n  \n\n\nStory:  \n**Story**  \nChameleons can be made of three colors\n  \n\n\n  \n**", "\nUse Call-Based format\nCall-Based format\n\n\nStory:  \nChameleons start with a color.\n\nNote:  \n\n\nStory:  \n\n  \n  \n  \n\n\n  \n\n\n  \n\n  \nChameleons are for a given color. \n\n**Examples**  \n\n\n\n  \n**Story**", "\n\nUsage:\n\n*Input:*  \nChameleons starting population\n\n\n\n\n\n\n\n\nKata based on \"Chameleon\" puzzle\n\n*Output:*  \nChameleon starting population\n\n\n\n\n\n  \n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n**Story**  \nOn", "\n`Kata.Chameleon` is called.\n\n\n\n\nStory:  \n*Input:*  \nChameleons are coded as integer\nChameleons are considered to be in the correct format.\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n**Story**  \nOn some", "\nUse Call-Based format\nStory:  \n\n\n\n\nStory:  \n**Story**  \n\nChameleons are given by color\n\n**Input:*  \nChameleons are coded as integer\nChameleons are\n\n\n\n\n\n\n\n\n\n   \n  \n\n\n\n\n  \n  \n  \n  \n  \n", "\n\nUse Call-Based format\n\n\n\nCall-Based format\n\nStory:  \n\nStory:  \n\nChameleon:\n  \nChameleons:\n  \n\n\n\n\n\n\n  \n\n  \n\n\n\n\n\n\n\n\n\nStory:  \n**Story**  \nStory:  \n\n  \n**"], "prompt": "\nQUESTION:\n**Story**  \nOn some island lives a chameleon population. Chameleons here can be of only one of three colors - red, green and blue. Whenever two chameleons of different colors meet, they can change their colors to a third one (i.e. when red and blue chameleons meet, they can both become green). There is no other way for chameleons to change their color (in particular, when red and blue chameleons meet, they can't become both red, only third color can be assumed).  \nChameleons want to become of one certain color. They may plan they meetings to reach that goal. Chameleons want to know, how fast their goal can be achieved (if it can be achieved at all).\n\n**Formal problem**  \n*Input:*  \nColor is coded as integer, 0 - red, 1 - green, 2 - blue.\nChameleon starting population is given as an array of three integers, with index corresponding to color (i.e. [2, 5, 3] means 2 red, 5 green and 3 blue chameleons). All numbers are non-negative, their sum is between `1` and `int.MaxValue` (maximal possible value for `int` type, in other languages). Desired color is given as an integer from 0 to 2.  \n*Output:*  \n`Kata.Chameleon` should return *minimal* number of meetings required to change all chameleons to a given color, or -1 if it is impossible (for example, if all chameleons are initially of one other color).  \n  \n**Notes and hints**  \n-- Some tests use rather big input values. Be effective.  \n-- There is a strict proof that answer is either -1 or no greater than total number of chameleons (thus, return type `int` is justified). Don't worry about overflow.  \n  \n**Credits**  \nKata based on \"Chameleons\" puzzle from braingames.ru: http://www.braingames.ru/?path=comments&puzzle=226 (russian, not translated).\ndef chameleon(chameleons, desiredColor):\n\t\nUse Call-Based format\nANSWER:\n"}}