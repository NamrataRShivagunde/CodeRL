{"3046": {"code": ["\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\nin2015\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nn = 0\n\n\n\n\n# n = 10\n# n = 5\n\n\n\n\n```python\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nin2015\n\n\n\n\n\n\n\n1\n0110\n01101001\n\n\n\n\n\n\n\n\n\n\n\n\n1 1 2 3 3 4 4 4 4\n2 1 3 3 4 4 4\n\n\n\n\n\n\n```python\n#", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\nin2015\n\nThis is a test-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"011001101001\"\n\n\n\n# Thue-Morse\n#\n\n\n\n\n\n```python\n#!", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1,1,1,1,1,1,1\n\n```python\npython3\n```\n\n\n\n\n\n\n```python\n#", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n```python\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n##\n\n## Thue-Morse\n\n\n\n\n\n```", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\nin2015\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\npython3\n\n\n#!python\n#python3\n\n\n\n\n\n```python\n#", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\nin2015\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = 1\nthue_morse(1);  # a valid integer\n\n\n\n\n\n\n```python\n#!/bin/", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n#\n1\n2\n5\n10\n101\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# [Alt]\n# [Alt]\n#\n# 1\n# 1\n#\n\n\n\n\n``", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\npython\n#!python\n#!python\n\n\n\n\n\n\n\"#1\"\n#1\n\n\n```python\n#!python\n#", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n1\n1\n1\n1\n1\n1\n1\n2\n1\n1\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nthue_morse(", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\nin2015\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\npython\nthue_morse(10);  #\"0110\"\n```\n\n\n\n\n\n\n\n\n# The first n dgits are the first n", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n```python\npython3\n\nthue_morse(5);  #\"01\"\n```\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nthue_morse(1);  #\"01101\"\n```\n\n\n\n\n\n\n\n\n```python\nif n >=", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\n\nin2015\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"0110100110\"\n\n\n```python\n# python3\n\n# Thue-Morse\n\n\n\n\n```python", "\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExample:\n\n@myjinxin2015\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\npython3\n\n```\n\n\n\n\n\n```python\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\npython3\npython3\n```\n\n\n\n\n\n#1\n0\n1\n\n\n\n```python", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n  #  Use Call-Based format\n\n#  #  #  #  #  #  #\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n:\n\nin2015\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n```python\npython thue_morse(10);  #\"0110100110\"\n```\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n:\n\nUse Call-Based format\n\nin2015\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n1\n\n\n\n![alt](https://en", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n#   1\n0\n1\n\n#   10\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n#\n## NOTE:\n## Examples\n#\n##\n##\n##\n\n\n\n\n\n\n#\n# 1st"], "prompt": "\nQUESTION:\nGiven a positive integer `n`, return first n dgits of Thue-Morse sequence, as a string (see examples).\n\nThue-Morse sequence is a binary sequence with 0 as the first element. The rest of the sequece is obtained by adding the Boolean (binary) complement of a group obtained so far.\n\n```\nFor example:\n\n0\n01\n0110\n01101001\nand so on...\n```\n\n![alt](https://upload.wikimedia.org/wikipedia/commons/f/f1/Morse-Thue_sequence.gif)\n\nEx.:\n```python\nthue_morse(1);  #\"0\"\nthue_morse(2);  #\"01\"\nthue_morse(5);  #\"01101\"\nthue_morse(10): #\"0110100110\"\n```\n\n- You don't need to test if n is valid - it will always be a positive integer.\n- `n` will be between 1 and 10000\n\n[Thue-Morse on Wikipedia](https://en.wikipedia.org/wiki/Thue%E2%80%93Morse_sequence)\n\n[Another kata on Thue-Morse](https://www.codewars.com/kata/simple-fun-number-106-is-thue-morse) by @myjinxin2015\ndef thue_morse(n):\n\t\nUse Call-Based format\nANSWER:\n"}}