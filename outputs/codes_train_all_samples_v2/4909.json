{"4909": {"code": ["::\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\ndef __repr__(self):\n\t\n:\n:\nWrite\n\n:\n:\n\n:\n\n\nUse Call-Based format\n\n\n\n\nWrite a class Random that does not accept a", "::\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef __init__(self, seed):\n\t\n\n:\n\nWrite a class Random\n\n\n:\n:\n\n\n:\nUse Call-Based format\n\n\n\n`\n\n\n\n\nWrite a class Random that does not accept a", "::\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\ndef __init__(\t:\n\n\t\n:\n\n:\n\n\nUse Call-Based format\n>>> random.random()\n123\n\n>>>\n\nWrite", "::\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\ndef __init__(self, seed):\n\t\n:Write\n\n\n:\n\n:\n\n\n\n\n\n>>> random.seed\n10\n\n>>>\n\nWrite a class", ":\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\ndef __init__(self\n:\ndef __init__(\n\t:\n:\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\npython\n`\n\n\n\n\n\nWrite a class Random that does", "::\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\n\t\n:\nWrite\n\t\n:\n:\n\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n\nWrite a class Random that does not", "::\n\nUse Call-Based format\nUse Call-Based format\n:\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\n\ndef __init__(self, seed):\n\t\n\n:Write a class Random\n\n\n\n:\n\n:\n9\n```python\n\n\n\n\n>>>\n\nWrite a class Random that does not", "::\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\nclass Random(int, float):\n\ndef __init__(self, seed):\n\t\n::Write a class Random\n\n\n:\n:\n\n:\n\n\n\nUse Call-Based format\n\n\n\n\nWrite a class Random that does not use", "::\n\n\nUse Call-Based format\n:\n\n\nclass Random(int):\n\t\nUse Call-Based format\ndef __init__(self, seed):\n\t\n::\nWrite a class Random\n\nclass Random(int):\n\t\t:\n:\n\t\n:\n\n\nUse Call-Based format\n`\n\n>>> from random import\t\nWrite a", "::\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\ndef __init__(self, seed):\n\t\nuse Call-Based format\ndef __init__(self, seed):\n\t\n\n:\nWrite a class Random\n\n\n:\n:\n\n:\n\n\n\n\n\n\n\n\n\n\nWrite a class Random that does not do", "::\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\ndef __init__(\n:\nWrite\n\n:\n:\n\n\nUse Call-Based format:\n\n\npython\n\n\n\n\n\nWrite a class Random that does not do", "::\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\ndef __init__(self, seed):\n\t\nuse Call-Based format\nclass Random(seed):\n\t\n\n:\nWrite a class Random\n\n\n:\n:\n\n:\n9\n```python\n`\n\n`\n\n\n>>> from random import\n\nWrite a", "\n:\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef __init__(self, seed):\n\t\n\t:\n\nWrite a class Random\n\n\n\n:\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\n\n\n\n\nWrite a class Random that does not do", ":\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\nclass Random(int):\n\n:\n:\nWrite\ndef __init__(\t:\n:\n\n:\n\n\n\nUse Call-Based format\n\n\n\n>>> with\n\t\nWrite a", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\nclass Random:\n\t\n:\nWrite a class Random\n\n\n\t:\n:\n\n\nUse Call-Based format:\n\n\npython\n`\n\n>>>\n\n\nRead a class Random:\n", ":\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\nclass Random(int):\n\n:\nWrite a class Random\n\n\n:\n:\n\nUse Call-Based format:\n\n\npython\n`\n\npython\n>>>\n\nWrite a class Random", "\n:\nUse Call-Based format\n\nUse Call-Based format\n:\n`\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\ndef __init__(self\n:\nWrite a class Random\n\n\n\t:\n:\n\n\n:\n\n3.\n\n\n\n\n\n>>> Random()\n0\n>>>\n\nWrite a", ":\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n`\n\n\ndef __init__(self, seed):\n\t\nUse Call-Based format\nclass Random(seed):\n\t\n\n:\nWrite a class Random\n(\n:\n:\n\n\n:\n\n\n\n`\n\n\n\n\nWrite a class Random that does not accept a", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\ndef __init__(self, seed):\n\t\nuse Call-Based format\ndef __init__(self, seed):\n\t\n\n:\nWrite a class Random\n(\n:\n:\n\n:\n\n\npython\n`\n\n\n\n\n\n    The `seed` argument", "::\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format:\n\n\ndef __init__(self, seed):\n\t\n\t:\nWrite a class Random\n\n\n\t:\n:\n\n:\n\n\n\nUse Call-Based format\n\n\n>>> random = Random(10)\n\n>>>\n\nWrite"], "prompt": "\nQUESTION:\nWrite a class Random that does the following:\n\n1. Accepts a seed\n```python\n>>> random = Random(10)\n>>> random.seed\n10\n```\n\n2. Gives a random number between 0 and 1\n```python\n>>> random.random()\n0.347957\n>>> random.random()\n0.932959\n```\n\n3. Gives a random int from a range\n```python\n>>> random.randint(0, 100)\n67\n>>> random.randint(0, 100)\n93\n```\n\nModules `random` and `os` are forbidden.\nDont forget to give feedback and your opinion on this kata even if you didn't solve it!\ndef __init__(self, seed):\n\t\nUse Call-Based format\nANSWER:\n"}}