{"4179": {"code": ["\n### Game\n### Game\n### Game\n\n\n\n\n\n### Game\n### Hard to be used\n### Hard to be used for a game on a chessboard\n### Hard to be used for a game\n### Hard to be used for a game on a chessboard\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n### Game\n\n### Game\n\n\n\n\n\n\n### Game\n\n### Game\n\n### Examples\n\n### Game\n\n### Game\n\n### Game\n\n## Functions\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n    *lang", "\n### Game\n\n\n\n\n\n\n### Game\nThe function called 'game' returns a string. \n\n### Game\nThe number of chessboard is a number of chessboard. \n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Game\n *", "\n### Game\n\n### Game\n\n### Game\n\n\n\n\n### Game\n\n#### Examples\n\n### Game\n\n\n### Game\n\n\n### Steam\n\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task\n\n\n\n\n\n\n\n\n\n\nnumerator, denominator\n\n\n case where the result is a", "\n### Game\n\n## Game\n\n\n\n\n### Number\n\nThe number of chessboards on the bottom.\n\n### Game\n\n\n\n\n\n\n\n\n\n\n### Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Tutorial\n\n### Game\n action is", "\n### Game\n\n\n\n\n### Game\n\n### Game\n\n\n\n\n\n### Game\n\n### Functions\n###\n\n\n\n\n### Game\n\n### Players\n\n### Reactions\n\n### Safety\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function called 'game' is", "\n### Game\n\n\n\n\n\n\n\n\n\n\n\n### Number\n\n function called 'game' returns a string that mimicks the result of the stack.\n\n### Functions\n###\n\n###\n\n### Result\n\n### Result\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Result\n\n\n\n\n\n\n\n\n\n\n return value", "\n### Game\n\n\n\n\n\n### Game\n\nWould I play a game on a chessboard?\n\n### Game\n\n\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function called 'game'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function called 'game'\n\n", "\n\n### Game\n\n### Game\n\n# Game\n\n\n\n\n### Game\n\n\n\n\n### Game\n\n## Functions\n\n### Game\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n function called 'game'.\n\n### Result\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n number is returned as", "\n### Game\n\n### Game\n\n\n\n\n\n### Game\n\n\n\n\n\n\n### Game\n\n### Game\n\n### Game\n\nGame on a chessboard\n\n\n\n\n### Number\n\n### Number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Tasks\n\n\n\n answer is an array of", "\n### Game\n\n\n\n\n### Game\n\nThe function called 'game' returns a number of times.\n\n\n### Game\n\n\n### Game\n\n\n\n### Game\n\n\n\n\n\n\n\n\n### Photometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task\n\n\n\n\n\n\n\n stack is not modified.\n\n", "\n\n### Game\n\n### Game\n\n### Game\n\nBy row 1\n\nThe function called 'game' returns an array of integers.\n\n\n\n\n\n### Game\n\n\n\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Test\n answer is an", "\n\n### Game\n###\n\n\n\n### Game\n###\n\n\n\n### Game\n###\n\nThe game you are playing on a chessboard.\n\n\n\n\n### Task\n\n\n### Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n most used language - as in Fortran", "\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n### Stack\n\n\ngame' returns an array of integers.\n\n### Result\n\nRetredding:\n\n### Number\n\nThe number we are playing\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n array is actually written.\n", "\n### Game\n\n\n\n\n### Game\n\n\n\n\n\n### Game\n\n\n\n\nThe function called 'game' returns a string \n\ngame' returns a string\n\n### Task\n\n\n\n### Game\n function called 'game'\n\n function called 'game'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n first part is the", "\n\n### Game\n\n\n\n\n\n\n\n\n### Game\n### Functions\n###\n\n## Arguments\n###\n\n### Game\n###\n\n\n\n\n### Game\n###\n\n\n\n\n- Sixteenty:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"left\" value is the left-hand", "\n### Game\n\n\n\n\n\n### Number\n\nThis is an irreducible fraction\n\n\n### Function\n\n## Functions\n\n### Board\n\n### Number\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### References\n\n### References next", "\n### Game\n\n\n\n\n### Game\n\n\n### Game\n\n\n\n\n\n\n\n\n\n### Functions\n###\n\nThe function called 'game' returns a string.\n\n### Game\n\n\n\n\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task\n\n\n\n\n\n\n\n\n right way", "\n### Game\n###\n\n\n\n\n### Game\n### Game\n### Game:\n\n### Steam and House\n### Game\n### Game\n\n### Game\n### Game\n\n### Game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n result is an array", "\n### Game\n\n\n\n\n### Favorite\n\n### Game\n\n### Game\n\n\n### Result\n\n\n\n### Haskell\n\n## Game\n\n\n\n\n\n\n\n### Data\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task\n\n\n\n\n\n\n\n last two are"], "prompt": "\nQUESTION:\nWith a friend we used to play the following game on a chessboard\n(8, rows, 8 columns).\nOn the first row at the *bottom* we put numbers:\n\n`1/2, 2/3, 3/4, 4/5, 5/6, 6/7, 7/8, 8/9`\n\nOn row 2 (2nd row from the bottom) we have:\n\n`1/3, 2/4, 3/5, 4/6, 5/7, 6/8, 7/9, 8/10`\n\nOn row 3:\n\n`1/4, 2/5, 3/6, 4/7, 5/8, 6/9, 7/10, 8/11`\n\nuntil last row:\n\n`1/9, 2/10, 3/11, 4/12, 5/13, 6/14, 7/15, 8/16`\n\n\nWhen all numbers are on the chessboard each in turn we toss a coin. The one who get \"head\" wins and\nthe other gives him, in dollars, the **sum of the numbers on the chessboard**.\nWe play for fun, the dollars come from a monopoly game! \n\n### Task\nHow much can I (or my friend) win or loses for each game if the chessboard has n rows and n columns? Add all of the fractional values on an n by n sized board and give the answer as a simplified fraction.\n  \n- Ruby, Python, JS, Coffee, Clojure, PHP, Elixir, Crystal, Typescript, Go:\n\nThe function called 'game' with parameter n (integer >= 0) returns as result an irreducible fraction written as an array of integers: [numerator, denominator].\nIf the denominator is 1 return [numerator].\n\n- Haskell:\n\n'game' returns either a \"Left Integer\" if denominator is 1 otherwise \n\"Right (Integer, Integer)\" \n\n- Prolog:\n'game' returns an irreducible fraction written as an array of integers: [numerator, denominator].\nIf the denominator is 1 return [numerator, 1].\n\n- Java, C#, C++, F#, Swift, Reason, Kotlin:\n\n'game' returns a string that mimicks the array returned in Ruby, Python, JS, etc...\n\n- Fortran, Bash: 'game' returns a string\n\n\n- Forth: return on the stack the numerator and the denominator (even if the denominator is 1)\n\n\n- In Fortran - as in any other language - the returned string is not permitted\nto contain any redundant trailing whitespace: you can use dynamically allocated character strings.\n\n#### See Example Test Cases for each language\ndef game(n):\n\t\nUse Call-Based format\nANSWER:\n"}}