{"4579": {"code": ["\n## Input:\n\n## Output:\n\n## Effect:\n\n\n\n\n\n\n\n\n## Examples:\n\n## Examples:\n\n\n\n### Functions:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n      \n\n\n\n\n\n\n## Example:\n\n\n\n\n\n### Rule:\n", "\n# Rule:\n\n### Rule:\n\n# Rule:\n\n# Rule:\n\n\n\n\n## Example:\n\n\n\n### Examples:\n\n## Rule:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Rule:\n\n\n\n\n      \n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Rule:", "\n## Arguments:\n\n### Rule:\n\n### Rule(s):\n\n\n\n\n## Rule:\n\n# Rule(s):\n\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n      \n\n### Function:\n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n### Rules:\n\n\n\n", "\n## Description:\n\n\n\n\n### Rules:\n\n### Examples:\n\n   + pattern(8):\n\n\n\n\n## Example:\n\n## Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n      \n\n\n\n\n      \n\n\n\n## Example:\n\n\n\n\n\n\n### Rule:\n\n  ", "\n### Definition:\n\n## Rule:\n\n## Description:\n\n\n### Examples:\n\n## Rule:\n\n## Examples:\n\n## Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Rules:\n\n\n\n      \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n\n### Rule:", "\n\n\n### Example:\n\n### Example:\n\n### Examples:\n\n   8\n   17\n   16\n   24\n\n### Examples:\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Functions:\n\n       n\n      \n\n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n", "\n## Syntax:\n## Definition:\n## Examples:\n\n## Rules:\n\n\n\n\n### Example:\n\n### Rules:\n\n## Examples:\n\n\n\n\n\n\n\n### Examples:\n\n\n\n\n\n\n\n\n###\n\n      \n      \n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n## Task:\n\n\n\n", "\n\n\n\n\n### Examples:\n\n## Rules/Note:\n\n### Examples:\n\n  \n### Examples:\n\n  \n# Rule:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Rule:", "\n\n\n### Rules:\n\n## Example:\n\n### Examples:\n\n   - pattern(n):\n\n### Examples:\n\n   - pattern(16):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n      \n\n\n\n\n\n       \n\n\n## Parameters:\n\n\n\n\n\n\n## Examples:\n\n", "\n### Answers:\n\n## Formulas:\n\n### Data:\n\n### Rule:\n\n\n\n\n\n:\n\n\n\n\n\n### Example:\n\n## Rule:\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n       \n### Functions:\n\n\n\n\n\n\n\n\n\n## Task:\n\n###", "\n## Definition:\n\n### Description:\n\n## Description\n\n\n\n\n## Example:\n\n## Function:\n\n### Example\n\n## Examples:\n\n### Rules:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n      \n\n\n\n\n\n      \n\n\n\n### Example:\n\n\n\n\n\n\n\n### Rule", "\n\n\n## Example:\n\n# Example:\n\n## Examples:\n\n       n\n      \n      \n\n### Examples\n\n      \n      \n\n### Examples\n\n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n      \n      \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n\n\n#", "\n## Definition:\n## Definition:\n## Definition:\n## Definition:\n## Definition:\n# Definition:\n\n\n\n\n\n\n\n\n\n\n\n\n## Rule:\n\n\n\n\n\n\n### Printing:\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n## Task:\n\n### Rule:", "\n\n\n# Available functions\n## Methods:\n\n### Examples:\n\n## Examples:\n\n### Examples:\n\n### Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Rule:", "\n\n\n## Examples:\n\n   n = 11\n\n## Rules:\n\n  \n\n### Rules:\n\n   n = 11\n\n\n\n\n\n\n\n## Note:\n\n\n\n\n\n\n\n\n\n\n            \n      \n\n\n\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n### Task:\n\n### Task:", "\n\n\n\n\n\n\n\n\n### Description:\n\n### Examples:\n\n## Rules:\n\n### Examples:\n\n## Rules/Note:\n\n### Examples:\n\n# Rule:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n## Task\n", "\n### Program:\n\n###\n\n\n\n### Functions:\n\n## Functions:\n\n### Functions:\n\n# Functions:\n\n# Functions:\n\n# Functions:\n\n## Functions:\n\n# Functions:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n      \n\n\n\n\n\n\n## Example:\n\n", "\n## List of my katas\n\n## Examples:\n\n   * pattern(8):\n\n   * pattern(17):\n\n\n\n\n\n\n\n\n\n## Parameters:\n\n\n\n\n\n\n\n\n### Tasks:\n\n\n\n### Rules:\n\n\n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Rule:", "\n## Definition:\n\n# Definition:\n\n# Description:\n#\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n### Function:\n\n## Rule:\n\n# Rule:\n\n\n\n\n\n\n\n\n\n      \n      \n\n\n\n\n\n\n\n\n## Result:\n\n\n\n\n\n\n\n\n### Rule:\n", "\n## Examples:\n\n## Rule:\n\n### Rule:\n\n### Rule:\n\n## Rule:\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n\n\n\n\n      \n\n### Rules/Note:\n\n\n\n\n      \n\n\n\n\n\n\n## Rule:\n\n"], "prompt": "\nQUESTION:\n## Task:\n\nYou have to write a function `pattern` which returns the following Pattern(See Examples) upto n number of rows. \n\n* Note:```Returning``` the pattern is not the same as ```Printing``` the pattern.\n\n### Rules/Note:\n\n* The pattern should be created using only unit digits.\n* If `n < 1` then it should return \"\" i.e. empty string.\n* `The length of each line is same`, and is equal to the number of characters in a line i.e `n`.\n* Range of Parameters (for the sake of CW Compiler) :\n  + `n \u2208 (-50,150]`\n   \n### Examples:\n\n + pattern(8):\n\n       88888888\n       87777777\n       87666666\n       87655555\n       87654444\n       87654333\n       87654322\n       87654321\n       \n + pattern(17):\n   \n       77777777777777777\n       76666666666666666\n       76555555555555555\n       76544444444444444\n       76543333333333333\n       76543222222222222\n       76543211111111111\n       76543210000000000\n       76543210999999999\n       76543210988888888\n       76543210987777777\n       76543210987666666\n       76543210987655555\n       76543210987654444\n       76543210987654333\n       76543210987654322\n       76543210987654321\n\n\n[List of all my katas](\"http://www.codewars.com/users/curious_db97/authored\")\ndef pattern(n):\n\t\nUse Call-Based format\nANSWER:\n"}}