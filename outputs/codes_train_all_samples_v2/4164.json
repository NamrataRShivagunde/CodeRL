{"4164": {"code": [":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format\n:\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n```python\n\n", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nSTRING:\n\nUse Call-Based format:\n\n\n\n:\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\n\n[A-Z]\n\n    The", ":\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n## Example:\n\n# ", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n\n\n\n-----\n\n\n## Examples:\n\n\n", ":\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n:\nWrite a function named `first_non_repeating_letter` that takes a string input\n\n\n:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n---\n\n## Examples:\n", ":\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n---\n\n\n## Example:\n\n#", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n    `first_non_repeating", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n    NOTE:\n   ", ":\n:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n# Example:\n#\n# Ch", ":\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\tIn the new challenge, the function returns the first non-repeating letter.\n\n\n\n\n\n:\n\n\n\n\n\t\nDEF", ":\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format:\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n## Examples:\n\n", ":\nUse Call-Based format\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\t# TODO:\n\t# This function should be", ":\n\t\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n        TODO:\n\n        :param string:\n\t", ":\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\nUse Call-Based format\n\n\n:\n:\n\n\t\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n## Examples\n##\n\n# Two functions:", ":\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n    @first_non_repeating_letter", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\t\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n### Example Usage:", ":\n:\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\nDEFINE:\nUse Call-Based format\nEXAMPLE:\n\n# Example:\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n## Example:\n\n#  This", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\nUse Call-Based format\n:\n:\n\n\n\n\n\nQUESTION:\n\n    If a function", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n    #  Here you can write", ":\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n# Choices:\n#  *Use function"], "prompt": "\nQUESTION:\nWrite a function named `first_non_repeating_letter` that takes a string input, and returns the first character that is not repeated anywhere in the string.\n\nFor example, if given the input `'stress'`, the function should return `'t'`, since the letter *t* only occurs once in the string, and occurs first in the string.\n\nAs an added challenge, upper- and lowercase letters are considered the **same character**, but the function should return the correct case for the initial letter.  For example, the input `'sTreSS'` should return `'T'`.\n\nIf a string contains *all repeating characters*, it should return an empty string (`\"\"`) or `None` -- see sample tests.\ndef first_non_repeating_letter(string):\n\t\nUse Call-Based format\nANSWER:\n"}}