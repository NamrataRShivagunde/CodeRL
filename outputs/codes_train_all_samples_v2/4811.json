{"4811": {"code": ["Use Call-Based format:\nUse Call-Based format\n\n6\n\n\nUse Call-Based format\n\n\n\n:\n\n\n>>> a.x + c.y\n3\n>>> c.x\n6\n\n:\n:\n\n\n:\n>>> Vector(3, 3).add(3)\n6\n\n\n\n\n\n\n\n```python\n>>> from", "\nUse Call-Based format:\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n6\n>>> c = a.add(b)\n>>> c.x\n3\n>>> c.y\n5\n\n:\n\n\n:\n:\n\n\n:\n\n>>>\n6\n\n\n\nUse Class-Based format\n:\n\n\n\n\nx =", "Use Call-Based format:\nUse Call-Based format\n\n6\n\n\nUse Call-Based format\n\n\n6\n>>> a.add(b)\n3\n>>> c.add(a)\n6\n\n:\n\n\n:\n:\n\n\n:\n\n`x` and `y`\n\n\n\n\n\n.add()\n\nThe\n\n\n``", "\nUse Call-Based format:\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\nAdd two vectors together\n\n>>> b.x\n3\n>>> b.y\n5\n\n:\n:\n\n\n:\nUse Call-Based format\n>>>\n6\n\n\n\n\n.x\n3\n>>>\n\n\n```python", "Use Call-Based format:\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n3\n>>> b\n4\n>>> c.y\n6\n```\n\n\n:\n\n\n>>>\n:\n:\n\n\n:\n>>> Vector(3, 4).add(3)\n6\n\n\n\n.add()\n\nUsing\n\n\n``", "Use Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n.x\n5\n>>> a.y\n6\n\n\n>>>\n:\n\n\n>>>\n:\n:\n\n\n\nUse Call-Based format:\nUse Call-Based format\n>>>\n6\n\n\n\n:\n.add()\n\n>>>\n\n\nx:", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n6\n>>> a = a.add(b)\n>>> c.x\n6\n\n:\n\n\n>>>\n:\n:\n\n\n:\n>>> a + b\n3\n>>>\n6\n\n\n>>>\n\n:\n.\n\n\n```python", "\nUse Call-Based format:\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\n.x\n5\n>>> b.y\n6\n\n\n>>>\n:\n\n\n:\n:\n\n\n:\n\nUse Call-Based format\n>>>\n6\n\n\n\n\n.add()\n\nUse\n\n\nCreate a `", "\nUse Call-Based format:\n\n6\n\nUse Call-Based format\n:\n.x\n3\n>>> c.y\n6\n\n\n>>>\n:\n\n\n>>>\n:\n\n:\n\n\n\nUse Call-Based format\nUse Call-Based format:\n>>>\n4\n>>>\n\n\n\nUse Class-Based format\n:\n\n\n\n\n``", "Use Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n6\n>>> a.x\n1\n2\n>>> a.y\n2\n```\n\n\n:\n\n\n\n:\n:\n\n\n\n\nUse Call-Based format:\n>>>\n6\n>>>\n\n:\n.x\n\n\n\n```", "\nUse Call-Based format:\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n6\n>>> a = a.add(b)\n>>> c = c.add(a)\n```\n\n\n:\n\n\n::\n\n\n:\nUse Call-Based format\n>>>\n6\n>>>\n\n:\n.\n\n\tCreate a `", "\nUse Call-Based format:\n\n3\n\n6\n\n\nUse Call-Based format\n\n\n6\n>>> a.x\n3\n>>> b.y\n1\n\n:\n\n>>>\n:\n:\n\n\n\n:\nUse Call-Based format\n>>>.add()\n6\n\n\nUse Object-Based format\n:\n\n\nCreate a `Vector`", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n\n.x\n3\n>>> b.y\n2\n\n\n>>> a + b\n6\n>>> c\n7\n\n\n:\n\n\n\n:\n:\n\n\n:\n>>>\n6\n\n\n\n:\n\n.add()\n3\n>>>\n\n\n```", "\nUse Call-Based format:\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n:\n.y\n5\n\n\n>>> a = b + a\n>>> c = a\n>>>\n:\n\n\n\n::\n\n\n:\n\n>>>\n6\n\nUse Call-Based format\n\n\n\n\n\n\nx = Vector(3", "\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n5\n>>> a.x\n3\n5\n>>> a.y\n6\n\n:\n\n>>>\n:\n:\n\n\n:\n\n>>>\n6\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n>>> a =", "Use Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n>>> a.x\n6\n>>> b.y\n5\n>>> a.x\n5\n\n:\n\n\n:\n:\n\n\n:\n\n>>>\n6\n>>>\n\n\n\n:\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n>>>\n:\n\n\n>>>\n:\n:\n\n\n\n:\n\n>>> a.x\n3\n>>> a.y\n4\n>>> c.x\n6\n\n>>>\n\n:\n.add()\n\n\n\tx", "\nUse Call-Based format:\nUse Call-Based format\n\n\n\n\n\n\n\n2\n>>> c.x\n2\n>>> c.y\n6\n```\n\n\n:\n\n\n:\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format:\n>>>\n6\n>>>\n3\n\n:\n\n\n\n\n>>> a =", "\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n>>>\n:\n\n\n>>> a.x + b.y\n4\n>>> c.x\n6\n\n::\n\n\n:\n>>>\n6\n\n\n\nAdd two vectors together\n\n.x\n\n\nCreate a `Vector`", "\nUse Call-Based format:\nUse Call-Based format\n\n\n\n.x\n4\n>>> a.y\n6\n\n\n>>> c = a.add(b)\n>>> c.x\n5\n>>> c.y\n6\n```\n\n\n:\n\n\n:\n:\n\n\n:\n\n>>>\n\n:\n\n2\n\n\tx ="], "prompt": "\nQUESTION:\nCreate a `Vector` class with `x` and a `y` attributes that represent component magnitudes in the x and y directions.\n\nYour vectors should handle vector additon with an `.add()` method that takes a second vector as an argument and returns a new vector equal to the sum of the vector you call `.add()` on and the vector you pass in.\n\nFor example:\n\n```python\n>>> a = Vector(3, 4)\n>>> a.x\n3\n>>> a.y\n4\n>>> b = Vector(1, 2)\n>>> c = a.add(b)\n>>> c.x\n4\n>>> c.y\n6\n```\n\nAdding vectors when you have their components is easy: just add the two x components together and the two y components together to get the x and y components for the vector sum.\ndef __init__(self, x, y):\n\t\nUse Call-Based format\nANSWER:\n"}}