{"3822": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n#   paired:                   ^\n#   kept:                   ^\n\n#\n\n\n\n, 0, 1, 2, 0\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n#\n\n\n\n       == [1, 0, 0, 0, 0, 1, 0];\n#   kept: ^\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\nFor a given array", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\nNOTE:\n\n\n#   kept:                   ^\n#\n\n\n\n\n, 0, 1, 2, 0, 1\n\n\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nFor a given array whose element values are randomly picked from zero to 9, return an array with all `0`'s paired\n\n\n\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\nIf a given array has only one element", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n#  \n\n\n\n\n, 0, 0, 1, 2, 0]\n\n\n\n\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n               ^\n#   kept: ^         paired: ^-----^\n       == [0, 1, 2];\n#  \n\n\n,\n\n\n\n\n\n\n\n-----\n\nIf the array is not", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n         kept:               ^\n#   kept:                   ^\n\n#\n\n\n\n, 0, 1, 0, 1, 0\n\n\n\nUse Call-Based format\n\n\n\n\n\nFor a given", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0\n\n\n\n\n\n\n\n\nFor a given", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n       == [0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0]\n#   kept:\n\n\n,\n\n\n\n\n\n\n\n```python\n\n", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#   kept: ^\n\n#\n#   kept: ^\n\n\n, 0, 0, 0, 0, 0, 0\n\n\n\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n#\n#   kept: ^\n\n\n\n\n,\n\n\n\n\n\npair_zeros(arr)\n#\n\nFor a given array", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#   paired:     ^-----^\n#       [0, 1, 7, 2, 2, 0, 1, 0];\n#   kept:\n\n\n,\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n#   kept: ^-----^\n       == [0, 1, 2, 0, 1, 0];\n#\n\n\n,\n\n\n\n\n\n\n\n\n\n\n```python\narr =", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n#   paired:                ^\n#   kept:\n\n\n, 0, 1, 2, 0]\n\n\n\n\n\n\n\n\n\n-----\n\n\n#", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n, 1, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1\n\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n#  \n#   kept: ^\n\n\n\n, 0, 0, 0, 0, 0, 0]\n\n\n\n\n\n\n\n\n\nThe function takes three arguments", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n#   paired: ^-----^\n       == [0, 1, 2, 0];\n#  \n\n\n,\n\n\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n#   paired:      ^---^\n#   kept:      ^\n\n#\n\n\n\n,\n\n\n\n\n\n\n\n\n\n```python\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#   kept:                   ^\n#   paired:               ^\n#   kept:                   ^\n\n#\n\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\n```python\narr = [", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n#   paired: ^-----^\n       == [0, 1, 2, 0];\n#   kept: ^\n\n\n\n\n\n\n\n\n\n\n\nFor a"], "prompt": "\nQUESTION:\nFor a given array whose element values are randomly picked from single-digit integers `0` to `9`, return an array with the same digit order but all `0`'s paired. Paring two `0`'s generates one `0` at the location of the first.\n\nEx:\n```python\npair_zeros([0, 1, 0, 2])\n# paired: ^-----^ cull second zero\n       == [0, 1, 2];\n#   kept: ^\n\npair_zeros([0, 1, 0, 0])\n# paired: ^-----^\n       == [0, 1,    0];\n#   kept: ^\n\npair_zeros([1, 0, 7, 0, 1])\n# paired:    ^-----^\n       == [1, 0, 7,    1];\n#   kept:    ^\n\npair_zeros([0, 1, 7, 0, 2, 2, 0, 0, 1, 0])\n# paired: ^--------^ \n#        [0, 1, 7,    2, 2, 0, 0, 1, 0]\n#   kept: ^         paired: ^--^\n       == [0, 1, 7,    2, 2, 0,    1, 0];\n#   kept:                   ^\n```\n\nHere are the 2 important rules:\n\n1. Pairing happens from left to right in the array. However, for each pairing, the \"second\" `0` will always be paired towards the first (right to left)\n2. `0`'s generated by pairing can NOT be paired again\ndef pair_zeros(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}