{"3820": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nReturns the string\n```\n\n\n\n\n\u25a1 \u25a0 \u25a1 \u25a1 \u25a0 \u25a1 \n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)```\n\n\n\n\u25a1", "\n\n\n\nUse Call-Based format\n\n\n\n\nThe function should return a string\n```\n\nCheck a function which takes one parameter which is a number.\n\nReturns a string\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n``\n", "\nUse Call-Based format\n\n\n\n\n\n\n**Call-Based format**\n\nUse Call-Based format\nANSWER:\n\nWrite a function which takes one parameter\n\n```python\n\n\n\n\n\n\n\n\n\n\n\ufffd\n\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(3)\n```\n\n\n\ufffd", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n\n\n\n```python\n\n\n\n\n\n\n\ufffd \n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n\n\n\u25a0 \ufffd", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\u25a1 \u25a1 \u25a1 \u25a1 \u25a1 \u25a1\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n```python\n\n\u25a1 \u25a1", "\nWrite a function which takes one parameter representing the dimensions of a checkered board.\n\n\n\n\n\n\n\n\nReturns the string\n```\n\n\n\n\n\u25a1 \u25a0 \u25a1 \u25a1 \u25a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\u25a0 \u25a1 ", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n\n```\n\nReturns the string\n```\n\n\n\n\n\n\n\n\n\u25a0 \u25a1 \u25a1 \u25a0\n\n\n:\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nReturns the string\n```\n\nreturns the string\n```\n\nNOTE:\n\n\n\n\u25a1\u25a0\u25a1\u25a0\u25a1\n\n\n\n\n\n\n:\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n\n\ufffd", "\nUse Call-Based format\n\n\n\n\n\n\n\n\npython\ncheckered_board(n)\n\n`python\ncheckered_board(5)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n**Note**\n\n\n\n\u25a1 ", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n\n\n\nWrite a function which takes one parameter:\n\n```python\ncheckered_board(5)\n```\n\n\n\n\n\n\n\ufffd\n\u25a1\n\n\n:\n\n\n\n\n\n\n\n''''')\n\n```python\n\n\u25a1 \ufffd", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nWrite a function which takes one parameter (the number)\n\n\n\u25a1 \u25a0 \u25a1 \u25a1 \u25a0\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n\ufffd", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nWrite a function which takes one parameter.\n\n\n\u25a1 \u25a1 \u25a1 \u25a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n\n\u25a1", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nreturns the string\n```\n\nreturns the string\n```\n\n\n\n\n\n\nreturns the string\n```\n\n\n\n\ufffd \n\n\n\n\n\n\n**Note**\n\n\n\n\n\n\n\n```python\n\n\n```python\n\ufffd", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nreturns the string\n```\n\nreturns the string\n```\n\n\n\n\u25a1 \u25a0 \u25a1 \u25a1 \u25a0\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n\n", "\nUse Call-Based format\n\n\n\n\nWrite a function which takes one parameter representing a size and returns a string\n\n\n\n\n\n\nreturns the string\n```\n\n\n\n\u25a1 \u25a0 \u25a1 \u25a1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nif all([\ufffd", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nWrite a function which takes one parameter (the number of squares)\n\nReturns the string\n```\n\n \n\n\n\n\n\ufffd\n\u25a0\n\u25a1\n\u25a0\n\n\n\n\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nWrite a function which takes a single parameter.\n\n\n\u25a1 \u25a1 \u25a1 \u25a0\n\u25a1 \u25a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \u25a1 \u25a1 ", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nreturns the string\n```\n\nuse Call-Based format\n\n\n\n\u25a1 \u25a0 \u25a1 \u25a0 \u25a1 \u25a1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''')\n\n```python\n\n\u25a1 ", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nuse Call-Based format\n\n```python\ncheckered_board(n):\n\nUse Call-Based format\n\n\n\n\n\n\n\ufffd\n\n\n\n\n\n\n**Note**\n\n\nUse Call-Based format\n\n\n\n\n\n```python\n\n\u25a0 \ufffd", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nreturns the string\n```\n\n**Returns**\n\nWrite a function which takes one parameter \n\n\n\n\n\n\n\ufffd \u25a1\n\u25a1\n\n\n:\n\n\n\n\n\n\n```python\ncheckered_board(5)\n```\n\n"], "prompt": "\nQUESTION:\nWrite a function which takes one parameter representing the dimensions of a checkered board. The board will always be square, so 5 means you will need a 5x5 board.\n\nThe dark squares will be represented by a unicode white square, while the light squares will be represented by a unicode black square (the opposite colours ensure the board doesn't look reversed on code wars' dark background). It should return a string of the board with a space in between each square and taking into account new lines. \n\nAn even number should return a board that begins with a dark square. An odd number should return a board that begins with a light square.\n\nThe input is expected to be a whole number that's at least two, and returns false otherwise (Nothing in Haskell).\n\nExamples:\n\n```python\ncheckered_board(5)\n```\n\nreturns the string\n```\n\u25a0 \u25a1 \u25a0 \u25a1 \u25a0\n\u25a1 \u25a0 \u25a1 \u25a0 \u25a1\n\u25a0 \u25a1 \u25a0 \u25a1 \u25a0\n\u25a1 \u25a0 \u25a1 \u25a0 \u25a1\n\u25a0 \u25a1 \u25a0 \u25a1 \u25a0\n```\n\n**There should be no trailing white space at the end of each line, or new line characters at the end of the string.**\n\n**Note**   \nDo not use HTML entities for the squares (e.g. `\u25a1` for white square) as the code doesn't consider it a valid square. A good way to check is if your solution prints a correct checker board on your local terminal.  \n\n**Ruby note:**\nCodeWars has encoding issues with rendered unicode in Ruby.\nYou'll need to use unicode source code (e.g. \"\\u25A0\") instead of rendered unicode (e.g \"\u25a0\").\ndef checkered_board(n):\n\t\nUse Call-Based format\nANSWER:\n"}}