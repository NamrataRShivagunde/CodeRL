{"3447": {"code": ["\n\n\t\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\t\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument.\n\n\n\n\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\n\nWrite a function name `", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```\nexample\n\n6    9\n36   49 \n\n```\n\n\n\n\n\n\n\n* Number", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n6    9\n36   49 \n0    -5   0 \n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nWrite a function name `nextPerfectSquare`.\n\n\n\n\n\nWrite a function name", "\t\nUse Call-Based format\t\n\n\n\nUse Call-Based format\t\t\nUse Call-Based format\n\n\n\n\t\n\n\n\n\t\n\t\n\n\nWrite a function name `nextPerfectSquare`\nUse Call-Based format\n\n\t\n\n\n\n```\n\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\nWrite a", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```\n\n\n\n\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\n\nWrite a function name `nextPerf", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument.\n\n\n\n\n\n\n\n```\n\n\nWrite a function name `nextPerfectSquare`.\n```\n\n\n\n\n\n\nWrite a function name", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument. \n\n\n\n\n\n\n\n\n\n\nn   next perfect square\n\t\n\n\n\n\n\n\nWrite a function name `", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument. \n\n\n\n\n\n\n\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\nWrite a function", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nWrite a function name `nextPerfectSquare`.\n```\nexample\n\n6    9\n-5   49\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a function name `nextPerfect", "\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n```\nif:csharp\ncaution!\n\nreturn 0\n```\n\n\n\n\n\n\n\n\nWrite a function name `next", "\n\n\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument.\n\n\n\n\n\n\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\nWrite a function name", "\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nWrite a function name `nextPerfectSquare`.\n\n\n\n\n\nWrite a function name `nextPerf", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nWrite a function name `nextPerfectSquare` to retrieve the first perfect square that is greater than its integer argument.\n\n```\n\n\t\n\n\n\n```\n\n\n\n\n\n\n\n```\n\nWrite a function name `nextPerfectSquare`", "\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n```\n\n\nUse Call-Based format\n\t\n\n\n\n\t\n\n\n\n\n\nn = 6*6*36*49*0\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nWrite a function name `nextPerfectSquare`", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```\nexample\n\n6    9\n36   49 \n-5   0 \n```\n\n\n\n\n\n\nWrite a function name", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\n\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(nextPerfectSquare(", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\nWrite a function name `nextPerfectSquare` to return the first perfect square that is greater than its integer argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a function name `nextPerfectSquare`", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\n\nWrite a function name `nextPerfectSquare`\n\nUse Call-Based format\n\n```\n\n\n\n\n\n\nWrite a function name `nextPerfectSquare` that", "\t\nUse Call-Based format\t\n```\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nWrite a function name `nextPerfectSquare` that returns the first perfect square\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nWrite a function name", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nWrite a function name `nextPerfectSquare`\n\n\n\n\t\n\n\n\n\n```\n\n\n\nUse Call-Based format\n\nn   next perfect square\n\t\n\n\n\n\n\nWrite a function name `"], "prompt": "\nQUESTION:\nWrite a function name `nextPerfectSquare` that returns the first perfect square that is greater than its integer argument. A `perfect square` is a integer that is equal to some integer squared. For example 16 is a perfect square because `16=4*4`. \n```\nexample\n\nn   next perfect sqare\n\n6    9\n36   49 \n0    1\n-5   0 \n```\n```if-not:csharp\ncaution! the largest number tested is closer to `Number.MAX_SAFE_INTEGER`\n```\n```if:csharp\nCaution! The largest number test is close to `Int64.MaxValue`\n```\ndef next_perfect_square(n):\n\t\nUse Call-Based format\nANSWER:\n"}}