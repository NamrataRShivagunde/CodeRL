{"3518": {"code": ["\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_file`.\n- '-' a symbolic link ==> `symlink`.\n- '-' A character special file.\n\n\n\n:\n\n\n\t\n:\n\n\n:\n\n\n", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n- '-' A file system type ==> `file`.\n- '-' A directory ==> `directory`.\n- '-' A regular file ==> `regularfile`.\n- '-' A block special file.\n- '-' A character special file.\n\n\n:\n\n\n\n\n:\n\n\n:\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n`file`.\n\n\n\t\nUse Call-Based format\n:\n\n\n`filetype` can be a character, a block or a device.\n\n\n\n:\n\n\n\n-\n\n\n\n- 'l' The file is", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_file`.\n- 'd'\n\n\n:\n\n\n\n\n:\n\n\n:\n\n\n\n:\n\n\n:\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n- '-' A file system type ==> `file_system_type`.\n- 'a' a directory ==> `directory`.\n- 'x' a block special file ==> `block_file`.\n\n\n\n:\n\n\n\t\n:\n\n\n:\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n- 'x' is a device.\n- 'x' is a device.\n- 'x' is a device.\n\n- 'z' is a device.\n- 'z' is a device.\n\n\n\n:\n\n\n\n\n:\n\n\n:\n\n\n\n\n\nION:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\nUse Call-Based format\n\nIMPORTANT:\n\nUse Call-Based format\n\n\n\t\n\n\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\nOn Unix system type files can be identified using the ls command.\n:\n\n:\n", "\nUse Call-Based format\n\n\n\n:\n\n- '-' A symbolic link ==> `symboliclink`.\n- '-' A character special file ==> `characterfile`.\n- '-' A block special file.\n- '-' A block special file.\n\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\t'''\n\tif", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\n-\n\n\n:\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\nUse Call-Based format:\n\n\n\n\n:\nfile_type\n\n\n\n\n\n\n\n## Example:\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_file`.\n\n- '-' a symbolic link ==> `symlink`.\n\n\n\n:\n\n\n\n\n:\n\n\n:\n\n", "\nUse Call-Based format\n\n\n\n:\n\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_file`.\n- '-' A character special file.\n- '-' A symlink ==> `symlink`.\n\n\n\n\n:\n\n\n\n\n:\n\n\n:\n\n:\n:\n\nION:\n\n\t", "\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n`\n\n\n\t\nUse Call-Based format\n:\n\n> `file`.\n\n\n\n:\n\nUse Call-Based format> `file`.\n\n\n\n\n\n\n:\n\n\n\n\n\n- 'f' a regular file ==> `", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_file`.\n\n- '-' A symlink ==> `symlink`.\n\n\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n-\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\n:\n\nUse Call-Based format> `file`.\n\n\n:\n\n-\n\n\nUse Call-Based format\n-\n\n\n\n\n- On Unix system type files", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n- '-' A file type ==> `file`.\n- '-' A directory ==> `directory`.\n- '-' A regular file ==> `regular_file`.\n- '-' A character special file ==> `character_file`.\n\n\n\n:\n\n\n\n\n:\n\n\n:\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_special_file`.\n- '-' A character special file ==> `character_file`.\n- '-' A socket ==> `socket`.\n\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n-\n-\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n:\n> `call`.\n\n- 'x' A binary file ==> `binary`.\n\n\n:\n\n\n\nOn Unix system type files can be identified with\n\n\n\n\n- '-' A regular", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n- 'r' A regular file ==> `file`.\n- 'w' A directory ==> `directory`.\n- 'x' a symlink ==> `symlink`.\n-\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n\n:\n\n\n\t>", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n`\n\ndef linux_type(filetype):\n\t\nUse Call-Based format\n\nfunction:\n\t\n\n\n:\n\n\n\n\n:\n\n\n\n:\n\n\n- '-' A regular file ==> `regular_file`.\n-\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n- '-' A regular file ==> `regular_file`.\n- '-' A block special file ==> `block_file`.\n- '-' A character special file ==> `character_file`.\n\n\n\n:\n\n\n\n\n:\n\n\n:\n\n\n"], "prompt": "\nQUESTION:\nOn Unix system type files can be identified with the ls -l command which displays the type of the file in the first alphabetic letter of the file system permissions field. You can find more information about file type on Unix system on the [wikipedia page](https://en.wikipedia.org/wiki/Unix_file_types).\n\n- '-' A regular file ==> `file`.\n- 'd' A directory ==> `directory`.\n- 'l' A symbolic link ==> `symlink`.\n- 'c' A character special file. It refers to a device that handles data as a stream of bytes (e.g: a terminal/modem) ==> `character_file`.\n- 'b' A block special file. It refers to a device that handles data in blocks (e.g: such as a hard drive or CD-ROM drive) ==> `block_file`.\n- 'p' a named pipe ==> `pipe`.\n- 's' a socket ==> `socket`.\n- 'D' a door ==> `door`.\n\nIn this kata you should complete a function that return the `filetype` as a string regarding the `file_attribute` given by the `ls -l` command. \n\nFor example if the function receive `-rwxr-xr-x` it should return `file`.\ndef linux_type(file_attribute):\n\t\nUse Call-Based format\nANSWER:\n"}}