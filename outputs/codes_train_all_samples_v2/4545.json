{"4545": {"code": ["\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\ndartboard = dartboard\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard\n\n\n\n\n\n\n```python\n", "\n\n\nGet the score of your dartboard:\n\n```python\ndef get_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ndef get_score(x,y):```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe score is:\n\n", "\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n```python\ndef get_score(x,y):```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nget_score(x,y)\n```\n\n\n\n\n```python\nscore = get_", "\n\n\n\n\nUse Call-Based format:\n\n```python\ndef get_score(x,y):```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\ndef get_score(x,y):\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nNote:\n\nUse Call-Based format\n\nAsk:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\ndef get_score(x,y)```\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nget_score(x,y)\n```\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n\n\n\n\n\n\nCreate your own mechanical", "\n\n\n\n\nUse Call-Based format:\n\n```python\nget_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBull's eye: `\"X\"`Bull's eye: `\"X\"`Bull's eye:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nget_", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\ndartboard = get_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nscore = get_score(x,y)\n\n\n", "\n\n\n\n\n\n\n\nUse Call-Based format\n\nSTART:\n\nUse Call-Based format\n\n\n\n\nFinish method:\n\n```python\n\nget_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\nGet the score based on the given coordinates", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\nget_score(x,y)```\n\nUse Call-Based format\n\nTASK:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n```python\nget_score(", "\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\ndef get_score(x,y):\n```\n\n\n\n\n\n\n\n\n\n\n\n\nBull's eye:\nBull's eye:\nBull's eye:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nscore =", "\n\n\n\n\nUse Call-Based format\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\ndartboard = get_score(x, y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nget_score(x,y)\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format:\n\n```python\ndef get_score(x,y):```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard with the score above:\n\n```python\n\n\n\n\n\n\n\n```", "\n\n\n\n\n\nUse Call-Based format:\n\n```python\ndef get_score(x,y):```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns the score:\n\n```python\nscore = get_score(x, y)```\n\n\n\n\n\n\n\n```", "\n\n\n\n\n\n\n\nCreate a mechanical dartboard that gives back your own mechanical dartboard:\n\n```python\ndef get_score(x,y):```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\nGet the score for the given coordinates:\n\n", "\n\n\n\n\n\n\n\n\nStart method:\n\n```python\ndef get_score(x,y)```\n\nUse Call-Based format\n\nTask:\n\nFinish method:\n\n```python\ndef get_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n```python\nget_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\nget_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n```python\nscore = get_score(x,y)```\n\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n\n\n\n\n\n\n``", "\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\ndart = create_dart()\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n\nCreate your own mechanical dartboard:\n\n```python\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nTest:\n\nGet score based on the dartboard:\n\n```python\ndef get_score(x,y)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of sections:\n\n```python\n"], "prompt": "\nQUESTION:\nCreate your own mechanical dartboard that gives back your score based on the coordinates of your dart.\n\nTask:\n\nUse the scoring rules for a standard dartboard:\n\n\nFinish method:\n\n```python\ndef get_score(x,y):\n```\n\nThe coordinates are `(x, y)` are always relative to the center of the board (0, 0). The unit is millimeters. If you throw your dart 5 centimeters to the left and 3 centimeters below, it is written as:\n\n```python\nscore = get_score(-50, -30)\n```\n\nPossible scores are:Outside of the board: `\"X\"`Bull's eye: `\"DB\"`Bull: `\"SB\"`A single number, example: `\"10\"`A triple number: `\"T10\"`A double number: `\"D10\"`\nA throw that ends exactly on the border of two sections results in a bounce out. You can ignore this because all the given coordinates of the tests are within the sections.\nThe diameters of the circles on the dartboard are:Bull's eye: `12.70 mm`Bull: `31.8 mm`Triple ring inner circle: `198 mm`Triple ring outer circle: `214 mm`Double ring inner circle: `324 mm`Double ring outer circle: `340 mm`\n\nIf you liked this kata, you can continue with: Let's Play Darts: Beat The Power!\ndef get_score(x,y):\n\t\nUse Call-Based format\nANSWER:\n"}}