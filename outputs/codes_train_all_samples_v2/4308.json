{"4308": {"code": ["\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse function called makeAcronym that returns", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python format\n\n**NOTE:**\n\nUse Python-based format\n\n\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse function called makeAcronym", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n**NOTE:**\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nMake sure the first letters returned are uppercase, 'Not letters' and 'Not letters'.\n\n**NOTE:**\n\n\n\n\n\n\n\n\n**EX", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python code to generate a function called makeAcronym\n\nUse Python code to generate a function called makeAcronym.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nImplement a function called makeAcronym that returns the first letters of each word", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Function-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse a function called makeAcronym that returns the first letters in each word in", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nA function called makeAcronym that returns the first letters in each word in a passed in string.\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n**EXAMPLES:**\n\n\n\n** EXAMPLES:**\n\n```", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n**API:**\nUse API-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse function called makeAcronym\n\nEXAMPLES:**\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Function based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based function.\n\n**EXAMPLES:**\n\n**EXAMPLES:**\n\n\n\n\n\n\n", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n42 -> 'Not letters'\n\n[2,12] -> 'Not letters'\n\n\n\n\n\n\n\n\n\n**EXAMPLES:**\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n'a', 'b', 'c' -> 'C'\n```\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse function called makeAcronym which returns the first letters", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse String-Based format\n\n\nUse String-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse a function called makeAcronym that returns the first letters in each word in a string.\n\n\n\n\n\n\n    This function returns the first letter in", "\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n'A' -> 'Not a string'.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse function called makeAcronym that returns the first letters in each", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n[2,12] -> 'Not letters'.\n\n[2,12] -> 'Not letters'.\n\n\n\n\n\n\n\n\n\n\n\n**EXAMPLES:**\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n**EXAMPLES:**\n**\nINPUTS:**\n**\nINPUT:**\n\n\n\n\n\n\nThe", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\tMake sure the value passed in is a string.\n\n**NOTE:**\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n``EXAMPLES:**\n\n** EXAMPLES:**\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThe first letter of each word in a string is lowercase and the first letter of every letter in a list.\n\n\n\n\n\n\n\nImplement a function", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse function called makeAcronym\nUse Call-Based format\n\n\n**EXAMPLES:**\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n** EXAMPLES:**\n\n** ", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Function-Based format\n**USAGE:**\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**EXAMPLES:**\n\n** EXAMPLES:**\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n**EXAMPLES:**\n**\nEXAMPLES:**\nUse Call-Based format\n\n\n\n\n\n\n\n``EXAMPLES", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse a function called makeAcronym that returns the first letters of each word in a passed in string.\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse a function called makeAcronym with one argument:\nmakeAcronym('hello')\n\n\n\n\n\n    This"], "prompt": "\nQUESTION:\nImplement a function called makeAcronym that returns the first letters of each word in a passed in string.\n\nMake sure the letters returned are uppercase.\n\nIf the value passed in is not a string return 'Not a string'.\n\nIf the value passed in is a string which contains characters other than spaces and alphabet letters, return 'Not letters'.\n\nIf the string is empty, just return the string itself: \"\".\n\n**EXAMPLES:**\n```\n'Hello codewarrior' -> 'HC'\n\n'a42' -> 'Not letters'\n\n42 -> 'Not a string'\n\n[2,12] -> 'Not a string'\n\n{name: 'Abraham'} -> 'Not a string'\n```\ndef make_acronym(phrase):\n\t\nUse Call-Based format\nANSWER:\n"}}