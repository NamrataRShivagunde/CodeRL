{"3225": {"code": ["::\n\n\nUse Call-Based format\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n> [3]\n\n```\n\n\n```\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n```python\nif not isinstance(array", ":\nUse Call-Based format:\n\n\nUse Call-Based format\nUse Call-Based format:\n> [3]\n```\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n:\n\nUse Call-Based format\n> [3, 4]\n\n:\n\n\n\n\n:usage:\n\n\n```python\nif is_", ":\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n:\n\n\n\n:\nUse Call-Based format\n> [3, 4]\n\n\n\n\n\n\n\n\n\n\n\nCOMMANDS:\n\n\n   .. code-block:: none", ":\nUse Call-Based format:\n\n\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n:\n\nUse Python format\n\n\n\n\n\n\n\n`n` can be an integer or an array of integers or an array of integers\n```\n\n\n:\n\n\n\n\n\n\n\n\n\n**\n\n**\n\n\n``", "::\nUse Call-Based format\n\nUse Call-Based format\n:\n> [2, 3]\n\n\n\n:\n\n\n\n\n:\n\n\n\n\nExample:\n\t\nUse Call-Based format\n:\nUse Call-Based format\n\n:\nUse Call-Based format\n\n]\n```\n\n\n\n\nGiven an array of integers and an", ":\nUse Call-Based format:\n\nUse Call-Based format\n:\n> [2, 4]\n```\n\n\n\n\n:\n\n\n\n\t\nUse Python format\n:\n\nUse Python format\n\n\n\n:\n> [2, 3]\n```\n\n\n:\n\n\n]\n```\n\n\n\n\n```python\nif", ":\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n> [2, 4]\n```\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n:\n\nUse Python format\n> [2, 4]\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\t# Example:\n", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n:\n`\n\n\n:\n\n\n\n\n:\nUse Call-Based format\n\n\n\nUse Python call format\n> [3, 3]\n\n\n\n\n\n\nUse Python call format\n\n\n\n\n\n\nGiven an array of integers and an integer `n`, find", ":\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n> [2, 4]\n\n\n:\n\nExample:\n\n\t\tfind_all(array, 2)\n\t\nUse Python format:\n\n\n\n:\n\nUse Call-Based format\n\n\n\nRETURN:\narray\n\n\n\n\n\n* The `n`", "::\nUse Call-Based format\n\n\n:\n> [3, 4]\n```\n\n\n\n\n:\n\n\n\n\t\n:\n\n\n\n\n\n:\n\nUse Call-Based format\n\n> [3, 2]\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n##### Example:\n", "::\n\nUse Call-Based format\nUse Call-Based format:\n> [3, 6]\n\n\n\nENTER:\n\nUse Python format:\n\n\n\n:\n:\n\nUse Python format\n> [3, 4]\n\n\n\n:\nUse Python format\n\n\n:\n\n\n\n\n\n\n\n\n\n==>\n\n# Example:\n", ":\nUse Python Call-Based format:\nUse Call-Based format\n\n\n:\n> [1, 3]\n```\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n:\n\n\n> [2, 3]\n> [0, 2]\n```\n\n:\n\n]\n```\ndef\n\n\n```python\n#", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\n:\n\n\n> [1, 2]\n> [3, 6]\n```\n\n\n:\n\n> [2]\n\n\n\n\n\nAlice:\n\n\n\n\n\n\nGiven an array (a list in Python in", "::\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n\nUse Call-Like format:\n\n\n> [1, 3]\n\n\n\n\n:\n\n\n\n\n:\nUse a call-based format\n\nUse Call-Based format\n\n\n\n\nUse a Python call-based format\n\n\n\n\n\n\n\n\n * **Example", "::\nUse Call-Based format\n\nUse Call-Based format\n:\n> [2, 3]\n```\n\n`\n\n\n:\n\n\n\n\t\nUse Python-based format\n:\n\n\n:\n\nUse Python call-based format\n\n\n:\n\n\n\n\n\n]\n```\n\n\n\n\n\n   * Given an array (", "::\n\nUse Call-Based format\n:\nUse Call-Based format\n> [6, 8]\n> [6, 8]\n\n`\n\n\n\n:\n\n\n\n\n:\n\n\n\n:\nUse Python call-based format\n\n\n> [3]\n\n:\n\n\n\n\n\n```python\n\n\n\n* **Call-Based", "::\nUse Call-Based format\n\n\n:\n> [1, 2]\n```\n\n\n\n\n:\n\n\n\n:\n:\n\n> [2, 4]\n\n\n\nUse Call-Based format:\n> [3]\n\n\n:\nUse Python-based format\n\n]\n```\n\n\n\n\nGiven an array of integers and", "::\n\n\n\n:\n\n> [0, 1]\n\n\n\n\n:\n\n> [3, 6]\n\n\n\n:\n\n\n\n\n:\n\n\n> [2, 3]\n\n```python\nfind_all([3, 2], 3)\n```\n\n:\n\n\n]\n```python\n\n\n\n```", "::\n\nUse Call-Based format\nUse Call-Based format:\n> [2, 3]\n```\n\n\n\n\n:\n\n\n\n:\n\n> [2, 3]\n```\n\n\n\n:\n\nUse Python version\n\n\n\n\n\nNOTE:\n\n\n\n\n\n\n\n\n\n```python\nfor index in array:", "::\nUse Call-Based format\n\n\n:\n> [2, 3]\n\n\n\n:\n\n\n\n:\n:\nUse Python-based format\n\n\n\n\nUse Python-based format\nUse Python-based format\n> [6]\n> [4]\n\n\n\n\n\n\n\n\n\n\n\n\n\n        This example will find all occurrences of"], "prompt": "\nQUESTION:\nGiven an array (a list in Python) of integers and an integer `n`, find all occurrences of `n` in the given array and return another array containing all the index positions of `n` in the given array.\n\nIf `n` is not in the given array, return an empty array `[]`.\n\nAssume that `n` and all values in the given array will always be integers.\n\nExample:\n```python\nfind_all([6, 9, 3, 4, 3, 82, 11], 3)\n> [2, 4]\n```\ndef find_all(array, n):\n\t\nUse Call-Based format\nANSWER:\n"}}