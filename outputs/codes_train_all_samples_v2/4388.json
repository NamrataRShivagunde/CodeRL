{"4388": {"code": ["\nUse Call-Based format\n\n\n\n\n:\n\n\n\"snakeCase\"\n\"kebabCase\"\n\"\"\n\n\n\nUse Call-Based format\n\n\"kebab_case\"\n\"\n\n\"\"\n\n\"\"\n\n\n\t\n\n\n\n\n\nIn this kata, you will make a function that converts between\n\n\n\n\t\"\"\"\n", "\n\n\nChange camelCase to kebab-case\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\"kebab_case\"\n\n\"camelCase\"\n\"invalid_inPut_bad\"\n\"\"\n\n\n\n\n\"\"\n\n\n\t\n\n\n\n\nIn this kata, you will make a function that converts between\n\n\n\n\n\t", "\n\"\"\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\"snakeCase\"\n\"kebabCase\"\n\"\"\n\n\n\nUse Call-Based format\n\n\"kebabCase\"\n\"\"\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nKata:\n\n\"kebab\"\n\n\n\n\t", "\n\nUse Call-Based format\n\n\n\n\n:\nUse Call-Based format\n\n\n\"kebab_case\"\n\n\"\"\n\n\"kebab_case\"\n\n\"\"\n\n\n\n\n\n\n\t\n\n\n\"\"\"\"\n\n\"\"\"\n\nKATA:\n\n\n\n\n\n\n\n\n\"camelCase\"\n\n\n\n\n```", "\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\"camelCase\"\n\n\"\"\n\n\"kebab_case\"\n\"kebab_case\"\n\"\"\n\n\n\n\n\n\ndef\t\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\"\n\n\nIn this kata, you will make a", "\n\n\n\n\"\"\"\"\n\n\nUse Call-Based format\n:\n\n\n\"snake_case\"\n\"\"\n\n\n\nUse Call-Based format\n\n\"kebab_case\"\n\"\"\n\"kebab_case\"\n\"\"\n\n\n_\n_\n\n\n\n\n\n\n\"kebab_case\"\n\n\n\n\nIn this k", "\n\n\n\n\n:\n\n\n\n\"snake_case\"\n\n\"kebab_case\"\n\"\"\n\n\nUse Call-Based format\n\n\"kebabCase\"\n\"\"\n\"kebab_case\"\n\"\"\n\n\n_\n\n\n\t\n\n\n\n\n\nIn this kata:\n\"\"\n\n\n\"huh???\"", "\n\nUse Call-Based format\n\n\n\n\"\"\n\n\n:\nUse Call-Based format\n\n\n\"snakeCase\"\n\"\"\n\n\nUse Call-Based format\n\n\"kebab_case\"\n\n\n\n\n\"\"\n\ndef\n\n\n\n\n\nIn this kata, you will make a function that converts between\n\n\n\n\n\nIn this", "\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\"kebab_case\"\n\n\"\"\n\ncase(\"no-name\", \"kebab-case\")\n\"\"\n\"invalid-input\"\n\"\"\n\n\n\n\n\"\"\n\n\n\n\n\n\n\nIn this kata, you will make a function that converts between\n\n\n\n\nIn this", "\n\nUse Call-Based format\n\n\n\"\"\n\n:\nUse Call-Based format\n\n\n\"camelCase\"\n\n\n\nUse Call-Based format\n\n\"kebab-case\"\n\n\n\"invalid-input\"\n\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\n\"\"\n\n\n\"\"\"\n\ndef make_snake_", "\n\nUse Call-Based format\n\n\n\n\n:\nUse Call-Based format\n\n\n\"camelCase\"\n\"\"\n\n\n\"kebab_case\"\n\"invalid-input\"\n\"\"\n\n\n\n\n\n\t\n\nin kata, you will make a function that converts between `camelCase` and `targetCase`.\n\n\n\n\n\"\n\n\t", "\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\"camelCase\"\n\n```python\ndef change_case(identifier, targetCase):\n\n\"\"\"\n\n\n\"kebab_case\"\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\nIn this kata, you will make a function\n\n\n\n\n\n\n``", "\n\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\"camelCase\"\n\"kebabCase\"\n\n\n\nUse Call-Based format\n\n\"kebab_case\"\n\"\"\n\n\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\n\"camelCase\"\n\n\n\nIn this kata,", "\n\"\"\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\"snakeCase\"\n\"kebab_case\"\n\n\"\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\ncase(\"\", \"camel\")\n\n\n\n\n\"\"\ndef change_camel", "\n\n\n\n\n\n\n\n\n\n\n\"camel_case\"\n\n\"\"\n\ncase(\"\", \"camel\")\n\"\"\n\"kebab-case\"\n\"\"\n\n\n\"\"\n\n\n\n\n\t\n\n\n\n\n\n\"\"\"\"\n\n\n\"\"\n\n\"\"\n\"\"\n\"\"\n\n\"\"\n\n\"\"\nkata.kata.change_case(", "\n\"\"\n\n\n\n\n:\nUse Call-Based format\n\n\n\"snakeCase\"\n\"kebabCase\"\n\n\n\nUse Call-Based format\n\n\"kebabCase\"\n\n\n\"\"\n\n\n\n\n\n\"\"\n\ndef\n\n\n\n\"\"\n\n\n\ncase(\"\", \"kebab\")\n\n\n\nIn this kata", "\n\n\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\n\"snake_case\"\n\"\"\n\n\nUse Call-Based format\n\n\"kebab_case\"\n\n\"\"\n\n\n\n\n\"\"\"\"\n\n\n\n\n\n\n\nIn this kata, you will make a function that converts between\n\n\n\n\nIn this", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\"camelCase\"\n\"kebabCase\"\n\n\n\n\"kebabCase\"\n\"\"\n\n\"kebabCase\"\n\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\n\n\n\"\"\")\n\nkata = kata_kata", "\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\"kebab_case\"\n\"\"\"\n\n\n\"\"\nUse Call-Based format\n\n\"kebabCase\"\n\"kebabCase\"\n\"\"\n\n\n\n\n\n\n\t\n\n\n\n\n\n\nIn this kata, you will make a function that converts between\n\n\n\n\t", "\n\n\n\n\"snakeCase\"\n\n\n\n:\n\nUse Call-Based format\n\n\n\"camelCase\"\n\n\n\n\"kebab-case\"\n\"invalid-inPut_bad\"\n\"\"\n\n\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\ncase(\"\", \"kebab\")\n\"\"\n\n\n\n\n\"\"\""], "prompt": "\nQUESTION:\nIn this kata, you will make a function that converts between `camelCase`, `snake_case`, and `kebab-case`.\n\nYou must write a function that changes to a given case. It must be able to handle all three case types:\n\n```python\npy> change_case(\"snakeCase\", \"snake\")\n\"snake_case\"\npy> change_case(\"some-lisp-name\", \"camel\")\n\"someLispName\"\npy> change_case(\"map_to_all\", \"kebab\")\n\"map-to-all\"\npy> change_case(\"doHTMLRequest\", \"kebab\")\n\"do-h-t-m-l-request\"\npy> change_case(\"invalid-inPut_bad\", \"kebab\")\nNone\npy> change_case(\"valid-input\", \"huh???\")\nNone\npy> change_case(\"\", \"camel\")\n\"\"\n```\n\nYour function must deal with invalid input as shown, though it will only be passed strings. Furthermore, all valid identifiers will be lowercase except when necessary, in other words on word boundaries in `camelCase`.\n\n_**(Any translations would be greatly appreciated!)**_\ndef change_case(identifier, targetCase):\n\t\nUse Call-Based format\nANSWER:\n"}}