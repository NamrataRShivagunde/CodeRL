{"3955": {"code": [":\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nThe string should be a Call-Based format\n\n\n:\n:\n\n\n\n\n:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n:\n\n:\n:\nWrite a function which outputs a dictionary with keys the", ":\nUse Call-Based format:\n\nUse Call-Based format\nUse Call-Based format:\n\n\n:\nWrite a function which outputs a dictionary of positions of matching bracket pairs.:\n:\n\n\n:\n:\n\n\n:\n\nUse Call-Based format:\n\n:\n\n:\n\n:\n:\nWrite a function which outputs the positions of matching bracket pairs", ":\nUse Call-Based format:\n\n\nUse Call-Based format\nUse Call-Based format:\n\n\n:\nWrite a function which outputs the positions of matching bracket pairs in the input string:\n:\n\n\n:\n:\nWrite a function which outputs a dictionary of positions\n\n::\n\n:\n:\n\n:\n:\nWrite a function which outputs the positions of", ":\n:\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n:\n:\n\n\n\n:\n:\nWrite a function which outputs the positions of matching bracket pairs in the input string\n\n:\n:\nUse Call-Based format\n\n:\n\n:\n\n:\n:\nWrite a function which outputs the", ":\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n:\nWrite a function which outputs a dictionary with keys the positions of matching bracket pairs\n:\n\n:\n:\nWrite a function which outputs the positions of matching bracket pairs\n\n::\n\n:\n\nThe:\n\n:\n:\n\n\tWrite a function which outputs", ":\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n:\n:\n\n\n\t\nUse Call-Based format\n\nSTRING:\n\t\nUse Call-Based format\nINPUT:\n\t\n\n:\n:\n\n:\n:\n\n\n:\n\n:\n\n:\n:\nWrite a function which outputs the positions of matching bracket", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n:\n:\n\n\n\n:\n\n:\nWrite a function which outputs the positions of matching bracket pairs in the input\n\n\n\n:\n\n\n:\nUse Call-Based format\n\nThe following string is not properly formatted:\n:\n\n:\n:", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\nION:\n:\n\n\n\n:\n:\n\n\n\n:\nUse Call-Based format\n\nIf the input is a string, it should be a string of call-based format\n\n:\n:\n\n:\n:\nWrite a function which outputs", "::\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n:\n:\n\n\n\n\n:\n\n\n:\n\nUse Call-Based format\n\n\n:\n\nThe input should be a call-based format\n\n\n:\nWrite a function which outputs the positions of matching bracket pairs.\n:\n\n:\n:\n\n    A", ":\n:\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n:\n:\n\n\n\n\n\n:\nWrite a function which outputs the positions of matching bracket pairs in the input\n:\n\n\n:\n:\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n:\nWrite a function which outputs the positions of", ":\n:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n:\n:\n\n\n\n:\nWrite a function which outputs the positions of matching bracket pairs\n:\n\n\n:\n\nUse Call-Based format\n\n\n:\nWrite a function which returns a dictionary of key/value pairs\n:\n\n:\n:\nWrite a function which outputs", ":\n:\nUse Call-Based format\n\n:\n\nUse Call-Based format:\n\n\n:\n:\n\n\n\n:\n\nUse Kata:\n\n\n\n\nUse Call-Based format:\n\nif you use a function, you should have a function to output the positions of matching bracket pairs.\n\n:\n\n:\n\n:\n:\nWrite a function", "::\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n:\n:\n\n\n\n\t\n:\n\nWrite a function which outputs the positions of matching bracket pairs.\n:\n\n\n:\n\n\n\nUse Call-Based format\n\nWrite a function which outputs a dictionary of positions of matching bracket pairs\n:\n\n:\n:\n", ":\n:\n\n\nUse Call-Based format\n:\n\n\n:\n:\n\nWrite a function which returns a dictionary of positions of matching bracket pairs.\n:\n\n\t\n\n:\n:\n\n\n\n\n:\n\n\n\n\nWrite a function which outputs a dictionary with keys the positions of matching bracket pairs.\n\nThe output is a dictionary\n:\n::\n", ":\n\nUse Call-Based format:\n\n\n:\n\nUse Call-Based format\n\n\n\n:\n:\n\n\n\n\n:\n\n:\n\nOutput a function which returns a dictionary with keys the positions of matching bracket pairs.\n\nUse Call-Based format\n\n\n:\n\n\n:\nUse Call-Based format\n:\n\n:\n:\nWrite a", ":\n:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n:\n\n:\n\n\n:\n\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format:\n\n    Example:\n\n   \n\n:\n\n:\n\n\n:\n\n    Use a function which outputs the positions of matching", ":\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\n:\n:\nWrite a function which outputs the positions of matching bracket pairs.\n:\n\n\t\n\n\t\nUse Call-:\n:\n\n\nUse Call-Based format\n:\n\n:\nWrite a function which outputs positions of matching bracket pairs\n:\n:\n:\nWrite a", ":\nUse Call-Based format:\n\n\nUse Call-Based format::\n\nUse Call-Based format\n\n\n:\n:\n:\n\n):\n\t\n\n:\n\n\n:\n\n\n:\nUse Call-Based format:\n\n\n\n:\nWrite a function which outputs the positions of matching bracket pairs\n:\n\n:\n:\nWrite a function which", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n:\n:\nWrite a function which outputs the positions of matching bracket pairs\n\n\n:\n:\n\n\n\n:\nUse Call-Based format\n\nThe function should return a dictionary with keys the positions of matching bracket pairs.\n\n:\n:\n\n:\n:\nWrite a function which", ":\n:\nUse Call-Based format\n\n:\n:\n\nUse Call-Based format\n\n\n:\n:\n\n\n\n\n:\n:\n\nWrite a function which outputs the positions of matching bracket pairs.\n\n\n\n:\n\n\n:\n\nWrite a function which outputs a dictionary of positions of matching bracket pairs.\n:\n\n:\n:\nWrite a function"], "prompt": "\nQUESTION:\nWrite a function which outputs the positions of matching bracket pairs. The output should be a dictionary with keys the positions of the open brackets '(' and values the corresponding positions of the closing brackets ')'.\n\nFor example: input = \"(first)and(second)\" should return {0:6, 10:17}\n\nIf brackets cannot be paired or if the order is invalid (e.g. ')(') return False. In this kata we care only about the positions of round brackets '()', other types of brackets should be ignored.\ndef bracket_pairs(string):\n\t\nUse Call-Based format\nANSWER:\n"}}