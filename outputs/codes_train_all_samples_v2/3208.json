{"3208": {"code": ["\n\n\n\n## Example\n\n# The number of customers to check out\n# n: an integer\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n```python\n\nqueue_time([5,3,3], 1)\n# should return 5\n\n\n\n\n\n# check out\n# should return 7\n", "\n\n\n\n\n# Example\n\nqueue_time([5,3,3,3,3,1,1], 1)\n# should return 11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# This is the function to calculate total time required for all the person in the queue.\n\n\n\n\n\n```python\n", "\n\n\n\n### Example\n\n* The function should return an integer\n# should return 10\n\n### Example\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nqueue_time([5,3,3], 2)\n# should return 12\n\n### output\n\n\n\n\n\n\n```python\n# should return an integer", "\n\n\n\n\n\n\n\n\n# Example\n\nqueue_time([2,3,2,3,4])\n\n# It should return 11\n\n# It should return 12\n\n# Example\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n### Example\n\n\n\n#\n# should return 10\n# should", "\n\n\n# Example of the function\nqueue_time([10,2,3,4])\n# should return 12\n\n### input\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n#\n# n: a positive integer, the number of checkout tills\n#\n\n## output\n\n\n# n", "\n\n\n\n\n\n\n\n\n# The function should return a total time required for all the person in the queue\n# should return 10\n\n# Example\n\nqueue_time([10,5,3])\n# should return 11\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n* n: a pointer to", "\n\n\n# The function should return an integer\n# should return a number of customers to check out\n# should return 12\n\n### input\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The function should return an integer\n# should return 10\n\n## outputs\n\n## Examples\n\n\n\n\n# The function should return an", "\n\n\n\n\n\n\n\n\n## Example\n\n\n# The number of customers to check out\n# should return 6\n\n# Example\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n#\n\n# check-out\n# should return 10\n\n### Example\n\n\n\n# n: a positive", "\n\n\n\n\n\n\n\n\nqueue_time(customers, n)\n\n### input\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# An example\n#\n# self-checkout tills\n#\n# total_time\n#\n\n\n\n\n#\n\n# Example\n\n## Examples\n\n#\n# n = 2\n#\n", "\n\n\n\n\n\n\n\n\n\n# Use Call-Based format\n\n\n\n\n\n# n: an integer, the number of persons in the array\n#\n\n### Example\n\n# n: an integer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n# output\n#\n# n: an integer\n# should return 7\n#\n", "\n\n### Convention\n\n* The function should be called in the format of the function\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Examples\n\n**python\n\n\n* n: a positive integer, the number of check out tills\n```python\n#\n\n\n\n\n# should return 11", "\n\n\n\n\n\n\n## Example\n\n\n\n\n# The number of customers to check out\n# should return 1\n\n# Example\n\n# 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Input\n```python\n\n# n=1\n# n=2\n# n=3\n#\n\n\n# should", "\n\n\n\n\n\n\n\n\n### Examples\n\n```python\nqueue_time([1,2,3,4])\n# should return 12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n# should return 10\n# should return 2\n\n### output\n\n#\n\n\n```python\n# should return 10\n# should", "\n\n\n\n\n## Input\n\n\n\n\n\n\n\n#\n# total time required\n# total time required\n\n# output\n\n# total time required\n\n## Output\n\n# total time required\n# total time required\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# total_time\n# should return 60\n", "\n\n\n\n\n## input\n\n\n\n\n\nqueue_time\n\nqueue_time([2,3,3])\n# should return 12\n\nqueue_time([2,3,3], 3)\n\n### output\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n# should return 12\n\n\n\n# should return", "\n\n\n\n\n\n\n\n\nqueue_time(customers, n)\n\n# Example\n\n# The function should return 10\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example\n\n```python\nqueue_time([10,10,2,3], 2)\n# should return 12\n\n\n\n# should", "\n\n\n# Use Call-Based format\n\n\n\n\n\nqueue_time([10,2,3,4])\n\n# Check out\nqueue_time([10,2,3], 1)\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The function should return an integer\n\n\n\n\n```python\n# should return 7,", "\n\n\n\n\n## Input\n\n**Use Call-Based format**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# n: a positive integer\n# should return a positive integer\n\n## output\n\n# n: a positive integer\n#\n\n\n\n\n\n\n\n\n\n\n#\n# should return 0\n# should return 0\n# should return", "\n\n\n\n## Input\n\n* n: an integer, the number of checkout tills\n* customers_length: an integer, the number of people in the array\n**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example\n\n\n\n\n#\n\n# Output\n\n#\n# should return 6\n# should return 8", "\n\n\n\n# Testing\n\nqueue_time([5,3,3,3], 1)\n\n# Testing\n\nqueue_time([10,3,3])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n#\n\n#\n# should return 60\n\n## Output\n\n#\n# n:"], "prompt": "\nQUESTION:\nThere is a queue for the self-checkout tills at the supermarket. Your task is write a function to calculate the total time required for all the customers to check out!\n\n### input\n```if-not:c\n* customers: an array of positive integers representing the queue. Each integer represents a customer, and its value is the amount of time they require to check out.\n* n: a positive integer, the number of checkout tills.\n```\n```if:c\n* customers: a pointer to an array of positive integers representing the queue. Each integer represents a customer, and its value is the amount of time they require to check out.\n* customers_length: the length of the array that `customers` points to.\n* n: a positive integer, the number of checkout tills.\n```\n\n### output\nThe function should return an integer, the total time required.\n\n-------------------------------------------\n\n## Important\n**Please look at the examples and clarifications below, to ensure you understand the task correctly :)**\n\n-------\n\n### Examples\n\n```python\nqueue_time([5,3,4], 1)\n# should return 12\n# because when n=1, the total time is just the sum of the times\n\nqueue_time([10,2,3,3], 2)\n# should return 10\n# because here n=2 and the 2nd, 3rd, and 4th people in the \n# queue finish before the 1st person has finished.\n\nqueue_time([2,3,10], 2)\n# should return 12\n```\n\n### Clarifications\n\n * There is only ONE queue serving many tills, and\n * The order of the queue NEVER changes, and\n * The front person in the queue (i.e. the first element in the array/list) proceeds to a till as soon as it becomes free.\n\nN.B. You should assume that all the test input will be valid, as specified above.\n\nP.S. The situation in this kata can be likened to the more-computer-science-related idea of a thread pool, with relation to running multiple processes at the same time: https://en.wikipedia.org/wiki/Thread_pool\ndef queue_time(customers, n):\n\t\nUse Call-Based format\nANSWER:\n"}}