{"3480": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n```python\nsequence_sum(b, e, s)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsequence_sum(1, 3, 2)\n\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\nsequence_sum(a, b, e)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nprint(sequence_sum", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n # 12\n\n```python\n\n\n\n\n\n\n\n\n\n**NOTE:**\n\nAs the title suggests, this algorithm does not explain the following question:\n\n```python\n\n\n\n\n", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\n```python\nsequence_sum(a, b, e)```\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n```python\n\nsequence_sum(2, 2, 2", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nNo description provided\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n # 1\nsequence_sum(2, 2, 2) # 2\nsequence_sum(2, 2, 2) # 2\n\n:\n\n\n\n\n```python\n#!/usr/bin/python", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 + 2 + 3 + 4 + 5 + 6 + 5\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\nsequence_sum(b, e, s)\n```\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsequence_sum(b, e, s) # 2\nsequence_sum(2, 2, 2) # 2\n\n\n\n\n\n\n\n\n```python\nprint(sequence_sum", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t# Your kata is a simple kata to work with\n\n```python\nsequence_sum(3, 2, 2) # 3\n```\n\n\n\n\n\n\n\n\n\t# As the title suggest", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nThis task is much more complex than the above one\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n# python\nsequence_sum(a, b, e, s) # 2\n```\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n```python\nsequence_sum(a, b, c)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nprint(sequence_sum", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n**Note:**\n\nUse Call-Based format\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nsequence_sum(2, 2", "\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n```python\nsequence_sum(a, b, c)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**NOTE:**\n\n\n```python\nsequence_sum(2", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```python\nsequence_sum(b, e, s)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nif sequence_", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n```python\n\n # 2 + 2 + 2 + 3 + 4 + 5 + 6\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nif (b < e):", "\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n```python\nsequence_sum(a, b, e)\n```\n\n\n\n```python\n\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nfor i in range(2", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsequence_sum(b, e, s):\n\n```python\nsequence_sum(b, e, s) # 0\n```\n\n\n\n\n\n\n```python\n\n\n\n\n```python", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis task is a one-step-based version of the base kata\n\n\n\n\n\n\n\n```python\nsequence_sum(2, 2, 2) # 2\n```\n\n\n\n\n\n\n\n\t```python\n\n```python\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Note:\n# The title suggests\n\n```python\nsequence_sum(2, 2, 1)\n\n\n\n\n\n\n```", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nNOTE:**\n\nThis algorithm is now used for testing\n\nUSAGE:\n\n\n\n\n\n\n\n\n\n\n```python\nsequence_sum(b, e, s)\n```\n\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n # (= 2 + 2 + 2 + 2 + 2 + 2 + 2 + 6 + 6 + 1 + 2 + 4 + 5 + 5 + 3 + 4 + 5)\n\n\n\n\n\n"], "prompt": "\nQUESTION:\nAs the title suggests, this is the hard-core version of  another neat kata.\n\nThe task is simple to explain: simply sum all the numbers from the first parameter being the beginning to the second parameter being the upper limit (possibly included), going in steps expressed by the third parameter:\n\n```python\nsequence_sum(2, 2, 2) # 2\nsequence_sum(2, 6, 2) # 12 (= 2 + 4 + 6)\nsequence_sum(1, 5, 1) # (= 1 + 2 + 3 + 4 + 5)\nsequence_sum(1, 5, 3) # 5 (= 1 + 4)\n```\n\nIf it is an impossible sequence (with the beginning being larger the end and a positive step or the other way around), just return `0`. See the provided test cases for further examples :)\n\n**Note:** differing from the other base kata, much larger ranges are going to be tested, so you should hope to get your algo optimized and to avoid brute-forcing your way through the solution.\ndef sequence_sum(b, e, s):\n\t\nUse Call-Based format\nANSWER:\n"}}