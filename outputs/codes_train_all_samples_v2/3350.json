{"3350": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nExample:\n\n# Hex-string_to_RGB(hex_string)\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Examples\n#\n# Brightness:\n#", "\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n:\n\n\n\t\n\n\n\n\n\n+ Accepts a case-insensitive hexadecimal color string and returns an object containing the corresponding component values.\n+ Returns a dictionary with the component values.\n\n\n\n\n\n# Example\n\n# Use Function-Based format\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nWhen working with color values it can be useful to extract individual component values for a color.\n\n\n\n\n\nWHEN", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n**Note:** When working with color values it", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n# Example\n# Hex-String-to_RGB(hex_string)\n:\n\nUse Call-Based format\n\n\n+ Returns a dict object\n\t\nUse Call-Based format\n:\n\n\n\n\n", "\n:\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n+\n+ A list of integers (or strings) containing the component values for each component.\n\n+ Use Call-Based format\n\nION:\n\n\n\n\n* Example:", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\nUse Function-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n# Example\n\n\n\n\n\n# Example\n\nQUEST", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n+ Use Call-Based format\n\n\n\t\n\n\t\nUse Call-Based format:\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n*\n\n*\nUse Call-Based format\nUse Call-Based format\n\n# Examples\n\n\n\n\n\n* Example\n", "\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n+ Accepts a case-insensitive hexadecimal color string.\n+ Accepts a case-insensitive hexadecimal color string.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t>>> hex_string", "\n:\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n#FF9933 -> 255\n\t\n\n\n\nUse Call-Based format\n\n+ The returned RGB component values are stored in the `rgb` variable.\n\n\n\n\n\n\n\n\n\n\n\n+ The red component values are stored in", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n+ Takes a case-insensitive hexadecimal color string (ex. \"#FFF\") or \"#ff9933\"\n\n\n\n\n\n\n\n\n\n\n**Example:", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n+ The color value is returned in the form `{r: 255, g: 153, b: 51}`\n\n+ Returns a dictionary with the corresponding component values\n\n\nION:\n\n\n\n\n**Example", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\t\n\n\n\n#FF9933 -> #FF9933\n#FF9933 -> #FFFF\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n\n\n**Example:**\n\n\n## Example code\n\n", "\n:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\t\n\n\n:\n\n\n\t\n\n\t\n\n:\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n+ Accepts a case-insensitive hexadecimal color string\n+ Returns an object with the component values\n\n\n\n\n\n:\n\n\n\n\n\n\t>>> from libp", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n# Use Call-Based format\nUse Call-Based format\n\n+ Accepts a case-insensitive hexadecimal color string and returns an object with the format `{r: 255, g: 153, b: 51}`\n\n\n\n:\n\n", "\n\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n+ Accepts a case-insensitive hexadecimal color string.\n+ Returns an object with the component values of the component values\n\n\n\n\n\n\n\n\n\n## Examples\n\n```\n#FF99", "\n:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n+ Returns the corresponding RGB component value for the color\n+ Returns an object with the same structure as the input\n\n\n\n\n\n\n\n\n\n\n\t\n# Example:\n\n#", "\nUse Call-Based format\n\n\n\n:\n\n\n# Example\n\n\n\n\n#FF9933\n#FFF\n\n\t\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n**Example:**\n\n\n# Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n**Example:**", "\n:\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n+ Accepts a case-insensitive hexadecimal color string and returns an object with the component values\n\n\n\n\n\n\n\n\n\n\n**Example:**\n\n\"#FF99", "\nUse Call-Based format\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n#FF9933 -> #FFFFFF\n#FFF -> #FFFFFF\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n#FF9933 -> #FFFFFF\n#FFFFFF\n\n\n\n\n**Example"], "prompt": "\nQUESTION:\nWhen working with color values it can sometimes be useful to extract the individual red, green, and blue (RGB) component values for a color. Implement a function that meets these requirements:\n\n+ Accepts a case-insensitive hexadecimal color string as its parameter (ex. `\"#FF9933\"` or `\"#ff9933\"`)\n+ Returns an object with the structure `{r: 255, g: 153, b: 51}` where *r*, *g*, and *b* range from 0 through 255\n\n**Note:** your implementation does not need to support the shorthand form of hexadecimal notation (ie `\"#FFF\"`)\n\n\n## Example\n\n```\n\"#FF9933\" --> {r: 255, g: 153, b: 51}\n```\ndef hex_string_to_RGB(hex_string):\n\t\nUse Call-Based format\nANSWER:\n"}}