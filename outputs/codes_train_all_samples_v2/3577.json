{"3577": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using the call-Based format\n\n\n\n\n\nFibonacci numbers are generated using Call-Based formula\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n## Examples\n## Examples\n\n## Example:\n\n\n#\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using Call-Based format\n\n## Examples\n\n\n\n~~~else\n\n\n\n\n\n\n\nFibonacci numbers are generated by setting F0 = 1\n\n\n\n\n\nFibonacci", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using call-based formula\n\n\n\n\n\n\n\n  (2, 5)\n  (2, 2)\n\n\n\n\n\n\n\n\n\n~~~endif\n\n## Examples\n```\n\n\n#\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n~~~endif\n\nFibonacci numbers are generated by setting F0 and F1.\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n~~~endif\n\n\n\n\n\n## Examples\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n~endif\n\nfunction fib_digits(n):\n\n\n\n\n\n\n\n\nFibonacci numbers are generated by setting F0 = 0 and F1 = 1\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\nF0 \u2264 1", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nfib_digits(n)\n\n# Examples\n\n\n\n\nFibonacci numbers are generated using call-based format\n\n## Examples\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\nF0 = 5\nF1", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using Call-Based format\n\n### Examples\n\n\n\n\n\n\n\n~~~endif\n\n## Examples\n```\nFibonacci numbers are generated using Call-Based format\n\n## Examples\n## Examples\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using call-based formula:\n\n# Fn = 1 + 2 + 3\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\nF0 \u2264 F", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nFibonacci numbers are calculated using Call-Based format\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n```\n\n# Example\n\n\n\n```\n\n\n\n\n\n\n~~~if:python\nF0", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated by setting F0 = 0, F1 = 1, Fn = 2\n\n# Examples\n```\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\nF0 = 0\nF1 = 1", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated by setting F0 = 0 and F1 = 1\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\nf(10)\nreturn [(2, 5)]\n\n\n\n\n\n\n\n## Examples\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nCall-Based format\n\n\n\n\n\n\nFibonacci numbers are generated using the fibonacci formula:\n\nf(10) = 5\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\nF0 = 0\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated by setting F0 = 0 and F1 = 1\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\nF0 \u2264 0\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using Call-Based format.\n\nFibonacci numbers are sorted by occurrence\n~~~else\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n## Example\n\n# Example\n\n## Examples\n\n\n\n\n\n#\nF0", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using bignumber.js library\n\n# Example\n\n\n\nFibonacci numbers are generated by setting F0 = 0\n\n\n\n\n\n\n\n\n\n~~~endif\n\n## Example\n\n\n\n\n\nF0 \ufffd", "\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nFibonacci numbers are generated using call-based formula:\n\n# Fn = 10 + F1 = 2 + 5 = 10\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\nF0 \u2264 F1 =", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using call-based format:\n\n\n\n\n\nFibonacci numbers are generated by setting F0 to 0\n\n## Examples\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n\nF0 \u2264 2", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nFibonacci numbers are calculated using Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n~~~endif\n\n\n\n\n```\n\n\n\n```\n\n```\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nFibonacci numbers are sorted by occurrence\n\n\n\n\n\n\nf(10) = 5\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n\n```\n\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nFibonacci numbers are generated using Bignumber library:\n\n# Fn = 10 + 5\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\nfunction fib_digits(n):\n\n\n\n\n\n\nFibonacci numbers"], "prompt": "\nQUESTION:\nFibonacci numbers are generated by setting F0 = 0, F1 = 1, and then using the formula:\n\n# Fn = Fn-1 + Fn-2\n\nYour task is to efficiently calculate the **n**th element in the Fibonacci sequence and then count the occurrence of each digit in the number. Return a list of integer pairs sorted in **descending** order.\n\n10 \u2264 n \u2264 100000\n\n## Examples\n```\nf(10) = 55  # returns [(2, 5)], as there are two occurances of digit 5\n\nf(10000)    # returns:\n  [(254, 3),\n   (228, 2),\n   (217, 6),\n   (217, 0),\n   (202, 5),\n   (199, 1),\n   (198, 7),\n   (197, 8),\n   (194, 4),\n   (184, 9)]\n```\nIf two integers have the same count, sort them in descending order.\n\nYour algorithm must be efficient.\n\n~~~if:javascript\nSolving this Kata in Javascript requires the use of the bignumber.js library. I have included starter code to assist you with using the library. Thanks to `kazk` for assisting with the translation.\n~~~\ndef fib_digits(n):\n\t\nUse Call-Based format\nANSWER:\n"}}