{"3887": {"code": ["\n\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n\n\n(n):\n\n(n):\n>>>(3)>>>>>>\n\n(5):\n(3):\n\n\n\n\n\n\n\n(n):\n    print", "\n\n###Rule:\n\n\n\n\n\n\n\n###Task:\n\n###Rules:\n\n KATA\n\n###Task:\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n>>>(n):\n\n(n):\n\n(n):\n\n\n\n\n\n(5):\n\n\n\n\n\n\n\n\n(n):\n\n   ", "\n\n\n\n###Rules:\n\n###Examples:\n\n###Rules:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(n):\n  # Do the function pattern(n):\n\n (n):\n\n(10):\n\n\n\n(1):\n\n\n\n\n\n\n\n\n(n):\n  #", "\n\n\n\n\n###Rules:\n\n###Task:\n\n\n\n###Rules/Note:\n\nKATA\n\n###Rules/Note:\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n>>>(n):\n\n(n):\n\n(11):\n\n\n\n(3):\n\n\n\n\n\n\n\n\n(n):\n  ", "\n\n###Notes:\n###\n###Rules:\n\n\n\n\n\n\n\n\n\n###Rules/Note:\n\n###Check:\n\n\n\n\n\n###Check:\n\n\n(n):\n\n(n):\n\n(n):\n\n\n\n(2) :\n\n(2):\n\n\n\n\n\n\n\n\n(n):\n\n  ", "\n\n\n    1 KATA\n    2 KATA\n    3 KATA\n    4 KATA\n    5 KATA\n    6 KATA\n\n###Actions:\n\n\n\n\n\n\n\n\n\n\n\n\n(n):\n   (n):\n\n(11):\n\n\n\n(11):\n\n\n\n\n\n\n\n\n\n(n):\n ", "\n\n###Variables:\n\n\n\n\n\n###Functions:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\nKATAS >>><\n\n>>>EXAMPLE<<<\n\n\n###Functions:\n\n(n):\n\n(n):\n\n(11):\n\n\n\n(1):\n\n\n\n\n\n\n\n\n\n(n):\n", "\n\n###Rules:\n\n###Task:\n\n\n\n\n###Rules/Note:\n\n\n\n###Rules/Note:\n\n\n\n\n\n\n\n\n\n\n\nPATTERN<<<\n(n):\n   (n):\n   (n) :\n\n\n\n(3):\n\n(3):\n\n\n\n\n\n\n\n(n):\n    print", "\n\n\n\n\n\n\n\n###Rules:\n\n  + pattern(n)\n\n###Task:\n\n\n\n###Rules:\n\n\n\n\n\n\n\n\n\n(n):\n\n(n):\n\n(n):\n\n    \n(5):\n\n(10):\n\n4444444444\n\n\n\n\n\n\n\n(n):\n", "\n\n\n\n\n\n\n\n\n\n\n\n###Rules:\n\n###Rules:\n\n###Task:\n\n\n\n\n\n\n(n):\n\n (n):\n (5):\n\n\n(3):\n\n   (10):\n\n   \n\n\n\n\n\n\n\n>>>LIST OF ALL MY KATAS<<<\n(5):\n ", "\n\n\n\n\n\n###Rules:\n\n###\n\n\n\n\n\n\n<<\nLIST OF MY KATAS<<<\n\n\n>>>LIST OF MY KATAS<<<\n(n):\n\n(n):\n\n(n):\n\n   \n\n          \n(10):\n\n4444444444\n\n\n\n\n\n\n\n(n):\n ", "\n\n\n\n\n###Data:\n\n###Pattern:\n\n###Rule:\n\n###Rules:\n\n\n\n\n###Rules:\n\n###\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n(n):\n\n(n):\n(11):\n\n\n\n(3):\n\n\n\n\n\n\n\n\n\n(n):\n  print", "\n\n\n\n###Rules:\n\n###Examples:\n\n###Task:\n\n###Task:\n\n###Rules:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(n):\n\n(n):\n\n(11):\n\n\n\n(11):\n\n\n\n\n\n\n\n\n(n=5):\n", "\n\n\n\n\n###Task:\n\n\n\n\n###Rules:\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n(n):\n\n(n):\n\n(n):\n\n\n(n):\n\n                  (n)\n\n2222222222\n\n\n\n\n\n\n\n(n=3):\n\n    print(\">>>PREVI", "\n\n\n###Rules:\n\n###Rules:\n\n###Rules:\n\n\n\n###Rules/Note:\n\n\n\n\n\n\n\n\n\n\n\n(n):\n\n>>>LIST OF MY KATAS<<<\n(n):\n\n(n):\n\n\n\n(n):\n\n4444444444\n\n\n\n\n\n\n(n):\n", "\n\n\n\n###Rule:\n\n###Check:\n\n\n\n\n\n###Sequence:\n\n\n\n###Task:\n\n\n\n\n\n\n###Rules:\n\n\n\n\n\n###Functions:\n\n(n):\n\n(n):\n\n(n):\n\n\n\n(n):\n\n\n\n\n\n\n\n\n\n\n(n):\n ", "\n\n###Rules:\n\n\n\n\n###Task/Note:\n\n\n\n###Rules/Note:\n\n\n\n\n\n\n\n\n\n\n\n\n\nKATA<<<\n(n):\n\n(n):\n\n(n):\n\n\n(2) :\n\n(1):\n\n\n\n\n\n\n\n\n\n\n(n):\n\n   ", "\n\n###Precedence/Note:\n\n###Rules/Note:\n\n\n\n###Rules/Note:\n\n\n\n\n###\n\n\n\n\n###Examples:\n\n\n\n\n\n\n\n(n):\n\n(n):\n\n(n):\n\n\n(11):\n\n\n\n\n\n\n\n\n\n\n\n(n):\n\n    # Insert", "\n\n\n\n\n###Rules:\n\n###Task:\n\n\n\n\n###Rules/Note:\n\n KATA >\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n(n):\n(n):\n\n(11):\n\n\n\n(11)\n\n(10):\n\n\n\n\n\n\n\n\n\n(n):\n\n  #", "\n\n\n\n\n\n\n###Work:\n\n\n\n\n###Rules:\n\n  + pattern(10)\n  + pattern(15)\n\n###Rules:\n\n\n\n###Rules:\n\n\n\n\n\n(n):\n\n(n):\n\n(11):\n\n\n(11):\n\n\n\n\n\n\n\n(n):\n    print(\""], "prompt": "\nQUESTION:\n< PREVIOUS KATA\nNEXT KATA >\n \n###Task:\n\nYou have to write a function `pattern` which returns the following Pattern(See Examples) upto (3n-2) rows, where n is parameter.\n\n* Note:`Returning` the pattern is not the same as `Printing` the pattern.\n\n####Rules/Note:\n* The pattern should be created using only unit digits.\n* If `n < 1` then it should return \"\" i.e. empty string.\n* `The length of each line is same`, and is equal to the length of longest line in the pattern i.e. `length = (3n-2)`.\n* Range of Parameters (for the sake of CW Compiler) :\n  + `n \u2208 (-\u221e,50]`\n\n###Examples:\n\n  + pattern(5) :\n\n            11111    \n            22222    \n            33333    \n            44444    \n        1234555554321\n        1234555554321\n        1234555554321\n        1234555554321\n        1234555554321\n            44444    \n            33333    \n            22222    \n            11111    \n        \n  + pattern(11):\n\n                  11111111111          \n                  22222222222          \n                  33333333333          \n                  44444444444          \n                  55555555555          \n                  66666666666          \n                  77777777777          \n                  88888888888          \n                  99999999999          \n                  00000000000          \n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n        1234567890111111111110987654321\n                  00000000000          \n                  99999999999          \n                  88888888888          \n                  77777777777          \n                  66666666666          \n                  55555555555          \n                  44444444444          \n                  33333333333          \n                  22222222222          \n                  11111111111          \n                  \n>>>LIST OF ALL MY KATAS<<<\ndef pattern(n):\n\t\nUse Call-Based format\nANSWER:\n"}}