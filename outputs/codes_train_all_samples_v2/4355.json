{"4355": {"code": ["\n\n### Euler's Method\n\n### Euler's Method\n\nx = 1 - 2\n# A_0 = 1\n\n### Euler's Method\n\n\n\n\n\n## Euler's Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT = 2\n\n## Hazards\n\n\n` we", "\n\n\n## Euler's Method\n\n\\t\\tEuler's method\n\n# Euler's method\n\n\n## Euler's method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Euler's Method\n\n\n\n\n\n\n` of the tangent line,\n we can define a step of", "\n\n\n## Euler's Method\n\nThis method is not tested for kata and kata.\n\n## Theory\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ny = A_0;\n\n## Time\n\n## Tatm\n\n## Euler's Method\n\n\n\n\n\n\n\n` of the given `k", "\n\n\n\n### Euler's Method\n\nA function for calculating the shape of the unknown curve\n\n## Euler's Method\n\nA function for calculating the shape of the unknown curve\n\n## Euler's Method\n\n\n\n\n\n\n\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`:\n\n```math", "\n## Euler's Method\n\n\n\n\n\n\n## Euler's Method\n\nWe want to calculate a new equation with the following equation:\n\n```math\ny = 1\n```\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Solution\n\n## Euler's Method\n\n\n\n\n\n` of the line", "\n## Euler's Method\n\n\n\n\n\n\n## T\n\nThe error between the points of the unknown curve is computed as follows:\n\n```math\ny = 1/n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Euler's Method\n\n\n` and `$ y_k", "\n\n\n\n## Euler's Method\n\n\n\n## Task\n\n\n\n## T\n\nThe error of the tangent line at the end of the equation\n\n```math\nT = n - x_0; \\\\\ny = T\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n` we use the equation for", "\n## Euler's Method\n\nmath\nx = (x_0, x_1, x_2,..., x_n)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Euler's Method\n\nWe want the following equation\n\n\n\n\n\n`", "\n## Euler's Method\n\n\n\n\n\n\n\nmath\nx = 1\ny = 1\nh = 1\n\n## T\n\n\n\n\n\nx = 2;\n\n\n\n## Solver\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`x` = x_0;\n```\n\n\n\n` the line will", "\n\n\n## Euler's Method\n\nThe method of this kata is based on the Euler's method.\n\n## Euler's Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Exposition\n\n\n\n\n```math\ny = 2;\n```\n\n\n` and `$ y", "\n\n\n\n\n\n\n## Euler's Method\n\nmath\nx = n \u2208 n\ny = T\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Euler's Method\n\n\ny = 2 + 2e^{-2x}\n\n\n\n\n` and", "\n## Euler's Method\n\nmath\n\nx = y;\n\n## Task\n\n\n# T\n\n\n\n\n\n\n## T\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Euler's Method\n\n\n\n\n\n\n\n\n\n\n\n\n\n` we take the line from the starting point `$", "\n\n\n\n\n## Euler's Method\n\n\nmath\nx = x_0 + 0.5e^{-2x};\n\nx_0 = x_0 + 0.5e^{-2x}\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n` and `$ y_k", "\n## Euler's Method\n\nmath\nx = x_0\n```\n\n\n\n\n\n\n\n\n\n## Hazards\n\n\n\nx = x_0\n\n```math\nx = x_0\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`\n\n```math`x` (", "\n## Euler\n\n\n\n\n\nmath\nx = [0, 1, 1, 2, 3, 4]\n\n## T\n\nThe length of the line is 0.5e^{-2}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Euler's Method\n\n\n` in the section above, we", "\n\n\n## Euler's Method\n\nThis method is a very general algorithm for the Kata method.\n\n## Euler's Method\n\nThis method is a very general algorithm for the Kata method.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`\n`y_{k+1", "\n\n\n\n## Euler's Method\n\n\n\n\n\n## Harmonic Method\n\nWe are interested in the standard equation\n\n```math\nx = 1 - e^{-2x} - 1\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`\n\n\n\n\n` the line from `$ x", "\n## Euler's Method\n\nmath\nx = x - 0.5e^{-2x} - 0.5e^{-2x}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`\n\n```math`\n\\frac{", "\n## Euler's Method\n\nmath\nx = 1\ny = 1\n```\n\n\n\n\n\n\n\n\n## Step 1\n\n\n\n\n\n\n\n\n\n\n\nx = x_k\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Problems\n\n```math\n\\frac{dx}{dx} = 2`", "\n\n\n\n## Euler's Method\n\n\n\n\n\n\nx_0 \u2208 [0, 1]\nx_1 \u2208 [0, 1]\n\nT\n\n## Hinge\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n` we take a step `$ x_k` along the"], "prompt": "\nQUESTION:\n## Euler's Method\n\nWe want to calculate the shape of an unknown curve which starts at a given point \nwith a given slope. This curve satisfies an ordinary differential equation (ODE):\n\n```math\n\\frac{dy}{dx} = f(x, y);\\\\\ny(x_0) = y_0\n```\n\nThe starting point `$ A_0 (x_0, y_0) $` is known as well as the slope to the curve \nat `$ A_0 $` and then the tangent line at `$ A_0 $` .\n\nTake a small step along that tangent line up to a point `$ A_1 $`. Along this small step, \nthe slope does not change too much, so `$ A_1 $` will be close to the curve. \nIf we suppose that `$ A_1 $` is close enough to the curve, the same reasoning \nas for the point `$ A_1 $` above can be used for other points. \nAfter several steps, a polygonal curve `$ A_0, A_1, ..., A_n $` is computed. \nThe error between the two curves will be small if the step is small.\n\nWe define points `$ A_0, A_1, A_2, ..., A_n $`\nwhose x-coordinates are `$ x_0, x_1, ..., x_n $`\nand y-coordinates are such that `$ y_{k+1} = y_k + f(x_k, y_k) \\times h $` \nwhere `$ h $` is the common step. If `$ T $` is the length `$ x_n - x_0 $` we have `$ h = T/n $`.\n\n## Task\n\nFor this kata we will focus on the following differential equation:\n\n```math\n\\frac{dy}{dx} = 2 - e^{-4x} - 2y; \\\\\nA_0 = (0,1)\n```\nwith `$ x \u2208 [0, 1] $`. We will then take a uniform partition of the region of `$ x $` between `$ 0 $` and `$ 1 $` and split it into `$ n $` + 1 sections. `$ n $` will be the input to the function `ex_euler(n)` and since `$ T $` is always 1, `$ h = 1/n $`.\n\nWe know that an exact solution is\n```math\ny = 1 + 0.5e^{-4x} - 0.5e^{-2x}.\n```\nFor each `$ x_k $` we are able to calculate the `$ y_k $` as well as the values `$ z_k $` of the exact solution.\n\nOur task is, for a given number `$ n $` of steps, to return the mean (*truncated* to 6 decimal places)\nof the relative errors between the `$ y_k $` (our aproximation) and the `$ z_k $` (the exact solution). \nFor that we can use:\n\nerror in `$ A_k = abs(y_k - z_k) / z_k $` and then the mean is sum(errors in `$ A_k $`)/ (`$ n $` + 1)\n\n## Examples\n\n```python\nex_euler(10) should return: 0.026314 (truncated from 0.026314433214799246)\nwith\nY = [1.0,0.9..., 0.85..., 0.83..., 0.83..., 0.85..., 0.86..., 0.88..., 0.90..., 0.91..., 0.93...]\nZ = [1.0, 0.9..., 0.88..., 0.87..., 0.87..., 0.88..., 0.89..., 0.90..., 0.91..., 0.93..., 0.94...]\nRelative errors = [0.0, 0.02..., 0.04..., 0.04..., 0.04..., 0.03..., 0.03..., 0.02..., 0.01..., 0.01..., 0.01...]\n```\n`ex_euler(17)` should return: `0.015193 (truncated from 0.015193336263370796)`.\nAs expected, as `$ n $` increases, our error reduces.\n### Links and graphs\n\nWiki article\n\n![alternative text](http://i.imgur.com/vjK7edl.png)\n\nBelow comparison between approximation (red curve) and exact solution(blue curve) for n=100:\n![alternative text](http://i.imgur.com/KufSkYEm.png)\ndef ex_euler(n):\n\t\nUse Call-Based format\nANSWER:\n"}}