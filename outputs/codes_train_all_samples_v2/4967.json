{"4967": {"code": ["\n\nThe General Problem:\n\n\n\n\nThe General Problem:\n\n\n\n\n\n\nThe Problem:\n\n\n\n\nThe Convention:\n\n\n\n\n\nThe Hastier\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe MUCH:\n\n\n\n\n\n\n\n# The Kata\n#", "\n\n\n\n\nThe General Problem\n===\n\n\n\n\n\n\nThe Kata Problem\n===\n\n\n\n\nThe Conference\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Problem\n===\n\nThe Kata\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Part 1:", "\n\n\n\n\nThe Part 1\n===\n\n\n\n\n\n\nThe Part 2\n===\n\n\n\n\n\nThe Part 2\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\nQUESTION:\n\nB", "\n\n\n\n\nThe Problem is:\n\nThe Kata\n===\n\nThe BSD\n===\n\n\n\n\n\n\n\n\n\n\n\n\nThe BSD Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQUESTION:\n\n", "\n\n\n\n\nThe Rejection\n===\n\nThe Convention\n===\n\nThe Convention\n===\n\nThe Kata\n===\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Collection\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n==", "\n\n\n\nThe MATLAB Problem\n===\n\nThe Kata Problem\n===\n\nThe Thief Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Kata Problem\n===\n", "\n\nThe Kata Problem\n===\n\n\n\n\nThe Kata Problem\n===\n\nThe Convention\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Convention\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQUESTION:\n\nQUEST", "\n\n\n\nThe Convention\n===\n\nThe Thief Problem\n===\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\nThe Thief Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Kata (3", "\n\n\n\nThe Cargo\n===\n\nThe Kata Problem\n===\n\nThe Kata Problem\n===\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n====", "\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\n\n\n\nThe Kata Problem\n===\n\n\n\nThe Thief Problem\n===\n\nA thief problem\n\n- A truck loading cargo\n- A truck loading budget\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# B", "\n\n\n\nThe Bayesian\n===\n\nThe Bayesian Problem\n===\n\nThe Kata Problem\n===\n\nThe Convergence\n===\n\n\n\n\n\n\n\n-\n\n\n\nThe Convergence\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Part", "\n\n\n\n\nThe Lake\n===\n\n\n\n\n\n\nThe Kata\n===\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\n\n\n\nThe Thief Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Thief Problem\n===\n\n\n\n\n\n\n\n\n\n$10:", "\n\n\n\nThe Cargo\n===\n\nThe Thief\n===\n\nThe Kata\n===\n\n\n\n\n\n\n\n\n\n\n\n\nThe Thief\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# TODO:\n#\n", "\n\nThe Construction\n===\n\nThe Construction Problem\n===\n\n\n\n\n\n\n\n\n\n\nThe Construction\n===\n\n\n\n\n\n\n\n\nThe Kata\n===\n\n\n\n\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Kata", "\n\nThe Problem\n===\n\n\n\n\nThe Contratical Problem\n===\n\nThe Kata\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Problem\n===\n\n\n\n\n\n\n\n\n# Part 1:\n", "\n\n\n\n\n\n\nThe Kata Problem\n===\n\nThe Thief Problem\n===\n\nThe Thief Problem\n===\n\nThe Kata Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKata\n===\n\n\n\n\n\n$0 =", "\n\n\n\nThe Problem is not\n===\n\nThe Kata\n===\n\nThe Conformance\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Thief\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The above code", "\n\nThe General Problem\n===\n\n\n\n\n\n\n\nThe Kata Problem\n===\n\nA generic kata problem is:\n\n- A tonger\n- A tonger\n- A tonger\n- A tonger\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe K", "\n\n\n\nThe Three-Liter Problem\n===\n\nThe Three-Liter Problem\n===\n\n\n\n\n\n\n\n\n\n\nThe Three-Liter Problem\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Part 1:", "\n\n\n\n\n\n\n\n\n\nThe Problem:\n\nThe Kata\n===\n\nThe Lodal Problem:\n\n- A truck loading cargo\n- A truck loading cargo\n- A truck loading cargo\n- A truck loading cargo\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$"], "prompt": "\nQUESTION:\nImagine the following situations:\n\n- A truck loading cargo\n- A shopper on a budget\n- A thief stealing from a house using a large bag\n- A child eating candy very quickly\n\nAll of these are examples of ***The Knapsack Problem***, where there are more things that you ***want*** to take with you than you ***can*** take with you.\n\nThe Problem\n===\n\nGiven a container with a certain capacity and an assortment of discrete items with various sizes and values (and an infinite supply of each item), determine the combination of items that fits within the container and maximizes the value of the collection.\n\nHowever, **DO NOT** attempt to solve the problem **EXACTLY!** (we will do that in Part 2)\n\n\nThe Simplification\n===\n\nBecause the optimal collection of items is **MUCH** more difficult to determine than a nearly-optimal collection, this kata will only focus on one specific nearly-optimal solution: the greedy solution. The greedy solution is that which always adds an item to the collection if it has the highest value-to-size ratio.\n\nFor example, if a \"greedy thief\" with a 10-Liter knapsack sees two types of items\n\n- a 6-Liter item worth $9 (1.5 $/L)\n\n- a 5-Liter item worth $5 (1.0 $/L)\n\nthe thief will take 1 of the 6-Liter items instead of 2 of the 5-Liter items. Although this means the thief will only profit $9 instead of $10, the decision algorithm is much simpler. Maybe the thief is bad at math.\n\nNow, go be bad at math!\n\n\nThe Kata\n===\n\nWrite the function `knapsack` that takes two parameters, `capacity` and `items`, and returns a list of quantities.\n\n`capacity` will be a positive number\n\n`items` will be an array of arrays of positive numbers that gives the items' sizes and values in the form [[size 1, value 1], [size 2, value 2], ...]\n\n`knapsack` will return an array of integers that specifies the quantity of each item to take according to the greedy solution (the order of the quantities must match the order of `items`)\ndef knapsack(capacity, items):\n\t\nUse Call-Based format\nANSWER:\n"}}