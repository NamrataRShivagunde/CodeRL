{"4572": {"code": ["\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\ndef max_consec_zeros(n):\n\t\nUse Call-Based format\n\nDEFINE:\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n```\n\n>>> max_consec_zeros(\"", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nRETURN:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\tThe count of `9` can be an integer between `0` and `10000`.\n\t\t\n\t\n\n\n\t", "\n\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nThe function max_consec_zeros() can be used to get a count of `9` and `6` from standard form:\n\n```\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\t\t\n\n\n\n\n\n\n\n\n\nThe number `10` and `10000` can be passed to the method, as in the above example:\n\n```\n\n\n\n\n\nThe\n\n\n\n\n\n```\n\nif \"", "\n\n\n\nUse Call-Based format\n\nRETURNS:\n\t\nUse Call-Based format\n\nEXAMPLES:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmax_consec_zeros(\"9\")\n```\n\nThe following example shows how to call the method:\n\n\n\n\n\n\n\n9", "\t\nUse Call-Based format\n\n\n\n\n\n\n\nmax_consec_zeros(n)\n\nUse Call-Based format\n\nPARAM:\n\t\nUse Call-Based format\n\nPARAM:\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nThe following code works:\n\n\n\n\n\n\n\nThe above example shows how", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string (`str`) containing a base-10 integer (`str`) containing a base-10 integer (`int`)\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n   \n\n\n\n\n```\n\n1:\n\n2: 777\n", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\nGiven a string (`str`) containing a base-10 integer (`str`) containing a base-10 integer (`int`)\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of consecutive 0s:\n\n\n\n\n\n\n\n\n\n10", "\n\n\n\nUse Call-Based format\n\nNOTE:\n\nUse Call-Based format\n\nNOTE:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n```\n\n\n\tIn the block of code above:\n\t\n\tGiven a string", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUSE Call-Based format\n\nDEPRECATED:\n\n\n\nThe method called is a Python-Based function\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1:\n\n2: 777\n5", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nRETURN:\n\t\n\n\nRETURN:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe string (`str`) is a base-10 integer\n\nThe\n\n\n\n\n\nThe above", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nCLI:\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\t\"\"\"\n\t\n\n\t#\n\t# \"The maximum amount of consecutive 0s above", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nWITH CALL-Based format\n\nATTENTION:\n\nUse Call-Based format\n\nARGS:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\t\n```\n\n\tfor i in range", "\n\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\nmax_consec_zeros(\"9\")\n```\n\n\n\n\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nDEPRECATED:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of consecutive 0s is given by the argument (`int`) and the count (`int`)\n\n\n\n\n\n\n\n\n\n9:", "\n\n\n\nUse Call-Based format\n\n\n\nmax_consec_zeros(n):\n\nUse Call-Based format\nEXAMPLES:\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n```\n\n\n\nmax_consec_zeros(n):\n\t\n\n\n\n```\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nRETURN:\n\t\n\n\n\n\n\n\n\n\n\n\n\nThe function accepts the following arguments:\n\n```\n\n\n\n\n\n\n\n```\n", "\n\n\n\nUse Call-Based format\n\n\n\nmax_consec_zeros(\"9\") => \"9\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        ```\n\n```\n\nOutput:\n\n```\n\nThe count of all consecutive 0s in the above example:\n\n\n\n\n\n", "\n\n\n\nUse Call-Based format\n\n\n\nmax_consec_zeros(n)\n\nUse Call-Based format\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMax consec zeros:\n\n1: 0\n2: 1\n3: 4\n5: 5\n6: 6\n7:\n\n\n", "\n\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nRETURN:\n\t\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\nThe method will return the maximum number of consecutive 0s:\n```\n\n\n\n\n\n\n```\n"], "prompt": "\nQUESTION:\nGiven a string (`str`) containing a base-10 integer between `0` and `10000`, convert the integer to its binary representation. At that point, obtain a count of the maximum amount of consecutive 0s. From there, return the count in written form with a capital letter.\n\nIn the very first example, we have an argument of `\"9\"` which is being passed to the method. The binary representation of `9` is `1001` which can be read as: one, zero, zero, one. There are, at most, two consecutive 0s, resulting in the integer `2` as the value of the count. The output in the block of code above reflects the final step of taking `2` from standard form to the written form `\"Two\"` as prompted.\n\nIn the very last example, we have an argument of `\"550\"` which is being passed to the method. The binary representation of `550` is `1000100110` which can be read as: one, zero, zero, zero, one, zero, zero, one, one, zero. There are, at most, three consecutive 0s, resulting in the integer `3` as the value of the count. The output in the block of code above reflects the final step of taking `3` from standard form to the written form of `\"Three\"` as prompted.\n\nOne way, among many, to visualize the end of each step might look like:\n```\nmax_consec_zeros(\"777\")\n1: \"777\"\n2: 777\n3: 1100001001\n4: 4\n5: \"Four\"\nmax_consec_zeros(\"777\") => \"Four\"\n```\nHappy coding!\ndef max_consec_zeros(n):\n\t\nUse Call-Based format\nANSWER:\n"}}