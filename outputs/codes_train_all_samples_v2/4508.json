{"4508": {"code": ["\n\n\nUse Call-Based format\n\n\n\n\n\n```\n\n155 = 11 * 155\n155 = 12 * 11\n\n```\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nA\n\n\n\n\t\n\n```\n\n\n", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n```\n\n1 = 1*10\n\n```\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n1260", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n```\n\n1 = 1*1\n2 = 2*2\n3 = 3*3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Vampire number\n\n\n\n\n\n```\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nA *Vampire number* is a positive integer\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nA *Vampire number* is a positive integer\n\n\n\n\n\n\nA *", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nA *Vampire number* is a positive integer\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\nA\n\n\n\n\n```\n1 = 22*61\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nA *Vampire number* is a positive integer.\nA *Pseudo-Vampire number* is a positive integer.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA *Vampire number*\n\n\n\n\n\n\nA *Vamp", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nThe *Passthrough-Vampire Number* is a call-Based format\n\n\n\n\nUse Python format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nA *Vampire number* is a positive integer\n\n\n\n\n\t```\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n```\n\n\n\nA *Vampire number* is a positive integer `z`.\n\nUse Call-Based format\n\n```\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n\n\nA *Vampire number*\n\n\n\n\n\n\n\n1", "\n\t\n\n\n\n\n\n\n\n```\n\n1 = 21*5\n2 = 15*45\n3 = 34\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\nA *Vampire number* is a positive integer\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n```\n\n\n1 <= k <= 155\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\t\n12", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n```\nA *Vampire number* is a positive integer `z`.\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\tA *Vampire number* is a", "\nUse Call-Based format\n\n\n\n\n\nA *Vampire number* is a positive integer `z`.\n\nUse Call-Based format\nPPS:\n\n```\n\n```\n\n\n\n\n\n\n\t\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nA\n\n\n\n\n\n155 = 37*41", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n```\n\n1*\n0 = 1*\n1*\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA *Vampire number* is a positive integer\n\n\n\n\n\n```\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nA *Vampire number* is a positive integer `z`.\n\nUse Call-Based format\nPPS:\n\n\n\n\n\n\n\n\t\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\tA *Vampire number* is a positive", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n```\n\nA *Vampire number* is a positive integer `z`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA *Vampire number* is a positive integer\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nA *Vampire number* is a positive integer `z`.\n\nUse Call-Based format\nPQUEST:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\nA\n\n\n\n\n```\n\n1260 =", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n```\n\n1 = 1*5\n2 = 2*5\n3 = 3*5\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA *Vampire number* is\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nA *Vampire number* is a positive integer `k`.\n\nUse Call-Based format\nPPS:\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\nA *Vampire number* is\n\n\n\n\n\n```", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nA *Vampire number* is a positive integer\n\n\n\n\n\n\n\n\n\n```\n\n\n``", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n```\n\n1 <= k <= 155\n2 <= k <= 3\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Vampire number\n\n\n\n\n\nA *Vampire"], "prompt": "\nQUESTION:\nA *Vampire number* is a positive integer `z` with a factorization `x * y = z` such that\n\n- `x` and `y` have the same number of digits and\n- the multiset of digits of `z` is equal to the multiset of digits of `x` and `y`.\n- Additionally, to avoid trivialities, `x` and `y` may not both end with `0`.\n\nIn this case, `x` and `y` are called *fangs* of `z`. (The fangs of a Vampire number may not be unique, but this shouldn't bother us.) The first three Vampire numbers are\n\n```\n1260 = 21*60\n1395 = 15*93\n1435 = 35*41\n```\n\nWrite an algorithm that on input `k` returns the `k`th Vampire number. To avoid time-outs, the Python version will test with `1 <= k <= 155`.\n\nPS: In the OEIS, the Vampire numbers are sequence [A014575](https://oeis.org/A014575).\n\nPPS: So called *Pseudo-Vampire Numbers* are treated in [this kata](http://www.codewars.com/kata/vampire-numbers-1).\ndef VampireNumber(k):\n\t\nUse Call-Based format\nANSWER:\n"}}