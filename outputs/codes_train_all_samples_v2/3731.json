{"3731": {"code": ["\n# Simple format\n\n\t# Kata\n\t\t\n\n\n# Call-Based format\n\n\n\n\n\n\n# Kata\n\t\nUse Call-Based format\n\n\n\n\n# No fun!\n\n\n\n       /+\\   \n\n\n    3  2  3  4  5\n\n\n\n\n+\n\n\t# Square sums\n\n", "\n\n# Call-Based format\n\n       \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/\n\n\n\n\n\n\n\n# Square sums\n\n\n\n\n# Computation\n\n\n      \n\n\n\n\n# Good\n\nSquareSumsRow\n\n\n\n\n\n\n# Simple version\n\n# Simple", "\n# Use Call-Based format\n\n       /+\\    /+\\    /+\\    /+\\    /+\\    /+\\    /+\\    \\+\\    /+\\\n\n\n\n\n\n\n\n\n\n\t\nThis is simple version of harder [Square Sums]\n\n        \n\n\n   \n\n\n\n\n\n# Square sums\n\n\n\t# Verification\n", "\nUse Call-Based format\n\n\t\n# Have fun!\n\n# Have fun!\n\nCheck your code.\n\n### Example\n\n# No fun!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n\n# Bad\n\n   \n\n\n## Example\n\n\n\n# No change\n\n\n\n# No change\n\n# No", "\n\n\t# Call-Based format\n\n## Example\n# Test\n\nN = 15\n\n# Test\n\n#\n\n\n\n\n\n\n\n# Test\n\n# Verify\n\n\n\n\n\n# Test\n\n\n\n       \\\n\n\n\n\n\n# No fun!\n\n\n# No fun!\n\n\n\n\t\n# Squarters\n", "\n# Performance:\n# [Kata]\n# [Kata]\n# [Kata]\n#\n#\n\n\n\n\n\n\n\n\n# Simple format\n#\n\n\n\n\t\n# Simple format\n#\n\n#\n   \n\n\n\n\n\n1. No pairs\n\n# No pairs\n\n\n3*4\n\n\n# Verification\n\n", "\n# Kata:\n\n# Kata:\n\n#\n\n+\\    \\+/    \\+/    \\+/    \\+/    \\+/\n\n\n\n\n\n\n\n\n\n# Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# No call\n\n# No call\n\n\n\n\n\n# No call\n\n\n# No call", "\n\n# Use Call-Based format\n\n    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/   \n\n\n\n\n\n\n\n\n\n\n# Quality\n\t\n\n\n\n       /+\\\n\n\n\n\n\n\n### Example\nSquareSums\n\n\n\n\n\n\t# Simple version of harder", "\n\nUse Call-Based format\n\n    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\   \n\n\n\n\n\n\n\n\n\t\n\n\n\n             25     25     25     25     25\n\n\n   \n\n\n\n\n\n\n# Square sums\n\n\n# Verification", "\n\n## Example\n\n# Simple format\n\n    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/   \n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n## Squarters\n\n# Two consecutive numbers\n\n\n\n\n# Two consecutive numbers\n\n\n", "\n# Use Call-Based format\n\n    /+\\    /+\\    /+\\    /+\\    /+\\    /+\\    \\+/    \\+/   \n\n\n\n\n\n\n\n\n\n\n\t\n# Simple\n\n\n          /+\\   \n\n\n\n\n\n# Simple version\n\n\n\n\n# Simple version\n\n\n\n# Simple version\n\n# Simple", "\n# Have fun!\n\n    \\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\+\\\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\t\n\n  \n\t\n\n\n   \n\n\n# Verification\n\n\n\n\n\n\n\n# Verification\n\n# Squares\n\n\n\n\n\t# Verification\n", "\n# Use Call-Based format\n# Have fun!\n       \\    \\    \\    \\     \\    \\    \\    \\    \\    \\    \\    \\    \\    \\    \\\n\n\n\n\n\n\n\t\n\n\n\n   +\\   \n\n\n\n\n# No call-based format\n\n\n# No call-based format\n\t\n\n# Verification", "\n\t\treturn False\n\n\t\t\"\"\"\n\n    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n# No case\n\n    \n\n# No case\n\n\n\n\n# No case\n\n\n\t# Verification\n\n", "\nKata\n# Way!\n+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\    \\+\\   \n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n# Compare with call-based format\n         16     25\n\n## Example\n\n\n\n\n# Compare with call-based", "\n\n# Kata\n\n#    /+\\    /+\\    /+\\    /+\\    /+\\    /+\\    \\+\\    \\+\\    \\+\\    \\+\\    /+\\\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n   \n\n\n\n\n\n# No function\n\n## Verification\n\nN=15\n\n\n\n\n\n# Verification\n\n", "\n\n\n   9     25     9     25     9     10     11     11     12     11     11     12     11     12     11\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n   \n\n1\n1 = 2*3\n2 = 3*4\n3 = 5*5\n\n\n\n\n\n\n\n\t# Verification\n\n", "\n# Use Call-Based format\n\n       \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/   \n\n\n\n\n\n\n# Square sums\n\n\n\n\n       \\+/    /+\\   \n\n\n\n\n\n# No fun!\n\n\n# No fun!\n\n\n\n\t# No fun\n\n", "\n\t# Use Call-Based format\n\n       /+\\    /+\\    /+\\    /+\\    /+\\    /+\\    /+\\    \\+\\    /+\\\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n# Solve\n\n\n         \n\n\n\n   \n\n\n# No call\n\n\n\n\n\n# No call\n\n## Example", "\n# No fun!\n\n# No fun!\n       \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/   \n\n\n\n\n\n\n\n\n\n\n\n        /+\\    /+\\    /+\\   \n\n\n    \n\n\n\n# Square sums\n\n\n# Square sums\n\n\n#"], "prompt": "\nQUESTION:\nThis is simple version of harder [Square Sums](/kata/square-sums).\n\n# Square sums\n\nWrite function `square_sums_row` (or `squareSumsRow`/`SquareSumsRow` depending on language rules) that, given integer number `N` (in range `2..43`), returns array of integers `1..N` arranged in a way, so sum of each 2 consecutive numbers is a square.\n\nSolution is valid if and only if following two criterias are met:\n1. Each number in range `1..N` is used once and only once.\n2. Sum of each 2 consecutive numbers is a perfect square.\n\n### Example\nFor N=15 solution could look like this:\n\n`[ 9, 7, 2, 14, 11, 5, 4, 12, 13, 3, 6, 10, 15, 1, 8 ]`\n\n### Verification\n\n1. All numbers are used once and only once. When sorted in ascending order array looks like this:\n\n`[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ]`\n\n2. Sum of each 2 consecutive numbers is a perfect square:\n\n```\n   16    16     16     16     16     16     16\n   /+\\   /+\\    /+\\    /+\\    /+\\    /+\\    /+\\\n[ 9, 7, 2, 14, 11, 5, 4, 12, 13, 3, 6, 10, 15, 1, 8 ]\n      \\+/    \\+/    \\+/    \\+/    \\+/    \\+/    \\+/\n       9     25      9     25      9     25      9\n\n9 = 3*3\n16 = 4*4\n25 = 5*5\n```\n\nIf there is no solution, return `false` (or, `None` in scala). For example if `N=5`, then numbers `1,2,3,4,5` cannot be put into square sums row: `1+3=4`, `4+5=9`, but\n`2` has no pairs and cannot link `[1,3]` and `[4,5]`\n\n# Have fun!\n\nHarder version of this Kata is [here](/kata/square-sums).\ndef square_sums_row(n):\n\t\nUse Call-Based format\nANSWER:\n"}}