{"3838": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n#\nUse Call-Based format\n#\nUse Call-Based format\n#\n\n\n\n\n\n#\n#\n#\n\n-\n\n#\n\n\n\n\n\n\n\n\n\n#\n\n\n#\n#\n\n#\n\n\n#\n#\n#\n# The 'level' is", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nreturn 0\n\n\n\n\n\n\n\n$ house.goto(4,3,2)\n\n\nreturn 0\n\n#\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\ngoto(4,undefined)\n\n\n# How to", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nif the user touches button '3'\nthe user touches button '3'.\n\nif the user touches button '2':\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# This is a function\n#\n#", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngoto(level,button)\n\n\n\nUse Call-Based format\n\n\ngoto(level,button)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t# To see if the user touches any button (", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nthe user touches the given level and button\n\nif we get erronous inputs, \nthe function must return 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n## Examples:\n", "\n\t\nUse Call-Based format\n\n\n\n\n\n\nif level is an array,\nif button is an object,\nif button is an object, then we return 0.\nelse:\n\n-\n\n\n\ndef\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn 1\n\n\n\n\n#!/usr/bin/env", "\nUse Call-Based format\n\n\n\n\n\ngoto(4,2)\n\ngoto(3,2)\n\nUse Call-Based format\n\nReturns:\n\t\nReturns:\n\t\nReturns:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- The user touches the level 4 levels", "\n\n\n\n\nUse Call-Based format\n\n\n\ngoto(2,undefined,undefined)\ngoto(2,{},{})\n\n\n\n\n\n\nThe user touches the level.\n\nYou can program this button\n\nCOMMA:\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The function will be called", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''\n\n\ngoto(level,button):\n\t\n\n\n\ngoto(level,button):", "\n\nUse Call-Based format\n\n\n\n\n\n\nif level is an array or button is an object:\n\n- `goto(3,undefined)`\nso we return 0.\n\nif level is an array:\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t# -----------\n#\n# The", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\nThe input format is:\n\n- `goto(level,button)`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# ---------\n# ---------\n# ---------\n#", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe user touches the level and the button.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nThere is a house with 4 levels.\nThere is a house with 4 buttons.\n\n\n\n\n\n\n- If the", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Example:\n# goto(4,3)\n# Example:\n# goto(4,3)\n# Example:\n#\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngoto(3,undefined)\n#\n\n\t# Check if user", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nthe user touches the button '2'\nthe user touches the button '3'\n\nThe function:\n\n-\n-\n\n\n\n \n\n\n\n\n\n\n\n\n\nreturn 0\n\n\n\nThe user touches the level 4.\nyou", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nThere is a house with 4 levels.\n\nUse Call-Based format\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''')\n\n\"\"\"\n\n\n\n\n\n\n\n\n- `goto(undefined,{})`\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nThe function will return the result of the function.\n\nUse Call-Based format\n\nCOMMA:\n\n\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\ngoto(4,undefined)\n\n   \n\n\n#if the", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nThe user touches the right button.\n\nThe user touches the right button.\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\ngoto(undefined,undefined)\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n- `goto(undefined,undefined)`", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nThe user touches the button and the level are either an array or an object.\n\n\n\n\n\n\n\n\n\n\n\n\n\ngoto:\n \n\n\n    - 1.0.0.0.0 ", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n- There is a house with 4 levels.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''')\n\n\n\n\n\n\n\n\n- `goto(undefined,'2')`", "\nUse Call-Based format\n\n\n\n\n\ngoto(3,undefined)\ngoto(2,undefined)\ngoto(4,undefined)\n\nUse Call-Based format\n\nRETURN:\n\n-\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# If the user touches button '2', then the"], "prompt": "\nQUESTION:\nThere is a house with 4 levels.\nIn that house there is an elevator.\nYou can program this elevator to go up or down,\ndepending on what button the user touches inside the elevator.\n\nValid levels must be only these numbers: `0,1,2,3`\n\nValid buttons must be only these strings: `'0','1','2','3'` \n\nPossible return values are these numbers: `-3,-2,-1,0,1,2,3`\n\nIf the elevator is on the ground floor(0th level) \nand the user touches button '2'\nthe elevator must go 2 levels up,\nso our function must return 2.\n\nIf the elevator is on the 3rd level\nand the user touches button '0'\nthe elevator must go 3 levels down, so our function must return -3.\n\nIf the elevator is on the 2nd level,\nand the user touches button '2'\nthe elevator must remain on the same level,\nso we return 0.\n\nWe cannot endanger the lives of our passengers, \nso if we get erronous inputs, \nour elevator must remain on the same level.\nSo for example:\n\n- `goto(2,'4')` must return 0, because there is no button '4' in the elevator.\n- `goto(4,'0')` must return 0, because there is no level 4.\n- `goto(3,undefined)` must return 0.\n- `goto(undefined,'2')` must return 0.\n- `goto([],'2')` must return 0 because the type of the input level is array instead of a number.\n- `goto(3,{})` must return 0 because the type of the input button is object instead of a string.\ndef goto(level,button):\n\t\nUse Call-Based format\nANSWER:\n"}}