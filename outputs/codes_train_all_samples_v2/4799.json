{"4799": {"code": ["\n\n```\n\n# Example\n\nBernoulli number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Sphinx\n\n\n\n\n- Fuzzy and C# are not used.\n\n\n\n\n\n\n\n- For C++", "```\n\n\n\n\n\n# Testing\n\n\n\n\n# Example\n\n#\n\n# Example\n\nS(1, 0) = 1\n\n# Example\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n used to calculate the upper", "\n\n```\n\n# Example\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 + 1 + 2 + 3 + 4B2 + 6B3 + 5B4 = 0... gives...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n for the most common use case:\n\n", "```\n\n\n\n# Example\n\n# Example 1\n\n# Example 2\n\nBk = 0\n\n# Example 3\n\n# Example 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n translated to the following formula:\n\n1", "\n\n\n\n\n# Hack\n\n\n\n\n\n\n# Tests\n\nS(1, 1) = 1\nS(0, 1) = 1\nS(1, 0) = 1\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For", "\n\n```\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n1 + 2 + 3 + 4 + 5 + 6 + 3B3 = 0... gives... B4 = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n- For C++: \n\n", "\n\n\n# Example\n\n# Bernoulli numbers\n\nS(0, 1) = 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For C++: `k` is a positive integer.\n\n\n of course, that is the recommended way", "\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n- For C++: `k` is the kth Bernoulli number.\n\n- For Java: `k` is the kth Bernoulli number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- (2)", "\n```\n\n# Example\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 1:\n\n- 0:\n\n1:\n\n- 0:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n used as the translation of the Bernoulli", "```\n\n\n\n\n# Example\n\n#\n\n\n\n\n\n# Tester\n\n# Tester\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For Python:\n\n- k >= 0 :\n\n- nb >= 0 : \n\n\n\n\n\n\n\n\n\n\n- (2", "\n```\n\n\n\n# A note\n\n# A Bernoulli number\n\n# Example\n\n# A Bernoulli number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For Python:", "\n\n\n\n\n\n\n\n\n\n# Example\n\n# Another example of a function f:\n\n1 + 2 + 3 + 4 + 5 + 6 +\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n indeed trivial to use the `~math.pi", "\n```\n\n# Example\n\n# Bernoulli numbers\n\n\n\n\n\n# Example 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Tests\n\n- For Java, C++: k = 2\nBk =\n", "\n\n```\n\n\n\n\n# Example\n\n# Example (1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 + 2B1 + 3B2 + 4B3 + 5B4 = 0... gives...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n used as a translation for `k", "\n\n```\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For Java:\n\n- 1 < k < 2\n\n- 1 < k < 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For Java:\n\n1 + 2B1", "\n\n```\n\n# Example\n\nS(1, 10)\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For Python:\n\n\n\n- For Java:", "```\n\n\n# Example\n\n# Example 1:\n\n# Example 2:\n\n# Example 3:\n\n# Example 1:\n\n# Examples 1:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- (5) for k >", "\n```\n\n# Example\n\n\n\n\n\n\n\n\n# Example\n\n# Example\n\n1 = 2\n2 = 3\n3 = 4\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- For Python: `k` is", "```\n\n\n# Example\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- (1) for k positive integer < 2 : \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n# Testing\n\n- For C++:\n\n\n\n\n\n\n\n\n\n\n\n used to calculate the", "\n```\n\n\n\n\n\n# Tests\n\n\n\n\n\n# Example\n\n# Example\n\nS(0, 0) = 1\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n- For Java: `k` is not"], "prompt": "\nQUESTION:\nLet us define a function `f`such as:\n\n- (1) for k positive odd integer > 2 : \n\n\n\n- (2) for k positive even integer >= 2 : \n\n\n\n- (3) for k positive integer > 1 : \n\n\n\n\nwhere `|x|` is `abs(x)` and Bk the kth Bernoulli number.\n\n`f` is not defined for `0, 1, -1`. These values will not be tested.\n\n# Guidelines for Bernoulli numbers:\n\nhttps://en.wikipedia.org/wiki/Bernoulli_number\n\nhttp://mathworld.wolfram.com/BernoulliNumber.html\n\nhttps://www.codewars.com/kata/bernoulli-numbers-1\n\nThere is more than one way to calculate them. You can make Pascal triangle and then with the basic formula below generate all Bernoulli numbers.\n\n1 + 2B1 = 0 ... gives ...\n  B1 = - 1/2\n\n1 + 3B1 + 3B2 = 0 ... gives ...    B2        = 1/6\n\n1 + 4B1 + 6B2 + 4B3 = 0 ... gives ... B3 = 0\n\n1 + 5B1 + 10B2 + 10B3 + 5B4 = 0 ... gives ... B4 = - 1/30\n\n... and so on\n\n\n# Task \n\nFunction `series(k, nb)` returns (1), (2) or (3) where `k` is the `k` parameter of `f` and `nb` the upper bound in the summation of (1). `nb` is of no use for (2) and (3) but for the sake of simplicity it will always appear in the tests even for cases (2) and (3) with a value of `0`.\n\n```\nExamples\nS(2, 0) = 1.644934066848224....\nS(3, 100000) = 1.20205690310973....\nS(4, 0) = 1.08232323371113.....\nS(-5, 0) = -0.003968253968....\nS(-11, 0) = 0.02109279609279....\n```\n\n# Notes\n\n- For Java, C#, C++: `k` should be such as `-27 <= k <= 20`; otherwise `-30 <= k <= 30` and be careful of 32-bit integer overflow.\n- Translators are welcome.\ndef comb(n,k):\n\t\nUse Call-Based format\nANSWER:\n"}}