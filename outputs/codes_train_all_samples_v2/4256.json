{"4256": {"code": ["\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:  \n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n:  \n\n\n\n\n\n:  \n\n\n\n  \n\n\n\n:  \n\n\n\n\n\n\n\n\n\n\n\n\n:  \n\n\n`input`: \"h", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n:\n\n\nUse Function-Based format\n\n\n\n\n:  \n\n\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n`input`", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:  \n\nUse Call-Based format\n\n\n\n\n\n:  \n\n\n\n\n\n\t\n\n:  \n\n  \n\n\n\n:  \n\n\n  \n\n\n\n\n\n:  \n\n\n\n\n\n\n`input`: \"holly\"  \n\n`", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n`output`: \"holly\"  \n\n\n\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n`input`: \"holly", "\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n  \n\n\n\n\n:  \n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n:  \n\n`input`", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n:  \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n:  \n\n\nUse Call-Based format\n\n\n \n\n\n\n\n:  \n\n\nUse Call-Based format\n\n\n  \n\n\n\n\n\n\n\n\n\n\n:  \n\n`", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:  \n\nUse Call-Based format\n\n\n\n\n\n\n\n:  \n\n\n\n\n:  \n:  \n\n\nUse Call-Based format\n\n\n\n:  \n\n\n\n\n\n\n\n\n\n\n\n\n\n:  \n\n\ninput: \"", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n: \n\n  \n\n\n\nUse Call-Based format\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n:\n\n`input`", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nExample:  \n\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n`input`:", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n:  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsix.moves.stringutils.", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`input`: \"holly\"  \n\n`", "\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n`input`:", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n  \n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n    If you have created a function,", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n`input`", "\n\nUse Call-Based format\n  \n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n`missing letters`: \"holly\"  \n\n\n\n:  \n:  \n\n\n\n\n:  \n\n\n\n\n\n\n\n\n\n\n\n:  \n\n`input`: \"", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n`input`: \"holly\"  \n\n`output`: \"holly\"  \n\n\n::\n\n  \n\n\n:  \n\n\n\n\n\n\n\n\n\n\n:  \n\n\n`input", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`input`: \"hol", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:  \n\nUse Call-Based format\n\n\n\n\n\n:  \n\n\n\n\n\n\n\n\n\n  \n\n\n\n:\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`input`: \"holly\"  \n", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\n\nCall-Based format\n:\n\n\n\n  \n\n\n:  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:  \n\n`input`", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nYou have"], "prompt": "\nQUESTION:\nYou have to create a function,named `insertMissingLetters`, that takes in a `string` and outputs the same string processed in a particular way.\n\nThe function should insert **only after the first occurrence** of each character of the input string, all the **alphabet letters** that:\n\n-**are NOT** in the original string  \n-**come after** the letter of the string you are processing  \n\nEach added letter should be in `uppercase`, the letters of the original string will always be in `lowercase`.\n\n\nExample:  \n\n\n`input`: \"holly\"  \n\n`missing letters`: \"a,b,c,d,e,f,g,i,j,k,m,n,p,q,r,s,t,u,v,w,x,z\"  \n\n`output`: \"hIJKMNPQRSTUVWXZoPQRSTUVWXZlMNPQRSTUVWXZlyZ\"  \n\n\nYou don't need to validate input, the input string will always contain a certain amount of lowercase letters  (min 1 / max 50).\ndef insert_missing_letters(st):\n\t\nUse Call-Based format\nANSWER:\n"}}