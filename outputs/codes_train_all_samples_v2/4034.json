{"4034": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n\n    sillycase(\"silly\")  \n\t\n\n\n\n   \t\n\n\n\n\n\n\n\n\n\t\n\n\n    create a", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nQUESTION:\n\nUse Call-Based format\nQUESTION:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nsillycase(\"brian\")\n\n\t\n\n   \t\n\n\n\n\n\n\n\n\n\n\n    create a function that takes a string", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n    sillycase(\"brian\")\n\n\n\t\n\n\n   \n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def sillycase(string", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\n\t\n\n\n   \n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    create a function that takes", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n    sillycase(\"silly\")  \n\n\t\n\n\n\n\n\n\n\n\n\nCreate a function that takes a string\n\n\n\n\n\n    I", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    sillycase(\"brian\")  \n\t\t\n\n\n   \t\n\n\n\n\n\n\n\nCreate a function that takes a string\n\n\n\n\n\nCreate a function that takes", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nQUESTION:\n\nUse Call-Based format\nQUESTION:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\tsillycase(silly)\n\t\t\n\n\n   \t\n\n\n\n\n\n\n\n\n\n\n    Create a function that takes", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\t\nuse Call-Based format\n\n    sillycase(silly)\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    I create a", "\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n    sillycase(\"bri\")  \n\n    sillycase(\"brian\")\n\t\n\n   \t\n\n\n\n\n\n\n\n\n\n\n\nCreate a function that takes a string and", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nsillycase(\"bri\")\n\nuse Call-Based format\nsillycase(\"brian\")\n\n\n\n\n\t\n\n   \t\n\n\n\n\n\n\n\n\n\n\nCreate a function that takes a string and returns", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n    sillycase(\"bri\")\n\n\n\n   \t\n\n\n\n\n\n\nUse Call-Based format\n\ndef foo(bar):\n\n\n\n\n\n    def", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    sillycase(\"silly\")\n\n\n\n   \t\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nCreate a function that takes a string", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n)\n\nsillycase(\"silly\")\n\nsillycase(silly)\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n    A function", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nCALL-Based:\n\n\n\n\n\t\ncall\t\n\n   \t\n\nUse Call-Based format\n\n\n\n\nCreate a function that takes a string\nION\n\n\n\n", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nCMD:\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    sillycase(\"silly\")  \n\n\t\n\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    create a function that", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\t\n\n\t\n\nUse Call-Based format\n   \n\t\n\n\n\n\n\nUse Function-Based format\n\n\n\n\nCreate a function that takes a", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n# Use Call-Based format\n\nCALL-Based:\n\nUse Call-Based format\n\nCALL-Based:\n\n\n\n\t\n\n   \t\n\n\n\n\n\n\n\n\n\n\n    sillycase(\"bri", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\t\n\n\nUse Call-Based format\n\n\n    sillycase(\"brian\")  \n\t\n\t\n\n   \t\n\n\n\n\n\n\n   \n\n\n\n\n\n\n    Create a function that", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\t\nUse Call-Based format\nCALL:\n\n\n\n\n\t\n\t\n\n\n   \n\t\n\n\n\n\nCreate a function that takes a string\n\n\n\n\n\nCreate a function that takes a", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nEXAMPLE:\n\t\nUse Call-Based format\nEXAMPLE:\n:\n\n,\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nCreate a function that takes a"], "prompt": "\nQUESTION:\nCreate a function that takes a string and returns that\nstring with the first half lowercased and the last half uppercased.\n\neg: foobar == fooBAR\n\nIf it is an odd number then 'round' it up to find which letters to uppercase. See example below.\n\n    sillycase(\"brian\")  \n    //         --^-- midpoint  \n    //         bri    first half (lower-cased)  \n    //            AN second half (upper-cased)\ndef sillycase(silly):\n\t\nUse Call-Based format\nANSWER:\n"}}