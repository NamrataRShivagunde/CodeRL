{"3285": {"code": ["\n\n\n\n\n\nUse Call-Based format\n\n**Functions:**\n\n\n**Notes:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3 #3 extra \"U\" #4 extra \"A\", 5 extra \"U\"\n\n\n\n\n\n\n\n\n\n\"\"\"\n\n\n\"\"\"\n\n\n\"\"\"\n\n\n\n\n\n", "\n**Examples:**\n\n\n\n\n\n\n\n\n\n\n\nIzabela:\n\n\n\n\n\n\nThe trump detection function is used for all trumping\n\n\n\n\n\n\n\n\n\n\n\ntrump_detector(\"I'm a pero.\")\ntrump_detector(\"I'm a pero.\")\n\n\n\n#", "\n\n\n\n\n\n\n\n\n\n\nThe two word lists are of the same length and have the same number of vowels.\n\n**Example**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\ntrump_detector(\"I won't have a puntet\")==0 #0\n\n\n```\n\nThe number of v", "\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n**Notes:**\n\nUse Call-Based format\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrump_detector(\"I will build a huge wall\")\n\n\n\n\n\n```python", "\n\n\n\n\n\n\n\n\ntrump_detector(\"I will build a huge wall\")==0 #1 extra \"A\" on base ones\n\ntrump_detector(\"I will build a friends\")==0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n#  - We are using the", "\n\n\n\n\n\n\n\n\n\n\n\nTodo:\n\n**Note:**\n\n\n\n\n\n\n**Example:**\n\n**\n**\n\n\n3 #3 extra vowels\n\n**Notes:**\n\n\n\n\n\n\n\t\n\n\n\n**Notes:**\n\n**\n\n**\n\ntrump_detector\n\n\n#", "\n\n\n\n\n\n\n\n\n\n\ntrump_detector(trump_speech):\n\n\n**Example:**\n\nNote:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nExample:\ntrump_detector(\"I will build a huge wall\")==0 #0\n\n\n```\n\n#", "\n\n\n\n\n\n\n\n\n\ntrump_speech\n\nUse Call-Based format\n\nExample:\n\ntrump_detector(trump_speech)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\ntrump_detector(\"H\u00fch\")==4 #4\n#\n\n\n\n# 10.", "\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n**Example**\n\n\n\n\n\n\n**Note**\n\n\n\n\n\n\n\n3 #3 extra \"B\" and \"A\"\n\n**Notes:**\n\n\n\n\n\n\n```\n\nNote:\n\n**\n\n6 #6 extra vowels\n\n\n##", "\n**Syntax**\n\n\n\n\n\n\n\n\n\n\n*Use Call-Based format*\ntrump_detector(trump_speech)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n#!python\ntrump_detector(\"I will build a huge wall\")\n#!python\n\n\n\n\n#!python", "\n\n\n\n\n\n\n\n\n\n\n\ntrump_detector(trump_speech)\n\n**Notes:**\n\n\n\n\n\n\n\n\n**Notes:**\n\n\n\n\n\n**Notes:**\n\n\n\n\n**Notes:**\n\n**\ntrump_detector(trump_speech)\n\n\n\n\n```", "\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n**Notes:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3 #4 extra vowels on 3 base vowels\n\n\n\n\n\n\n\n\ntrump_detector(\"I will build a huge wall\")==1\n\n\n\n\n```python\n", "\n```python\ntrump_detector(trump_speech)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Notes:**\nWe are in our permissive and uninformative vowels\n\n\n\n\n\ntrump_detector(\"I am a part of\")\n\n\n```", "\n\n```python\n\n# Example\n\ntrump_detector(trump_speech)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Notes:**\nean #2\n\n\n\n**Notes:**\n\n**\n\ntrump_detector(text):\n\n\n\n\n``", "\n```python\ntrump_detector(trump_speech):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of vowels is the number of vowels on the trump\n\n\n\n\n\n\n\n\n\n**Notes:**\n\n\n\n\n\n\n\n\n\n**Notes:**\n\n**\n\n\n\n```python", "\n**Example:**\n\t\n\n\n\n\n\n\n\n\n\n**Note:**\n\n**\n\n\n\n\n\n#\n\n\n\n**Examples:**\n\n**Note:**\n\n**Notes:**\n\n\n\n\n\n**Notes:**\n\n**Note:**\n\n\n\n\n\n\n\n\n```python\ntrump_detector", "\n\n\n\n\n\n\n\n\n\n\n\n# Example\ntrump_detector(\"I will build a huge wall\")==3 #3 extra \"I\"\n\n\n\n\n\t\n\n\n\n1 #4 extra vowels on 5\n\n\n\n\n\n\n\n\ntrump_detector(\"H\")==1 #0 extra vowels\n\n\n\n# The", "\n\n\n\n\n\n\n\n\n\n\n\n*Another way to detect the trump:\n\ntrump_detector(trump_speech)==1 #1 extra \"A\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Notes:**\nWe are a lot of more\n\n\n\n```python\ntrump_detector", "\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n**Notes:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrump_detector(\"Hu UU UU UU UUUU\")==4 #4 extra vowels on 5 base ones\n\n\n\n\n```python\n#!/usr/bin/", "\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n**Example:**\n\ntrump_detector(trump_speech):\n\n**Notes:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrump_detector(\"I will build a huge wall\")\n\n\n\n```python\n"], "prompt": "\nQUESTION:\nWe all love the future president (or F\u00fchrer or duce or s\u014dt\u014d as he could find them more fitting) donald trump, but we might fear that some of his many fans like John Miller or John Barron are not making him justice, sounding too much like their (and our as well, of course!) hero and thus risking to compromise him.\n\nFor this reason we need to create a function to detect the original and unique rythm of our beloved leader, typically having a lot of extra vowels, all ready to fight the estabilishment.\n\nThe index is calculated based on how many vowels are repeated more than once in a row and dividing them by the total number of vowels a petty enemy of America would use.\n\nFor example:\n```python\ntrump_detector(\"I will build a huge wall\")==0 #definitely not our trump: 0 on the trump score\ntrump_detector(\"HUUUUUGEEEE WAAAAAALL\")==4 #4 extra \"U\", 3 extra \"E\" and 5 extra \"A\" on 3 different vowel groups: 12/3 make for a trumpy trumping score of 4: not bad at all!\ntrump_detector(\"listen migrants: IIII KIIIDD YOOOUUU NOOOOOOTTT\")==1.56 #14 extra vowels on 9 base ones\n```\n**Notes:** vowels are only the ones in the patriotic group of \"aeiou\": \"y\" should go back to Greece if she thinks she can have the same rights of true American vowels; there is always going to be at least a vowel, as silence is the option of coward Kenyan/terrorist presidents and their friends.\n\nRound each result by two decimal digits: there is no place for small fry in Trump's America.\n\n*Special thanks for [Izabela](https://www.codewars.com/users/ijelonek) for support and proof-reading.*\ndef trump_detector(trump_speech):\n\t\nUse Call-Based format\nANSWER:\n"}}