{"4204": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Palindromes\n#\n1", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo choice is made \n\n6\n1\n5\n\n5\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n# Chinese \n#\n#\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\npalindrome(num) => \"Not valid\"\n\n\n\n\n\n\n11\n110011\n110011\n110011\n54322345\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n1\n2\n# 1.2.", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nHaskell\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nNumerical palindrome(num):\n\t\n\n\n\n\n\n```\n\n\n\n\n\t# Palindrome\n\t#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n1123\n54322345\n\n```\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n# [#]\n\n\n\n# [#]\n# [#]", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nNumerical palindrome \n\nNo choice of palindromes:\n\n2332\n54322345\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n# [#]\n# [#]", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nNumerical Palindrome\n\n\n```Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\npalindrome(num):\n\t\nUse Call-Based format\n\n\n```Kata\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe palindrome is a string in this Series:\n\n1\n2\n3\n5\n\n\n\n\n\n\n\n\n\n# The first example shows", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nThe palindrome is a word, phrase, number or phrase, or sequence of characters.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npysalindrome(num):\n\t\nEven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nHaskell\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNumerical palindrome(num)\n\n\n\n\n\n\n\n\n# 1.5\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\npalindrome(num):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nA palindrome is a word, phrase, number, or phrase, or sequence.\n\n\n\n\n\n# Ch", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n42\n42\n42\n42\n42\n42\n42\n42\n42\n\n\n\n\n\n\n\t# Example 1", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nHaskell\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nCall-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNumerical palindromes \n\n\n\n\n\n5281\n5432", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nHaskell\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Kata\n\nUse Call-Based format\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nHaskell\nUse Call-Based format\n\nHaskell\nUse Call-Based format\n\nHaskell\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n######\n#\n#\n# This", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\n\n```\n\nThe function should return a Maybe Int with 0 or 1.\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nNumerical Palindrome\n5.5\n\nNumerical Palindrome\n5.5\n\nNumerical Palindrome\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n# The first example is", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n```\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n5\n\n```\n\n\n\n\n## Example:\n# The above code works", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nCall-Based format\n\n\n\n\n```Kata\nUse Call-Based format\n\n```Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''''\n# If you have two numbers, and you have two numbers, you", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nNumerical Palindrome\n\n\n```\n\nUse Call-Based format\n\n\n\n\n```\n\n\n\n\n\n\n\n\n# Kata\n# Kata\n# Kata\n#\n# Kata\n"], "prompt": "\nQUESTION:\nA palindrome is a word, phrase, number, or other sequence of characters which reads the same backward as forward. Examples of numerical palindromes are: \n\n2332\n110011\n54322345\n\nFor a given number ```num```, return its closest numerical palindrome which can either be smaller or larger than ```num```. If there are 2 possible values, the larger value should be returned. If ```num``` is a numerical palindrome itself, return it. \n\nFor this kata, single digit numbers will NOT be considered numerical palindromes. \n\nAlso, you know the drill - be sure to return \"Not valid\" if the input is not an integer or is less than 0.\n\n```\npalindrome(8) => 11\npalindrome(281) => 282 \npalindrome(1029) => 1001\npalindrome(1221) => 1221\npalindrome(\"1221\") => \"Not valid\"\n\n```\n\n```Haskell\nIn Haskell the function should return a Maybe Int with Nothing for cases where the argument is less than zero.\n```\nOther Kata in this Series:\nNumerical Palindrome #1\nNumerical Palindrome #1.5\nNumerical Palindrome #2\nNumerical Palindrome #3\nNumerical Palindrome #3.5\nNumerical Palindrome #4\nNumerical Palindrome #5\ndef palindrome(num):\n\t\nUse Call-Based format\nANSWER:\n"}}