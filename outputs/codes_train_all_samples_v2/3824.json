{"3824": {"code": ["\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    If you have a set of partitions", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Javascript:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Javascript:\n\n\n\n\n\n\n\n\n```\n\n\n```\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Javascript format\n\n\n\n\n\n\n\n\n\nGiven a certain integer  ```", "\nUse Call-Based format\n\n\n\n\n\n\nIf the function is called without arguments, use Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nUse Javascript:\n```\n\n\n\n\n```\n\n```\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Javascript-Based format\n\n\n\n\n\n\n\n\n\nUse Javascript-Based format\n\nUse Javascript-Based format\n\nThe function ```findSpecPartition()```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe function ```findSpecPartition(n,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nThe function should take three arguments\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n```", "\nUse Call-Based format\nUse Javascript format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Javascript-Based format\n\nUse Javascript format\n\nUse Call-Based format\n\nUse Javascript format\n\nCMD:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nn = 3\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe function should receive three arguments\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  <--\n  # n       <-------", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Javascript format\n\n(4, 2, 2, 1)\n\n\n\n\n\n\n\n\n\nUse Javascript-Based format\n\n\n\n\nfind_spec_partition()\n\n\n\n\n\n```\n# The following are all the terms", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n    findSpecPartition(n, k)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nThe function should output the partition with the maximum or minimum product value.\n```\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nn = 10\nk = 2\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Javascript:\n\nUse Call-Based format\n\nThe function ```findSpecPartition()```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nfor n, k in [", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThe following example shows the function with the command.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`findSpecPartition(3, 1, 1, 1)```", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nAnswer:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n#", "\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Javascript:\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfindSpecPartition(10, 4)\n\n\n\n```\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Javascript-Based format\n\nUse Javascript:\n\n```\n\nfindSpecPartition()\n\nUse Call-Based format\n\nUse Javascript:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe function ```findSpecPartition()```", "\nUse Call-Based format\n\n\n\n\n\nUse Javascript:\nUse Javascript-Based format\n\nUse Call-Based format\n\nUse Javascript:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfindSpecPartition(n, k)\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Javascript:\n\nUse Call-Based format\n\nCall-Based format\n\nUse Javascript:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\nif", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse Javascript:\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nfind_spec_partition:\n\n\n\nn = 3\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nn, k, com, max, min, max\n\nUse Call-Based format\n\n```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn, k, com\n\n\n\n\n\n\nn, k, com,"], "prompt": "\nQUESTION:\nGiven a certain integer  ```n, n > 0```and a number of partitions,  ```k, k > 0```; we want to know the partition which has the maximum or minimum product of its terms.\n\nThe function ```find_spec_partition() ```, will receive three arguments,  ```n```,  ```k```, and a command:  ```'max' or 'min'```\n\nThe function should output the partition that has maximum or minimum value product (it depends on the given command) as an array with its terms in decreasing order.\n\nLet's see some cases (Python and Ruby)\n```\nfind_spec_partition(10, 4, 'max') == [3, 3, 2, 2]\nfind_spec_partition(10, 4, 'min') == [7, 1, 1, 1]\n```\nand Javascript:\n```\nfindSpecPartition(10, 4, 'max') == [3, 3, 2, 2]\nfindSpecPartition(10, 4, 'min') == [7, 1, 1, 1]\n```\nThe partitions of 10 with 4 terms with their products are:\n```\n(4, 3, 2, 1): 24\n(4, 2, 2, 2): 32\n(6, 2, 1, 1): 12\n(3, 3, 3, 1): 27\n(4, 4, 1, 1): 16\n(5, 2, 2, 1): 20 \n(7, 1, 1, 1): 7   <------- min. productvalue\n(3, 3, 2, 2): 36  <------- max.product value\n(5, 3, 1, 1): 15\n```\nEnjoy it!\ndef find_spec_partition(n, k, com):\n\t\nUse Call-Based format\nANSWER:\n"}}