{"3768": {"code": ["\n\n#### Example:\n\n### Name_file\n\n\n\n\n\n#### Description:\n\n\n\n\n\n\n\n#### Example:\n\n### Name_file\n\n###\n-transpose!\n\n#### Example:\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n```python\n\n\n-transpose!):", "\n\n\n\nname_file(\"\", 4, 1)\nname_file(\"\", 4, 2)\nname_file(\"\", 4, 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n```python\nname_file(name, start) #=> str\n\n\n\n\n\n\n-trans", "\n\n\n\n\n\n\n\n# Description:\n\n[Name File](https://www.codewars.com/kata/name-file)\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n\ntranspose!\n  #=> [1]\n\n\n\n-transpose!\n", "\n```\n\n\n\n\n\n\n\n\nname_file(frm, nbr, start) #=> str\n\n#### Description:\n\nA function that creates a function that creates a function that creates an array of files\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntranspose!)\n\n\n\n-transpose!(", "\n\n\n\n\n\n\n\n### Example of how to create a function:\n\n### Name of files\n\n#### Description:\n\nName of file\n\n#### Description:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"\", 4, 1) #=> str\n\n#### Description:\n\n\n\n-", "\n\n\n\n\n\n\nname_file(\"\", 4, 0)\nname_file(\"\", 3, 1)\nname_file(\"\", 1, 1)\n\n#### Test:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(name, nbr, start) #=> list\n\n\n-transpose!)\n", "```\n\n#### Description:\n\n\n\n\n\n\n\nname_file(\"image \", 3, 1)\n\n#### Description:\n\nMore examples:\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntranspose!\n  #=> [IMG 1,IMG 2,IMG 3]\n\n-", "\n```python\nname_file(\"image\", 4, 1) #=> str\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"image #.jpg\", 3, 1) #=> str\nname_file(\"image #\", 3) #=> str\n\n\n\n\n\n\n\n\n\n\n\n\n\n-transpose!(", "```\n\n\n\n\n\n\n\nname_file(frm, nbr, start) #=> list\n\n#### Description:\n\nCreate a function that will create three parameters:\n\nname_file(frm, nbr, start) #=> list\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-transpose!), [Implement", "\n\n\n\n\n\n\n\n\n\nname_file(\"image #.jpg\", 1, 1)\nname_file(\"image #.jpg\", 3, -2)\n\n#### Description:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"IMG \", 4, 1)\n\n\n-transpose!(https://", "\n```\n\n\n\n\n\n\n\nname_file(frm, nbr, start) #=> list\n\n```\n\n\n\n\n\n\n\n\n\n\nname_file(\"\", 3, -2) #=> list\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"\", 3, 1) #=> list\n\n\n-transpose!(", "\n```\n\n\n\n\n\n\n\n### Example:\n\n## Example of a function:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"image #.jpg\", 5, 1)\nname_file(\"image #.jpg\", 3, 1)\n\n\n\n\n\n\n\n\n\n-transpose!):\n  #=> [\"#", "\n```python\nname_file(\"image #\", 1, 1)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"image #\", 1, 1)\nname_file(\"image #\", 1, 1)\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(name) #=> list\n\n\n-trans", "\n\n\n\n\n\n\n\nname_file(\"image\", 4, 1)\nname_file(\"image\", 3, -1)\nname_file(\"image\", 1, -1)\n\n#### Note:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"\") #=> str\n\n\n-trans", "\n\n\n\n\n\n\n\n#### Example:\n\npython\nname_file(\"image 1\", 2, 3) #=> list\nname_file(\"image 2\", 3, 4) #=> list\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(start) #=> list\n\n-trans", "\n```\n\n\n\n\n\n#### Example:\n\n## Description of function\n\n#### Example:\n\nName file\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Examples:\n\n### An example of how to create a function:\n\n\n\n\n\n\n\n\n\n\n-transpose!))\n ", "\n\n\n\n\n\n\nname_file(name, nbr, start) #=> list\nname_file(name, nbr, start) #=> list\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n```python\nname_file() #=> list\n\n\n\n\n\n\n-transpose!))\n", "\n\n\n\n\n\n### A test for the following:\n\n#### Description:\n\n\n\n\n\n\n\n\n## Examples:\n\n```python\nname_file(\"image #.jpg\", 3, 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"image \", 4, 1)\n\n\n-trans", "\n\n\n\n\n\n\nname_file(frm, nbr, start) #=> str\n\n#### Description:\n\nSome examples:\n\n```python\nname_file(frm, nbr, start) #=> str\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-transpose!)\n  #=>", "\n\n\nname_file(frm, nbr, start) #=> list\nname_file(frm, nbr, start) #=> list\n\n#### Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname_file(\"image\", 7, 3, 0)\n\n\n\n\n\n\n\n\n-transpose!), [Implement"], "prompt": "\nQUESTION:\nNaming multiple files can be a pain sometimes.\n\n#### Task:\n\nYour job here is to create a function that will take three parameters, `fmt`, `nbr` and `start`, and create an array of `nbr` elements formatted according to `frm` with the starting index `start`. `fmt` will have `` inserted at various locations; this is where the file index number goes in each file. \n\n#### Description of edge cases:\n\n1. If `nbr` is less than or equal to 0, or not whole, return an empty array.\n2. If `fmt` does not contain `''`, just return an array with `nbr` elements that are all equal to `fmt`. \n3. If `start` is not an integer, return an empty array.\n\n#### What each parameter looks like:\n\n```python\ntype(frm) #=> str\n  : \"text_to_stay_constant_from_file_to_file \"\ntype(nbr) #=> int\n  : number_of_files\ntype(start) #=> int\n  : index_no_of_first_file\ntype(name_file(frm, nbr, start)) #=> list\n```\n\n#### Some examples:\n\n```python\nname_file(\"IMG \", 4, 1)\n  #=> [\"IMG 1\", \"IMG 2\", \"IMG 3\", \"IMG 4\"])\nname_file(\"image #.jpg\", 3, 7)\n  #=> [\"image #7.jpg\", \"image #8.jpg\", \"image #9.jpg\"]\nname_file(\"# #\", 3, -2)\n  #=> [\"#-2 #-2\", \"#-1 #-1\", \"#0 #0\"]\n```\n\nAlso check out my other creations \u2014 [Elections: Weighted Average](https://www.codewars.com/kata/elections-weighted-average), [Identify Case](https://www.codewars.com/kata/identify-case), [Split Without Loss](https://www.codewars.com/kata/split-without-loss), [Adding Fractions](https://www.codewars.com/kata/adding-fractions),\n[Random Integers](https://www.codewars.com/kata/random-integers), [Implement String#transpose](https://www.codewars.com/kata/implement-string-number-transpose), [Implement Array#transpose!](https://www.codewars.com/kata/implement-array-number-transpose), [Arrays and Procs #1](https://www.codewars.com/kata/arrays-and-procs-number-1), and [Arrays and Procs #2](https://www.codewars.com/kata/arrays-and-procs-number-2).\n\nIf you notice any issues or have any suggestions/comments whatsoever, please don't hesitate to mark an issue or just comment. Thanks!\ndef name_file(fmt, nbr, start):\n\t\nUse Call-Based format\nANSWER:\n"}}