{"4360": {"code": ["\n\nUse C++ format\n\t\nUse Call-Based format\n\n\nUse C++ format\n\n\n:\n\t\nUse C++ format\n\n\n\n\nUse Call-Based format:\n\t\nUse C++ format\n\n\n\n\n\n\n\n\t\n:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n```c++\nint getScore(1", "Use Call-Based format\n\t\nUse C++ format\n\n\n\nUse Call-Based format\n:\n\nUse C++ format\n\n\n\n\n:\n\n+-------\n\nGetScore(n)\n\nUse C++ format\ndef getScore(n):\n\t\nUse Python format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```c", "\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\nUse C++ format\n\n\n:\n+-------\n\n\nUse C++ format\ndef getScore(n):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave a look at the following numbers.\n\n``", "\nUse Call-Based format\n\n\nIf you want to use Call-Based format, use C++ format\n\n\nUse Call-Based format:\n:\nscore\n\nUse Call-Based format\n\n\n\n:\nscore+-------\n\n\n:\n\n\n\ndef\n:\n\n\n\n\n\n\nGetScore(n)\n\n\n\n\n```c++\n", "\nUse C-Based format\n\nUse Call-Based format\n\n\nUse C++ format\n:\n\nUse C++ format\n\n\n\n\nUse C++ format:\n\n\n\nUse Call-Based format\ndef score(n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave look at the following numbers.", "Use C++ format\n\n\nUse Call-Based format\n\n\n:\nn | score\n\nUse Call-Based format\n\n\n\n\n\n:\nn | score\n+-------\n\ndef getScore(n):\n\t\nUse C++ format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetScore(n)\n\nReturns:\nn |\n\nHave", "Use C-Based format\n\n\n\ndef score(n):\n\t\nUse Call-Based format\n\n\nUse C++ format:\n:\n\nUse C++ format\n\n\n\n\n:\n\nUse C++ format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_score(n)\nreturn n\n\n\n\n\nHave look at", "\nUse C-Based format\n\ndef getScore(n):\n\t\nUse Call-Based format\n\n\n:\nn | score\n\n\n\n\n\n\nUse C++ format:\nn | score\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave look at the following numbers.\n\n```c++\nn | score\n\n\n\n\nHave", "Use Call-Based format\n\n\ndef score(n):\n\t\nUse Call-Based format\n\n\n:\nn | score\n\nUse C-Based format\n\n\n\nUse C-Based format:\nn | score\n\n\n\n\n\n\n\n\n:\nn | score\n\n\n\n\n\n\n\n\ndef get_score(n):\n\t\n\nHave", "\n\n\nUse C-Based format\ndef score(n):\n\nUse Call-Based format\n\n\n:\nn | score\n\nUse Call-Based format\n\n\n\n\nUse C++ format:\nn | score\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetScore(n):\nreturn n;\n\n\n\n\nHave look", "\nUse Call-Based format\n\n\ndef get_score(n):\n\nUse Call-Based format\n\n\n:\nn | score\nUse Call-Based format\n\n\n\n\n:\nn | score\n\ndef getScore(n):\n\t\nUse C++ format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave look at the following numbers.", "Use Call-Based format\n\ndef get_score(n):\n\t\nUse Call-Based format\n\n\n:\nn | score\n\n\n\nUse C++ format\n\n:\nn | score\n+-------\n\ndef getScore(n):\n\t\n\n\n\n\n\n\n:\nn | score\n\n\n\n\n\n\n\n\n\nHave look at the following numbers", "\n\n\n\nUse C++ format\ndef get_score(n):\n\t\nUse Call-Based format\n\n\n:\nn | score\n\n\n\n\n\n:\nn | score\n\n\n\nUse C++ format\n\n\n\n\n\n\n\n:\nn | score\n\n\n\n\n\n\nGetScore:\nn | score\n\n\nHave look at the", "\nUse Call-Based format\n\n\ndef score(n):\n\t\nUse Call-Based format\n\n\n:\nn\nUse Call-Based format\n\n\n\n\n:\nn\n\nUse Call-Based format\n\n\ndef score(n):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave look at the following numbers.\n\n", "\nUse C++ format\n\n\ndef score(n):\n\t\nUse Call-Based format\n\n\n:\n\nUse C++ format\n\n\n\n\nUse C++ format:\n+-------\n\n\nUse C++ format\ndef getScore(n):\n\t\nUse C++ format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```c++", "\n\n\n\ndef score(n):\n\t\nUse Call-Based format\n\n\n:\nn | score\n\nUse Call-Based format\n\n\n\n\n:\nn | score\n\nUse C++ format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave a look at the following numbers.\n\n\n\n\n\nHave look at the following numbers.", "\n\n\nUse C-Based format\n\ndef getScore(n):\n\t\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\nUse C++ format\n\ndef getScore(n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave look at the following", "\n\nUse Call-Based format\n\n\n```c++\nint getScore(n)\n\nUse Call-Based format\n\n\n:\nn | score\n\n\n\n\n\n:\nn | score\n\nUse C++ format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetScore(n)\nreturn n;\n\n\n\nHave look at", "Use Call-Based format\n\nUse C++ format\n\ndef score(n):\n\nUse Call-Based format\n\n\n\n:\n\nUse C++ format\n\n\n\n\nUse Call-Based format:\n\nUse C++ format\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\nGetScore(n):\n\t\n\nHave look at the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse C-Based format\n\nUse Call-Based format:\nn | score\n\nUse Call-Based format\n\n\n\n\n:\nn | score\n+-------\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHave look at the following numbers.\n\n``"], "prompt": "\nQUESTION:\nHave a look at the following numbers.\n\n```\n n | score\n---+-------\n 1 |  50\n 2 |  150\n 3 |  300\n 4 |  500\n 5 |  750\n```\n\nCan you find a pattern in it? If so, then write a function `getScore(n)`/`get_score(n)`/`GetScore(n)` which returns the score for any positive number `n`:\n\n```c++\nint getScore(1) = return 50;\nint getScore(2) = return 150;\nint getScore(3) = return 300;\nint getScore(4) = return 500;\nint getScore(5) = return 750;\n```\ndef get_score(n):\n\t\nUse Call-Based format\nANSWER:\n"}}