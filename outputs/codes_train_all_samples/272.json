{"272": {"code": ["\n\n\n\n\n\n\nstatus[0]: an integer representing the status of the boxes you are given\ncandies[0]: an integer representing the number of candies\nkeys[0]: an integer representing the number of keys\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nOutput: 8\n keys = [[],[", "\n\n\n\n\n\n\nstatus[i]: an integer\ncandies[i]: an integer\nkeys[i]: an integer\ncontainedBoxes[i]: an integer\n\nExplanation:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nstatus[i]: an integer\n keys[[]], candies =", "\n\n\n\n\n\n\n\n\nstatus = [1,1,1,1,1,1,1]\ncandies = [[1,1,1,1,1],[1,1],[]\nkeys = [[]]\n\n:\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n initialBoxes = [[]]\nOutput:", "\n\n\n\n\n\n\n\nstatus[i]: an integer representing the number of candies and the number of keys.\ncandies[i]: an integer representing the number of keys.\ncandies[i]: an integer representing the number of keys.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n candies = [7], keys", "\n\n\n\n\n\n\n\n\n\n\nstatus[i]: an integer\ncandies[i]: an integer\nkeys[i]: an integer\ncontainedBoxes[i]: an integer\n\nExplanation:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 2\nExplanation:\n candies = [1,1], keys", "\n\n\n\n\n\n\n\n\nstatus[i]: an integer representing the status of the boxes.\ncandies[i]: an integer representing the number of candies in the boxes.\nkeys[i]: an integer representing the number of keys in the boxes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n candies = [100], keys =", "\n\n\n\n\n\n\nstatus[i]: an integer representing the number of open boxes.\ncandies[i]: an integer representing the number of closed boxes.\nkeys[i]: an integer representing the number of open boxes.\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n initialBoxes = [1]\nOutput", "\n\n\n\n\n\n\n\n\nstatus = [0,0,0,0]\ncandies = [0,1,0,0,1,1,1,1,1,0]\nkeys = [[]\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nOutput: 1\n candies = [7", "\n\n\n\n\n\n\nstatus[0]: an integer representing the number of open boxes.\nstatus[1]: an integer representing the number of closed boxes.\nstatus[1]: an integer representing the number of open boxes.\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nstatus = [1]\n\n\n keys = [", "\n\n\n\n\n\n\n\n\n\nstatus = [0]\ncandies = [0]\nkeys = [[]\ncontainedBoxes = [[]]\n\nOutput: 1\n\nExplanation:\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\n\nOutput: 4\n\nExplanation:\n keys =", "\n\n\n\n\n\n\nstatus: 0\ncandies: [0,0,0]\nkeys: [0,0]\ncontainedBoxes: [0]\n\nExplanation:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 1\n\nExplanation:\n candies = [[1,1,2],", "\n\n\n\n\n\n\nstatus[0]: an integer representing the number of candies.\ncandies[0]: an integer representing the number of keys.\nkeys[0]: an integer representing the number of candies.\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nOutput: 1\n\n candies = [1], keys", "\n\n\n\n\n\n\nstatus = 0\ncandies = [0,1,1,0,1,1,1,1,1]\nkeys = [[]\ncontainedBoxes = [[]]\n\nOutput: 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 1\n\nExplanation:\n keys =", "\n\n\n\n\n\n\nstatus = 0\ncandies = [7,5,4,5,3,3,4,5,5,5]\nkeys = [[]\ncontainedBoxes = [[]]\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n keys = [[]], candies = [[]", "\n\n\n\n\n\n\nstatus[i]: an integer representing the status of the current box.\ncandies[i]: an integer representing the number of candies.\nkeys[i]: an integer representing the number of keys.\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 1\n\nExample 5:\nInput:\n[]", "\n\n\n\n\n\n\n\n\n\nstatus[i]: an integer representing the status of the last box.\ncandies[i]: an integer representing the number of candies in it.\nkeys[i]: an integer representing the number of keys in it.\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n candies = [1], keys =", "\n\n\n\n\n\n\nstatus[0]: an integer\nstatus[1]: an integer\nstatus[1],\nstatus[1],\nstatus[1],\n\nExplanation:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\nExplanation:\n\nstatus[i]: an integer\ncandies[i]:\n 1\n", "\n\n\n\n\n\n\n\nstatus[0]: an integer representing the status of the boxes.\ncandies[0]: an integer representing the number of candies in the boxes.\nkeys[0]: an integer representing the number of keys in the boxes.\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n candies = [7],", "\n\n\n\n\n\n\nstatus[0]: an integer\nstatus[1]: an integer\nstatus[1]: an integer\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstatus[0] = 1\nstatus[1] = 0\nstatus[1] = 0\nstatus[1] = 0\n\n:\n\n\n initialBoxes = [", "\n\n\n\n\n\n\nstatus: an integer\ncandies: an array of integers\nkeys: an array of integers\ncontainedBoxes: an array of integers\n\nOutput: 1\n\nExplanation:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 1\n candies = [7], keys = [[]], containedBoxes"], "prompt": "\nQUESTION:\nGiven n boxes, each box is given in the format [status, candies, keys, containedBoxes] where:\n\nstatus[i]: an integer which is 1 if\u00a0box[i] is open and 0 if\u00a0box[i] is closed.\ncandies[i]:\u00a0an integer representing the number of candies in box[i].\nkeys[i]: an array contains the indices of the boxes you can open with the key in box[i].\ncontainedBoxes[i]: an array contains the indices of the boxes found in box[i].\n\nYou will start with some boxes given in initialBoxes array. You can take all the candies in any open\u00a0box and you can use the keys in it to open new boxes and you also can use the boxes you find in it.\nReturn the maximum number of candies you can get following the rules above.\n\u00a0\nExample 1:\nInput: status = [1,0,1,0], candies = [7,5,4,100], keys = [[],[],[1],[]], containedBoxes = [[1,2],[3],[],[]], initialBoxes = [0]\nOutput: 16\nExplanation: You will be initially given box 0. You will find 7 candies in it and boxes 1 and 2. Box 1 is closed and you don't have a key for it so you will open box 2. You will find 4 candies and a key to box 1 in box 2.\nIn box 1, you will find 5 candies and box 3 but you will not find a key to box 3 so box 3 will remain closed.\nTotal number of candies collected = 7 + 4 + 5 = 16 candy.\n\nExample 2:\nInput: status = [1,0,0,0,0,0], candies = [1,1,1,1,1,1], keys = [[1,2,3,4,5],[],[],[],[],[]], containedBoxes = [[1,2,3,4,5],[],[],[],[],[]], initialBoxes = [0]\nOutput: 6\nExplanation: You have initially box 0. Opening it you can find boxes 1,2,3,4 and 5 and their keys. The total number of candies will be 6.\n\nExample 3:\nInput: status = [1,1,1], candies = [100,1,100], keys = [[],[0,2],[]], containedBoxes = [[],[],[]], initialBoxes = [1]\nOutput: 1\n\nExample 4:\nInput: status = [1], candies = [100], keys = [[]], containedBoxes = [[]], initialBoxes = []\nOutput: 0\n\nExample 5:\nInput: status = [1,1,1], candies = [2,3,2], keys = [[],[],[]], containedBoxes = [[],[],[]], initialBoxes = [2,1,0]\nOutput: 7\n\n\u00a0\nConstraints:\n\n1 <= status.length <= 1000\nstatus.length == candies.length == keys.length == containedBoxes.length == n\nstatus[i] is 0 or 1.\n1 <= candies[i] <= 1000\n0 <= keys[i].length <= status.length\n0 <= keys[i][j] < status.length\nAll values in keys[i] are unique.\n0 <= containedBoxes[i].length <= status.length\n0 <= containedBoxes[i][j] < status.length\nAll values in containedBoxes[i] are unique.\nEach box is contained in one box at most.\n0 <= initialBoxes.length\u00a0<= status.length\n0 <= initialBoxes[i] < status.length\nclass Solution:\n    def maxCandies(self, status: List[int], candies: List[int], keys: List[List[int]], containedBoxes: List[List[int]], initialBoxes: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}