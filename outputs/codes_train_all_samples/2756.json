{"2756": {"code": ["\nUse Call-Based format\n\n\n\n\n\n1 <= nMax <= 100000 <= k <= 7\n1 <= k <= 7\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1035 * 3\n\n1035 * 3\n\n1035 * 3\n\n125874 * 3\n\n\n\n\n\n\t\n# Example:\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n1035 > 1359\n1035 <= 1359 * 2 <= 3105 > 7105 \n\n```python\n\n2\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n1035\n\n\n\n\n\n\n    nMax = nMax * k\n", "\nUse Call-Based format\n\n\n\n\n\n\n1035 <= nMax <= 10000 and nMax <= 10000 <= 50000\n\n```python\nsearch_permMult(10000, 3) === 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n1 <= nMax <= 10000\n\n\n\n\n\nnMax = nMax *", "\n\n\n\n\n\n\n\n\n```python\nsearch_permMult(1035, 2)\n```\n\n\n\n\n\n\n\n\n\n\n\n\nThis function is called from the Python standard library `search_permMult()`\n\n\n\n\n\n\n\n\n\n\n1035\n\n3105\n\n\n\n\n\n\n\n```python\n\nif", "\n\n\n\n\n\n\n1035 <= nMax <= 100000\n\n1035 <= k <= 7\n\n\n1 <= nMax <= 100000\n1 <= k <= 7\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n1035 * 3 = 3105\n\n3105 * 2 = 2\n\n\n\n\n\n\n```", "\n\n\n\n\nUse Call-Based format:\n\n\n\n\n1035 <= nMax <= 10000\n\n1035 <= nMax <= 10000\n\n1035 <= k <= 7\n\n1035 <= k <= 7\n\n1035 <= k <= 7\n\n1035 <= k <= 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n```python\nsearch_permMult(10000, k)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1035 * 3\n\n125874 * 2\n\n\n\n\n\n\n\n```python\nnMax = 10001\nk = 2", "\n\n\nsearch_permMult(10000, 3)\n\nUse Call-Based format\n\n\n\n\n\n\n\n1 <= nMax <= 100000\n1 <= k <= 7\n\n2 <= k <= 7\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n1035 * 3\n\n\n\n\n\n\n\nnMax = nMax -", "\n\n\n\n\nUse Call-Based format\n\n\n\n1035 <= nMax <= 100000\n\n1035 <= k <= 7\n\n1035 <= k <= 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n1035 * 3 = 1035 * 2\n\n\n\n\n\n\n\n```python\n\n", "\n\n\n\n\n\n\n\n1 <= nMax <= 100000\n2 <= k <= 7\n3 <= k <= 7\n\n1 <= nMax <= k <= 7\n\n```python\n\n1 <= nMax <= 100000\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n    1369 <= n", "\n\n\n\n\nUse Call-Based format:\n```python\n\n\n```\n1035 * 3 = 3105\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nnMax = 100\nk = 2\n\n```python\nsearch_permMult(10000, 1)\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```python\nsearch_permMult(1035, 3105)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1035\n\n\n\n\n\n1359, 4359 = 1", "\n\t\tUse Call-Based format\n\t\n\n\n\n\n\n\n\n\n\n1 <= nMax <= 100000\n1 <= k <= 7\n1 <= k <= 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3105 = 3105 * 2\n\n```python\nsearch_permMult(10000, 3)\n\n\n\n\n```", "\n\n\n\n\n\n\n1035 > 1\n\n1035 > 2\n\n1035 > 1\n\n1035 * 2\n\n1035 * 2\n\n1035 * 3\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1035 * 3\n\n1035 * 3\n\n\n\n\n\n\n```python\n#", "\n\n\n\n\nUse Call-Based format:\n\n\n\n0 <= nMax <= 5000\n0 <= k <= 7\n0 <= k <= 7\n1 <= nMax <= 3105\n2 <= k <= 7105\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n# Example 2", "\n\n\n\n\n\n\n\n1035 <= nMax <= 1035\n1035 <= nMax <= 1359\n1035 <= nMax <= 125874\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1359 <= nMax <= 100000 <= nMax <= 1024\n\n1359 <= nMax <= 1024\n\n\n\n\n#", "\n\nUse Call-Based format\n\n\n\n\n\nsearch_permMult(nMax, k)\n\n```python\nsearch_permMult(nMax, k)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= nMax <= 100000\n1 <= nMax <= 10000\n\n\n\n\n\n```python\n\n", "\nUse Call-Based format\n\n\n\n\nThe function `search_permMult()` is called with the same parameters\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1035\n\n1035 * 3\n\n3105\n\n3105 * 2\n\n125874\n\n```python\n\n\n\n\n\n\n1035", "\n\n\n\n\nUse Call-Based format\n\n\n\n0 <= nMax <= 100\n0 <= k <= 7\n0 <= k <= 7\n1 <= k <= 9\n\n```python\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1035 * 2 = 3105\n\n\n\n\n\n\n\n```python\n\n", "\n\n\n\n\n\n\n5000 <= nMax <= 100000\n\n5000 <= k <= 7\n\n5000 <= k <= 7\n\n5000 <= k <= 7\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo available permutations found\n\n\n\n\n\n\n\n\n\n1035 * 2 = 535\n\n1035 * 3 = 535\n\n\n"], "prompt": "\nQUESTION:\nThe number `1035` is the smallest integer that exhibits a non frequent property: one its multiples, `3105 = 1035 * 3`, has its same digits but in different order, in other words, `3105`, is one of the permutations of `1035`.\n\nThe number `125874` is the first integer that has this property when the multiplier is `2`, thus: `125874 * 2 = 251748`\n\nMake the function `search_permMult()`, that receives an upper bound, nMax and a factor k and will output the amount of pairs bellow nMax that are permuted when an integer of this range is multiplied by `k`. The pair will be counted if the multiple is less than `nMax`, too\n\nLet'see some cases:\n```python\nsearch_permMult(10000, 7) === 1 # because we have the pair 1359, 9513\nsearch_permMult(5000, 7) === 0 # no pairs found, as 9513 > 5000\n\nsearch_permMult(10000, 4) === 2 # we have two pairs (1782, 7128) and (2178, 8712)\nsearch_permMult(8000, 4) === 1 # only the pair (1782, 7128) \n\nsearch_permMult(5000, 3) === 1 # only the pair (1035, 3105)\nsearch_permMult(10000, 3) === 2 # found pairs (1035, 3105) and (2475, 7425)\n```\nFeatures of the random Tests:\n```\n10000 <= nMax <= 100000\n3 <= k <= 7\n```\nEnjoy it and happy coding!!\ndef search_permMult(nMax, k):\n\t\nUse Call-Based format\nANSWER:\n"}}