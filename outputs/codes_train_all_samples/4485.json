{"4485": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n# Use Call-Based format\n\n# Use Call-Based format\n\n\n#\n#\n# Use Call-Based format\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:rust\ntles of beer.\n\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n_Note__: In C#\n\n\n\n_Note: In Rust\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- If the input is `'+`\n\n-\n\n\n\n\n\n```if", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n`if:rust`\n\n```if:cust\n`if:rust`\n```\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n`if:rust`\n\n\n\n\n\n\n`if:rust`\n", "\nUse Call-Based format\n\n\n\n\n\n`-`\nUse Call-Based format\n```\n\n\n\n\n\n\n\n#\n\nReturn the code:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- `if:cust`\n\n-\n\n\n\n```if:", "\n\n\n\n\nUse Call-Based format\n\n\n\n0 bottles:\n\n1 bottles:\n9 bottles:\n\n1 bottles:\n\n1 bottles:\n\n1 bottles:\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The above is a", "\n\n\n\n`if:cust`\n\nTry the C# format\n```\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse C# format\n\n\n\n\n\n\n\n\n\n\n\n\n\n`if:rust`\n__Note__: In Rust.\n\n\n\n\n```if", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n# HQ9+\n\n\n# HQ9+\n\n\n\n\n# HQ9+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHQ9+\n\nThe input is in C# format\n\n```\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n*Rust:*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`if:c#`\n__Note__: In C#\n```\n\n\n\n\n\n\n\n\n# - `if:rust`", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n# Use Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n#\n#\n\n\n\n\n\n\n\n\n\n\n\n`if:c#`\n__Note__: In C#.\n__Note__: In Rust.\n\n\n\n\n\n\n\n### HQ", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n# HQ9+\n\nUse Call-Based format\n# HQ9+\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n__Note__: You have a bug in the esoteric language [HQ9+]\n\n\n\n\n\n```if", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nHQ9+\n\nUse Call-Based format\n\nWITH:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHQ9+\n\n\n\n\n```if:r", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nif:c#\n__Note__: In C#.\n\n\nelse:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c#\n__Note__: In C#\n\n\n\n\n\n\n``", "\n\n\n- Use Call-Based format\n\n## Example\n\n+\nUse Call-Based format\n\n## Example\n\n# Use Call-Based format\n\n## Examples\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples\n\n+\n\n", "\n\n\n    Use Call-Based format\n\n    Note:\n\n   \n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n- If you can't use a call-based language, return `None`.\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n# Examples:\n", "\n\n\n\nUse Call-Based format\n\n\n\n\n\nHQ9(code)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n`if:rust`\n\n```\n\n\n\n`if:c#\n\n\n\n\n\n\n```\n\n\n\n```\n", "\n\n\n# Use Call-Based format\n\nUse Call-Based format\n\n\n\n# Use Call-Based format\n#\n\n#\n\n#\n\n\n#\n# HQ9\n#\n# Use C#\n#\n\n\n\n\n\n\n\n\n\n\n\n\n1 bottle of beer on the wall\n2 bottle of beer\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nHQ9+:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Note__: We do not support C#.\n\n\n\n\n\n\n\n\n- If the input", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n#\n- Do not use the call-based format\n\n#if:cust\n#if:rust\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRETURN:\nHello World!\n\n```\n\n\n\n\n\n\n```\n#if:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n# -\n\n\n- Do not use Call-Based format\n\n```if:c#\n\n\n```else:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# -\n#\n\n\n# -\n#\n2 bot", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n# Use C# format\n#\n\n#\n\n\n\n##\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:cust\n__Note__: In Cust.\n__Note__: In Rust.\n\n\n\n\n\n``"], "prompt": "\nQUESTION:\nYou task is to implement an simple interpreter for the notorious esoteric language [HQ9+](https://esolangs.org/wiki/HQ9+) that will work for a single character input:\n\n- If the input is `'H'`, return `'Hello World!'`\n- If the input is `'Q'`, return the input\n- If the input is `'9'`, return the full lyrics of [99 Bottles of Beer](http://www.99-bottles-of-beer.net/lyrics.html). It should be formatted like this:\n\n```if:rust\n__Note__: In Rust, return `Some` containing the appropriate value.\n```\n\n```\n99 bottles of beer on the wall, 99 bottles of beer.\nTake one down and pass it around, 98 bottles of beer on the wall.\n98 bottles of beer on the wall, 98 bottles of beer.\nTake one down and pass it around, 97 bottles of beer on the wall.\n97 bottles of beer on the wall, 97 bottles of beer.\nTake one down and pass it around, 96 bottles of beer on the wall.\n...\n...\n...\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall.\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n```\n\n- For everything else, don't return anything (return `null` in C#, `None` in Rust).\n\n(`+` has no visible effects so we can safely ignore it.)\ndef HQ9(code):\n\t\nUse Call-Based format\nANSWER:\n"}}