{"3279": {"code": ["\n### Example :\n\n### The User :\n\n....\n\n.........\n\n\n.......\n\n.........\n\n\n\n\n\n\n\n\n\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Beware**", "\n\n### Examples :\n\n### An example :\n\n**Aromatic** `number` : `1`\n**Aromatic** `space` : `2`\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Examples :", "\n............................\n\n\n\n\n\n...........\n\n\n\n\n\n\n\n\n**\n\n\n\n...\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n**-pig**", "\n### Examples :\n\n....\n\n## Description :\n\n**Another example**\n\n....\n\n....\n\n\n\n\n### Examples :\n\n**Another example**\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n..\n\n\n\n", "\n### Examples :\n\n....\n\n............\n\n\n\n\n...........\n\n\n\n\n\n\n\n\n\n\n**Unkown**\n\n\n\n\n**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n...\n\n\n\n###", "\n### Example :\n\n.......\n\n.......\n\n\n\n### Examples :\n\n**A bit** :\n\n- **number** : `1`\n\n- **pig** : `2`\n\n\n\n\n\n\n\n\n\n\n\n**\n\n\n\n\n\n\n-\n\n\n\n\n\n\n", "\n\n### Examples :\n\n**A few examples** :\n\n\n\n.......\n\n\n......\n\n.......\n\n\n\n\n\n...\n\n\n\n\n....\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n\n**Grammat", "\n\n### Examples :\n\n....\n\n\n\n## The Art Art :\n\n.....\n\n......\n\n\n\n.....\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- **pig** `p", "\n..................................\n :\n\n\n\n.......\n\n\n\n\n\n\n\n\n\n.....\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n### Example", "\n...................................\n.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example :\n\n## Examples :\n\n\n\n-\n\n\n\n\n\n\n\n### Example", "\n### Example :\n\n....\n\n.....\n\n......\n\n\n....\n\n......\n\n\n\n\n\n**Kata** :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Easy** :\n\n\n\n\n\n\n\n", "\n\n....\n\n.....\n\n### Example :\n.....\n\n\n.....\n\nNote:\n\n.....\n\n\n\n**Beware**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n-\n\n-\n\n\n\n###", "\n\n### Example :\n\n.....\n\n.....\n\n.......\n\n\n\n\n### The Note :\n\n......\n\n\n\n\n\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n-pig**", "\n\n### Example :\n\n**The number type** : `number`\n...\n....\n\n.....\n\n\n\n...\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n\n-\n\n-\n\n\n\n\n\n###", "\n### Example :\n *#### Examples :\n\n**Another** `s` of english plural should be found.\n\n...\n\n\n\n\n\n....\n\n\n\n...\n\n\n\n\n..\n\n\n\n\n\n\n\n\n\n\n\n\n\n..\n\n\n\n\n\n\n\n-\n\n\n\n### Example", "\n...............................\n\n\n\n\n.\n\n\n\n\n\n**Another**\n\n\n\n\n**Another**\n\n\n\n\n\n\n\n\n\n\n**Another**\n\n-\n\n\n\n\n\n\n\n### Example", "\n.................................\n\n\n\n\n\n\n\n\n\n\n\n****\n\n\n\n\n\n\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n.............................\n\n\n\n\n\n### Example :\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n\n...\n\n\n\n\n\n-\n\n\n\n### Examples :", "\n...............................\n.....\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n...\n\n\n\n-\n\n\n\n\n\n\n", "\n### Example :\n\n....\n\n....\n\n......\n\n......\n\nNOTE:\n\n......\n\n\n\n\n\n\n\n\n\n\n....\n\n\n\n\n\n\n....\n\n\n\n\n\n-\n\n- `pig-sur"], "prompt": "\nQUESTION:\nOnce upon a time, a CodeWarrior, after reading a [discussion on what can be the plural](http://www.codewars.com/kata/plural/discuss/javascript), took a look at [this page](http://en.wikipedia.org/wiki/Grammatical_number#Types_of_number\n) and discovered that **more than 1** \"kind of plural\" may exist. \n\nFor example [Sursurunga Language](http://en.wikipedia.org/wiki/Sursurunga_language) distinguishes 5 types of numbers: **singular** (1 thing), **dual** (2 things), '**trial**' or '**lesser paucal**' (3 or 4), '**greater paucal**' (more than 4) and **plural** (many).\n\nIn this kata, you'll have to handle only four types of numbers:\n\n- **singular**: 0 or 1 thing\n- **dual**: 2 things\n- **paucal**: 3 to 9 things\n- **plural**: more than 9 things\n\nTo add some flavor the **number-marker** will not be added in same places:\n\n- **singular**, no marker : `1 cat`\n- **dual**, prefixed \"`bu`\" : `2 cats -> 2 bucat`\n- **paucal**, suffixed \"`zo`\" : `4 cats -> 4 catzo`\n- **plural**, \"circumfixed `ga`\" : `100 cats -> 100 gacatga`\n\nAs you all (\"hawk eyes\") have seen, the final `s` of english plural **disappears**.\n\n( btw these markers, of course, have absolutely nothing to do with true sursurunga language, we're just talking about \"**pig**-sursurunga\" with **pig** as **pig** in \"**pig latin**\" )\n\n## Your Job . . .\n. . . if you accept it, will be to write a `sursurungal` function which get a `string` as argument and returns this string with words in it eventually converted to their \"pig-sursurunga number type\".\n\nIf a `number` ( *ie* 1 or more digit ) + a `space` + a `word` ( letters ) are found then the word should be converted.\n\n**Each** group of `number+space+word` found in the string should be evaluated.\n\n### Examples :\n\nYou may assume at least 1 `number+space+word` group will be provided.\n\n**Beware** `s` of english plural should be removed, not ending `s` of some singular words ( *eg* \"kiss\" )\n\nGood luck!\ndef sursurungal(txt):\n\t\nUse Call-Based format\nANSWER:\n"}}