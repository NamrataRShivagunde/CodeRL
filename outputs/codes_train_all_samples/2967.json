{"2967": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n# bin_to_hex\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n\n\n\n\n### bin_", "\n\n\n\n\n\nUse Call-Based format\n\n\ndef bin_to_hex(hex_string):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# hex_to_bin\n\nReturns the hexadecimal representation of the binary value.\n\n\n\n\n\n\n\n\n\n#\n\n# bin_", "\nUse Call-Based format\n\n\n\n\n\n\n# hex_to_bin\n\nUse Call-Based format\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n\n\n#\n\n#", "\n\n\nUse Call-Based format\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n# hex_to_bin\n\n\n\n\n# hex_to_hex\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n# bin_to_hex\n\nUse Call-Based format\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n#\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n# bin_to_hex\n\nTakes a binary string as argument.\n\nReturns the hexadecimal representation of the binary string.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n# bin_to_hex\n\nTakes a binary string as argument.\n\nReturns the hexadecimal representation of the numerical value.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n# bin_to_hex\n\nTakes a binary string and returns a hexadecimal representation of the numerical value.\n\nReturns:\n\nbinary_string\n\nReturns:\nhex_string\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n#\n\n###", "\nUse Call-Based format\n\n\n\n\n\n\n\n# bin_to_hex\n\nTakes a hexadecimal string as argument.\nReturns the hexadecimal representation of the binary string.\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n\n# bin_to", "\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# bin_to_hex\n\nTakes a binary string and returns the hexadecimal representation of the numerical value.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n\n\n#\nDefine", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n# define two functions\n\ndefine two functions\n\ndefine two functions\n\n\n**Note:** You can define two functions.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n# bin_", "\n\n\n\n\nUse Call-Based format\n\n\n\n\ndef hex_to_bin(hex_string):\n\t\nUse Call-Based format\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n###", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n# hex_to_bin\n\nTakes a hexadecimal string and returns a binary representation of the numerical value.\n\nReturns the hexadecimal representation of the numerical value.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n\n# bin_to_hex\n", "\n\n\n\n\n# hex_to_bin\n\nTakes a hexadecimal string as argument.\nReturns the hexadecimal representation of the hexadecimal string.\n\n\n\n\n:\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n# bin_to_hex\n\nTakes a binary string as argument.\nReturns the hexadecimal representation of the numerical value.\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n#\n\n### bin", "\nUse Call-Based format\n\n\n\n\n\n\n# call_based_format\n\nUse Call-Based format\n\n\n\n# bin_to_bin\n\nTakes a binary string as argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n# hex_to_bin\n\nTakes a hexadecimal string as argument.\n\nReturns the hexadecimal representation of the hexadecimal string.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n#\n", "\nUse Call-Based format\n\n\n\n\n\n# Hexadecimal-Format\n\n:\n\n\n\n\n# Hexadecimal-To-Binary\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n# hex_to_bin\n\nUse Call-Based format\n\n\n\n# hex_to_hex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# hex_to_bin\n\n\n\n\n\n# bin_to_hex\n\n\n\n\n"], "prompt": "\nQUESTION:\nDefine two functions: `hex_to_bin` and `bin_to_hex` (or `hexToBin` and `binToHex`)\n\n\n# hex_to_bin\n\nTakes a hexadecimal string as an argument .\n\n**Note:** This string can contain upper or lower case characters and start with any amount of zeros.\n\nReturns the binary representation (without leading zeros) of the numerical value of the hexadecimal string.\n\nExamples:\n\n```\n\"00F\"    -->  \"1111\"\n\"5\"      -->  \"101\"\n\"00000\"  -->  \"0\"\n\"04D2\"   -->  \"10011010010\"\n```\n\n# bin_to_hex\n\nTakes a binary string (with or without leading zeros) as an argument .\n\nReturns the hexadecimal representation of the numerical value of the binary string.\n\n**Note:** Any non-numerical characters should be lower case\n\n\nExamples:\n\n```\n\"1111\"         -->  \"f\"\n\"000101\"       -->  \"5\"\n\"10011010010\"  -->  \"4d2\"\n```\n\n**Note:** You can assume all arguments are valid so there is no need for error checking.\n\nOh, and I've disabled a few things.\n\n\nAny feedback would be much appreciated\ndef bin_to_hex(binary_string):\n\t\nUse Call-Based format\nANSWER:\n"}}