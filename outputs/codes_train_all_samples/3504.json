{"3504": {"code": [":\n\ndef power_mod(x, y, m):\n\nUse Call-Based format\n:\n:\n\n\ndef,\n:\n\n\n,\n:\n:\n\n\n, n):\n\n:\n\nUse Call-Based format\n\n,\n\n\nThe following tasks are available:\n\n1:\n\n2:\n\n\n\n\n1:\n\n", "::\n\n:\n:\n\nUse Call-Based format\n\ndef, n):\n\n\n:\n\n\n\n,\n\t\n:\n:\n\nUse Task-Based format\n,\n:\n\n, n):\n\n\n\ny:\n\n\n\n\ny:\n\n\n\ny:\n\n\n\ny:\n\nx^y\nx^y", ":\n:\n\ndef power_mod(x, y):\n\nUse Call-Based format\n\n:\n:\n\ndef,\n:\n,\n::\n\n,\n:\n\n\n, n=64):\n\n\n\nA task is to create a new implementation of `modpow` which is faster than `pow`.\n\n\n\n\n\nA question is to create", ":\n:\n\ndef power_mod(x, y, m):\n\nUse Call-Based format\n:\n:\n\n\ndef,\n:\n\n,\n:\n:\n\n,\n:\n\n\n, n=3):\n\n\n\ny must be a positive integer.\ny must be a positive integer.\n:\n\ndef\n\n\nb^e =", ":\n:\n\ndef\n:\n:\n\nUse Call-Based format\n\n\n, n):\n\t\n\n\n:\n\n\n\n,\n:\n\n\n:\n\n\n,\n:\n\n\n, n=2, y=2, x=2, y=2):\n\n:\n\n\n \n\n\n\n\t\n\n\n\nb = b", ":\n:\n\ndef\n\nUse Call-Based format\n:\n\n\ndef, n):\n\t\n:\n:\n\n\n,\n\t:\n:\n\n\n, n):\n\n:\n\n, n=2**16)\n\nUse Call-Based format\n\n\nThe task is to create a new implementation of `modpow`.\n\n\n\n\t\n\n", ":\n:\n\n\n:\n:\n\nUse Call-Based format\n\ndef, n):\n\t\n\n\n:\n\n,\n\t:\n:\n\n\n,\n\nUse Call-Based format:\n\n\n, n):\n\t\n\n\nUse Call-Based format\n\ny is a very large number\n:\n\n\n\n\n\n\nBecause of the", ":\n:\n\ndef power_mod(x, y, m):\n\nUse Call-Based format\n:\n:\n\nUse Call-Based format\n\ndef,\n:\n\n\n,\n:\n:\n\n,\n:\n\n, n=1):\n\n\n\nThe task is to create a new implementation of `modpow`.\n\n\ndef\n\n\nx", ":\n:\n\ndef power_mod(x, y, m):\n\nUse Call-Based format\n::\n\n\ndef, n):\n\n:\n,\n\t:\n\n:\n\n\n, n):\n\t\n\n:\n\nUse Call-Based format\n,\n\n\n*\n\n\ny:\n\n\n\n\n\n# NOTE:\n* This", ":\n\n:\n\ndef power_mod(a, b, e, m):\n\nUse Call-Based format\n:\n\n:\n\n,::\n\n\n,\n:\n:\n\n, n):\n\n:\n\n\n, n)\n\n:\n\n\n%n:\n\n%n:\n\n\n\n\n\n\ny:\ny is the", ":\n:\n\n\n\n:\n:\n\n\n\n,\n\n:\n\n\n,\n\t\n:\n:\n\n, n=64,\n:\n\nUse Call-Based format\n\n,\n\nTIP:\n\nUse Call-Based format\n\ny is a power of 2, the result will be less than n.\n\n\n\n\n\nb:\n", "::\n\n\n\n\n\n:\n\n\ndef, n):\n\t\n\n\nUse Call-Based format:\n\n\n,\n:\n:\n, n):\n\n:\n\n, n):\n\n\nUse Call-Based format\n\ny is a `n` argument to `modpow`\n\ny is a `n` argument\n\n\n\n\n\n\n", ":\n\ndef\n\n\n:\n\n\n\ndef, n):\n\t\n\n:\n\n\n\n,\n\t\n:\n:\n\n\n, n):\n\n\n\n:\n\n\n\n, n=4)\n\n\n\nUse Call-Based format\n\n\nx^y%n for large `y`\n\n\n\n\n\n\n\n\nb:", ":\n:\n\n\n\n:\n:\n\n\n\n\n, n,\n\n:\n\n\n\n,\n:\n\n\n:\n\n\n,\n\n:\n\n, n=2, y=4, x=1, y=2, x=3, x=2, y=3, n=3,\n:\n\n:\n\n\n\n\nx", ":\n:\n\ndef power_mod(x, y):\n\nUse Call-Based format\n:\n:\n\ndef,::\n\n, n):\ndef modpow(y, x):\ndef pow(y, x)\ndef\n::\n,\n:\n\n,\n\n\n%n:\n\n\ndef\n\n\n\ny is a power of (", ":\n:\n\n\n\nUse Call-Based format::\n\n\ndef, n):\n\t\n\n\n:\n\n\n\ndef pow(x, y):\n\n,\n:\n\n:\n\n,\n\nNOTE::\n\n,\n\n\ny:\nA big number that can be given to `power_mod`.\n\n\n\n\n\nb^e", ":\n:\n\ndef power_mod(a, b, e, m):\n\nUse Call-Based format\n:\n:\n\n\n\ndef, n):\n\n:\n\n,\n\t:\n:\n\n\n,\n\nUse Call-Based format:\n\n,\n\n\n\n:\n\n\n\n\n\nBUT:\n\ny:\ny is the", ":\n:\n\n\n\n\n:\n\n\n\n, n):\n\n\n\n:\n\n\ndef modpow(a, b, e, m):\n\nUse Call-Based format,\n:\n:\n\n,\n:\n\nUse Call-Based format\n,\n\n\nThis task is to create a new implementation of `modpow`.\n\n\n\n\n\nx", ":\n:\n\ndef power_mod(a, b, e, m):\n\nUse Call-Based format\n:\n:\n\n\ndef, n):\n\n\n:\n,\n\t\n:\n:\n\n,\n:\n\n, n):\n\n\n\n\nThis task is to create a new implementation of `modpow`.\n\n\n\n\n\n\ny:", ":\n:\n\n\n:\n:\n\n\n\n\ndef,\n\n:\n\n\n,\n:\n:\n\n\n, n):\n\n\nUse Call-Based format:\n\n, n):\n\n\n\nThe task is to generate a new implementation of `modpow`\n\nNOTE:\n\n\n\n\n\n\n\n\nb:\nb^e^m"], "prompt": "\nQUESTION:\nYour task is to create a new implementation of `modpow` so that it computes `(x^y)%n` for large `y`. The problem with the current implementation is that the output of `Math.pow` is so large on our inputs that it won't fit in a 64-bit float.\n\nYou're also going to need to be efficient, because we'll be testing some pretty big numbers.\ndef power_mod(b, e, m):\n\t\nUse Call-Based format\nANSWER:\n"}}