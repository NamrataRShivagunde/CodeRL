{"312": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n <= A[i] <= A[j] <= A[i]\n\n        \"\"\"\n\n\n\n\n\nUse Call-Based format\nReturn the length of the shortest non-empty subarray of A with sum at least K\n\n\n\n\n\n\n\nA", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \nReturn the shortest array of A with sum at least K.\n\n\u00a0\n\n\n\n\n   :\n    pass\n\n\n\n\n\n\n\n\nReturn the length of the shortest nonempty subarray of A with sum at least K.\n\n\n\n\n\n\nIf the", "\nUse Call-Based format\n\n\n    A = [1,2,3,4,5,6,7]\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n   \n        return 1\n\n\nReturn the length of the shortest subarray\n\n\n\n\n\n\n\nReturn the length of the shortest subarray\n\n\n\n\n    Return", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nReturn the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\n\n\n\n\n\n   \n\n\n\n   \n        \n\n\n\n\n\n\nReturn -1.\n\n\n\n\n\n\nReturn -1.\n\n\n\n\n\n\n\nA = [", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\nExample:\n    class Solution:\n    def shortestSubarray(self, A, K: int):\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n        K = -1\n\n", "\nUse Call-Based format\n\n\n\n\nReturn the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\n\n\n   \n\n\n\n   \n        return self.shortestSubarray(A, K)\n\n\n\n\n\n\n\n\n\nReturn the length of the shortest subarray of A with sum K\n\n\n\n\n   ", "\nUse Call-Based format\n\n\n\nReturn the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\n\nReturn the length of the shortest non-empty contiguous subarray of A with sum at least K.\n\n\n\n\n       \n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nReturn the shortest subarray of A with sum at least K.\n\n\n\n\n   \n\n\n\n\n   \n    pass\n\nReturn the length of the shortest subarray of A with sum at least K\n\n   \n\n\n\n\n\n\n\n\n\n\nReturn the length of the shortest non-empty", "\nUse Call-Based format\n\n\n    return shortestSubarray(self, A, K)\n\n\n\n\n\n\n\n\n    return shortestSubarray(self, A, K)\n\n\n\n   \n\nReturn the length of the shortest array of A with sum at least K.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    if A is a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nReturn the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\n\n\n\n   \n        pass\n\n\n\n\n\n\n\nReturn -1.\n\n\n\n\nReturn -1.\n\n\n\n\n\nReturn the length of the shortest non", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \nreturn self.shortestSubarray(A, K)\n\n\n\n   \n\n\nReturn the length of the shortest subarray of A with sum at least K.\n\n\n\n\n\n\n\n\nReturn the length of the shortest subarray of A with sum at least K\n\n\n\n\n    return", "\nUse Call-Based format\n\n\n    return self.shortestSubarray(A, K)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nReturn the length of the shortest, non-empty, contiguous subarray of A with sum at least K\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Return the length of the", "\nUse Call-Based format\n\n\n\nReturn the length of the shortest subarray of A with sum at least K.\n\n\n\n\n\n\n   \n\n\n\n   \n    \"\"\"\n\n\nUse Call-Based format\n\n\n\n\n\nReturn the length of the shortest non-empty subarray of A with sum at least K\n\n\n\n\n\n\n\n    Return the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nReturn the shortest subarray of A with sum at least K\n\nUse Call-Based format\n\n\n   \n        pass\n\nReturn the length of the shortest subarray of A with sum at least K\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nA = [1", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nReturn the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\n\n\n\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\n\nReturn -1.\n\n\n\nExample 2:\n\n\n\n\n\n\n\nreturn length of shortest non-empty", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nReturn the length of the shortest subarray of A with sum at least K.\n\n\n\n\n\n\n\n   \n        # Do nothing\n\n\n\n\n\n\n\n\nreturn length of shortest subarray of A with sum at least K.\n\n\n\n\n\n\n\n\n    Return the length of the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nReturn the length of the shortest subarray of A with sum at least K.\n\n\n\n   \n        pass\n\n\n\n\n\nreturn the length of the shortest subarray of A with sum at least K.\n\n\n\n\n\n\n\n\n\nIf the shortest, non-empty", "\nUse Call-Based format\n\n\n\n\n\n1 <= K <= -1\n1 <= K <= 1\n\u00a0\nNote:\n\n1 <= K <= 1\n\u00a0\nNote:\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nReturn the length of the shortest subarray\n\n\n\n\n   ", "\nUse Call-Based format\n\n\n\n\nReturn the length of the shortest subarray of A with sum at least K\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n        pass\n\n\n\n\n\nReturn the length of the shortest contiguous subarray of A with sum at least K.\n\n\n\n\n\n\n\n\nReturns the length of the shortest non", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \nreturn A[i]\n\n\n\n   \n        return self.shortestSubarray(A, K)\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nReturn the length of the shortest subarray\n\n\n\n\n\n\n    Return the"], "prompt": "\nQUESTION:\nReturn the length of the shortest, non-empty, contiguous\u00a0subarray of A with sum at least K.\nIf there is no non-empty subarray with sum at least K, return -1.\n\u00a0\n\n\n\nExample 1:\nInput: A = [1], K = 1\nOutput: 1\n\n\nExample 2:\nInput: A = [1,2], K = 4\nOutput: -1\n\n\nExample 3:\nInput: A = [2,-1,2], K = 3\nOutput: 3\n\n\u00a0\nNote:\n\n1 <= A.length <= 50000\n-10 ^ 5\u00a0<= A[i] <= 10 ^ 5\n1 <= K <= 10 ^ 9\nclass Solution:\n    def shortestSubarray(self, A: List[int], K: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}