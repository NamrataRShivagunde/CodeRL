{"3694": {"code": ["\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\nExample:\n\ntriple_shiftian(base,n)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMuch cool", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n:\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n\n\n\n\t\n```", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\nMuch cooler than your run of the mill Fibonacci numbers\n\n\n\n\n", "\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n ==  1\n\n\n\n\n\nMuch cooler than your run-of-the-mill Fibonacci numbers, and then you can do this\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe triple shiftian is a function which accepts a base and n numbers\n\n.. code:\n\npython\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\nMuch cooler than your run-of-the-mill Fibonacci numbers.\n:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nA more caveat of", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n# 1.", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ntriple_shiftian(base,n)\n```\n\nThe same is not used.\n\n\n\n\n\n\n\n\n\n```python\n\nif", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n:\nUse Call-Based format\n\nNote:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nThe first person I met is the first person I met.\n\n```python\n\n#\n\n\n\n\n\n\n\n\n## Examples\n\n```", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\nANSWER:\n\n\n\n:\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\nMuch cooler than your numbers\n\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\nNote:\n\n\n\n\n:\n\n\n\n\n\n\n\n ==  5\n\n\n\n\n\nMuch cooler than your run-of-the-mill Fibonacci numbers,\n\nExample:\n\n\n\n\n```python\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nCall-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMuch cooler than your run-of-the-mill Fibonacci numbers, the Triple Shiftian is defined as\n\n\n\n\n\nMuch cool", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\nNote:\n\n\n\n:\n\n\n\n\n\n\n\n ==  2\n ==  2\n\n\n\n\n\n ==  2\n\n\n\n\nThe \"second person I met\" number is the first person I met in the Mill Fibonacci numbers\n\n\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n\n\n\n\n\n\n\n```python\ntriple_shiftian =\n\n\n\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n:\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\ntriple", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\nANSWER:\n\n\n\n:\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\ntriple_shiftian(base,3)", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nNOTE:\n\n\n\n\n\n\n\n\t```python", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\nMuch cooler than your run-of-the-mill Fibonacci numbers\n\n\n\n:\n\n\n\n\n\n\t\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nMuch cooler than your run-of", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n ==  1\n\n\n\n```python\ntriple_shiftian(base,n)\n```\n\n\n\n\nMuch cooler than your\n\n\n\n\n```", "\nUse Call-Based format\n\t\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\n\nNote:\n\n\n\n:\n\n\n\n\nMuch cooler than your run-of-the-mill Fibonacci numbers\n:\n ==\n\n:\n\n\n\n\n\n\n\n\n\n\n\n```python"], "prompt": "\nQUESTION:\nMuch cooler than your run-of-the-mill Fibonacci numbers, the Triple Shiftian are so defined: `T[n] = 4 * T[n-1] - 5 * T[n-2] + 3 * T[n-3]`.\n\nYou are asked to create a function which accept a base with the first 3 numbers and then returns the nth element.\n```python\ntriple_shiftian([1,1,1],25) == 1219856746\ntriple_shiftian([1,2,3],25) == 2052198929\ntriple_shiftian([6,7,2],25) == -2575238999\ntriple_shiftian([3,2,1],35) == 23471258855679\ntriple_shiftian([1,9,2],2) ==  2\n```\n*Note: this is meant to be an interview quiz, so the description is scarce in detail on purpose*\n\nSpecial thanks to the [first person I met in person here in London just because of CW](http://www.codewars.com/users/webtechalex) and that assisted me during the creation of this kata ;)\ndef triple_shiftian(base,n):\n\t\nUse Call-Based format\nANSWER:\n"}}