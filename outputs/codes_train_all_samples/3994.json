{"3994": {"code": ["===\n\nA jogger\n===\n\nA jogger\n===\n\n\n\n\n\n\n\n\n===\n\n\n\n\n\n\n\n\nThe function is called by a function with a number of arguments\n===\n\nNote:\n\n===\n\n\n\n\n---\n\n\n\n\n\n===\n\n\n===\n\n\n\n\n\n===\n\nBob", "===\n\n\n\n\n\n\n\n\nThe first part of the code is:\n\n===\n\nStart\n===\n\nAnswer\n===\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\t\n\n\n\n===\n\n\n\n\n2 Joggers\n===\n\n\n===\n\n\n\n\n===\n\n---\n\nThe laps are from", "===\n\n\n\n\n\n\n\n\n===\n\n\n\nStart\n---\n\nStart a jogging tour\n===\n\nStart a jogger tour\n===\n\nStart a jogging tour\n===\n\n\n\n\n\n\n\n\n===\n\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\n===\n\n== Bob's l", "===\n\n\n\n\n\n\n\n\n\nnbrOfLaps(2, 3) # returns (2, 3)\n\n===\n\n\n\n\n\n\n\n---\n\nA jogging tour\n===\n\n\n===\n\n\n\n```python\ndef\n\n\n\n\n\n\n===\n\n\n\n\n===\n2 Joggers\n===\n\n", "===\n\nUsage:\n===\n\nUse Call-Based format\n===\n\nAction:\nStart\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n===\n\n\nTwo Joggers\n===\n\nAnswer:\n\n===\n\n\n===\n\n\n\n\n\n===\n\n# Bob's", "===\n\nName\n===\n\nType:\nNumber\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBob and Charles have to be called.\n\n\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n```python\nnbr_of_laps(5, 4) # returns (3, 4)\n\n", "===\n\n\n\n\n===\n\n\n\n\n\n\nStart:\nBob\n===\nEnd:\nCharles\n===\n\n\n===\n\n\n\n\n\n\n\nThe function returns an array containing two numbers:\n\n1.\n===\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\n\n===\n\nQUESTION:\nTwo Jog", "\n===\n\nStart\n===\n\nTwo Joggers\n===\n\nTwo Joggers\n===\n\nTwo Joggers\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\nNumber of laps\n===\n\nAnswer:\n\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n===\nA jogger is always", "===\n\n\n\n\n\n\n\n\n\n===\nThe number of laps for Bob and Charles is returned as a tuple (int, int)\n===\n\n\n\n\n\n\n---\n\nA Jogger\n===\n\n\n===\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n```python\n\n===\n\nBob's laps", "===\n\n\n\n\n\n\n\n![jogging]\n![jogging.png \"horizon.png\"]\n===\n\n\n\n===\n\n\n\n\n\n\n==\n===\nTwo Joggers\n===\n\nQuestion:\n\n===\n\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n===\n\nBob's l", "===\n\nStart:\n===\n\nStart:\n===\n\nStart:\n===\n\nStart:\n===\nStart:\n===\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\n\n===\n\nReturns:\n\nx, y\n\n---\n\n\n===\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\n\n\n===", "===\n\n\n\n\n\n===\n\n\n===\n\nStart\n===\n\nIllustration\n===\n\nTwo Joggers\n===\n\n\n\n\n\n\n\nnbrOfLaps\n===\n\n\n\n===\n\nExample\n---\n\n===\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\n===\n\n\n```", "===\n\n\n\n\nStart\n===\n\n\n===\nBob and Charles\n===\n\n\n\n\n\n\n\nnbr_of_laps(5, 3) # returns (3, 2)\n\n===\n\n\n===\n\nNote\n\n\n\n\n\n\n\n\n\n===\n\n\n===\n\n\n\n\n===\n\nBob's l", "===\n\n\n\n\n===\nThe jogging tour is complete\n===\n\n\n\n\n===\nTwo Joggers\n===\n\nIllustration\n===\nTwo Joggers\n===\n\n\n\n\n\n\n\n==\n===\n\n\n\n\n\ndef\n\n\n\n\n===\n\n\n===\n\n\n\n\n===\n\n\n===\n\n", "===\n\n\n\n\n\n\n===\n\n\n\n\nStart\n---\nThe function is called **nbrOfLaps**\n===\n\nA jogger\n===\n\n\n\n\n\n\n\n\n===\n\n\n===\n\n\n\n```\n\n\n\n===\n\n\n\n\n\n===\n\n\n\n\n\n===\n\n===\n\nBob", "===\n\n\n\n\n\n\n\n===\n\nA Jogger\n===\n\nA Jogger\n===\n\n\n\n\n\n\n\n\n\n\n\n==\n\n```python\ndef nbr_of_laps(x, y):\n\n===\n\n===\n\n\n\n\n===\n\n\n\n\n===\n\n\n\n\n\n\n===\n\n", "===\n\n\n\n\n\nThe function `nbr_of_laps` is called for two joggers\n===\n\n\n\n\nStart\n===\n\n\nTwo Joggers\n===\n\n\n\n\n\n===\n\n\n===\n\n\n\n\n---\n\n\n\n\n\n\n\n===\n\n\n\n\n\n===\n\nanswer:\n===\n\n", "===\n\n\n\n\n\n\n\n\n\n\n===\n\nThe function is called for two joggers\n===\n\nNote:\n\n===\n\nThe jogging tour\n===\n\n\n\n\n\n\n===\n\nTask\n---\n\nA\n===\n\n\n\ndef\n\n\n\n\n\n===\n\n\n\n===\n\nanswer(nbr_of", "===\n\nStart:\n==\n\n\n\n\n\n\n\n\n\n\n\n\n\nnbr_of_laps(x, y) # returns (x, y)\n\n---\n\nThe job is complete.\n===\n\n\n\n---\n\n\n===\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n===\n\nNote:\n===\n\n", "===\n\n\n\n\n\n\n\n===\n\nThe jogging tour\n===\n\n\n\n\n\n\n\nnbrOfLaps(x, y) # returns (1, 2)\n\n---\n\n\n==\n===\n\n\n===\n\n\n\n\n\n\n\n\n\n\n\n\n===\n\n\n\n\n\n===\n\nBob's laps"], "prompt": "\nQUESTION:\nTwo Joggers\n===\n\nDescription\n---\nBob and Charles are meeting for their weekly jogging tour. They both start at the same spot called \"Start\" and they each run a different lap, which may (or may not) vary in length. Since they know each other for a long time already, they both run at the exact same speed.\n\nIllustration\n---\nExample where Charles (dashed line) runs a shorter lap than Bob:\n\n![Example laps](http://www.haan.lu/files/7713/8338/6140/jogging.png \"Example laps\")\n\nTask\n---\nYour job is to complete the function **nbrOfLaps(x, y)** that, given the length of the laps for Bob and Charles, finds the number of laps that each jogger has to complete before they meet each other again, at the same time, at the start.\n\nThe function takes two arguments:\n\n1. The length of Bob's lap (larger than 0)\n2. The length of Charles' lap (larger than 0)  \n\nThe function should return an array (`Tuple` in C#) containing exactly two numbers:\n\n1. The first number is the number of laps that Bob has to run\n2. The second number is the number of laps that Charles has to run\n\nExamples:\n```python\nnbr_of_laps(5, 3) # returns (3, 5)\nnbr_of_laps(4, 6) # returns (3, 2)\n```\ndef nbr_of_laps(x, y):\n\t\nUse Call-Based format\nANSWER:\n"}}