{"2531": {"code": ["\nUse Call-Based format\n\n\nExample 2:\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\n   \n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\nGiven", "\nUse Call-Based format\n\n\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an integer array, you need to", "\nUse Call-Based format\n\n\n\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n   \n\n\n\n\n   \n\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array, you need to find one", "\nUse Call-Based format\n\n\n    def findUnsortedSubarray(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nExample 2:\n\nInput:\n\n\nGiven", "\nUse Call-Based format\n\n\n\n    def findUnsortedSubarray(self, nums: List[int]):\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array, you", "\nUse Call-Based format\n\n\n\n\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nInput: [2]\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n       \nUse Call-Based format\n\n\n   \n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nExample 2:\n\nInput: [2, 6, 4, 8, 9]\n\n\n\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n   \n\nUse Call-Based format\n\nGiven an integer array, you need to find one continuous subarray that is the shortest.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nInput: [2, 6]\n\n\n\n\n\nGiven an", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\nGiven an integer array, you need to find one continuous subarray in ascending order.\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nInput: [1]\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput: [2, 6, 4, 8]\n\n\n", "\nUse Call-Based format\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\nGiven an integer array, you need to find one continuous subarray\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an integer array,", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n   \n   \n\nUse Call-Based format\n\nInput: [1, 10,000,10]\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\nExample 2:\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n   \n   \n\n\n\n\n   \n\nUse Call-Based format\n\nExample 2:\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array,", "\n\n\n\n    def findUnsortedSubarray(self, nums: List[int]):\n    \"\"\"\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array, you need to", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\n\n\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array, you need to find", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\nGiven an integer array, you need to find a continuous subarray for the number of elements in the input array.\n\n   \n\n\n\n\n\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an integer array", "\nUse Call-Based format\n\n\n\n\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCall-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an integer array", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\nOutput: 0\nExplanation:\n\n\n\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nExample 2:\n\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    \n\n\n\n\nExample 2:\n\n\n\nGiven an integer array, you need to sort it in ascending order.\n\nExample 2:\n\nUse Call-Based format\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array, you", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\nExample 2:\n\nUse Call-Based format\n\nExample 2:\n\nExample 3:\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array, you need"], "prompt": "\nQUESTION:\nGiven an integer array, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too.  \n\nYou need to find the shortest such subarray and output its length.\n\nExample 1:\n\nInput: [2, 6, 4, 8, 10, 9, 15]\nOutput: 5\nExplanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n\n\n\nNote:\n\nThen length of the input array is in range [1, 10,000].\nThe input array may contain duplicates, so ascending order here means .\nclass Solution:\n    def findUnsortedSubarray(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}