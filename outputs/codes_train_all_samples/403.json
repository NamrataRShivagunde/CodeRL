{"403": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n         \n\n\ngiven\n\n\n\n\n\n\n\n\nGiven an unsorted array return true\n\n\n\nGiven an unsorted", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nreturn False\n\n\nUse Call-Based format\n\nExample:\n\n   \n\nUse Call-Based format\n\nGiven an\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven an unsorted array", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n          \n\nGiven an\n\n\n\n\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\nUse Call-Based format\n\n   \n\n\nGiven an\n\n\n\n\n\n\n\n\nGiven an unsorted array return whether increasing subsequence\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n       \n\n   \n\n\n\n\n\n\nGiven an unsorted array return whether an increasing subsequence of length 3\n\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists\n\n\n\n\nGiven\n\n\n\n\n\n\n\n\nGiven an unsorted array return", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n   \n\n\ngiven\n\n\n\n\n\n\n\nGiven an unsorted array return whether it exists.\n\n\nGiven an un", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    arr:\n       \n\n\n\n\n\n\n\ngiven an unsorted array return true if an increasing subsequence of length 3 exists or not in the array.\n\n\n\n\n\n\nGiven an un", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nreturn True\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven an unsorted array return", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return false\n\n\n\nGiven an un", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n       \n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven an unsorted array return whether an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n      \n\n\n\n\n\n\n\n\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists.\n\n\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n       pass\n\n\n\n\n\n\nreturn False\n\n\n\n\nGiven an unsorted array return whether increasing subsequence\n\n\nGiven an un", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nreturn True\n\n\nUse Call-Based format\nANSWER:\n\nUse Python-Based format\nUse Python-Call-Based format\n\n\n\n\n\n\n\nGiven an\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an unsorted array return", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nreturn True\n\n\nUse Call-Based format\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExamples:\n         \n\nGiven\n\n\n\n\n\n\n\n\n\n\n\nGiven an unsorted array return whether", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based formatreturn true\n\n\n\n\n\n\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n    pass\n\n\nGiven\n\n\n\n\n\n\n\n\n\nGiven an unsorted array return whether an increasing", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nreturn True.\n\n\nUse Call-Based format\nQUESTION:\n\n\nUse Call-Based format\nANSWER:\n\n\n\n\n   \n\n\nGiven an unsorted array return true\n\n\n\n\n\n\n\n\n\n\nGiven an unsorted array return whether an", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n   \n\n\nGiven an\n\n\n\n\n\n\n\n\nGiven an unsorted array return true.\n\n\nGiven an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n          \n\n \n\n\n\n\n\n\nUse Call-Based format\n\n\nGiven an unsorted array return whether an", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\nGiven an unsorted array return whether increasing subsequence\n\n\nGiven an"], "prompt": "\nQUESTION:\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\n\nFormally the function should:\nReturn true if there exists i, j, k  \nsuch that arr[i] < arr[j] < arr[k] given 0 \u2264 i < j < k \u2264 n-1 \nelse return false.\n\n\n\nYour algorithm should run in O(n) time complexity and O(1) space complexity.\n\n\nExamples:\nGiven [1, 2, 3, 4, 5],\nreturn true.\n\n\nGiven [5, 4, 3, 2, 1],\nreturn false.\n\n\nCredits:Special thanks to @DjangoUnchained for adding this problem and creating all test cases.\nclass Solution:\n    def increasingTriplet(self, nums: List[int]) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}