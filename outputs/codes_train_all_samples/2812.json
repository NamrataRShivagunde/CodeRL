{"2812": {"code": ["\n##Arguments:\n\n#:\n\n#\n\n\n\nUse Call-Based format\n##Example:\n\n##Arguments:\n\n#Task:\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n#Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n##Task:\n\n\n\n\n\n\n\n##Task", "\n##Example:\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n##Example:\n\nUse Call-Based format\n##Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n##Task:\n\n\n\n\n\n\n\n", "\n##Example:\n\nUse Call-Based format\n\n\n\n\n\n##Example:\n\nUse Call-Based format\n\n##Example:\n\n\n\n\n\n\n##Example:\n\n##Task:\n:\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n\n\n\n##Task:\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n##Example:\n\n##Example:\n\n\n##Task:\n\n\n\n\n\n#Task:\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n##Example", "\n##Usage:\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n##Examples:\n\n\n##Usage:\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n##Task:\n\n\n##Task:\n\n##Task:\n\n\n\n\n\n\n\n##", "\n##Required:\n\n##Required:\n\n##Description:\n##Description::\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n\n\n##Output:\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Examples:\n\n##Task:\n\n\n\n\n\n\n\n\n\n##\n", "\n##Examples:\n\n\n\n\n\nUse Call-Based format\n##Example:\n\nUse Call-Based format\n\n\n\n\n\n##Examples:\n\n\n\n##Task:\n\n\n\n\n\n##Example:\n\n##Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n##", "\n# Use Call-Based format\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n##Arguments:\n\n##Arguments\n\n##Arguments:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Arguments:\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n##Examples:\n\n\n\n\n\n\n###", "\n##Example:\n\nUse Call-Based format\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\n\n\n\n\n\t\n\n\n##Example:\n\n\n\n\n\n\n#\n\n##Task:\n\n###Example:\n##Task:\n\n##Examples:\n\n\n\n\n\n\n\n###", "\n##Parameters:\n\nUse Call-Based format\n\n\n\n\n\n##Examples:\n\n\nUse Call-Based format\n\n##Examples:\n\n\n\n\n\n\n\n\n##Parameters:\n\n\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n##Example:\n##Task:\n\n\n\n\n##Task:\n\n\n\n", "\n##Options:\n\n\n\n##Options:\n\n##Options:\n##Options:\n##Task:\n\n\n\n\n\n\n\n\n\n\t\n\n##Task:\n\n##Examples:\n\n##Examples:\n\n##Task:\n\n##Examples:\n\n\n\n\n\n\n\n\n\n\n\n##Examples:\n\n\n\n\n\n\n##Task:", "\n##Example:\n\nUse Call-Based format\n##Example:\n\n\n\n\n##Example:\n\nUse Call-Based format\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n##Example:\n\n\n\n##Example:\n\n##Example:\n\n\n#\n##Task:\n\n##Task", "\n\n##Examples:\n:\n\n\n\n\n\nUse Call-Based format\n\n##Arguments:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n##Arguments:\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n##Examples:\n\n\n##Task:\n\n\n\n\n\n\n##Task:\n\n", "\n# Use Call-Based format\n# Use Call-Based format\n\n\n\n# Use Call-Based format\n\n\n\n\n##Task:\n\n#\n# Use Call-Based format\n\n\n\n\n\n\n#\n##Task:\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n##Examples:\n\n\n#\n\n##Task:\n", "\n##Example:\n##Example:\n\n\n\nUse Call-Based format\n##Example:\n##Task:\n\n\n\n\n\n\n\n\n\n\t\n\n##Example:\n\n##Task:\n\n\n\n\n\n\n##Example:\n\n##Task:\n\n\n\n\n##Example:\n\n\n\n\n\n#Task:\n\n\n\n\n\n##", "\n##Example:\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n##Task:\n\n##Example:\n\n\n\n##Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n##Task:\n\n\n#Example:\n\n\n\n##Task:\n\n", "\n:\n\n\n\n\n\nUse Call-Based format\n\n##Example:\n\nuse Call-Based format\n\n##Task:\n\n\n\n\n\n\n\n##Example:\n\n\n##Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n##Example:\n\n\n\n\n\n\n##Task:\n\n\n", "\n##Example:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Example:\n\n# Examples:\n##Task:\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n##Task:\n\n##Task:\n", "\n##Examples:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n##Example:\n\nUse Call-Based format\n\n\n\n\n##Task:\n\n\n\n##Examples:\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n##Examples:\n\n\n\n\n\n##Task:\n\n\n\n\n##Example:\n", "\n##Example:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n##Examples:\n\n##Task:\n\nUse Call-Based format\n##Examples:\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n\n\n\n##Example:\n\n\n\n##Task:\n\n\n##Example:\n\n\n\n\n\n"], "prompt": "\nQUESTION:\n##Task:\n\nYou have to write a function **pattern** which creates the following pattern upto n number of rows. \n\n* If the Argument is 0 or a Negative Integer then it should return \"\" i.e. empty string.\n\n* If any odd number is passed as argument then the pattern should last upto the largest even number which is smaller than the passed odd number.\n\n* If the argument is 1 then also it should return \"\".\n\n##Examples:\n\npattern(8):\n\n    22\n    4444\n    666666\n    88888888\n    \npattern(5):\n \n    22\n    4444\n\n\n\n```Note: There are no spaces in the pattern```\n\n```Hint: Use \\n in string to jump to next line```\ndef pattern(n):\n\t\nUse Call-Based format\nANSWER:\n"}}