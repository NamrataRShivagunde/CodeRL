{"2410": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\u00a0\nUse Call-Based format\nConstraints:\n\n1 <= name.length <= 1000\n\u00a0\n\nConstraints:\n\n\n\n:\n   \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you exam", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n        return True\n\n   \n        return True\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour friend is typing his name\u00a0into a keyboard.\n\n\n\n\nYour friend is typing his", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n:\n        return True\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nYour friend is typing his name\u00a0into a keyboard.\n\n\n\n\n\nYou friend is typing", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nYour friend is typing his name\u00a0into a keyboard.\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n        return True\n        \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nYour friend is typing his name over a", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n:\n   \n        return True\n\n\n\n\n\n\n\n\n\nYour friend is typing his name\u00a0into a keyboard.\n\n\n\n\nThe friend is typing his name\u00a0into", "\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n:\n        return True\n        \nUse Call-Based format\n\nReturns:\n\n\n        return True\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour friend is typing his name,", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\n        return True\n\n\u00a0\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nYou friend is typing his name over", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nYour friend is typing his name in a keyboard.\n\nUse Call-Based format\n\n\n\n\n\n\n\n       \n        pass\n        \n\n\nYour friend is typing his name\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA friend is typing his name, you exam", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n\n:\n        return True\n\n\u00a0\n\nExample:\n\n   \n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThe friend is typing his name, you", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nYour friend is typing his name\u00a0into a keyboard\nUse Call-Based format\n\n\n\n\n\n\n:\n        return False\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe friend is typing his name, but you exam", "\nUse Call-Based format\nUse Call-Based format\nExplanation:\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n\n    return True\n\n\u00a0\n\n isLongPressedName(self, name: str, typed: str):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour friend is typing his name, but you", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n:\n        return False\n\n\u00a0\n\n\nExample 5:\n\n   \n\n\n\n\n\n\n\n\n\nYour friend is typing his name:\n\n\n\n\n\n\n\n\nIf you are", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n:\n        return False\n\n   \n        return False\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nname:\n\n \u00a0", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\u00a0\nConstraints:\n\n1 <= name.length <= 1000\n\u00a0\n1 <= typed.length <= 1000\n\n\n\n:\n   \n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\nThe friend is typing his name", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n        return True\n        \nUse Call-Based format\n\n\nExample 5:\n    \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nThe friend is typing his name into a", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nExample:\n\n\n\n\n    isLongPressedName(self, name, typed: str):\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 1. The friend is typing his", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\n\n        return False\n\n\u00a0\n \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nYour friend is typing his name over a", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nThe name and typed are not Call-Based format\nUse Call-Based format\n\n\n\n\n\n -> bool:\n\n    isLongPressedName(self, name, typed):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Examples**\n\n** Examples**", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nExplanation:\nUse Call-Based format\n\n\n\n\n\n\n:\n   \n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nYour friend is typing his name\u00a0into a", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n:\n        return True\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n'''\n        name = \"John"], "prompt": "\nQUESTION:\nYour friend is typing his name\u00a0into a keyboard.\u00a0 Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times.\nYou examine the typed\u00a0characters of the keyboard.\u00a0 Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed.\n\u00a0\nExample 1:\nInput: name = \"alex\", typed = \"aaleex\"\nOutput: true\nExplanation: 'a' and 'e' in 'alex' were long pressed.\n\nExample 2:\nInput: name = \"saeed\", typed = \"ssaaedd\"\nOutput: false\nExplanation: 'e' must have been pressed twice, but it wasn't in the typed output.\n\nExample 3:\nInput: name = \"leelee\", typed = \"lleeelee\"\nOutput: true\n\nExample 4:\nInput: name = \"laiden\", typed = \"laiden\"\nOutput: true\nExplanation: It's not necessary to long press any character.\n\n\u00a0\nConstraints:\n\n1 <= name.length <= 1000\n1 <= typed.length <= 1000\nThe characters of name and typed are lowercase letters.\nclass Solution:\n    def isLongPressedName(self, name: str, typed: str) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}