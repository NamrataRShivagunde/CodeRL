{"3767": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nNOTE:\n\nNote:\n**Note:**\nNote:**\nNote:**\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n## Example\n\n\n\n\n\n### Example\n\nNB:\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n~~~if:java\n**Note:**\nNote:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Test\n\nCoding decimal numbers with factorials\n\n~~~endif\n\n\n\n## Example\n\n\n\n\n\n\n", "\n\n## Example\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nCoding decimal numbers with factorials\n\n~~~else:java\n**Note:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n\n\n\n## Example\n\n\n\n~~", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n## Example\n\nCoding decimal numbers with factorials\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Examples\n## Example\n\n### Example\n\n#\n\n\n\n\n\n\n~~", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nCoding decimal numbers with factorials\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n## Example\n\n\n\n\n\n## Example\n\nCoding decimal numbers with factorials\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nNOTE:\n\nNote:\n**Note:**\n\n~~~endif\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n## Example\n\n\n\n## Example\n\n\n\n\n## Example\n\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n**NOTE:**\nNote:**\nThe input number must be a decimal number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n## Example\n\nNOTE:\n\n\n## Example\n\n\n\n~~~if", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nBUT:\n\nUse Call-Based format\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\nExample:\n\nCoding decimal numbers with factorials\n\n\n\n\n## Example\n\n\n\n\n", "\n\n\n\nUse Call-Based format\n\n~~~if:java\n**Note:**\n\n~~~endif\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**NOTE:** The output number is always positive\n\n~~~endif\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n~~", "\n\n\n\n~~~endif\n\nDeal with a call-based format\n\n## Example\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n## Example\n\nNote:\n\nUse Call-Based format\n\n\n\n\n## Example\n\n\n", "\n\n\nUse Call-Based format\n\n## Example\n\n**NOTE:**\nNote:**\n\n\n\n~~~if:java\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n## Example\n\nCoding decimal numbers\n\n\n\n", "\n\n\n\n**Note:** The number is always in base 10!\n\n~~~if:java\n**Note:** The number is in base 36!\n\n~~~if:java\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n## Example\n\n\n\n\n\n### Example\n\n\n\n463 =", "\n\n\n\n### Example\n\nThe decimal number `463`\n\nUse Call-Based format\n\nANALOG:\n\n**Note:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n## Example\n\nCoding decimal numbers with factorials\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n### Example\n\n### Example\n\nUse Call-Based format\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n## Example\n\n\n\n\n\n\n## Example\n\n    The first one will receive the", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n>>> def dec2Fact(nb):\n\t\nUse Call-Based format\n\n~~~if:java\n\n~~~else:java\n\n**Note:**\n\n\n\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n        # The first one", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Example\n\nUse Call-Based format\n\nNote:\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n## Example\n\n\n\n\n## Example\n\n\n", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n## Example\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n~~~endif\n\n\n## Example\n\nCoding decimal numbers with factorials\n\nNote:\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n**", "\n\nUse Call-Based format\n\n\n \tTest decimal numbers with factorials\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoding decimal numbers with factorials\n\nQUESTION:\nCoding decimal numbers with factorials\n\n\n\n## Example\n\n\n\n\n~~", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    ## Example\n\n   \n\n## Example\n\n\nCoding decimal numbers with factorials\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n### Example 1\n\n## Example 2\n\n\n\n## Example 3\n\n\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\ndef dec2Fact(nb):\n\t\nUse Call-Based format\n\n## Example\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\nThe first function will receive two functions:\n\n\n\n## Example\n\n"], "prompt": "\nQUESTION:\nCoding decimal numbers with factorials is a way of writing out numbers \nin a base system that depends on factorials, rather than powers of numbers.\n\nIn this system, the last digit is always `0` and is in base 0!. The digit before that is either `0 or 1` and is in base 1!.  The digit before that is either `0, 1, or 2` and is in base 2!, etc.\nMore generally, the nth-to-last digit is always `0, 1, 2, ..., n` and is in base n!.\n\nRead more about it at: http://en.wikipedia.org/wiki/Factorial_number_system\n\n\n## Example\n\nThe decimal number `463` is encoded as `\"341010\"`, because:\n\n463 = 3\u00d75! + 4\u00d74! + 1\u00d73! + 0\u00d72! + 1\u00d71! + 0\u00d70!\n\n\nIf we are limited to digits `0..9`, the biggest number we can encode is 10!-1 (= 3628799). So we extend `0..9` with letters `A..Z`. With these 36 digits we can now encode numbers up to 36!-1 (= 3.72 \u00d7 10^(41))\n\n\n## Task\n\nWe will need two functions. The first one will receive a decimal number and return a string with the factorial representation.\n\n~~~if:java\n**Note:** the input number is at most a long.\n~~~\n\nThe second one will receive a string with a factorial representation and produce the decimal representation.\n\nGiven numbers will always be positive.\ndef dec2FactString(nb):\n\t\nUse Call-Based format\nANSWER:\n"}}