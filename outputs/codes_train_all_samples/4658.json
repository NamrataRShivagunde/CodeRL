{"4658": {"code": ["\n\n###\n\n* **_Array/list_** equal 2*, then **_Array/list_** equal 2*, then **_Array/list** equal 4*, \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n## Explanation\n\n\n\n\n\n\n\n\n\n\n* **_Since", "\n\n### Example\n\n###\n\n\n### The \"If\"\n\n*\n\n\n\nmaxProduct ({10, 3, 9, 7, 8}, 2) ==> return (1500).\n\n### Note\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Array/list equal", "\n\n### Explanation \n\n* **_Given_** *the size (k) equal 5*, then **_the subsequence of size 3_** *whose gives* **_product *\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_** *the size (", "\n\n### Explanation\n\n### Input >> Output Examples\n\n* **_Given_** is *the size (k) equal 2*, then **_product is `6 * 7 * 10`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_** *", "\n\n### Explanation\n\n### Input >> Output Examples\n\n### Repetition\n\n###\n\n###\n\n\n\n\n\n\n\nmaxProduct ({4, 3, 2, 4, 5}, 4) ==> return (420)\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since", "\n\n### Explanation\n\n### Task:\n\n* **_Repetition_** *the size (k) equal 3*, then **_product of maxima_**  is `6`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_** *the size", "\n\n\n\n### Examples \n\n* **_Given_**\n\n* **_Substitute_**\n\n* **_Substitute_**\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n**_The size (k) equal 3*\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_", "\n\n### Explanation\n\n### Explanation Examples \n\n* **_Since_** *the size (k) equal 3*, then **_product of maxima_**  is ` 7 * 6 * 6`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_**", "\n\n\n```\nmaxProduct ([10, 7, 10, 6, 7, 9, 7, 8], 1) ==> return (10)\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\nmax\n\n\n\n*\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Array/list size is equal 5*", "\n\n### Explanation \n\n*==\n\n\nmaxProduct({1, 2, 3, 4, 5, 7}, 3) ==> return (720)\n\n### Explanation\n\n###\n\n\n\n\n\n\n\n\nmax\n\n\n\n*\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_**", "\n\n\n\n### Input / Output Examples \n\n* **_Given_** *the size (k) equal 2*, then **_product of size k *whose*\n\n*\n\n\n\n\n\n\n\n\n\n\n\nmax\n\n\n\n*\n\n*\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_**", "\n\n### Explanation\n\n* **_Given_** is equal 4*, then **_Subsequence is equal 2*, then **_Product is equal 3*.\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n*\n\n\n\n\n\n\n\n###\n\n\n\n\n\n\n* **_Since_**", "\n\n### Explanation \n\n**_Explanation_:\n\n*\n\n\n\nmaxProduct\n\n```\nmaxProduct of 4 * 7 * 5 * 3 * 1 * 3 * 10 * 6 * 10 * 7 = 620`.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_", "\n\n### Explanation\n\n* **_Repetition_** *the size (k) equal 1*, then **_product of k *k * k *\n\n### Explanation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_** *", "\n\n### Explanation \n\n**_Explanation_:\n\n* **_Array/list_** *the size equal 2*, then **_subsequence *the size*.\n\n**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_** *", "\n\n\n\n### Explanation\n\n### Repetition\n\n* **_Repetition_** *the size (k) equal 1*, then **_repetition *the size **`.\n\n### \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_**", "\n\n### Explanation \n\n* **_Given_**\n\n* **_Product**\n\n* **_Product**\n\n* **_Product**\n\n*\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_", "\n\n\n\n## Explanation \n\n**_Array/list_**\n\n* **_Subsequence_**\n\n* **_Product**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n```\nmaxProduct (`6`, 5, 7)\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_**", "\n\n### Explanation \n\n*\n\n\n\nmaxProduct({5, 7, 9, 10, 9, 7}, 2) ==> return (6)\n\n###\n\n\n\n\n\n\n\nmaxProduct\n\n*\n\n\n*\n\n\n\n\n\n\n\n\n\n### Example\n\n* **_Since_**\n\n*\n\n\n\n* **_", "\n\n### Explanation \n\n* **_Since_** *the size (k) equal 3*, then **_the subsequence of size 5*, then **_product of size 5*.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* **_Since_** *"], "prompt": "\nQUESTION:\n### Introduction and Warm-up (Highly recommended)\n\n### [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n___\n\n## Task\n\n**_Given_** an *array/list [] of integers* , **_Find the product of the k maximal_** numbers.\n___\n\n### Notes \n\n* **_Array/list_** size is *at least 3* .\n\n* **_Array/list's numbers_**  *Will be* **_mixture of positives , negatives and zeros_** \n\n* **_Repetition_** of numbers in *the array/list could occur*.\n___\n\n### Input >> Output Examples \n\n```\nmaxProduct ({4, 3, 5}, 2) ==>  return (20)\n```\n\n#### _Explanation_:\n\n* **_Since_** *the size (k) equal 2* , then **_the subsequence of size 2_** *whose gives* **_product of maxima_**  is `5 * 4 = 20` .\n___\n\n```\nmaxProduct ({8, 10 , 9, 7}, 3) ==>  return (720)\n```\n\n#### _Explanation_:\n\n* **_Since_** *the size (k) equal 3* , then **_the subsequence of size 3_** *whose gives* **_product of maxima_**  is ` 8 * 9 * 10 = 720` .\n___\n\n```\nmaxProduct ({10, 8, 3, 2, 1, 4, 10}, 5) ==> return (9600)\n```\n\n#### _Explanation_:\n\n* **_Since_** *the size (k) equal 5* , then **_the subsequence of size 5_** *whose gives* **_product of maxima_**  is ` 10 * 10 * 8 * 4 * 3 = 9600` .\n___\n\n```\nmaxProduct ({-4, -27, -15, -6, -1}, 2) ==> return (4)\n```\n\n#### _Explanation_:\n\n* **_Since_** *the size (k) equal 2* , then **_the subsequence of size 2_** *whose gives* **_product of maxima_**  is ` -4 * -1 = 4` .\n___\n\n```\nmaxProduct ({10, 3, -1, -27} , 3)  return (-30)\n``` \n\n#### _Explanation_:\n* **_Since_** *the size (k) equal 3* , then **_the subsequence of size 3_** *whose gives* **_product of maxima_**  is ` 10 * 3 * -1 = -30 ` .\n___\n___\n___\n___\n\n#### [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n\n#### [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\n#### [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)\n___\n\n##### ALL translations are welcomed\n\n##### Enjoy Learning !!\n##### Zizou\ndef max_product(lst, n_largest_elements):\n\t\nUse Call-Based format\nANSWER:\n"}}