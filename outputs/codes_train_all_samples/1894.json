{"1894": {"code": ["\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nroot = [1,2,3]\nk = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nroot = [1,2,3,4]\nk = 5\n\n\n", "\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nroot = [1,2,3,4,5]\nk = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given a (singly) linked", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nroot = [1], k = 5\noutput = [1], [2], [],[]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Input: \n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nExample:\n\nInput: \nroot = [1,2,3], k = 5\nOutput: [1,2,3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a (singly", "\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nReturns:\nList of ListNodes representing the split list into parts\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nroot = [1, 2, 3, 4]\n\n\n\nGiven a", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nroot = [1,2,3,4],k = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1]\n\n\n\n\nroot = [1,2,3]\n\n\n\n\n\n   ", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n1->2->3->4, k = 5 // 5 equal parts\n\n\n\n\n[1],[2],[3],[]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe input is a (singly) linked list with head node root.\n\n\n\n\nGiven a", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nsplitListToParts(self, root, k)\n\n\n\n\nUse Call-Based format\n\n\nroot = 1->2->3->4\nk = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    # Example 1:\n    Input", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n[1,2,3,4],[]\n\n\nExample 3:\n\nInput: \nroot = [1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a (singly) linked", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExample 3:\n\nInput: \nroot = [1,2,3,4,5,5,5]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput: \nroot = [1,", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\n\n\nroot = [1, 2, 3], k = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Definition for call-", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n[1],[2],[3],[]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nroot = [1, 2, 3]\n\n\n\nGiven a (", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven a (singly) linked list with head node root and k, splitListToParts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSplit a linked list into k consecutive linked list parts.\n\n\n\n\n\n\n\n[1],[2", "\n\n\n\n\n\n\n\n\n\n\n\n    Use Call-Based format\n\n\n    Use Call-Based format\n\n   \n\n\n\n\n\n\n\n[1],[2],[3],[4],[\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Definition for call-based format\n\n\n\n    Input:", "\n\n\n\n\n\n\n\n\n\n\n\n\nThe input list is not a call-based format\n\n\n\n\nSplit a list into k consecutive linked list \"parts\".\n\n\n[1,2,3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1,2,3,4]\n\n\n\n\n\nInput", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n1->2->3->4->5\n2->2->3->4->5\n\n\n\n\n\n[1, 2, 3],[4],[]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\nInput: \nroot = [\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nThe function to split a linked list into k consecutive linked list parts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nroot = [1,2,3,4]\n\n\n\n\nInput", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n[1],[2],[3],[4],[5],[null],[null]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given a (singly)", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nsplitListToParts(self, root, k)\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a (singly) linked list with head node root:\n\n\n\n\n\n\nGiven a (sing", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nroot = [1,2,3,4,5,6,7,8,9]\nk = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\n    Input: "], "prompt": "\nQUESTION:\nGiven a (singly) linked list with head node root, write a function to split the linked list into k consecutive linked list \"parts\".\n\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than 1.  This may lead to some parts being null.\n\nThe parts should be in order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal parts occurring later.\n\nReturn a List of ListNode's representing the linked list parts that are formed.\n\n\nExamples\n1->2->3->4, k = 5 // 5 equal parts\n[ [1], \n[2],\n[3],\n[4],\nnull ]\n\nExample 1:\n\nInput: \nroot = [1, 2, 3], k = 5\nOutput: [[1],[2],[3],[],[]]\nExplanation:\nThe input and each element of the output are ListNodes, not arrays.\nFor example, the input root has root.val = 1, root.next.val = 2, \\root.next.next.val = 3, and root.next.next.next = null.\nThe first element output[0] has output[0].val = 1, output[0].next = null.\nThe last element output[4] is null, but it's string representation as a ListNode is [].\n\n\n\nExample 2:\n\nInput: \nroot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3\nOutput: [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]\nExplanation:\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\n\n\n\nNote:\nThe length of root will be in the range [0, 1000].\nEach value of a node in the input will be an integer in the range [0, 999].\nk will be an integer in the range [1, 50].\n# Definition for singly-linked list.\nclass ListNode:\n    def __init__(self, val=0, next=None):\n    self.val = val\n    self.next = next\nclass Solution:\n    def splitListToParts(self, root: ListNode, k: int) -> List[ListNode]:\n        \nUse Call-Based format\nANSWER:\n"}}