{"218": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nA string S of lowercase letters is given.\nUse Call-Based format\n\n\n\n\n    def orderlyQueue(self, S, K):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\na\u00a0b\u00a0b\u00a0b\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nS\u00a0consists of lowercase letters only\n\nUse Call-Based format\n\n   \n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\nA", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\nUse Call-Based format\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\n\n\nA string S of lowercase", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nA string S of lowercase letters is given.\n\n\n   \n\n\n\n\n\nA string S is given.\nUse Call-Based format\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\n\nUse Call-Based format\n\n\n   \n        \n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nA string S of lowercase", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\nUse Call-Based format\n\n\n\n \n    pass\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nA string S", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\nA string S of lowercase letters is given.\n\nUse Call-Based format\n\n\n   \n    pass\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\nA", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n   \n        pass\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\n\nA string S is given.\n\n\u00a0\n\n\n\n\n\nA string S of lowercase", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\u00a0\n\n\n\n\nA string S of lowercase", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\u00a0\n\n\nUse Call-Based format\nA string S of lowercase letters is given.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\n\nA string S of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n    def orderlyQueue(self, S, K: int):\n        return self.orderlyQueue(S, K)\n\n\u00a0\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\n\nA string S", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nA string S of lowercase letters is given.\n\nUse Call-Based format\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nK\u00a0\n\n\n\nS\u00a0consists of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n    def orderlyQueue(self, S, K):\n        return \"abc\"\n\n\n\n\n\n\n\n\n\n\n\n\n\nA string S is given.\n\n\n\n\n\nA string S", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n    def orderlyQueue(self, S, K: int):\n        \n\n\n\n\n\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\nA string S of lowercase letters", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\n    def orderlyQueue(self, S, K):\n        \n\n\n\n\n\n\n\n\n\n\nA string S is given.\n\n\n\n\n\nA string S", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\u00a0\n\nA string S of lowercase letters is given.\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nA string S is given\n\n\n\n\n\nA string S", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n   \n    pass\n\n\n\n\n\n\nA string S of lowercase letters is given.\n\n\n\n\n\nA string S is given.\n\n\n\n\n\nA string S", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n    def orderlyQueue(self, S, K: int):\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given.", "\nUse Call-Based format\n\n\n\n\n\nA string S is given.\n\nUse Call-Based format\n\n\n\n\nA string S of lowercase letters is given.\n\n\n    def orderlyQueue(self, S, K: int):\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA string S of lowercase letters is given"], "prompt": "\nQUESTION:\nA string S of lowercase letters is given.\u00a0 Then, we may make any number of moves.\nIn each move, we\u00a0choose one\u00a0of the first K letters (starting from the left), remove it,\u00a0and place it at the end of the string.\nReturn the lexicographically smallest string we could have after any number of moves.\n\u00a0\n\nExample 1:\nInput: S = \"cba\", K = 1\nOutput: \"acb\"\nExplanation: \nIn the first move, we move the 1st character (\"c\") to the end, obtaining the string \"bac\".\nIn the second move, we move the 1st character (\"b\") to the end, obtaining the final result \"acb\".\n\n\nExample 2:\nInput: S = \"baaca\", K = 3\nOutput: \"aaabc\"\nExplanation: \nIn the first move, we move the 1st character (\"b\") to the end, obtaining the string \"aacab\".\nIn the second move, we move the 3rd character (\"c\") to the end, obtaining the final result \"aaabc\".\n\n\u00a0\nNote:\n\n1 <= K <= S.length\u00a0<= 1000\nS\u00a0consists of lowercase letters only.\nclass Solution:\n    def orderlyQueue(self, S: str, K: int) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}