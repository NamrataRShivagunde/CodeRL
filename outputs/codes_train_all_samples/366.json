{"366": {"code": ["\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\nUse Class-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nFind the longest substring T of a given string\n\n\n\n\n\nFind the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    pass\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n:\n        \nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring T of", "\n\n\nUse Call-Based format\n\n    pass\nUse Call-Based format\n\n\n\n\n   \n\nFind the length of the longest substring T of a given string T.\n\n\n    __init__(self) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring T of a", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n:\n        return self.longestSubstring(s, k)\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nFind the length of the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n       \n\n\n\n\n\n\n\n\n\n *(self, s: str, k: int):\n        \nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nFind the", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n:\n        \nUse Call-Based format\n\n\n\n\nFind the length of the longest substring T of a given string\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring T", "\nUse Call-Based format\n\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n\n\n *args:\n        pass\n\n\n\n\nUse Call-Based format\n\n\n\nFind the longest substring T of a given string, k times.\n\n\n\n\nUse Call-Based format\n\n\n\n\nFind the length of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nFind the length of the longest substring T of a given string T.\n\n\n\n\n\n\nFind the length of", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n   \n\n\n\n\n\n\n\n\n __len__(self):\n        \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring", "\nUse Call-Based format\n\nUse Call-Based format\n\n       \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n:\n        \nUse Call-Based format\nFind the longest substring T of a given string\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n        pass\n\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n:\n\n\n\nFind the length of the longest substring T of a given string\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nFind the length of the longest substring T of a given string\n\n\n\nFind", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n:\n        \nFind the length of the longest substring T of a given string\n\n\n\nUse Call-Based format\n\n\n\n\nFind the longest substring T of a given string\n\n\n\n\n\nFind the length of the longest", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n        pass\n\n\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n:\n        \nUse Call-Based format\n\n\n\n\n\n\nFind the length of the longest substring T of a given string\n\n\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\nFind the length of the longest substring T of a given string\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring", "\n\n\nUse Call-Based format\n\n        pass\n\n\nUse Call-Based format\n\n\n\n   \n        \n\n\n\n\n\n\n\n\n *:\n\n\n\n\n\n\nUse Call-Based format\nFind the longest substring T of a given string (considering lowercase letters)\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n        \n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n:\nFind the length of the longest substring T of a given string\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nFind the length of the longest substring", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n:\nFind the length of the longest substring T of a given string\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nFind the length of the longest substring", "\nUse Call-Based format\n\n\n\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring T of a", "\nUse Call-Based format\n\n\n\n        pass\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n:\n        \n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nFind the length of the longest substring T of a given string\n\n\n\n\n\n\nFind the length of the longest", "\nUse Call-Based format\n\n\n\n    pass\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n:\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFind the length of the longest substring T of"], "prompt": "\nQUESTION:\nFind the length of the longest substring T of a given string (consists of lowercase letters only) such that every character in T appears no less than k times.\n\n\nExample 1:\n\nInput:\ns = \"aaabb\", k = 3\n\nOutput:\n3\n\nThe longest substring is \"aaa\", as 'a' is repeated 3 times.\n\n\n\nExample 2:\n\nInput:\ns = \"ababbc\", k = 2\n\nOutput:\n5\n\nThe longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.\nclass Solution:\n    def longestSubstring(self, s: str, k: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}