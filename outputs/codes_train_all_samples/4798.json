{"4798": {"code": ["```\n\n\n\n\n\n\navg_diags = ``avg_diags()```\n\nExample:\n\nA = [1, 2, 3, 4, 2]\n\n```\n\n\n\n\n function:\n\n\n\n\n function:\n\n\n\n\n\n\n\n\n\n\n\n\n function:\n\n```\nA = [0, 0", "\n\n\navg_diags()\n\n```\nA = [1,2,3,3,4,6,4,5,6,7]\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function are:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function:\n\n- A = [1, 2,", "```\n\n```\n```\n```\n\n\n\n\n```\n\navg_diags(A)```\n\n\n\n\n```\n\n\n\n\n```\n\n\n function:\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n function:\n\n```\n", "```\n\n\n\n\navg_diags()\n\nSUMMARY:\n\n\n\n\n\n\navg_diags()\n\n\n\nA = [-4, -5, -2, -1, -2, -1]\n\n\n\n function\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = [1]\n```\n\n function are:", "\n\n\nA = [1, 2, 3, 3, 2, 2]\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function are\n\n\n\n\n\n\n\n\n\n\n\nA = [0, 1, 0, 1]\n```\n\n\n\n\n function are:\n\n- 1,  0,  0", "```\n\n\n\n\n\n\navg2 = -1\n\n```\nA = 2\n```\n\n\n\n\n\n\n\n function are:\n\n-1,\n\n-2,\n```\n\n\n\n function are:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n function:\n\n- 1,\n\n- 2,\n", "```\n\n\navg_diags()\n```\n\n\n\n\nA = [3, 8, 1, 1, 2]\n```\n\n\n\n\n```\n\n\n\n\n function:\n```\navg_diags()```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n function:\n\n```\navg = [", "```\n\n\n\n\nA = [-2, 2, 3, 4, 6, 7, 1, 1]\n```\n\n\n\n\n\n\n\n\n\n\n\n function\n\n```\navg_diags()\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = [1, 2, 3, 4]\n```\n\n function:\n", "\n```\n\n\n\n\n\n\nA = [1, 2, 3, 1, 2, 2]\n\n```\n\n\n\n\n\n function are:\n\n\n\n\n\n function should return the number of features of the function.\n\n```\n\n\n\n\n\n\n\n\n\n\navg_diags()\n\n```\n\n function should return the", "```\n\n\n\n\n\nA = [1,2,3,4,2,3,4,2,2]\n\n```\n\n\n\n\navg_diags()\n\n\n\n\n\n function are:\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\nA = A.T\n\n```\n\n function:\n``", "\n\n\n\n\n\navg_diags()\n\nExample:\n\nA = [1, 2, 3, 4, 5, 6]\n\n\n\n\n\n\n\n function\n\n\n\n\n function:\n\n\n\n\n\n\n\n\n\n\n\navg_diags(A)\n```\n\n\n\n function:\n\nA = [0, 0,", "\n\n\n\n\n\n\nA = [1, 2, 3, 2, 3, 2]\n```\n\n\n\n\n\n function\n\n\nA = [1, 2, 3, 4, 2]\n```\n\n\n\n function\n\n\n\n\n\n\n\n\n\n\n\nA = [A, A]\n```\n\n\n\n function:\n", "```\n\n\navg2 = [3]\n```\n\n\n\n\n\nA = [3, 2]\n\n```\n\n\n\n\n\n function are:\n\n\n\n\n function are:\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\nA = [[-1, 8, -2, -4, 1]]\n\n function", "```\n\n\n\n\n\n\n\nA = [1, 2, 3, 7, 8, 10, 15]\n\n```\n\n\n\n\n\n function\n\n---\n\n\n\n-1\n```\n\n function\n\n\n\n\n\n\n\n\n\n\n\n\n\navg_diags()\n\n\n function\n```\n\n---\n\nA", "\n```\n\n\n\n\n\n\nA = [-10, 10, 10, 10]\n\n```\n\n\n\n\n\n\n```\nA = [10, 10]\n```\n\n\n\n\n\n function:\n\n```\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n function:\n\n```", "\n\n\n\n\n\navg_diags = avg_diags()\n\nQUESTION:\n\nA = [1, 2, 3, 4, 6, 3, 7, 8, 11, 16, 17]\n\n\n\n\n\n\n\n\n\n function\n\n\n\n\n\n\n\n\n\n\nA = [0, 1]\n```\n\n\n function are", "```\n\n\navg_diags(A, avg2)\n\n```\n\n\n\n\n\n\n\n\n\n\n\navg_diags()\n\n\n\n\navg2 = [0, 1]\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nA = [0, 0, 0]\n\n\n\n function should be", "\n\n\n\n\n\nA = [1, 2, 3, 2, 3]\n\n```\n\nA = [1, 2, 2, 3]\n\n```\n\n\n\n\n\n function\n\n\n\n\n function:\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = [A]\n\n```\n\n function:\n\n```", "```\n\n\n\n\n\navg_diags()\n\n```\n\n\nA = [1, 1, 1, 1, 1, 1, 1, 1]\n\n```\n\n\n\n\n\n\n function\n\n\n\n\n\n function:\n\n\n\n\n\n\n\n\n\n\n\n\nA = [A]```\n\n\n function:\n", "```\n\n\n\n\n\n\n\n\nA = [0, 1, 2, 3, 4]\n\n```\nA = [0, 1, 1, 2]\n\n```\n\n\n\n\n\n\n function\n\n\n\n\n function:\n\n\n\n\n\n\n\n\n\n\nA = A.T\n```\n\n\n function:\n\n"], "prompt": "\nQUESTION:\nGiven a certain square matrix ```A```, of dimension ```n x n```, that has negative and positive values (many of them may be 0).\n\nWe need the following values rounded to the closest integer:\n\n- the average of all the positive numbers (more or equal to 0) that are in the principal diagonal and in the columns with odd index, **avg1**\n\n- the absolute value of the average of all the negative numbers in the secondary diagonal and in the columns with even index, **avg2**\n\nLet's see the requirements in an example:\n```\nA = [[ 1,   3, -4,   5, -2,  5,  1], \n    [  2,   0, -7,   6,  8,  8, 15],\n    [  4,   4, -2, -10,  7, -1,  7],\n    [ -1,   3,  1,   0, 11,  4, 21],\n    [ -7,   6, -4,  10,  5,  7,  6],\n    [ -5,   4,  3,  -5,  7,  8, 17],\n    [-11,   3,  4,  -8,  6, 16,  4]]\n```    \nThe elements of the principal diagonal are: \n```\n[1, 0, -2, 0, 5, 8, 4]\n```\nThe ones that are also in the \"odd columns\" (we consider the index starting with 0) are: \n```\n[0, 0, 8] all positives\n```\nSo,\n```\navg1 =  [8 / 3] = 3\n```\nThe elements of the secondary diagonal are:\n```\n[-11, 4, -4, 0, 7, 8, 1]\n```\nThe ones that are in the even columns are:\n```\n[-11, -4, 7, 1]\n```\nThe negative ones are:\n```\n[-11, 4]\n```\nSo,\n```\navg2 = [|-15 / 2|] = 8\n```\nCreate a function ```avg_diags()```that may receive a square matrix of uncertain dimensions and may output both averages in an array in the following order: ```[avg1, avg2]```\n\nIf one of the diagonals have no elements fulfilling the requirements described above the function should return ```-1```\nSo, if the function processes the matrix given above, it should output:\n```\n[3, 8]\n```\nFeatures of the random tests:\n```\nnumber of tests = 110\n5 \u2264 matrix_length \u2264 1000\n-1000000 \u2264 matrix[i, j] \u2264 1000000\n```\nEnjoy it!\nTranslations into another languages will be released soon.\ndef avg_diags(m):\n\t\nUse Call-Based format\nANSWER:\n"}}