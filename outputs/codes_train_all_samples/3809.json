{"3809": {"code": ["\nUse Call-Based format\n\ncharCheck(text, 10, True)\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nCara is applying for several different jobs.\n\n\n\n\n\n#\n# Cara is applied for", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\ncharCheck(\"Cara\", 10, False)\n\nThe function `charCheck()` should return an array of boolean values\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck(\"Cara\", 10, False)\n\n\n\n\n- `char", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\ncharCheck(text, max, spaces):\n\nUse Call-Based format\n\nEXAMPLE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEOF:\n\n\n\nCara needs to be applied for several different jobs\n\n\n\n\n\n- `char", "\nUse Call-Based format\ncharCheck(text, 10, True):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nCall-Based format\n\n\n\n\n\n\nCara is applied for several different jobs.\n\nUse Call-Based format\n\n\n\n\nEXAMPLE:\n\n\n\n\n\n- `charCheck(\"Cara", "\nUse Call-Based format\n\ncharCheck(\"Cara Hertz\", 10, False):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\ncharCheck(\"Cara Hertz\", 10, True):\n\n\n\n\n    Cara's function", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\ncharCheck()\n\nAn example answer:\n\n- Cara is applied for several jobs.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCHARACTER CHECK:\n\n\ncharCheck()\n\n\n\n\n\n    \"\"\"\n    # TODO:", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\ncharCheck(text, max, spaces)\n\nUse Call-Based format\nEXAMPLE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck(text, max, spaces)\n\n\n\n\n    Cara is applied for", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\ncharCheck(text, max, spaces)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQUESTION:\nCara is applying for several different jobs.\n\nA call:\n\n\n\n\n\n\n\n>>> def char", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ncharCheck(text, max, spaces):\n\nUse Call-Based format\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck(\"Hello World!\", 10, True)\n\n\n\n- `charCheck(\"Hello World!", "\nUse Call-Based format\n\nUse Call-Based format\n\nNOTE:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\ncharCheck(text, max, spaces):\n\ncharCheck()\n\n\n\n\n\n\n\n\n    \"Text\":\n\n    \"", "\nUse Call-Based format\n\n\n\n\ncharCheck(\"Cara Hertz\", 9, True)\n\nThe function `charCheck()` should return an array containing true if the cara's answer is not too long.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck:\n\ncharCheck(text)\n\n\n-", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ncharCheck(text, max, spaces)\n\nUse Call-Based format\n\nOUTPUT:\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\ncharCheck(\"Cara\", \"10\", \"true\", \"spaces\", False)\n\n\n\n-", "\nUse Call-Based format\n\nUse Call-Based format\n\nCall-Based format\n\ncharCheck()\n\nNOTE:\n\ncharCheck(text, max, spaces):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck(text, max, spaces)\n\nABORT:\n\n\n\n\n\n\n\n\n# Cara's answer:", "\nUse Call-Based format\ncharCheck(\"Cara\", 10, True)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck(\"Cara\", 10, True)\n\ncharCheck(\"Cara\", 5, False)\n\n\n\n\n-", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ncharCheck(\"Cara Hertz\", 10, True)\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\nCara is applied for several jobs.\n\nCara needs for several jobs.\n\n\n\n\n- `", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\ncharCheck(\"Cara Hertz\", 10, True)\n\nThe function `charCheck()` should return an array:\n\n- `charCheck()` should return a boolean\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    text = \"Cara\"", "\nUse Call-Based format\nCara is applied for several different jobs.\n\nUse Call-Based format\n\n\n\n\n\ncharCheck(\"Cara\")\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\nOUTPUT:\n\n\"Cara\"\n\ncharCheck:\n\n\n\n\n---\n\n# Ch", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n- `\"max\"`: a number equal to the maximum number of characters allowed in the answer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n---\n\n## Examples\n--", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck:\n\nCheck for Cara's answer for the question\n\n\n\n\n\ncharCheck:\n\n\n\n\n# Example:\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\ncharCheck(\"Cara Hertz\", 10, False)\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nOUTPUT:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncharCheck(text, max, spaces)\n\n\n\n\n\n\n## Examples"], "prompt": "\nQUESTION:\nCara is applying for several different jobs.\nThe online application forms ask her to respond within a specific character count.\nCara needs to check that her answers fit into the character limit.\n\nAnnoyingly, some application forms count spaces as a character, and some don't.\n\nYour challenge: \n\nWrite Cara a function `charCheck()` with the arguments:\n\n- `\"text\"`: a string containing Cara's answer for the question\n- `\"max\"`: a number equal to the maximum number of characters allowed in the answer\n- `\"spaces\"`: a boolean which is `True` if spaces are included in the character count and `False` if they are not\n\nThe function `charCheck()` should return an array: `[True, \"Answer\"]` , where `\"Answer\"` is equal to the original text, if Cara's answer is short enough.\n\nIf her answer `\"text\"` is too long, return an array: `[False, \"Answer\"]`. \nThe second element should be the original `\"text\"` string truncated to the length of the limit.\n\nWhen the `\"spaces\"` argument is `False`, you should remove the spaces from the `\"Answer\"`.\n\nFor example:\n\n- `charCheck(\"Cara Hertz\", 10, True)` should return `[ True, \"Cara Hertz\" ]`\n- `charCheck(\"Cara Hertz\", 9, False)` should return `[ True, \"CaraHertz\" ]`\n- `charCheck(\"Cara Hertz\", 5, True)` should return `[ False, \"Cara \" ]`\n- `charCheck(\"Cara Hertz\", 5, False)` should return `[ False, \"CaraH\" ]`\ndef charCheck(text, mx, spaces):\n\t\nUse Call-Based format\nANSWER:\n"}}