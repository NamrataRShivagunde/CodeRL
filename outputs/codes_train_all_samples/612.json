{"612": {"code": ["\nUse Standard Input format\n\n\nUse Standard Output format\nANSWER:\n\n\n\n\n\n-----Explanation-----\nExplanation:\n\n\n\nLots of geeky customers visit our chef's restaurant everyday\n\n\n\n\n\n\n\n\n\n\n\n\n\n211111110\n101010101010\n101\n\n\n\n\n\nLots", "\nUse Standard Output format\n\n1\n1\n2\n1\n1\n1\n2\n3\n2\n3\n4\n3\n\n\n\n\n\n\n\n\n\n\n\n1\n1\n1\n1\n\n\n\nGood\n\n-----Explanation-----\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nLots of geeky customers visit our", "\nUse Standard Input format\n\n\n\n\n\n\n1\n1\n1\n0\n011\n1\n1\n\n2\n0\n1\n1\n1\n1\n2\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe string is a binary string with only the following characters : \n\n\nI'd", "\nUse Standard Input format\n\nBad\n\n-----Explanation-----\n\nUse Standard Output format\n\n\n\n\n1\n\nLots of geeky customers visit our chef's restaurant everyday.\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\nLots of geeky customers visit our chef's restaurant everyday\n\n\n\nL", "\nUse Standard Input format\nUse Standard Output format\n\n\n\n\n\nTest case 1.\nTest case 2.\nTest case 3.\nTest case 4.\nTest case 4.\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\nLots of geeky customers visit our chef. \n\n\n\n\n\nLots", "\nUse Standard Output format\n\n\n\n\n\n\n\n1\n1\n1\n1\n\nLots of geeky customers visit our chef's restaurant everyday\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n\nI'm a good question.\n\nExplanation-----\n\n\n\nI'm a good question", "\n\n\n\nUse Standard Input format\n\nTest case 1:\n\n\n\n\n\n1  \u2264 T \u2264  1 \u2264 100 \n1  0 \u2264 100\n\nExplanation:\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nGood\n\n-----Explanation-----\n\nBad\n\nLots of g", "\nUse Standard Output format\n\n\nUse Standard Input format\n\n\n\n\n\nLots of geeky customers visit our chef's restaurant everyday\nLots of geeky customers visit our chef's restaurant everyday\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\nGood\n\n-----Explanation-----\n", "\nUse Standard Output format\n\n\nUse Standard Input format\n\n\nTest case 1.\nTest case 2.\nTest case 3.\nTest case 4.\nTest case 5.\nTest case 6.\nTest case 6.\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation-----\n2\n1\n\nLots of g", "\nUse Standard Input format\n\n\nUse Standard Output format\nANSWER:\nLots of geeky customers visit our chef's restaurant everyday\nUse Standard Input format\n\n\n\n\n\n\n\n\n1\n2\n3\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n1\n11111110\n10101010101010\nL", "\nUse Standard Output format\n\n\n\n\n\n\n\n\nLots of geeky customers visit our chef's restaurant everyday\n\nUse Standard Output format\n\n\n\n010101010101010101010101010101011\n\n\n\n\n\n\n\n\n\n\n\n\nA good string is found in a text file.\n\nLots", "\nUse Standard Input format\n\n\nUse Standard Output format\n\n\n\n\n\n\nT:\nS:\nS:\nS:\nS:\nS:\nS:\nS:\nS:\nS:\nS:\nS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n2. \n", "\nUse Standard Input format\n\n\n\n\n\n1.\n\n\n010010101010101010\n0100101010101010\n010010101010101010101010\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\nThe chef's classification is a good or Bad feedback.\n\n\n\n\n\nL", "\nUse Standard Input format\n\n\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n-----Explanation-----\n\nLots of geeky customers visit our chef's restaurant everyday\n\n\n\n\n1110101011010101010101\n\n\n\n\n\n\n\n\n\n\n\n\n\nLots of geeky customers visit our ch", "\nUse Standard Input format\n\n\nUse Standard Output format\nANSWER:\nLots of geeky customers visit our chef's restaurant everyday\nUse Standard Input format\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nGood\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n0010101010101\n\nLots of g", "\nUse Standard Input format\n\n\nUse Standard Output format\n\n\nTest case 1.\nTest case 2.\nTest case 2.\nTest case 3.\n\n-----Constraints-----\n\n\n\n\nExplanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\nLots of geeky customers visit our chef's restaurant everyday\n\n\n\n\nLots", "\n\n\n\nUse Standard Input format\n\n\n\n\n\n2\n1010101010101010101010101010101\n\n\n\n-----Example format:\n\n\n\n\n\n\n0101010101010101010\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n211111110\n10101010101010\nL", "\nUse Standard Input format\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n100010101010101010\n\n\n2\n11111110\n10101010101010\n1010101010101010\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n-----Input-----\n\n\n\n\nLots of geeky customers", "\nUse Standard Input format\nUse Standard Output format\n\n\nUse Standard Output format\nANSWER:\n\n\nExplanation:\n\n\n\n\n\n1\n101\n01010101010101010101\n\n\n1\n\n\n \n\n-----Explanation-----\n\n\n\n\n\nUse Standard Output format\n\n\n\n\nLots of geeky customers visit our", "\nUse Standard Output format\n\n\n\n\n\n\n\n2\n11111110\n101010101010101010101\n\n-----Explanation-----\n\n\n\n\n\n3\n4\n\n\n\n\n\n\n\n\n\n\n\nLots of geeky customers visit our chef's restaurant everyday. \n\n\n\n\n\nLots of geek"], "prompt": "\nQUESTION:\nLots of geeky customers visit our chef's restaurant everyday. So, when asked to fill the feedback form, these customers represent the feedback using a binary string (i.e a string that contains only characters '0' and '1'. \n\nNow since chef is not that great in deciphering binary strings, he has decided the following criteria to classify the feedback as Good or Bad : \n\nIf the string contains the substring \"010\" or \"101\", then the feedback is Good, else it is Bad. Note that, to be Good it is not necessary to have both of them as substring.\n\nSo given some binary strings, you need to output whether according to the chef, the strings are Good or Bad. \n\n-----Input-----\nThe first line contains an integer T denoting the number of feedbacks. Each of the next T lines contains a string composed of only '0'  and '1'.\n\n-----Output-----\nFor every test case, print in a single line Good or Bad as per the Chef's method of classification.\n\n-----Constraints-----\n-  1 \u2264  T \u2264   100 \n-  1  \u2264  |S|   \u2264  105 \n\nSum of length of all strings in one test file will not exceed 6*106.\n\n-----Example-----\nInput:\n2\n11111110\n10101010101010\n\nOutput:\nBad\nGood\n\n-----Explanation-----\nExample case 1.\n\nThe string doesn't contain 010 or 101 as substrings.\n\nExample case 2.\n\nThe string contains both 010 and 101 as substrings.\nUse Standard Input format\nANSWER:\n"}}