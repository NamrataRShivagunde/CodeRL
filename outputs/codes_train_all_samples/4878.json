{"4878": {"code": ["\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\nMy third kata,\n\n\n\nMy third kata\n\n\n\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\nMy third", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\nMy third kata, write a function `check_generator`\n\n\n\n\nMy third kata\n\n\n\n\n\n\n\n\n\n\nMy third kata,\n\n\n\nMy third kata,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\nMy third kata, write a function `check_generator`\n\n\n\n\nMy third kata\n\n\n\n\n\n\nUse Python format\n\n\n\n\nMy third kata, write a function", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nMy third kata\n\nMy third kata:\n\nMy third kata:\n\nMy third kata:\n\n\n\n\n\n\n\nmy third kata\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nMy third kata, write a function `", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nMy second kata, write a function `check_generator`\nUse Call-Based format\n\n\n\n\n\nMy third kata,\n\n\n\nMy third kata\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nMy third kata, write a function", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Python generator format\nMy third kata\n\nMy third kata, write a function `check_generator`\n\nmy third kata\n\n\n\n\n\n\n\n\nUse Python format\n\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\n\nMy", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\nMy third kata\n\nUse Call-Based format\nmy third kata\n\n\n\n\n\n\n\n\n\n\nUse Python format\n\n\n\n\n\n\n\n\n\nMy third kata, write a function `", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\nUse Python format\n\nMy third kata\n\n\n\n\n\nMy third kata\n\nMy third kata\n\n\n\n\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\n\nMy", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\nUse Python format\n\nMy third kata, write a function `check_generator(gen)`\n\n\n\n\t\n\nMy third kata\n\n\n\n\n\n\n\n\nUse Call-Based format\nMy third kata\nMy third kata\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\nUse Call-Based format\n\n\n\nMy third kata\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nMy third kata, write", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nMy third kata, write a function `check_generator`\n\nmy third kata\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\n\n\nMy third kata,\n\n\n\nMy third kata, write a function", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nMy third kata\n\n\nMy third kata, write a function `check_generator`\n\n\n\n\n\n\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\n\nMy third kata, write a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\n\n\n\nMy third kata\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nMy third kata, write a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nMy third kata, write a function `check_generator(gen)`\n\nUse Call-Based format\n\n\n\n\n\nMy third kata,\n\n\n\nMy third kata\n\n\n\n\n\n\n\n\n\n\n\n\nMy third kata, write a function `", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\nUse Python format\nMy third kata\n\nMy third kata, write a function `check_generator(gen)`\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy third kata, write a function check_generator\n\n\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\nMy third kata,\n\n\n\nMy third kata\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nMy third kata, write a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\n\n\n\t\nMy third kata\n\nMy third kata\n\n\n\n\n\n\n\n\n\n\n\n\nMy third kata, write a", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\n\n\nMy third kata", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\nUse Call-Based format\nMy third kata, write a function `check_generator`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy third kata, write a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nMy third kata, write a function `check_generator(gen)`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy third kata\n\n\n\n\n\n\nMy third kata, write a"], "prompt": "\nQUESTION:\nMy third kata, write a function `check_generator` that examines the status of a Python generator expression `gen` and returns `'Created'`, `'Started'` or `'Finished'`. For example:\n\n`gen = (i for i in range(1))` >>> returns `'Created'` (the generator has been initiated)\n\n`gen = (i for i in range(1)); next(gen, None)` >>> returns `'Started'` (the generator has yielded a value)\n\n`gen = (i for i in range(1)); next(gen, None); next(gen, None)` >>> returns `'Finished'` (the generator has been exhuasted)\n\nFor an introduction to Python generators, read: https://wiki.python.org/moin/Generators.\n\nPlease do vote and rank the kata, and provide any feedback.\n\nHint: you can solve this if you know the right module to use.\ndef check_generator(gen):\n\t\nUse Call-Based format\nANSWER:\n"}}