{"575": {"code": ["\nUse Standard Input format\n\n\n\n\n\n\n\n\n2\n\n\nChef found a strange string yesterday - < < <\n<=>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<=\nT=30\n\n-----Explanation-----\n\nChef found a strange string yesterday - < < < <\n\nT", "\nUse Standard Input format\n\n\n\n\n\n\n\n1\n<>\n1\n<\n\n\n\n1\n2\n\n\n\nChef found a strange string yesterday - a string of signs s = 0 < < < < <\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\nChef found a strange string yesterday", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\nChef found a strange string yesterday - use standard input format\n\n\n\n\nChef found a string yesterday - a string of signs s <=b <=c>\n\n\n\n\n\n\n\n\n\n1\n2\n1\n\n\n\n\n\n\nChef found a strange", "\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nUse Standard Input format\n\n\n\n\n\n\n-----Explanation-----\nThe input format is\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n-\n103\n\n-----Example-----\n\n\n\nChef found a strange string yesterday - the", "\nUse Standard Input format\n\n1\n2\n3\n\n\n\n\n\n\n1\n\n\n-----Explanation-----\nUse Standard Output format\n\n\n\n\n<=>\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n1 < 2 < 3 > 4\n1 < 2 > 2 < 3\n\n-----Example-----\n\n\n\n\n1 < 2 =", "\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n<=>\n<=>\n\n\n\n <->\n<\n<=>\n<\n\n\n\n-----Test cases-----\n- One test case\n1 < 2 < 3 < <->\n1 < 2 < 4\n1 < 2 < 2\n\n\n\n\n\n\n\nChef found a str", "\n\n\n\n\n\n\n\n\n-----Examples-----\n\nA simple example of a standard input format\n\n\n\n\n2 <=\n\n<=\n\n\n\n\n <=\n\n\n\n\n\n-----Example-----\n-\n1 < 2 < 3 < 4\n1 < 2 = 2 < 3\n\n-----Example-----\n\n\n\n\n\n- 1 \u2264", "\nUse Standard Input format\n\n1 < < <\n1 < < <\n1 < < < < < < < < < < < < < < < <\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChef found a strange string yesterday - T is a number of string of signs s < < < < \n\nT", "\n\n\n\n\n-----Example-----\nUse Standard Input format\nANSWER:\n\n\n\n\n\n-----Subtasks-----\n- Original constraints\n- Original constraints\n\n\n-----Example-----\n- Original constraints\n\n-----Input-----\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChef found a strange string yesterday -\n\nChe", "\nUse Standard Input format\n\n\n\n-----Explanation-----\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\n<>\n\n\n\n-----Example-----\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n- Use Standard Input format\n\n-----Subtasks-----\n\n\n\n\n-----Example-----\n-", "\n\n\n\n\n\n\n\n\n1\n1\n2\n2\n3\n\n-----Example-----\n- Example format\n\n\n\n\n\n\nChef found a strange string yesterday - T < 3\n<>\n\n\n\n\n\n\n\n\n\n\n1 < 2 < 3 < 4\n1 < 2 < 5\n\n\n\nChef found a str", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\nChef found a strange string yesterday - s <= <<\n<=> <= <\n\n\n\n\n1\n1\n1\n1\n1\n1\n\n1\n1\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n2\n1\n\n\nChef found a", "\nUse Standard Input format\n\n\n\n\n\n\n\n1\n1\n\n-----Example-----\nUse Standard Output format\nANSWER:\n\n\n\n-----Constraints-----\n- Original constraints\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<=\n\n<=\n\n- 1 = <\n2 = <\n2 = <\n\n-----\n", "\n\n\n1 < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 < 2 = 2 > 1\n1 < 2 = 2 > 1\n\n\nT: 3", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\nChef found a strange string yesterday - a string of signs s, followed by an integer a, followed by an integer b. \n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 1 = 1 < 2 < 3\n- 1 = 1 < 2\n\n\n", "\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n<<<\n\nChef found a strange string yesterday - a string of signs s < < < < <\n\n\n\n\n\n\n\n\n-----Subtasks-----\n- For each test case:\n1 < 2\n\n\n\n\n\n\nChef found a str", "\n\n\n\n\n\n\n\n1 < 2 < 3 <\n1 < 2 < 2 < 3\n1 < 2 = 2 < 2\n\n-----Example-----\n\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 < 2 > 3\n1 < 2 > 3\n\n\n\n\nChef found a str", "\n\n\n1\n1\n1\n1\n2\n1\n2\n3\n\n\n\n\n\n\n\n\nChef found a strange string yesterday - A string of signs s\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n-----Example-----\n <<\n\n\nChef found a strange string yesterday -", "\nUse Standard Input format\n\n\n\n\n\n\n\n<=\n<\n\n\n\n1 < 2 > 2 < 3 < 4\n\n\n\nChef found a strange string yesterday - a string of signs s <\n\n\n\n\n\n\n\n-----Example-----\n\nUse Standard Input format\n\n\n\n\n\n\n-----Explanation-----\n\nT > 4\n", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n<<<\n<>\n\n\n-----Constraints-----\n- 0 < < < < <\n\n <\n\n-----Example-----\n\n\n\n\n-----Example-----\n- Use Standard Input format\n\nConstraints:\n1 < < < <\n\n\n\n\n\n\n\n    A string yesterday is not followed"], "prompt": "\nQUESTION:\nChef found a strange string yesterday - a string of signs s, where each sign is either a '<', '=' or a '>'. Let N be the length of this string. Chef wants to insert N + 1 positive integers into this sequence and make it valid. A valid sequence is a sequence where every sign is preceded and followed by an integer, and the signs are correct. That is, if a sign '<' is preceded by the integer a and followed by an integer b, then a should be less than b. Likewise for the other two signs as well. \nChef can take some positive integers in the range [1, P] and use a number in the range as many times as he wants.\nHelp Chef find the minimum possible P with which he can create a valid sequence.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe only line of each test case contains the string of signs s, where each sign is either '<', '=' or a '>'. \n\n-----Output-----\nFor each test case, output a single line containing an integer corresponding to the minimum possible P. \n\n-----Constraints-----\n- 1 \u2264 T, |s| \u2264 105\n- 1 \u2264 Sum of |s| over all test cases in a single test file \u2264 106\n\n-----Subtasks-----\nSubtask #1 (30 points)\n- 1 \u2264 T, |s| \u2264 103\n- 1 \u2264 Sum of |s| over all test cases in a single test file \u2264 104\n\nSubtask #2 (70 points)\n- Original constraints\n\n-----Example-----\nInput:\n4\n<<<\n<><\n<=>\n<=<\n\nOutput:\n4\n2\n2\n3\n\n-----Explanation-----\nHere are some possible valid sequences which can be formed with the minimum P for each of the test cases:\n1 < 2 < 3 < 4\n1 < 2 > 1 < 2\n1 < 2 = 2 > 1\n1 < 2 = 2 < 3\nUse Standard Input format\nANSWER:\n"}}