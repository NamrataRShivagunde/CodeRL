{"3456": {"code": ["\nUse Call-Based format\nu\nUse Call-Based format\n:u\n>>> repeater('hi', 3)\n\nUse Call-Based format\n\n:\n\n>>>\n\n:\n:u\n\n\nUse Call-Based format:uWuBWuBWuBWuBWuB\n:\n\n:\n\n\n>>>\n\n\n```python", "\nUse Call-Based format\nuWuBuWuBuBuWuBuBuB\n\n::\n>>> repeater('yo', 3)\n\n\n\t:\n>>>\n\t:\n:\n>>>\n\n:uWuBWuBWuBW\n:\nUse Call-Based format\n:\n>>>\n\n```python\n", "\t\nUse Call-Based format\nUse Call-Based formatu\nUse Call-Based format\nUse Call-Based format:u\n\n\n\n:\n\n>>>\n\n:\n:uWuBuWuB\n\nUse Call-Based format:u\n\n\n\nThis challenge extends the previous [repeater()] challenge.\n\n\n>>>\n\n\n>>> repeater('", "\nUse Call-Based format\nu\n\nUse Call-Based format\nUse Call-Based formatu\n>>>\n\n\n\n\n\n\nThis challenge extends the previous challenge\n:\n\nUse Call-Based format:\nuWuWuWuWuWuWuB\n\n:\n\n\n\nUse Call-Based format\n\n\n>>>\n\n\n```python\n", "\nUse Call-Based format\nuWuBuWuBuBuBuBuB\n\t\nUse Call-Based format\t\nUse Call-Based format:\n>>> repeater()\n\n>>>\n\t:\n>>>\n\t::u\n\n:\nUse Call-Based formatu\n:\n\n:\n\n>>>\nThis challenge extends the previous challenge\n```", "\nUse Call-Based format\nUse Call-Based formatu\n\nUse Call-Based format\nu\ndef repeater(string, n):\n\t\nUse Call-Based format\n\n:\n\n\n\n:\n:uWuB\n\t\nUse Call-Based format:u\n:\nUse Call-Based format\n:\n\n>>>\nThis challenge extends the previous challenge\n\n", "\nUse Call-Based format\nu\nUse Call-Based format\nUse Call-Based format\nUse Call-Based formatuWuB\n>>>\n\n:\n\n>>>\n\n:\n\nUse Call-Based format:uWuBWuBWuB\t\nUse Call-Based format:\n\n:\nUse Call-Based format\n\n\n>>>\n\n```python", "\nUse Call-Based format\nUse Call-Based formatu\n\n:u\n>>> repeater('yo', 2)\n\n\n\n:\n\n>>>\n\t\n:\n:\nuWuB\n\n\nUse Call-Based format:\n\nUse Call-Based formatu\n\n\n\n\n\nthis challenge extends the previous repeated challenge:\n\n>>>\n\n\n```", "\n\t\nUse Call-Based formatu\n\nUse Call-Based format\nuWuBuB\n\n\n\n\n:\n\n>>>\nrepeater(string, n)\n\n\n:\n:uWuBWuBWuB\n\nUse Call-Based format:u\n\n\n\n\n>>>\nThis challenge extends the previous challenge\n\n\n\n```python", "\nUse Call-Based format\nu\n\nUse Call-Based format\n:\nu\n>>>\n\n\n:\n\n>>>\n\n\t\n:\n:\nuWuWuWuWuWuWuWuBWuBWuB\n>>> repeater()\n\t\n:\n\n\t\nUse Call-Based format\n\n\n>>>\nThis challenge extends\n", "\t\nUse Call-Based format\nUse Call-Based formatu\n\n:u\n>>>\n\n\n:\n\n\n\n\n\n:\n:\n\nuWuBWuB\nUse Call-Based format\nUse Call-Based format:uWuBWuBWuBWuB\n\n\n\n\n\n>>>\n\n\n\n```python\n>>> repe", "\t\nUse Call-Based format\nu\n\nUse Call-Based format\n:\nUse Call-Based formatu\n>>>\n\n\t:\n\n>>>\n\n:\n:\nu\n\n\n:\nUse Call-Based formatuWuB\n\n\nThis challenge extends the previous [repeater()] challenge.\n\n\n>>>\nThis challenge extends the last challenge.\n```", "\nUse Call-Based format\nu\n\nUse Call-Based format\nUse Call-Based format:u\n>>>\n\n\n:\n\n>>>\n\n:\n\n\t:\n\n\nUse Call-Based formatuWuWuWu\n\n:uWuWuWuWu\n:\n:\n\n>>>\nThis challenge extends the last challenge\n```python\n", "\n\nu\n\n\nUse Call-Based formatuWuB\n\n\n\n\nThis challenge extends the previous challenge.\n\n\n\n:\n\nUse Call-Based format:\n\nUse Call-Based formatu\n\nUse Call-Based format:\nUse Call-Based formatu\n\n\n\nthis challenge extends the previous one\n>>>\nThis challenge extends the previous one\n\n``", "\nUse Call-Based format\nu\n\n\t\nUse Call-Based formatu\n>>> repeater('yo', 3)\n\n\n\n:\n\n>>>\n\n:\n:\nuWuBuWuBuWuB\n\t\n:\nu\n\n\n:\n\n\n```python\n>>>\nThis challenge extends the previous challenge\n\n```python\n", "\nUse Call-Based format\nuWuB\nUse Call-Based format\n:\nuWuB\n\n\n\n:\n\n\n:\n\n:\n\nUse Call-Based formatuWuB\n\n:uWuBWuBWuBWuBWuBWuB\n:\n:\n\n>>>\nRepeat a number of times\n\n``", "\nUse Call-Based format\nuWuBuWuBuBuB\n\n\t\nUse Call-Based format:\n>>> repeater(string, n)\n\n\n\n\t:\n\n\t:\n:uWuBuBuBuBuB\n::\n\n:\nUse Call-Based format\n:\n>>>\n\n```python\n>>>", "\nUse Call-Based format\nu\nUse Call-Based format\n:u\ndef repeater(string, n):\n\t\nUse Call-Based format\n\n:\n\n>>>\n\t\n:\n:u\n\n:\nu\n```python\n>>> repeater(string, n)\n\n\nUse Call-Based format\nThis challenge extends the previous\n\n>>>\n\n``", "\tUse Call-Based formatu\nUse Call-Based format\nUse Call-Based format:u\n>>>\n\t\nUse Call-Based format\n\t\n:\n>>>\n\t\n:\n:uWuB\n\n\nUse Call-Based format\n:\nUse Call-Based formatuWuB\n\n\n\n\n\n\n\n\nThis challenge extends the previous [repeater()", "\nUse Call-Based format\nUse Call-Based formatu\nUse Call-Based format\n:\nUse Call-Based formatu\n\n\n:\n\n>>>\n\n:\n:\n\nuWuB\n\n:\n\nUse Call-Based formatuWuBuBuBuBuBuBuB\n:\n\n:\n\n\n>>>\n\n\n``"], "prompt": "\nQUESTION:\nThis challenge extends the previous [repeater()](https://www.codewars.com/kata/thinkful-string-drills-repeater) challenge. Just like last time, your job is to write a function that accepts a string and a number as arguments. This time, however, you should format the string you return like this:\n```python\n>>> repeater('yo', 3)\n'\"yo\" repeated 3 times is: \"yoyoyo\"'\n>>> repeater('WuB', 6)\n'\"WuB\" repeated 6 times is: \"WuBWuBWuBWuBWuBWuB\"'\n```\ndef repeater(string, n):\n\t\nUse Call-Based format\nANSWER:\n"}}