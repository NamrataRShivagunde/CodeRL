{"1625": {"code": ["\n\"c2\"\n```\n\n\n\n\n\n\n\"kata\"\n```\n\n\n\n\n\"b\"\n```\n\n.\",\n.\",\n\n\n\",\n```\n\",\".\",\n```\n\n\n\",\"g\"],\n```\n\n\n\n\n\",\",\".\"]\n\n.\",\".\",\".\"\n\n\",\"g\",\"", "\n\n\n\"b\"\n```\n\n\"c\"\n```\n\n\n\n\"c\"\n```\n\n\n\n\n\n.\",\".\",\".\"]\n```\n\n\n\n\n\n\",\".\"]\n\n\n\n\",\"g5\"]\n\n\n\n\n\",\",\".\"]\n```\n.\",\".\",\".\"]\n\n\",\"g5\",\"h", "        \n\n\n\n\n\"c3\"\n```\n\n\"c4\"\n```\n\n\n\n\"c4\"\n```\n\"c5\"\n```\n\n.\",\".\"]\n```\n\n\n\n\",\n\n\n\",\"h5\"]\n\n\n\n\n\n.\"]\n```\n.\",\".\",\".\"]\n\n\",\".\"", "    \n```\n\n\n\n\"c4\"\n```\n\n\n\n\"c3\"\n```\n\n\n\n\n\"bxc3\"\n```\n\n\n.\",\n]\n\n\n\n\",\"f\",\"g\",\"h\"]\n\n\n\",\"g\",\"h\"]\n  \n\n\n\n\",\".\"]\n\n.\".\".\"]\n```\n\",\".\"", "    `\n\n\n```\n\"b\"\n```\n\n\n\n\"bxc2\"\n```\n\n\n\"c2\",\n\n\"c3\"\n```\n\n\n\n\n\n    \n\",\"\n\n\",\"g5\",\"h5\"]\n```\n\n\n\n.\",\".\",\".\"]\n\n.\",\".\"]\n\n\",\"g5\",\"", "\n\n\n\"c1\",\n```\n\"c2\",\n```\n\n\n\n\n\"c2\"\n```\n\n\n\n\"c3\"\n```\n\n\",\n```\n\n\n  \n\",\"b\",\"c\"\n```\n\n\n\",\"g\"\n```\n\n\n\n,\".\"],\n\n.\",\n\n\",\"g5\",\"", "\n\n\n\n\n\n\n\"bxc3\"\n```\n\n\"b\"\n```\n\n\n\n\n\n.\",\".\",\".\",\".\",\".\"]\n```\n\n\"b\"\n```\n\n\n  \n\",  \n\n\n\",\"h5\"]\n  \n\n\n\n\n\n.\",\".\"]\n.\"\n\n\",\"g5\",\"h5", "\n\n\n\"b\"\n```\n\n\n\"bxc3\"\n```\n\n\n\"a\"\n```\n\"a\"\n```\n\n\n\n\n.\",\".\",\".\",\".\",\".\"]\n  \n\n\n\n\n\",\n\n\n\",\"h5\"]\n\n\n\n\",\",\".\"]\n\n.\",\".\",\".\"\n\n\",\".\"", "  \n\n\n\n\n\n\n\"bxcb\"\n```\n\n\n\"bxcb\"\n```\n\n\"b\"\n```\n\n\"b\"\n```\n.\",\".\",\".\"]\n\n\n\n\",\"\"]\n\n\n\n\",\"h\"\n\n\n\n\n.\",\"\"]\n\n.\",\"\"]\n.\",\n\",\"f", "\n\n\n\"b\"\n```\n\"c\"\n```\n\n\n\n\n\n\n\n\n.\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\n.\",\".\",\".\",\".\",\".\",\".\",.\",\".\"]\n\n\n\n\n\n\n\",\n\n\n\n\n\n.\",\n    \n.\",\n\n\n\",\"f5", "    \"b\"\n```\n\n\n\n\"bxc3\"\n```\n\n\n\n\n\"a3\"\n```\n\n\"b3\"\n```\n\n.\",\".\",\".\",\".\"]\n\n\n\n\n\n\",\"\"]\n  \n\n\n\",\"\"]\n\n\n\n\",\",\".\"]\n\n.\",\".\"\n\",\"f5\",\"", "\n\n\n\"a\"\n```\n\"b\"\n```\n\n\n\n\n\n\n\"bx\"\n```\n\n[\"c\"\n```\n\"b\"\n```\n\n\n\n\n\n\",\"\n\n\",\"g5\"]\n```\n\n\n\n,\"b3\"]\n\n\n.\",\".\",\".\",\".\"]\n\n  \",\".\"", "\n\n\n\"b\"\n```\n\"c\"\n```\n\n\n\n\n\n\n\n\n\n.\",\".\",\".\",\".\",\".\"]\n```\n\n\n\"bxc2\"\n```\n\n\n\n\",\".\",\".\",\".\"]\n  \n\n\n\",\"f5\"]\n  \n\n\n\n\",\",\".\",\",\".\"]\n\n\",\".\"", "\n\n\n\n\n\n\n\"bx\"\n```\n\n\"a\"\n```\n\n\"b\"\n```\n\n\n\n\n.\",\".\",\".\",\".\"]\n```\n\n\n\n\n\n\",\".\",\".\",\".\"]\n\n\n\n\",\"g\"]\n\n\n\n,\".\"]\n\n.\".\",\n\n\",\"g5\",\"h", "\n```\n\"c5\"\n```\n\n\n\n\n\n\n\"c4\"\n```\n\n\n\"b\"\n```\n\n\"c2\"\n```\n\n.\",\".\"]\n\n\n\n\n\", \"c2\",\"c3\"\n\n\n\n\",\"h5\"]\n\n\n\n\n.\",\".\"]\n\n\n  \n\",\"f", "      \",\"\"])\n  \n\n\n\n\"b\"\n```\n\n\n\"c1\"\n```\n\n\n\n\n\n\"c1\"\n```\n.\",\".\",\".\",\".\",\".\",\".\"]\n```\n\n\n\n\n\n\n\n\",\"h5\"]\n  \n\n\n\n\",\",\".\"]\n\n\n\",\"g5\",\"h", "  \n\n---\n\n\n\n\n\n\n\"b\"\n```\n\"c\"\n```\n\n\n\n\"kata\"\n```\n\n.\",\".\",\".\"]\n\n\n\n\n  \n\",\".\"]\n  \n\n```\n\n\",\".\"]\n  \n\n\n\n\",\",\".\"]\n  \n\n\n\",\"g5\",\"h5", "\n```\n\n\n\n\n\n\n\"b\"\n```\n\n\"c\"\n```\n\n\n\"bxc3\"\n```\n\n\n.\",\".\",\".\",\".\"]\n\n\n\n\n\",\"b\",\"c\",\"b\",\"c\",\"c\"]\n\n\n\",\"g\",\"h\"]\n\n\n\n,\",\".\",\".\"]\n\n\",\"g\",\"", "\n\n\n\n\n\"kata\"\n```\n\n\n\"c1c1c1c1c1c1\"\n```\n\n\n\n\n.\",\".\",\".\",\".\",\".\"]\n\n\n\n\n\n\",\".\",\".\"]\n\n\n\n\",\"f5\"]\n\n\n\n\n,\".\"]\n\n.\",\".\"]\n\n\n\",\"f", "```\n\n\"c2\"\n```\n\n\n\n\n\"c4\"\n```\n\n\n\n[\"c3\"]\n```\n\n.\",\".\",\".\",\".\",\".\",\".\"]\n```\n\n\n\n\n\", \"c5\"]\n\n\n\",\"h5\"]\n\n\n\n\n\",\",\".\"]\n\n\n\n\",\"g5\",\""], "prompt": "\nQUESTION:\nA chess board is normally played with 16 pawns and 16 other pieces, for this kata a variant will be played with only the pawns.  All other pieces will not be on the board.  \nFor information on how pawns move, refer [here](http://www.chesscorner.com/tutorial/basic/pawn/pawn.htm)\n  \n  \nWrite a function that can turn a list of pawn moves into a visual representation of the resulting board.  \nA chess move will be represented by a string,\n```\n\"c3\"\n```\nThis move represents a pawn moving to `c3`.  If it was white to move, the move would represent a pawn from `c2` moving to `c3`.  If it was black to move, a pawn would move from `c4` to `c3`, because black moves in the other direction.  \nThe first move in the list and every other move will be for white's pieces.\n  \nThe letter represents the column, while the number represents the row of the square where the piece is moving  \n    \nCaptures are represented differently from normal moves:\n\n```\n\"bxc3\"\n```\nrepresents a pawn on the column represented by 'b' (the second column) capturing a pawn on `c3`.\n\nFor the sake of this kata a chess board will be represented by a list like this one:  \n```\n[[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"p\",\"p\",\"p\",\"p\",\"p\",\"p\",\"p\",\"p\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"P\",\"P\",\"P\",\"P\",\"P\",\"P\",\"P\",\"P\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\n```\nHere is an example of the board with the squares labeled:\n```\n[[\"a8\",\"b8\",\"c8\",\"d8\",\"e8\",\"f8\",\"g8\",\"h8\"],\n [\"a7\",\"b7\",\"c7\",\"d7\",\"e7\",\"f7\",\"g7\",\"h7\"],\n [\"a6\",\"b6\",\"c6\",\"d6\",\"e6\",\"f6\",\"g6\",\"h6\"],\n [\"a5\",\"b5\",\"c5\",\"d5\",\"e5\",\"f5\",\"g5\",\"h5\"],\n [\"a4\",\"b4\",\"c4\",\"d4\",\"e4\",\"f4\",\"g4\",\"h4\"],\n [\"a3\",\"b3\",\"c3\",\"d3\",\"e3\",\"f3\",\"g3\",\"h3\"],\n [\"a2\",\"b2\",\"c2\",\"d2\",\"e2\",\"f2\",\"g2\",\"h2\"],\n [\"a1\",\"b1\",\"c1\",\"d1\",\"e1\",\"f1\",\"g1\",\"h1\"]]\n```\nWhite pawns are represented by capital `'P'` while black pawns are lowercase `'p'`.  \n  \n      \nA few examples\n```\nIf the list/array of moves is: [\"c3\"]\n>>>\n[[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"p\",\"p\",\"p\",\"p\",\"p\",\"p\",\"p\",\"p\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\"P\",\".\",\".\",\".\",\".\",\".\"],\n [\"P\",\"P\",\".\",\"P\",\"P\",\"P\",\"P\",\"P\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\n```\nadd a few more moves,\n```\nIf the list/array of moves is: [\"d4\", \"d5\", \"f3\", \"c6\", \"f4\"]\n>>>\n[[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"p\",\"p\",\".\",\".\",\"p\",\"p\",\"p\",\"p\"],\n [\".\",\".\",\"p\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\"P\",\".\",\"P\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"P\",\"P\",\"P\",\".\",\"P\",\".\",\"P\",\"P\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\n```\nnow to add a capture...\n```\nIf the list/array of moves is: [\"d4\", \"d5\", \"f3\", \"c6\", \"f4\", \"c5\", \"dxc5\"]\n>>>\n[[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"p\",\"p\",\".\",\".\",\"p\",\"p\",\"p\",\"p\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\"P\",\"p\",\".\",\".\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\"P\",\".\",\".\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n [\"P\",\"P\",\"P\",\".\",\"P\",\".\",\"P\",\"P\"],\n [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\n```\nIf an invalid move (a move is added that no pawn could perform, a capture where there is no piece, a move to a square where there is already a piece, etc.) is found in the list of moves, return '(move) is invalid'.\n```python\nIf the list/array of moves is: [\"e6\"]\n>>>\n\"e6 is invalid\"\n```\n\n```python\nIf the list/array of moves is: [\"e4\", \"d5\", \"exf5\"]\n>>>\n\"exf5 is invalid\"\n```\nThe list passed to `pawn_move_tracker / PawnMoveTracker.movePawns` will always be a list of strings in the form (regex pattern): `[a-h][1-8]` or `[a-h]x[a-h][1-8]`.  \n\nNotes:\n\n* In the case of a capture, the first lowercase letter will always be adjacent to the second in the alphabet, a move like `axc5` will never be passed.\n* A pawn can move two spaces on its first move\n* There are no cases with the 'en-passant' rule.\ndef pawn_move_tracker(moves):\n\t\nUse Call-Based format\nANSWER:\n"}}