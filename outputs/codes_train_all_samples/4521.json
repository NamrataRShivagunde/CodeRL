{"4521": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nnumberOfSteps(steps, m):\n\nUse Call-Based format\n\n```python\n\nnumberOfSteps(steps, m):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(10,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nif the number of moves is less than the minimum number of moves:\n\nnumberOfSteps(N, m):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(steps, m):\n\n# Returns", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nVasya can climb up a stair of 10 or 50 steps.\n\n### Examples\n\nnumberOfSteps:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVasya can\n\n\n\n### Example\n\n\n# Number", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nnumberOfSteps(n, m):\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(steps, m):\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(m)\n\nUse Call-Based format\n\n\n\n\n```python\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\nnumberOfSteps(", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nnumberOfSteps(m):\n\n\n\n\n\n\n\n\n\n\n```python\nnumberOfSteps()\n\n\n\n\n\n\n\nnumberOfSteps(steps, m", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nif the number of steps is less than the number of stairs it is considered.\n\n### Example:\n\nnumberOfSteps()\n\nNumber of steps\n\n1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(steps,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nnumberOfSteps(N, m):\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(m, n):\n\t\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(m):\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nnumberOfSteps(n, m):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(steps, m):\n\n1", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nnumberOfSteps()\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nnumberOfSteps(steps, m):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# The `numberOfSteps", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nnumberOfSteps:\n\nnumberOfSteps(m, n) =>\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(m, n):\n\n\n\n\n\n\n\n\n\n\n\n\nVasya climb up a stair\n\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nnumberOfSteps(n, m):\n\nUse Call-Based format\n\nUse Call-Based format\n\n```python\nnumberOfSteps(n, m):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(steps, m):\n\n\nnumberOfSteps", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nnumberOfSteps\n1. Number of stairs\n2. Number of moves\n3. Number of stairs\n4. Number of moves\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Number of moves\n\n1.", "\nUse Call-Based format\n\n\n\n\n\nnumberOfSteps\n\n1. Number of moves to the top of a stair\n2. Number of moves to the top of a stair\n3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVasya can only climb up a stair of N\n\n\n\n\n#", "\nUse Call-Based format\n\n\n\n\n\nnumberOfSteps(steps, m):\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(10, 2) => 6\nnumberOfSteps(10, 2) => 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps", "\nUse Call-Based format\n\n\n\n\n\n\n\nnumberOfSteps(steps, m):\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n```python\nnumberOfSteps(10, m):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumberOfSteps(10, 2)", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n```python\nnumberOfSteps(N, M)\n\nUse Call-Based format\n\n### Example\n\nnumberOfSteps(N, M)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n1. Vasya wants to climb up a stair of 10 steps at each move.\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example\n\nnumberOfSteps(10, 2)\n\n\n\n\n\n\nnumberOfSteps(10, 2", "\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nnumberOfSteps(10, 2)\n\n\nnumberOfSteps(", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n    Use Call-Based format\n\n```python\nnumberOfSteps(steps, m):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVasya is not implemented yet\n\n\n\n\n\n```"], "prompt": "\nQUESTION:\nVasya wants to climb up a stair of certain amount of steps (Input parameter 1). There are 2 simple rules that he has to stick to.\n\n1. Vasya can climb 1 or 2 steps at each move.\n2. Vasya wants the number of moves to be a multiple of a certain integer. (Input parameter 2).\n\n### Task:\nWhat is the `MINIMAL` number of moves making him climb to the top of the stairs that satisfies his conditions?\n\n### Input\n\n1. Number of stairs:    `0 <  N  \u2264 10000` ;\n2. Integer to be multiplied : `1 < M \u2264 10 `;\n\n### Output\n\n1. Return a single integer - the minimal number of moves being a multiple of M;\n2. If there is no way he can climb satisfying condition return\u2009-\u20091 instead. (`Nothing` in Haskell)\n\n### Examples\n\n```python\nnumberOfSteps(10, 2) => 6  # Sequence of steps : {2, 2, 2, 2, 1, 1}\n\nnumberOfSteps(3, 5) => -1 # !Possible sequences of steps : {2, 1}, {1, 2}, {1, 1, 1}\n```\n``` haskell\nnumberOfSteps 10 2 == Just 6  -- Sequence of steps : {2, 2, 2, 2, 1, 1}\nnumberOfSteps  3 5 == Nothing -- Not possible, since the sequences of steps would be {2, 1}, {1, 2} or {1, 1, 1}\n```\ndef numberOfSteps(steps, m):\n\t\nUse Call-Based format\nANSWER:\n"}}