{"1638": {"code": ["\n\n\n\n\n# Two cases\n\nInput: \"\"\nOutput: \"\"\n\n### Simple Cases\n\nInput: \"\"\nOutput: \"\"\n\n### Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Further Tests\n\n\n\n\n\n# Two cases\n\n", "\n\n### Problem\n\n# Longest Palindromic Substring\n\n\n\n\n\n\n\n### Problem Description\n\n\n\n\n\n\n\n\n# Longest Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n\n### Problem Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Functions\n\n\n\n# T", "\n\n\n# Longest Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n\n### Linear Tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Suggestions\n\nInput: \"\"\nOutput: \"\"\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n### Preparation\n\nInput: \"\"\nOutput: \"\"\n\n### References\n\nInput: \"\"\nOutput: \"\"\n\n### Trap\n\n\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Exploration\n\n\n\n\n## Exploration\n\n\nInput", "\n\n\n\n\n#\n\n\n\n#\n\n# Lots of test cases\n\nInput: \"\"\nOutput: \"\"\n\n### Prime\n\n\n### Prime\n\n\n\n\n\n\n\n\n\n\n\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Problems\n\n##\n\n# The", "\n\n\n# Basic Tests\n\nInput: \"\"\nOutput: \"\"\n\n### Edge Cases\n\nInput: \"\"\nOutput: \"\"\n\n### Edge Cases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\n# A Palindromic Substring\n\n\n#", "\n\n\n\n\n\n\n## Simple\n\n\n# Longest Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n\n### Basic Cases\n\nInput: \"\"\nOutput: \"\"\n```\n\n\n\n### Edge Cases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Similar to the above", "\n\n\n\n\n\n\n\n### Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n\n### Edge Cases\n\nInput: \"\"\nOutput: \"\"\n\n### Basic Cases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Longest Palindromic Sub", "\n\n\n\n\n# Longest Palindromic Substring\n\n### Testing\n\nInput: \"\"\nOutput: \"\"\n\n### Fuzzing\n\n\n\n\n\n\n\n## References\n\n#\n\n\n\n\n\n##\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The longest palindromic", "\n\n## Simple Tests\n\nInput: \"\"\nOutput: \"\"\n\n### Kata\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The London\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Linear Tests\n\nInput: \"\"\nOutput: \"\"\n\n\n\n\n\n", "\n\n\n#\n\n### Simple Tests\n\nInput: \"\"\nOutput: \"\"\n\n### Call-Based format\n\n\n\n\n\n\n### Independent Tests\n\n`\n\n\n\n\n\n\n\n\n### References\n\nInput: \"\"\nOutput: \"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n", "\n\n\n\n\n# Simple test\n\nInput: \"a\"\nOutput: \"a\"\n\n-----\n\n\n\n\n\n## Basic Tests\n\nInput: \"\"\nOutput: \"\"\n\n### Edge Cases\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# longest palindromic\n", "\n\n\n\n\n\n## Quantities\n\nInput: \"\"\nOutput: \"\"\n\n## Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n# Longest Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n# Longest P", "\n\n\n\n\n\n\n## Example\n\n# Longest Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n\n## Examples\n\n### Basic Tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n# Longest Palindromic Substring\n\n\n\n\n\n\n\n# Long", "\n\n\n\n\n### Construction\n\nInput: \"\"\nOutput: \"\"\n```\n\n\n\n\n\n\n\n\n\n\n\n# Longest Palindromic Substring\n\nInput: \"\"\nOutput: \"\"\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Palindromic\n\n\n\n\n\n\n\n# Long", "\n\n\n\n### Leading\n\nInput: \"\"\nOutput: \"\"\n\n### Leading\n\nInput: \"\"\nOutput: \"\"\n\n### Leading\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Palindromic\n\n\n", "\n\n\n\n\n### Example\n\nInput: \"a\"\nOutput: \"b\"\n\n### Examples\n\nInput: \"\"\nOutput: \"\"\n\n### Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# This is the function that actually returns the", "\n\n\n\n\n\n\n\n\n# Tests\n\nInput: \"a\"\nOutput: \"a\"\n```\n\n\n\n\n\n\n# Testing\n\nInput: \"\"\nOutput: \"\"\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n\n# Longest Palindromic Substring", "\n\n\n\n### Luke\n\nInput: \"\"\nOutput: \"\"\n\n### Call-Based\n\nOutput: \"\"\n\n### Luke\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Longest P", "\n\n\n# Basic Tests\n\nInput: \"\"\nOutput: \"\"\n\n### Edge Cases\n\nInput: \"\"\nOutput: \"\"\n\n### Edge Cases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# This is a very naive implementation\n# The same"], "prompt": "\nQUESTION:\n# Longest Palindromic Substring (Linear)\n\nA palindrome is a word, phrase, or sequence that reads the same backward as forward, e.g.,\n'madam' or 'racecar'. Even the letter 'x' is considered a palindrome. \n\nFor this Kata, you are given a string ```s```. Write a function that returns the longest _contiguous_ palindromic substring in ```s``` (it could be the entire string). In the event that there are multiple longest palindromic substrings, return the first to occur.\n\nI'm not trying to trick you here:\n- You can assume that all inputs are valid strings.\n- Only the letters a-z will be used, all lowercase (your solution should, in theory, extend to more than just the letters a-z though). \n\n**NOTE:** Quadratic asymptotic complexity _(O(N^2))_ or above will __NOT__ work here.\n\n-----\n\n## Examples\n\n### Basic Tests\n\n```\nInput: \"babad\"\nOutput: \"bab\"\n(Note: \"bab\" occurs before \"aba\")\n```\n```\nInput: \"abababa\"\nOutput: \"abababa\"\n```\n```\nInput: \"cbbd\"\nOutput: \"bb\"\n```\n\n### Edge Cases\n\n```\nInput: \"ab\"\nOutput: \"a\"\n```\n```\nInput: \"\"\nOutput: \"\"\n```\n-----\n\n## Testing\n\nAlong with the example tests given:\n\n - There are **500** tests using strings of length in range [1 - 1,000]\n - There are **50** tests using strings of length in range [1,000 - 10,000]\n - There are **5** tests using strings of length in range [10,000 - 100,000]\n \nAll test cases can be passed within 10 seconds, but non-linear solutions will time out every time. _Linear performance is essential_. \n\n## Good Luck!\n\n-----\n\nThis problem was inspired by [this](https://leetcode.com/problems/longest-palindromic-substring/) challenge on LeetCode. Except this is the performance version :^)\ndef longest_palindrome(s):\n\t\nUse Call-Based format\nANSWER:\n"}}