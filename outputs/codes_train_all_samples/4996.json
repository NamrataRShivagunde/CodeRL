{"4996": {"code": ["##\n##\n\n\n\n##\n\n##\n\n\n#  Example\n##\n\n## **Use Cases**\n\nInput: \n\n```pythonpythonfibs_fizz_buzz(5)```\n\nInput: \n\n```pythonpython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##", "## **Usage-Based format**\n## **Usage-Based format**\n\n\n\n\n##\n\n##\n\n\n\n\n\n\n\n## **Examples**\n\n\n## **Instructions**\n\nUse Call-Based format\n\n\n\n\n\n\n#\n\n\n\n\n:\n\n\n\n\n## **Examples**\n\n\n[1]\n\n##\n\n\n", "\n\n## Use Call-Based format\n\n\n\n\n\n\n\n## **Usage**\n\n\n\n\n\n\n\n\n## **Instructions**\n\nUse Call-Based format\n\n## **Instructions**\n\n\n\n[1, 1, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Instructions**\n\n\n\n\n## **Instructions", "## **Use Call-Based format**\n## **Use Call-Based format**\n\n\n\n## **Use Call-Based format**\n:\n\n\n\n## **Instructions**\n\n## **Instructions**\n\n\n\n\n## **Instructions**\n\n## **Instructions**\n\n\n\n:\n\n\n\n\n:\n## **Instructions**\n\n\n\n\n## **Instructions**", "##\n##\n\n\n\n\n\nUse Call-Based format\n##\n\n##\n\n\n\n\n## **Examples**\n\nInput: \n\n```pythonfibs_fizz_buzz(n)```\n\n\n\n##\n\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n##\n\n\n\n\n## **Instructions**\n\n", "\n\n\n## **Help**##\n\n\n\n\n\n\n\n\n## **Example**\n\n\n\n\n## **Return**\n\n\n\n## **Examples**\n\n\n## **Instructions**\n\n\n\n[1, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Examples**\n\n\n\n\n\n\n\n##", "####\n\n\n\n##\n##\n\n\n\n## **Examples**\n\nInput: \n\n```pythonfibs_fizz_buzz(5)```\n\nOutput: \n\n[1, 1]\n\n## **Instructions**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##\n\n\n\n## **", ":\n## **Call-Based format**\n:\n\n\n\n\n:\n:\n\n\n\n\n\n\n\n## **Instructions**\n\n\n## **Instructions**\n\n\n\n[1,1]\n\n\n\n\n\n:\n\n\n\n:\n\n\n\n##\n\n\n## **Instructions**\n\n:\n\n## **Instructions**\n\n\n\n\n", "##\nUse Call-Based format\n##\n\n\n\n\n##\n\n##\n\n\n\n\n[1, 2, 3, 5, 1, 2]\n\n###\n\n\n## **Examples**\n\n##\n\n\n\n\n\n\n\n#\n\n\n\n\n:\n\n\n\n\n\n## **Output**\n\n\n\n\n\n## **Instructions**\n", "\n## **Note**\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n## **Help**\n\n\n\n\n## **Examples**\n\n\n\n\n## **Usage**\n\n\n\n## **Instructions**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Instructions**\n", "##\nUse Call-Based format\n##\n\n\n\n\n##\n\n:\n\n\n\n\n\n\n\n\n## **Examples**\n\nUse Call-Based format\n##\n\n\n\n[1]\n~~~~\n\n\n\n\n##\n\n\n\n\n\n:\n\n\n\n\n\n## **Example**\n\n\n##Instructions**\n\n\n\n\n\n##", "\n## **Call-Based format**\n\n## **Examples**\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Instructions**\n\n\n\n## **Instructions**\n\n\n\n\n\n## **Instructions**\n\n\n## **Instructions**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Returns**\n\n##\n\n\n\n\n", "## **Usage**\n## **Usage-Based format\n\n\n:\n## **Example**\n\n:\n\n\n\n\n\n## **Use Cases**\n\nInput: \n\n```pythonpythonfibs_fizz_buzz```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Examples**\n\n\n##\n\n\n\n\n##", "##\n\nUse Call-Based format\n##\n\n\n\n\n##\n\n:\n\n## **Use Call-Based format\n\n\n\n\n\n\n\n\n## **Examples**\n\n##\n\n\n\n\n\n##\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n## **Returns**\n\n\n\n\n\n\n## **Instructions**\n\n", "##\nUse Call-Based format\n##\n\n\n\n##\n\n##\n\n\n\nInput: \n\n```pythonfibs_fizz_buzz```\n\nOutput: \n\n[1]\n~~~~\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Examples**\n\n\n\n\n\n", ":\n:\n\n\n\n:\n\n## **Usage**\n\n:\n\n## **Usage-Based format\n\n\n\n\n\n\n\n## **Instructions**\n\n\n## **Returns**\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n## **Details**\n\n\n\n\n\n\n\n\n\n\n## **Instructions**\n", "\n## Call-Based format\n\n# Performance:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Instructions**\n\n\n\n## **Instructions**\n\n\n\n[1]\n~~~~\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Examples**\n\n\n##\n\n\n\n\n\n## **Instructions", "##\nUse Call-Based format\n##\n\nUse Call-Based format\n\n\n##\n\n:\n\n\n\n\n\n## **Instructions**\n\n## **Instructions**\n\n\n\n[1,1,2,3,5]\n~~~~\n\n\n\n##\n\n\n\n\n\n:\n\n\n\n\n\n\n##\n\n\n\n\n## **Instructions**", "\n\n\n\n\n## Example:\n\n# 1.)\n# 2.)\n# 3.)\n# 4.)\n# 5.)\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## **Instructions**\n\n\n\n\n\n\n\n\n## **Instructions**\n\n\n\n\n\n\n## **", ":\n## **Usage**\n\nUse Call-Based format\n:\n\n\n\n:\n\n:\n\n\n\n\n\n## **Examples**\n\nUse Call-Based format\n:\n\n\n\n\n\n\n## **Instructions**\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n## **Examples**\n\n\n##\n\n\n\n\n\n##"], "prompt": "\nQUESTION:\n## **Instructions**\n\nThe goal of this kata is two-fold:\n\n1.) You must produce a fibonacci sequence in the form of an array, containing a number of items equal to the input provided.\n  \n2.) You must replace all numbers in the sequence `divisible by 3` with `Fizz`, those `divisible by 5` with `Buzz`, and those `divisible by both 3 and 5` with `FizzBuzz`.\n\nFor the sake of this kata, you can assume all input will be a positive integer.\n\n## **Use Cases**\n\nReturn output must be in the form of an array, with the numbers as integers and the replaced numbers (fizzbuzz) as strings.\n\n## **Examples**\n\nInput: \n\n```python\nfibs_fizz_buzz(5)\n```\nOutput:\n~~~~\n[ 1, 1, 2, 'Fizz', 'Buzz' ]\n~~~~\n\nInput:\n\n```python\nfibs_fizz_buzz(1)\n```\nOutput:\n~~~~\n[1]\n~~~~\n\nInput:\n\n```python\nfibs_fizz_buzz(20)\n```\nOutput:\n~~~~\n[1,1,2,\"Fizz\",\"Buzz\",8,13,\"Fizz\",34,\"Buzz\",89,\"Fizz\",233,377,\"Buzz\",\"Fizz\",1597,2584,4181,\"FizzBuzz\"]\n~~~~\n\n##Good Luck!##\ndef fibs_fizz_buzz(n):\n\t\nUse Call-Based format\nANSWER:\n"}}