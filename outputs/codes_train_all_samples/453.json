{"453": {"code": ["\n\n\n\n\n\n\nInput: m\nInput: n\nInput: target\nOutput: -1\n\nExample:\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\nThere are\u00a0m\u00a0houses of this way [m,n].\n\n\nOutput: -", "\n\n\n\n\n\n\n\n\n\n\nInput: houses\n\nExplanation:\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\n2,2,3,1,3,2,3,3,2,3,3,3,3,3,3,3,3,3\n\n\n\n\n\n\n\nOutput", "\u00a0\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\u00a0m\u00a0m\u00a0n\u00a0n\u00a0colors, which are labeled with the same color.\n\n\n\n\nOutput: 10\n\nExplanation:\nThe number of target\u00a0targets\n\n\n\nExample 4:\n", "\n\n\n\n\n\n\nOutput: 9\nExplanation:\nThis array contains cost of painting all houses in this way.\n\nExplanation:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 9\nExplanation:\nIf all houses are painted, return 0.\n\nExample 4:\n\n\nOutput", "\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nThe number of target\u00a0centre\u00a0k\u00a0m\u00a0k\u00a0k\u00a0k\u00a0k\u00a0k\u00a0\u00a0k\u00a0\n\n\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n\nOutput: 0\n\nExplanation:\n\n\nOutput:", "\u00a0\n\n\n\n\n\nInput: houses\n\nInput: cost\nOutput: 10\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\nInput: houses = [[0,2,2,2,1,2,1], [3,2,3,2,1], [", "\n\n\n\n\n\n\nInput: houses\nInput: cost\nExplanation:\nThe number of target\u00a0neighborhoods can be specified for each house.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\nExplanation:\nIf target = 0,\nExplanation:\n\n\nhouses[0][0", "\u00a0\n\n\n\n\n\nInput: cost\nOutput: 9\n\nExplanation:\nThere are a single column of cost.\n\n\n\n\nExample 1:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\nExplanation:\nThere is no houses in this city.\n\nExample 4:\n\n\n\n\nExample 5:", "\n\n\n\n\n\n\n\n\n\n\nInput: houses\nInput: cost\nExplanation:\n\n\n\n\n\n\n\n\n\n\u00a0, n = 1, target = 3\n\nOutput: -1\n\nExplanation:\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\nThere is a row of m\u00a0m\u00a0hous", "\n\n\n\n\n\n\n\n\nInput: cost\nExplanation:\n\nOutput: -1\n\nExplanation:\n\nIf the number of target houses is less than the number of total colors.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\n\nOutput: -1\n\nOutput: -", "\n\n\n\n\n\n\n\n\nInput: houses, cost\nExplanation:\nCost of paint all houses.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\nInput: houses = [[0,0,0,0,0], [1,10], [1,10], [1,10],", "\n\n\n\n\n\n\nOutput: 9\nExplanation:\nThere is a cost of painting the houses of this way.\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\nExplanation:\nThere is a row of m\u00a0m\u00a0houses.\n\nCost:", "\n\n\n\n\n\n\nOutput: 0\nExplanation:\nThere is an integer target.\n\nExplanation:\n\n\n\n\n\n\n\nOutput: 0\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\n\u00a0\nThis array contains cost of painting all houses in this way.\n\n\nOutput", "\n\n\n\n\n\n\n\nOutput: 0\nExplanation:\n\u00a0\n\n\n\n\n\n\n\nOutput: 0\nExplanation:\n\n\n\n\n\n\n\n\n\n1:\nOutput: 10\nExplanation: The minimum cost of paint all houses in this way (labeled from 1 to 2) = 9.\n\n\n\n\nOutput: 10\n", "\n\n\n\n\n\n\n\n\n\nExplanation:\n\nThe number of target\u00a0neighborhoods of the last house of each color of the houses in this matrix cost is 1.\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\n\nhouses = 1\n\n\nOutput: -1", "\n\n\n\n\n\n\n\n\nOutput: -1\nExplanation:\n\nThere is a row of m\u00a0houses in a small city.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\nThe array houses is a matrix cost and cost[i][j] = 0,\nhouses[i", "\n\n\n\n\nOutput:\n\n\n\n\n\n\n\nExplanation:\n\nInput: houses\n\nExplanation:\n\n\n\n\n\n\n\u00a0cost[i] = 0\n\n\n\n\n\n\n\n\nIf the cost of painting the house is not possible return -1.\n\nOutput: 10\n\n\n\n\n\n\n\nExample 4:", "\n\n\n\n\nExample:\n\n\n\nOutput: 11\n\nExplanation:\nThe cost of painting all houses in a small city.\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n\n\nOutput: 12\nExplanation:\n\n\n\nExample 5:\n\nInput: h", "\n\n\n\n\n\n\n\n\n\n\n\n\nInput:\n houses = [[1,2,3,4,5,1,2,2], [1,2,3,4]].\nInput:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 10\n\nExplanation:\n\n\nOutput: 11\n\n\nExample 4:", "\n\n\n\n\n\n\n\n\n\nInput: [0,2,1,2,3,4,3,4,3,4]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: -1\n\nExplanation:\nThere are\u00a0m\u00a0houses in a small city.\n\nExplanation:\n\ncost[0"], "prompt": "\nQUESTION:\nThere is\u00a0a row of\u00a0m\u00a0houses in a small city, each house must be painted with one of the\u00a0n\u00a0colors (labeled from 1 to n), some houses that has been painted last summer should not be painted again.\nA neighborhood is a maximal group of continuous houses that are painted with the same color. (For example: houses = [1,2,2,3,3,2,1,1] contains 5 neighborhoods\u00a0 [{1}, {2,2}, {3,3}, {2}, {1,1}]).\nGiven an array houses, an\u00a0m * n\u00a0matrix cost and\u00a0an integer target\u00a0where:\n\nhouses[i]:\u00a0is the color of the house i, 0 if the house is not painted yet.\ncost[i][j]: is the cost of paint the house i with the color j+1.\n\nReturn the minimum cost of painting all the\u00a0remaining houses in such a way that there are exactly target neighborhoods, if\u00a0not possible return -1.\n\u00a0\nExample 1:\nInput: houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\nOutput: 9\nExplanation: Paint houses of this way [1,2,2,1,1]\nThis array contains target = 3 neighborhoods, [{1}, {2,2}, {1,1}].\nCost of paint all houses (1 + 1 + 1 + 1 + 5) = 9.\n\nExample 2:\nInput: houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\nOutput: 11\nExplanation: Some houses are already painted, Paint the houses of this way [2,2,1,2,2]\nThis array contains target = 3 neighborhoods, [{2,2}, {1}, {2,2}]. \nCost of paint the first and last house (10 + 1) = 11.\n\nExample 3:\nInput: houses = [0,0,0,0,0], cost = [[1,10],[10,1],[1,10],[10,1],[1,10]], m = 5, n = 2, target = 5\nOutput: 5\n\nExample 4:\nInput: houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3\nOutput: -1\nExplanation: Houses are already painted with a total of 4 neighborhoods [{3},{1},{2},{3}] different of target = 3.\n\n\u00a0\nConstraints:\n\nm == houses.length == cost.length\nn == cost[i].length\n1 <= m <= 100\n1 <= n <= 20\n1 <= target\u00a0<= m\n0 <= houses[i]\u00a0<= n\n1 <= cost[i][j] <= 10^4\nclass Solution:\n    def minCost(self, houses: List[int], cost: List[List[int]], m: int, n: int, target: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}