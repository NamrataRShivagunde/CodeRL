{"375": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n3 has maximum difference 3\n\nNote:\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n10 has maximum difference 3\n\n\n    pass\n\n\n\nReturns:\n    maximumGap\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an unsorted array, find", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an unsorted array, find the maximum gap between successive elements in its sorted form.\nUse Call-Based format\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 has maximum difference 3\n2 has maximum difference 3\n\n\nGiven", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def maximumGap(self, nums: List[int]):\n      \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an unsorted array, find", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an unsorted array, find", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    maximumGap(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nmaximumGap:\n\n\nGiven an unsorted array", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n            10 has maximum gap 3\n            10 has maximum gap 0\n\n\n    pass\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven an unsorted array, find the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n10 has maximum gap 3\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n0 has maximum difference 2\n\n\n\nGiven an un", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    pass\n\n\n\n\nUse C-Based format3\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\nGiven an unsorted array, find the maximum difference\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n    maximumGap(self, nums: List[int]) -> int:\n\n\n    from numpy import sum\n\n\n\n\n\n\n\n\n\n\n\n\nThis method returns the maximum difference between successive elements\n\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n10\n\nReturns:\n    1\nExplanation: The array contains less than 2 elements.\n\nUse Call-Based format\n\nUse Solution-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an unsorted array, find", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n10 has maximum gap 3\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an unsorted array", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n10 has maximum gap 3.\n\n\n    pass\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    The maximumGap function is a linear function\n\n\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an unsorted array, find the maximum difference between successive elements\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an unsorted array,", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n10 has maximum difference 3\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nThe array contains less than 2 elements.\n\n\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n    [3,6,9,1]\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an unsorted array,", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an unsorted array,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n    pass\n\n\n    - Python 3.6.2\n\n\n\n\n\n\n\n\n\n\n\nUse Python 3.4.\nUse Python 3.5.4 format\n\n\n\nGiven an un", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def maximumGap(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an unsorted array, find"], "prompt": "\nQUESTION:\nGiven an unsorted array, find the maximum difference between the successive elements in its sorted form.\n\nReturn 0 if the array contains less than 2 elements.\n\nExample 1:\n\n\nInput: [3,6,9,1]\nOutput: 3\nExplanation: The sorted form of the array is [1,3,6,9], either\n\u00a0            (3,6) or (6,9) has the maximum difference 3.\n\nExample 2:\n\n\nInput: [10]\nOutput: 0\nExplanation: The array contains less than 2 elements, therefore return 0.\n\nNote:\n\n\n       You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.\n       Try to solve it in linear time/space.\nclass Solution:\n    def maximumGap(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}