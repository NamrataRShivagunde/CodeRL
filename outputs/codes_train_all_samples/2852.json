{"2852": {"code": ["\nUse Call-Based format>\nUse Call-Based format\n\n# Example:\n>Use Call-Based format\n\n\n\n:\n\n\n\n\n\n# Example:\n\n\n\n\n\n>\n\n\n\n\n\n\n\n\n>\n>\n>I just choose a kata to solve your own kata\n\n\n\n\n\n\n>\n> When no more", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n>\n\n\n\n\n\n>\n>\n\n>\n>\n\n\n\n\n\n\n\n# Example:\n>\n\n# Example:\n>\n\n>\n\n\n\n\n\n\n\n\n\n# Example:\n>\n\n>\n\n# Description", "\nUse Call-Based format\n\n\n\n\n>Use Call-Based format\n\n\n\n\n\n>Use Call-Based format\n>Use Call-Based format\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\n# Example:\n\n>I choose a new kata\n\n\n\n\n\n\n>I choose a new kata, to solve their", "\nUse Call-Based format>\n>Use Call-Based format\n\n# Author:\n>A jinxin2015 author\n\n\n\n# Author:\n>A jinxin2015 author\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n \n# Description:\n\n\n>A jinxin2015 k", "\n\n\n# Author:\n>Jinxin 2015\n>\n>\n>\n\n\n\n\n\n\n\n\n\n\n\n\n\n>\n>\n>\n\n\n\n\n\n\n# Example:\n>\n>\n>\n>\n\n# Example:\n>\n\n\n\n\n\n\n\n# Example:\n>\n\n \n# Examples:\n>\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n:\n>Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n>No more interesting kata can solve their own\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n>When no more interesting kata can be resolved, I just", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t# TODO\n\t\t\n\n\n\n\n\n\n\n# Example:\n>I am a kata solution to the new kata, I have to be able to solve your own kata\n\n\n\n\n\n\n\n\t\t>I have a kata solution to solve your own k", "\nUse Call-Based format\n\n\n\n\n\n\n\n# Example:\n\n\n\n>\n>\n>\n\n\n\n\n>\n>\n>\n\n\n>\n>\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n  I give the length of `str` with the longest substring in `st`\n\n\n\n>\n> When no more", "\n\n\n# Example:\n>\n>\n>\n>\n    Use Call-Based format\n\n# Description:\n>\n\n\n\n\n\n\n\n\n# Example:\n>\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n>\n>\n\n# Description:\n>\n\n\n\n\n\n\n\n\n# Example:\n>\n>", "\n\n\n\n\n\n\n# Example:\n>\n>\n>\n> Use Call-Based format\n\n# Description:\n>\n>\n>\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n>\n\n\n\n\n\nfindLongest(\"\") === 0\n\n\n>\n>\n> When no more", "\nUse Call-Based format\n\n\n\n\n>Use Call-Based format\n>Use Call-Based format\n>Use Call-Based format\n\n\n\n\n\n\n# Example:\n>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n>\n>\n\n# Example:\n>\n\n\n\n\n>\n> When no more interesting k", "\nUse Call-Based format\n\n\n\n\n>Use Call-Based format\n\n\n\n\n# Example:\n\n\n\n# Example:\n>Use Call-Based format\n>Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>\n\n\n\n# Example:\n\n>\n>\n> When no more interesting kata can be", "\nUse Call-Based format>\nUse Call-Based format\n\n\n\n:\n>Use Call-Based format\n>Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n# Examples:\n>\n>\n>\n>\n>\n\n\n\n\n\n>\n>\n> When no more interesting kata can solve your own", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n>I have no interesting kata to solve your own\n\n\n\n\n\n>I have no more interesting kata to solve your own\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n\n\n\n\n\n\n\n\n\n>I have no more interesting kata, I just choose", "\n\n\n\n\n\n\n# Example:\n>\n>\n>\n\n\n# Example:\n>\n>\n>\n\n\n\n# Example:\n>\n\n\n\n\n\n\n>\n\n\n\n\n\n>\n\n# Example:\n>\n\n\n\n# Example:\n\n\n\n\n\n\n>\n\n# Example:\n>\n>\n>", "\n\n\n\n\nUse Call-Based format\n\n>\nUse Call-Based format\n\n\n\n\n\n\n>\n\n\n>\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n>\n>\n\n\n\n>\n>\n\n>\n\n\n\n\n\n>\n\n\t> \n\t\n\t\n\n# Examples:\n>\n\t>", "\n\n\nUse Call-Based format\n\n\n:\n>Use Call-Based format\n# Example:\n>Use Call-Based format\n>Use Call-Based format\n\n# Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Purpose:\n>\n\n# Example:\n\n\n\n\n\n\n\n\n\n# Example:\n\n# Description", "\nUse Call-Based format>Use Call-Based format\n\n\n\n:\n>Use Call-Based format\n\n\n\n# Example:\n>\n\n\n\n>Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n# Description:\n>Find the longest substring in str\n\n\n\n>\n> When no", "\n\n\n\n\n>\n>\n>\n>\n\n\n# Author:\n>\n>\n>\n>\n\n\n\n\n\n\n# Input:\n\n\n\n\n\n\n>\n>\n\n\n\n\n>\n\n\n# Author:\n>\n>\n\n\n\n# Example:\n>\n\n\n\n\n\n\n\n\n>\n>\n>", "\n\n\n\nUse Call-Based format\n\n>Use Call-Based format\n>Use Call-Based format\n\n\n\n\n\n\n\n\n>Use Call-Based format\n>Use Call-Based format\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n# Example:\n \n# Description:\n\n\n# Example:\n \n>When no more"], "prompt": "\nQUESTION:\n>When no more interesting kata can be resolved, I just choose to create the new kata, to solve their own, to enjoy the process  --myjinxin2015 said\n\n# Description:\n Given a string `str` that contains some \"(\" or \")\". Your task is to find the longest substring in `str`(all brackets in the substring are closed). The result is the length of the longest substring.\n\n For example:\n ```\n str = \"()()(\"\n findLongest(str) === 4 \n \"()()\" is the longest substring\n ```\n \n# Note:\n - All inputs are valid.\n - If no such substring found, return 0.\n - Please pay attention to the performance of code. ;-)\n - In the performance test(100000 brackets str x 100 testcases), the time consuming of each test case should be within 35ms. This means, your code should run as fast as a rocket ;-) \n \n# Some Examples\n ```\n findLongest(\"()\") === 2\n findLongest(\"()(\") === 2\n findLongest(\"()()\") === 4\n findLongest(\"()()(\") === 4\n findLongest(\"(()())\") === 6\n findLongest(\"(()(())\") === 6\n findLongest(\"())(()))\") === 4\n findLongest(\"))((\") === 0\n findLongest(\"\") === 0\n ```\ndef find_longest(st):\n\t\nUse Call-Based format\nANSWER:\n"}}