{"129": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n\n\n\n   \n        pass\n\n\n\n\n\n\n\n - 1 - 2 = 6\n\n\n\n\n\n\n\n\n\n\nA[i] = 6\n\nThen A", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        return self.maxScoreSightseeingPair(A)\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n1 - 2\n\nExample 2:\n    Given", "\n\n\n\nUse Call-Based format\n\n\n\n\n       \n    pass\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        \n\nUse Call-Based format\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 - 6 = 11\n\n\n\nGiven an array A", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\nExample 2:\n\n\n\n\n   \n            \n\n\n\n\n\n\n\n\nA[i] = 6\n\n\n\n\nGiven an array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n   \n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n   :\n\n\n\n\n\n\n\n - 1 - 2 = 6\n\n\n\n\n\n\n\nGiven an array A of positive", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        pass\n\n\u00a0\nExample 2:\n\n    A = [8,1,5,2,2,1]\n\n\n\n    maxScoreSightseeingPair(self, A)\n\n\n\n\n\n\n\n\n\n\n6 + 1 - 6 = 11\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        pass\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        return 6\n\n\n\u00a0\nExample 2:\n:\n        \n\n                \n\n\n\n\n - 1\n\nExample 2:\n\nGiven", "\n\n\n\n\n\n\n\n\n   \n    return self.maxScoreSightseeingPair(A)\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        maxScoreSightseeingPair() -> int            \n\n\n\n\n\n\n\n\n1 - 2 = 6\n\n\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\u00a0\n\n\n    maxScoreSightseeingPair(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\nExample 2:\n\n            \n\n\n\n\n\n\n\n\n6 - 1 =\n\nGiven an array A", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n\nUse Call-Based format\n\nExample 2:\n:\n\n\n\n\n\n\n\n\n\n\n6 - 1 = 5\n\nExample 2:\nGiven", "\n\n\n\n\nUse Call-Based format\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\nExample 2:\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nA.sort()\n\n\n\n\nGiven an array A of", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    pass\n\n\u00a0\n\nExample 2:\n\nUse Call-Based format\n\n\n    def maxScoreSightseeingPair(self, A: List[int]):\n        \n\n                    \n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array A of positive integers", "\n\n\n\n\n\n\n\n\n       \n        return self.maxScoreSightseeingPair(A)\n        \n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n        pass\n\n\n\n\n\n\n - 6\n\n\n\nA = [8,6]\n\n\n\n\nGiven an array A", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n    def maxScore(self, A: List[int]) -> int:\n        return self.maxScoreSightseeingPair(A)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n6 - 1 =\n\nGiven an array A of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n    pass\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n        pass\n\n\n\n\n\n - 6 = 6\n\u00a0\n\n\n\n6 - 1 = 7 = 11\n\nExample 2:    Given", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n       \n        return self.maxScoreSightseeingPair(A)\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n - 1 - 2 = 6\n\u00a0\nExample 2:\n\n\n\n1 - 2 =\n\nGiven an array A of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n\n\n\n\n   \n        pass\n\n\nUse Call-Based format\n\n\n\n\n - 6 = 0\n\n\n\n\n\n\n\nGiven an array A of positive integers, A", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        return self.maxScoreSightseeingPair(A)\n        \n\nExample 2:\n\n\n\n\nUse Call-Based format\n1\n\u00a0\n\n\u00a0\n\n\nUse Call-Based format\n\n - 1\n\u00a0\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n   \n        pass\n\n\n\n\n\n\n - 6 = 6\n\n\nUse Call-Based format\n\n1 - 2 = 6\n\n\n\nGiven an array A", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\u00a0\n\n\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n       \n        pass\n        \n                \n\n\n\n\n - 6\n\n\n\n5 + 1 - 2 = 11\n\u00a0\n\n\nGiven an"], "prompt": "\nQUESTION:\nGiven an array A of positive integers, A[i] represents the value of the i-th sightseeing spot, and two\u00a0sightseeing spots i and j\u00a0have distance j - i\u00a0between them.\nThe score\u00a0of a pair (i < j) of sightseeing spots is (A[i] + A[j] + i\u00a0- j) : the sum of the values of the sightseeing spots, minus the distance between them.\nReturn the maximum score of a pair of sightseeing spots.\n\u00a0\nExample 1:\nInput: [8,1,5,2,6]\nOutput: 11\nExplanation: i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11\n\n\u00a0\nNote:\n\n2 <= A.length <= 50000\n1 <= A[i] <= 1000\nclass Solution:\n    def maxScoreSightseeingPair(self, A: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}