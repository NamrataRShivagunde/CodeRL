{"3916": {"code": ["\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\t\n\t\n\n\n\tMean vs median\n\t\nUse Call-Based format\n\t\n\n\n*'same' - in case both mean and median share the **same value**\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n* This method will take an", "\n\n\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\t\n\t\n\n\nmeanVsMedian()\n\n\n* 'other' - in case both **mean** and **other** are equal\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n---\n\nMean:\n*", "\n\n\n\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n---\n\n\n\"\"\"\n\n\n\n* 'none' - in case all values are equal to **none**\n* 'full' - in case both values are equal to **none**\n*\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n*\n* This method returns one", "\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\t\n\t\n\n  :math:`numbers` should be an odd-length array of numbers\n\n\n\n\n*\n*'same' - in case both mean and median share the **same value****\n\n\n\n\n\n\n\n\n\n\ndef\n\n\n\n* mean", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\t\n\n\n   'mean' vs'median'\n\n\n\n* 'none' - in case only one value is **not** **larger than** one value**\n\n\n\n\nVsMedian\n\n\n\n\n\n\ndef\n\n\n*", "\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\t\n\nMean vs median\n\n\n* 'none' - if the array contains no values\n\n\n\n\n\n\n\n\n\n\n\n*\n\n*\n\n\n\n* This method is intended to be used in conjunction with", "\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\t\n\n\n\t\n\t\n\n0.1.1.1\n\n\n*'same' - in case both mean and median are equal to the **same value**\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n* This method returns one of'mean' or '", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\t\t\n\n\ndef mean_vs_median(numbers):\n\t\n\n\t\n\n* 'diff' - in case both mean and median are different\n*'same' - in case both mean and median are different\n\n\n\n\n\n\n\n\n\ndef\n\n\n", "\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\t\n\n\n\n\n\t\n\t\n\n\n\t\n---\n\t\nMean vs median vs mean vs median\n\n\n*\n\n\n\n\n*\n*\n\n\n\n\n*\n* The number of integers in each array is not evenly spaced**\n\n\ndef\n\n\n", "\n\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\t\n\n\tmeanVsMedian(numbers)\n\t\nUse Call-Based format\n\n\n*'same' - in case both mean and median are equal to the **same value**\n\n\n\n\n\n\n\n\n\n\n\n\n\n* This method returns the *mean* or", "\n\n\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n*'same' - in case both mean and median are equal.\n.\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n**meanVsMedian**\n", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\t\n\n\n\n    [A]\n\t\nMean vs median\n\n\n\n* 'full' - in case both mean and median are **larger than** full value**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    A nice list of", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\t\n\t\n\n\n\n\n\n\t\n\t\n\n\n\t\nReturns the *mean* vs *median* value\n\n\n*\n*'same' - in case both mean and median share the **same value**\n\n\nVsMedian\n\n\n\n\n\n\n\n\n* If you did", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\tmeanVsMedian = meanVsMedian(numbers)\n\t\n\n*'max' - in case more than one number of values are larger than **max** value**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    * meanVs", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\t\n\t\n\n\n\n\n\tMean vs median vs mean\n\n\n*\n*'same' - in case both mean and median share the **same value**\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\nA MAD:\n\n* The *", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\t\n\t\n\n\n\n\t\tMean vs median\n\t\n\t\n\n\n*'same' - in case both mean and median share the **same value**\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n* This example shows you an array", "\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\t\t\n\n\nThe following numbers are valid:\n\n* numbers\n\n\n*'same' - in case both mean and median share the **same value**\n\n\n\n\n\n\n\n\n\n\n\n\n\n* This method is called **mean", "\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\t\n\n\t\n\n\n    number = numbers\n\t\n\n\n\n\n\n\n* **meanVsMedian** is a method for **meanVsMedian**\n\n\n\n\n*\n\n\ndef\n\n\n\n* **meanVsMedian", "\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\t\n\n``meanVsMedian``\n\n\n*\n*'same' - in case both mean and median share the **same value**\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n   .. code-block:: python\n", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\t\n\n\n\n\n\n\t\n\t\n\n\n+\n\n*'same' - in case both **same** value and **same** value are equal to the **same value**\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n* The following is the same as [:\n"], "prompt": "\nQUESTION:\nYour goal is to implement the method **meanVsMedian** which accepts an *odd-length* array of integers and returns one of the following:\n\n* 'mean' - in case **mean** value is **larger than** median value\n* 'median' - in case **median** value is **larger than** mean value\n* 'same' - in case both mean and median share the **same value**\n\nReminder: [Median](https://en.wikipedia.org/wiki/Median)\n\nArray will always be valid (odd-length >= 3)\ndef mean_vs_median(numbers):\n\t\nUse Call-Based format\nANSWER:\n"}}