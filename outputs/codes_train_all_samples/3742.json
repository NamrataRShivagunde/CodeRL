{"3742": {"code": ["\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\n\n\n>>> modes(\"cat\")\n[]\n```\n\n\n\n:\n\n\n>>>\n[]\n\n>>>\n\t\n:\n\n>>>\n[]\n\n:\n\n\n\n\n\n\n\n\n>>> modes(\"tomato\")\n[\"tom", "\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExample:\n\ndef modes(data):\n\t\nUse Call-Based format\n\n\n>>>\n[3]\n\n:\n\n>>>\n[]\n\n:\n\n\n\n\n\n:\n\n\n>>>\n[]\n\n\n```python", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n>>> modes(\"tomato\")\n[\"o\"]\n[2]\n```\n\n\n\n\n\n>>>\n[]\n\n\n:\n\t:\n\t\n\n:\n\n\n\n\n\n\n\n\n\n[1, 2, 3, 4, 5", "\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n>>> modes(\"tomato\")\n[\"o\"]\n[4]\n\n\n\n\n>>> modes(\"cat\")\n[3]\n\n>>>\n\t\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n:\n\n    >>> data = [\"tomato\"]", "\n\t\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n\n>>> modes(\"tomato\")\n[]\n\n\n\n\n:\n\t\n\n>>>\n[]\n>>>\n\t\n:\n\n>>>\n[]\n\n:\n\n\n\n\n:\n\n\n\n\n\n```python\n>>> from seq", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n[3,4,5]\n\n\nUse List-Based format\n\nQUESTION:\n\n>>> modes(data)\n[]\n\n\n\n\n\n>>>\n[]\n:\n\n\n\n\n\n>>>\n[]\n```\n\n>>> from", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n[1, 2, 3]\n[2, 3]\n\n\n\t\nUse Function-Based format\n:\n>>>\n[]\n\n:\n\n\n\n\n\n\n\n\n    \"mode\":\n        \"mode\"", "\n\t\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n>>> modes(\"tomato\")\n[3]\n\n\n:\n\t\n\n>>>\n[]\n>>>\n\t\nUse Call-Based format\n:\n\n\n:\n\n\n\n\n\n\n\n\n    :param data:\n\t    The", "\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n>>> modes(data)\n[]\n\n\n\nUse Call-Based format\n\n\n[3]\n\n\n\t\nUse Call-Based format\n:\n\t\n>>>\n[]\n\n:\n\n\n\n\n\n\n\n\n>>> modes(\"tomato\")\n[\"tomato\"]\n", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n>>> modes(\"cat\")\n[]\n\n\n\n:\n\t\n\n>>>\n[]\n>>>\n\t:\n\t:\n\n>>>\n[]\n\n:\n\n\n\n\nUse Call-Based format\n\n\n>>>\n[]\n\n```python", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n>>> modes(\"cat\")\n[4]\n\n\n\n\n\n\n[]\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\n\n`python`\n\n>>> from vital", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n>>> modes(data)\n[3]\n\n\n\n\n\n:\n\t\n\n[3]\n\n\n\t\n\n:\n\n>>>\n[]\n\n:\n\n\n\n:\n\n\n\n\n    \"\"\"\n    # Now that we have", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n[3]\n\n\n\n\n:\n\t\nUse Call-Based format\n\n>>>\n[]\n\n>>>\n\t\n\n:\n\t\n>>>\n[]\n\n:\n\n\n\n:\n\n\n\n\n\n```python\n>>> from redd", "\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n>>> modes(\"cat\")\n[1]\n[2]\n\n\n\n\n\n\n>>>\n[]\n\n\n\t\n:\n\n>>>\n[]\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"tomato\":\n```", "\nUse Call-Based format\n\n\nUse Python-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n>>> modes(\"cat\")\n[3]\n\n\n\n\n\n\n\n\n\n>>>\n[]\n\n>>>\n\t\n\n\n>>>\n[]\n:\n\n\n\n:\n\n\n\n\n    :param data:\n\t    The data", "\n\n\n\n\t\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n[3]\n\n>>>\n[3]\n\n\n\n\n\n\t\nUse Call-Based format\n\n:\n\t\n\n\n\n\n\n\n\n\nQUESTION:\n\n```python\n>>> data =", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n>>> modes(\"cat\")\n[]\n\n```python\n\n\n\n\n\n\n\n>>>\n[]\n```\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n    # 1. Let's see what data is passed in:\n", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n>>> modes(\"cat\")\n[3]\n\n\n\n\n\n>>>\n[]\n\n>>>\n\t\n:\n>>>\n[]\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n    # 1) Check that", "\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n[]\n\n\n\t\nUse Python-Based format\n\n\nUse Call-Based format\n\n\n>>>\n[]\n\n:\n\n\n\n\n\n\n\n\n\n```python\n>>> modes(\"tomato\")", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n>>> modes(data)\n[1]\n[]\n\n\n\n\n\n\n>>>\n[]\n\n>>>\n\t\n\n:\n\n>>>\n[]\n\n:\n\n\n\n\n:\n\n\n\n:\n\n```python\n>>>"], "prompt": "\nQUESTION:\nYou probably know that the \"mode\" of a set of data is the data point that appears most frequently. Looking at the characters that make up the string `\"sarsaparilla\"` we can see that the letter `\"a\"` appears four times, more than any other letter, so the mode of `\"sarsaparilla\"` is `\"a\"`.\n\nBut do you know what happens when two or more data points occur the most? For example, what is the mode of the letters in `\"tomato\"`? Both `\"t\"` and `\"o\"` seem to be tied for appearing most frequently.\n\nTurns out that a set of data can, in fact, have multiple modes, so `\"tomato\"` has two modes: `\"t\"` and `\"o\"`. It's important to note, though, that if *all* data appears the same number of times there is no mode. So `\"cat\"`, `\"redder\"`, and `[1, 2, 3, 4, 5]` do not have a mode.\n\nYour job is to write a function `modes()` that will accept one argument `data` that is a sequence like a string or a list of numbers and return a sorted list containing the mode(s) of the input sequence. If data does not contain a mode you should return an empty list.\n\nFor example:\n\n```python\n>>> modes(\"tomato\")\n[\"o\", \"t\"]\n>>> modes([1, 3, 3, 7])\n[3]\n>>> modes([\"redder\"])\n[]\n```\n\nYou can trust that your input data will always be a sequence and will always contain orderable types (no inputs like `[1, 2, 2, \"a\", \"b\", \"b\"]`).\ndef modes(data):\n\t\nUse Call-Based format\nANSWER:\n"}}