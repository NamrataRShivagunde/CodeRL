{"4796": {"code": ["\n\nUse Call-Based format\n\n- Linked Lists - Get Nth\n\n- Linked Lists - Push & Count\n\n- Linked Lists - Length\n\n-\n\n\n\n:\n\n-\n\n\n-\n:\n\n-\n\n>,:\nLinked Lists -:\n\n\n\n:\n\n\n-\n\n\n-\n\n-\n\n-\n\n\n\n", "\nUse Call-Based format\n\n- Linked Lists - Count\n\n- Linked Lists - Push\n\n- Linked Lists - Length\n\n- Linked Lists - Count\n\n-\n\n:\n\n-\n\n-\n\n>():\n\n-,,:\nLinked Lists -:\n\n\n\n:\n\n\n-\n\n-\n\n-\n\n>\n\n:\n\n", "\n\n- Linked Lists - Call-Based format\n\n- Linked Lists - Call-Based format\n\n-\n\n> The length is 1\n\n-\n\n\n\n\n-\n\n>\n\n>\n:\nLinked Lists - Call-Based\n\n-,,:\n:\n\n\n\n:\n\n\n\n-\n\n-\n\n-\n\n-\n\n\n\n", "\n- Linked Lists - Use Call-Based format\n-\n\n> The length of the list should be equal to the length of the linked list\n-\n\n:\n\n\n-\n\n\n\n>\n:\nLinked Lists - Call\n\n-,,:\nLinked Lists -:\n\n-\n\n:\n\n-\n-\n\n-\n\n-\n-\n\n:\n", "\n\n- Linked Lists - Push\n\n- Linked Lists - Count\n\n- Linked Lists - Count\n\n- Linked Lists - Length\n\n-\n\n-\n\n:\n\n\n-\n\n-\n\n>(self, data):\n:\n\n-,,::\n\n\n:\n\n\n-\n\n:\nLinked Lists - Call\n\n-\n-\n\n-", "\n\n- Linked Lists - Push & Count\n\n- Linked Lists - Length\n\n- Linked Lists - Push & Count\n\n- Linked Lists - Length\n\n-\n\n-\n\n:\n\n-\n\n\n\n>(self, data)::\n\n-,,:\n:\n\n\n\n:\n\n-\n-\n\n\n\n-\n\n-\n\n:\n", "\n\nUse Call-Based format\n\n- Linked Lists - Push & Count\n\n- Linked Lists - Push & BuildOneTwoThree\n\n\n\n-\n\n:\n\n-\n\n\n\n-\n:\n\n-\n\nLinked Lists -,:\nLinked Lists -:\n\n-\n\n:\n\n\n-\n\n-\n\n-\n\n>\n\n:\n\n", "\n- Call-Based format\n\n\n\n- Linked Lists - Push & Count\n\n> The push() and buildOneTwoThree() functions do not need to redefined\n> The\n\n\n\n-\n\n-\n\n>\n:\n\n-,,:\nLinked Lists -:\n\n\n:\n\n\n-\n\n-\n\n-\n\n-\n\ndef\n\n", "\n- Linked Lists - Call-Based format\n\n> The __init__() function is not used\n-\n\n>\n\n\n:\n\n\n\n-\n\n- Linked Lists - Length & Count\n\n> The\n\n> The()\n:\n\n,,:\n:\n\n\n\n:\n\n\n-\n\n-\n\n-\n\n>\n\nNode\n\n", "\nUse Call-Based format\n-\n\n> The data should be a string\n> The length should be a number\n\n>\n\n:\n\n\n\n- Linked Lists - Count\n\n-\n\n>\n\n>\n:\n\n-,,:\nLinked Lists -:\n\n-\n\n:\n\n\n-\n\n-\n\n-\n\n>\n\n:\n", "\n- Call-Based format\n-\n\n- Linked Lists - Push & Count\n\n- Linked Lists - Push & Count\n\n- Linked Lists - Length\n\n-\n\n:\n\n\n-\n\n-\n\n>(self, data):\n\n,,::\n\n-\n\n:\n\n\n\n-\n\n-\n\n-\n\n-\n\n\n\n", "\nUse Call-Based format\n- Linked Lists - Push & BuildOneTwoThree\n\n- Linked Lists - Count & Count\n\n\n\n\n\n:\n\n-\n\n\n\n-\n:\nLinked Lists - Call-Based\n\n-\n\nLinked Lists -,::\n\n:\n\n\n\n-\n\n- Linked Lists - Count\n\n-\n\n-\n\n\n", "\n- Call-Based format\n- Linked Lists - Add & Remove\n\n- Linked Lists - Count\n\n-\n\n\n:\n\n GetNth\n\n- Linked Lists - Remove\n\n-\n\n-\n\n>(self, data):\n:\n\n-\n::\n:\n\n\n:\n\n\n\n-\n\n-\n\n-\n\n>\n\n\n", "\n- Linked Lists - Call-Based format\n\n\n- Linked Lists - Get Nth\n\n> The push() & buildOneTwoThree() functions need not redefined\n>\n\n:\n\n-\n>\n>\n:\n\n-\n\nLinked Lists -,:\n:\n\n-\n\n:\n\n\n\n-\n\n-\n\n-\n-\n:\n\n", "\n\n- Linked Lists - Push\n\n- Linked Lists - Count\n\n- Linked Lists - Count\n\n- Linked Lists - Count\n\n- Linked Lists - Length\n\n\n-\n\n:\n\n-\n\n\n\n-(:\n:\n\n-,,::\n-\n\n:\n\n\n-\n\n\n\n\n\n\n-\n\nclass\n\nLinked Lists", "\n\nUse Call-Based format\n\n- Linked Lists - Call\n\n> The push() function should return Node(42);\n\n\n\n> The\n\n\n:\n\n\n\n-\n\n-\n\n> The\n:\n\n\n-,,:\nLinked Lists -:\n\n\n:\n\n\n-\n\n:\n\nLinked Lists -\n\n-\n:\n", "\n\n\n- Linked Lists - Push & Count\n\n> The push() & buildOneTwoThree() functions do not need redefined\n> The count() & buildOneThree() functions do not need redefined\n>\n\n\n\n-\n\n\n-\n:\n\n\n,::\n\n\n:\n\n\n-\n\n-\n\n\n-\n\n__init__\n-", "\n\nUse Call-Based format\n\n\n\n- Linked Lists - Push\n\n- Linked Lists - Count\n\n- Linked Lists - Count\n\n-\n\n:\n\n\n\n\n\n-\n\n> The()\n:\n\n,,:\nLinked Lists -:\n\n-\n\n:\n\n\n\n-\n\n-\n\n-\n\n-\n\n\n\nLinked", "\n\nUse Call-Based format\n\n-\n\n- Linked Lists - Length & Count\n\n- Linked Lists - Push & BuildOneTwoThree\n\n-\n\n:\n\n\n\n-\n\n\n\n>()\n:\n\n-\n\nNode(42),,:\n:\n\n\n\n:\n\n\n\n-\n\n-\n\n\n\n-\n\n:\n", "\n\n- Linked Lists - Push\n\n- Linked Lists - Count\n\n- Linked Lists - Push & BuildOneTwoThree\n\n- Linked Lists - Count\n\n-\n\n-\n\n:\n\n-\n\n\n-(self)\n:\n\n\n\ndef,:\n:\n\n\n\n:\n\n\n-\n\n-\n\n-\n\n-\n\n\n\n"], "prompt": "\nQUESTION:\nLinked Lists - Get Nth\n\nImplement a GetNth() function that takes a linked list and an integer index and returns the node stored at the Nth index position. GetNth() uses the C numbering convention that the first node is index 0, the second is index 1, ... and so on. So for the list 42 -> 13 -> 666, GetNth() with index 1 should return Node(13);\n\nThe index should be in the range [0..length-1]. If it is not, GetNth() should throw/raise an exception (`ArgumentException` in C#, `InvalidArgumentException` in PHP). You should also raise an exception (`ArgumentException` in C#, `InvalidArgumentException` in PHP) if the list is empty/null/None.\n\nPrerequisite Kata (may be in beta):\n\n- Linked Lists - Push & BuildOneTwoThree\n- Linked Lists - Length & Count\n\n> The push() and buildOneTwoThree() (`BuildOneTwoThree` in C#, `build_one_two_three()` in PHP) functions do not need to be redefined.\ndef __init__(self, data):\n\t\nUse Call-Based format\nANSWER:\n"}}