{"2742": {"code": ["\t\nUse Call-Based format:\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Only format:\n\n:\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n:\nGiven a", "\n\nUse Call-Based format:\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Function-Based format:\n:\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n:\n", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n:\n\n\n\n\t\n\n:\n:\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n:\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\nUse Call-Only format:\n:\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n:\n\nGiven a string and", "\nUse Call-Based format\t\nUse Call-Based format\n\n\nUse Call-Based format\t\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\nThe\n\n\n:\nGiven a string and an array", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\t\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\nThe\n\n\n\n\n\t\n:\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\n\n\n\n:\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n:\nGiven a string and array of", "\nUse Call-Based format:\n\n\n\nUse Call-Based format:\n:\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nWITH:\n\ndef\n\n:\n\n\n\n\n\t\nUse Function-Based format:\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\t\n:\nGiven a", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Python call-based format:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\nThe\n\n\n\n\n:\n\nGiven a string", "\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format:\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\n\t\n:\nGiven a string and array", "\t\nUse Call-Based format:\n\nUse Call-Based format\n\n\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Function-Based format:\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\nEx:\n\n\n\n:\nGiven", "\n:\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-based format:\n:\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\t:\nGiven a string", "\nUse Call-Based format:\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\nThe\n\n\n\n:\nGiven a string", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n\n\n\n\n\n\n\n -> 'abcd'\n\n:\nGiven a string", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nEX:\n\nscramble(string, array)\n\n\n:\n\n\n\n:\n:\n\n\n:\n\n\n\nUse Call-Based format\n\n\n\n\n:\n", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\nGiven a string", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\t\nUse Python-based format:\n\n\n:\n\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\nGiven", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\t\nUse Python format:\n:\n\nUse Python call-based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nGiven a string and an", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\nUse Call-Based format:\n:\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\t\n\nUse Python format:\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format:\n\n\n\n\nThe\n\n\n\n\t\n:\nGiven", "\t\nUse Call-Based format:\n\n\n\nUse Call-Based format:\n:\n\n\n\n\n\n\n:\n\n\n\n\t\n\nUse Python format:\n:\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n:\n \n\n \n\n\n\n\n\n\n\n\n\n -> 'abc'\n\n\n:\nGiven a string"], "prompt": "\nQUESTION:\nGiven a string and an array of index numbers, return the characters of the string rearranged to be in the order specified by the accompanying array.\n\nEx:\n\nscramble('abcd', [0,3,1,2]) -> 'acdb' \n\nThe string that you will be returning back will have: 'a' at index 0, 'b' at index 3, 'c' at index 1, 'd' at index 2, because the order of those characters maps to their corisponding numbers in the index array. \n\n\nIn other words, put the first character in the string at the index described by the first element of the array\n\n\n\nYou can assume that you will be given a string and array of equal length and both containing valid characters (A-Z, a-z, or 0-9).\ndef scramble(string, array):\n\t\nUse Call-Based format\nANSWER:\n"}}