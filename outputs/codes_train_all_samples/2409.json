{"2409": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n:\n        return self.maximum69Number (num)\n        \nUse Call-Based format\n\n\nclass Call:\n   \n        \n\n\n   :\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a positive integer num consisting", "\n\nUse Call-Based format\n\n    pass\n\nUse Call-Based format\n\n\n\n\n:\n        return num\n\nUse Call-Based format\n\nclass Call:\n          \n\n -> int:\n        \n   :\n\n\n\n\n\n\n\n\n\n\n1 <= num <= 10^4\n\n\n\n\n\nGiven a positive integer num consisting only only", "\nUse Call-Based format\n\n\n\n\n\n\n\n:\n        return self.maximum69Number(num)\n\nUse Call-Based format\n\nUse Python-Based format\n\nUse Call-Based format\n\n\n\n -> int:\n       \n       ...\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a positive integer num consisting only", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n -> int:\n        \nUse Call-Based format\n\nClass Methods:\n          \n\n\n -> int:\n        return num\n\n   \n        return num\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting only only digits", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n -> int:\n        return num\n\nUse Call-Based format\n\nUse Call-Based format\n\nClass Instance:\n   \n\n\n\n   \n        pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting only only", "\nUse Call-Based format\n\n\n    def maximum69Number (self, num: int) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\n        return self.maximumNumber(num)\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nThe maximum number you can get is 9", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n:\n        return self.maximum69Number (num)\n        \nUse Call-Based format\n\n          \n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive integer", "\nUse Call-Based format\n\n\n    @call\n        \n\n\n\n\n -> int:\n        return self.maximum69Number (num)\n\nUse Call-Based format\n\nclass Call:\n           \n\n\n\n   :\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a positive integer num consisting", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n -> int:\n        return self.maximum69Number(num)\n\nUse Call-Based format\n\nUse Call-Based format\n       \n\n\n\n   :\n        return num\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting only only", "\nUse Call-Based format\n\n\n\n\n\n\n\n -> int:\n        return self.maximum69Number (num)\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n       \n\n\n   :\n       ...\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\ngiven a positive integer num consisting only only", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n:\n        return num\n\nUse Call-Based format\n\nExample 3:\n          \n\n\n -> int:\n\n   ):\n        return num\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nThe maximum number is 9969.\n\n\n\nGiven a positive", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n -> int:\n\n          \n        return self.maximum69Number (num)\n        \nUse Call-Based format\n\n\n   :\n        return self.maximum69Number (num)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n -> int:\n        return self.maximum69Number (self, num)\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe maximum number you can get is 9", "\nUse Call-Based format\n\n\n\n\n\n\n\n -> int:\n        return self.maximum69Number(num)\n        \nUse Call-Based format\n\nUse Call-Based format\n\nReturns:\n\nnum:\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting only of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n:\n        return max(num, self.maximum69Number(num))\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n          \n\n\n   :                \n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting only only", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n:\n        return self.maximum69Number (num)\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n  ,\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\nGiven a positive integer num consisting only only", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n -> int:\n        return self.maximum69Number(num)\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n -> int):\n        return num\n\n          \n        return self.maximum69Number (num)\n\n\n\n   ):\n        return self.maximum(num)\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a positive integer num consisting only", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n:\n        return self.maximum69Number (num)\n\nUse Call-Based format\n\nUse Call-Based format\n       \n        pass\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n\nThe maximum number is 1\n\n\n\n\n6 <= num <= 9\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n:\n        return self.maximum69Number (num)\n        \nUse Call-Based format\n\nclass Call:\n          \n\n\u00a0\n -> int:\n       :\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive integer num"], "prompt": "\nQUESTION:\nGiven a positive integer num consisting only of digits 6 and 9.\nReturn the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6).\n\u00a0\nExample 1:\nInput: num = 9669\nOutput: 9969\nExplanation: \nChanging the first digit results in 6669.\nChanging the second digit results in 9969.\nChanging the third digit results in 9699.\nChanging the fourth digit results in 9666.\u00a0\nThe maximum number is 9969.\n\nExample 2:\nInput: num = 9996\nOutput: 9999\nExplanation: Changing the last digit 6 to 9 results in the maximum number.\nExample 3:\nInput: num = 9999\nOutput: 9999\nExplanation: It is better not to apply any change.\n\u00a0\nConstraints:\n\n1 <= num <= 10^4\nnum's digits are 6 or 9.\nclass Solution:\n    def maximum69Number (self, num: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}