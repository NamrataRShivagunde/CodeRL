{"2802": {"code": ["\n# Examples\n```\nper(10)\n\n# Examples\n```\nper(10)\n\n# Examples\n\n*\n\n\n\n\n\n\n\nW\n\n\n\n\n\n\n#\n\n\n# Examples\n\n## Examples\n---\n\n\n//\n\n\n\n# Examples\n\n## Examples\n* =\n\n\n\n\n\n\n\n##\n", "\n# Example 1\n# Example 2\n# Example 3\n# Example 4\n# Example 5\n#*\n\n---\n\n\n\n:\n\nDTHQQ\n\n\n\n\n\n#\n#\n\n## Output\n## Examples\n#\n\n\n//\n\n# Examples\n\n\n# Examples\n#\n*\n\n\n\n\n\n\n\n\n\n#\n#", "\n# Example\n# Example\n# Examples\n# Example\n\nper(2)\n\n# Example\n\n# Examples\n\n# Examples\n\n# -->\n\n#\n\n\n\n\n\nQ\n\n\n\n\n\n\n#\n\n\n\n =\n\n# Examples\n```\n\n\n\n## Examples\n**\n\n\n\n\n# Examples\n\n\n\n*", "\n# Example\n# Examples\n---\n\nUse Call-Based format\n*\n#\n\n# Examples\n\n# Examples\n\nUse Call-Based format\n\n---\n\n\n\n\n\nQd\n\n\n\n\n\n\n\n =\n\n# Examples\n\n## Examples\n\n## Examples\n\n\n#* =\n#\n\n\n---\n\n\n\n\n\n*", "\n## Examples\n```\nper(10)\n\n# Example\n---\n\nUse Call-Based format\n*\n\n---\n\n\n\n\n:\n\nJY\n\n\n\n\n\n## Examples\n## Examples\n```\n\n\n\n---\n\n\n\n =\n\n\n#* =\n\n# Examples\n\n##\n\n\n\n\n\n\n\n*", "\n# Example\n\n\n# Example\n# Examples\n---\n\nUse Call-Based format\n### Examples\n\n# Examples\n\nper(10)\n\n\n\n\n\n\nRK\n\n\n\n\n\n# Examples\n## Examples\n\n\n\n\n\n =\n\n## Examples\n\n\n#* =\n\n## Examples\n##\n\n\n\n\n\n\n\n*", "\n# Example\n# Example\nper = per\n# Example #\n\n# Examples #\n\n# Examples\n# Examples #\n\n# Examples #\n\n# Examples\n\n*\n\n\n:\n\nQ\n\n\n\n\n\n\n\n\n---\n\n\n\n =\n\n# Examples\n\n\n#* =\n\n## Examples\n\n\n\n\n\n\n\n\n*", "\n# Example\n#\n#\n#\n# Example\n---\n\n:\n\n\nWim9WJeDTHQ\n\n\n\n\n# Examples\n---\n\nUse Call-Based format\n\n\n\n\n# Examples\n```\n\n\n\n\n\n =\n\n\n#\n =\n\n## Examples\n## Examples\n\n\n\n\n\n\n\n#\n", "\n\n## Function format\n```\nper(n)\n\nUse Call-Based format\n---\n\nUse Call-Based format\n*\n\n\n\n\n\n\nDTHQQ\n\n\n\n\n\n\n##\n\n\n =\n\n## Examples\n```\n\n\n\n## Examples\n\n* =\n\n\n\n\n\n\n\n\n---\n\n\n*", "\n# Example 1\n# Examples 2\n# Examples 3\n# Examples 4\n# Examples 4\n# Examples 4\n\n# Examples 4\n# Examples 4\n\n#\n\n\n\n\n:*\n\n\n\n\n\n\n\n\n\n\n\n\n =\n\n# Examples 2\n\n#\n =\n\n\n---\n\n\n\n---\n\n\n\n\n\n##\n#", "\n# Example 1\n# Example 2\n# Example 3\n# Example 4\n# Examples 4\n# Example 3\n# Examples 4\n# Examples 4\n#\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n =\n\n# Examples\n```\n\n\n#\n#\n#\n\n# Examples\n---\n\n\n\n\n\n\n\n\n\n#", "\n# Example 1\n# Examples 2\n# Examples 3\n# Examples 4\n# Examples 3\n# Examples 4\n#\n\n#\n\n\n:\n\n\nDTHQ\n\n\n\n\n\n# Examples\n```\n\n\n# Examples 3\n\n\n =\n\n## Examples\n\n#* =\n\n## Examples\n## Examples\n\n\n\n\n\n\n\n#", "\n# Example\n# Example\n\n# Examples\n---\n\nUse Call-Based format\n## Examples\n```\nper(10)\n*\n\n\n\n:\n\n\n9\n\n\n\n\n\n# Example\n\n\n\n =\n\n# Example\n---\n\n\n#\n\n*\n\n\n\n# Examples\n\n\n\n\n# Examples\n#\n\n#", "\n# Examples\n\nper(2)\n\n# Examples\n\n# Examples\n```\nper(5)\n\n#\n\n\n\n\n:\n\nWQ\n---\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n =\n\n# Examples\n---\n\n\n**\n\n## Examples\n## Examples\n\n\n\n\n\n\n\n\n*", "\n# Example\n# Example\n# Example\n# Examples\n# Examples\n# Examples\n# Examples\n# Examples\n# Examples\n# -->\n#\n\n#\n:\n\n\nQ\n\n\n\n\n\n\n## Input\n\n\n---\n\n\n\n =\n\n# Examples\n\n#\n// =\n\n# Examples\n## Examples\n\n\n\n\n\n\n\n#", "\n# Example\n#\nper(2)\n\n# Examples\n###\n\nUse Call-Based format\n*\n\n---\n\n\n\n:*\n\n\nQ\n\n\n\n\n\n\n#\n# n = 3\n\n# Examples\n---\n\n\n\n =\n\n# Examples\n\n\n#* =\n\n##\n\n\n\n\n\n\n##\n#", "\n# Examples\n```\nper(1)\n\n# Examples\n```\nper(10)\n\n# Examples\n---\n\n*\n\n\n\n\n\n\nWQ\n\n\n\n\n\n## Examples\n\n## Examples\n```\n\n\n\n\n\n =\n\n# Examples\n\n#* =\n\n##\n\n\n\n\n\n\n##\n#", "\n# Example\n\nper = per\n# Example\n\n# Examples\n# -->...\n\n# Examples\n\n\n# Examples\n\n\n\n\n\n---\n\n\n\n\n\nQ\n\n\n\n\n\n\n# Examples\n```\n\n\n\n\n =\n\n# Examples\n\n\n#* =\n\n\n\n\n\n\n\n\n## Examples\n###\n#", "\n# Example\n# Example\nper = per\n\n# Examples\n# Examples\n---\n\nUse Call-Based format\n*\n\n\n\n\n:\n\nQ\n\n\n\n\n\n\n# Examples\n```\n\n\n---\n\nUse Call-Based format\n\n\n =\n\ndef\n#* =\n\n## Examples\n---\n\n\n\n\n\n\n#", "\n# Example\n# Example\n# Examples\n# Example\n\nper = function(n):\n\n# Examples\n## Examples\n\n*\n\n\n\n:\n\n\nQ#\n\n\n\n\n# Examples\n## Examples\n```\n\n\n\n\n\n =\n\n# Examples\n\n#\n*\n\n## Examples\n\n:\n\n---\n\n\n\n\n#"], "prompt": "\nQUESTION:\n*Based on this Numberphile video: https://www.youtube.com/watch?v=Wim9WJeDTHQ*\n\n---\n\nMultiply all the digits of a nonnegative integer `n` by each other, repeating with the product until a single digit is obtained. The number of steps required is known as the **multiplicative persistence**.\n\nCreate a function that calculates the individual results of each step, not including the original number, but including the single digit, and outputs the result as a list/array. If the input is a single digit, return an empty list/array.\n\n## Examples\n```\nper(1)  = []\n\nper(10) = [0]\n// 1*0 = 0\n\nper(69) = [54, 20, 0]\n// 6*9 = 54 --> 5*4 = 20 --> 2*0 = 0\n\nper(277777788888899) = [4996238671872, 438939648, 4478976, 338688, 27648, 2688, 768, 336, 54, 20, 0]\n// 2*7*7*7*7*7*7*8*8*8*8*8*8*9*9 = 4996238671872 --> 4*9*9*6*2*3*8*6*7*1*8*7*2 = 4478976 --> ...\n```\ndef per(n):\n\t\nUse Call-Based format\nANSWER:\n"}}