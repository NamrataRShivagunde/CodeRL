{"2095": {"code": ["\n\n-----Note-----\n\n\n\n\n-----Note-----\n\nThis program is not available\n\n\n\n\n\n2 3 2 3 3 4\n\n2 3 3 4 4 \n\n2 3 3 3 3 \n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n valid.\n\nThe second line is", "\n\n\n-----Note-----\n\nThe following are not valid.\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n2 3 3 4 \n\n\n-----Note-----\n\n\n\n\n the number of changes\n\n\n\n \n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n possible to get", "\n\n\n-----Input-----\n\nAn undirected connected graph is an undirected connected graph without cycles.\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n \n\n\n valid.\n\n 6 3 \n\n\n2 3 4 6 7 \n\n\n a valid sequence. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n a valid sequence.\n\nInput\n", "\n\n\n\n\n-----Notes-----\n\n\n\n\n\n2 3 4 5 6 7 \n\n\n-----Note-----\n\nYou are given an integer n (2 \u2264 n \u2264 n).\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the first line\n\n2\n3", "\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n3 3 3 4 3 \n\n\n2 3 3 6 7 \n\n\n-----Note-----\n\n\n\n minimum number changes. \n\n\n\n\n3 4 4 3 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2 3 4 5 6 7 \n\n a valid", "\n\n\n\n-----Notes-----\n\nThis program can be used in a program with many ways:\n\n-----Note-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n minimum number changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 3 4 3 \n\n\n2 3 4 5 \n\n the second", "\n\n-----Input-----\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n2 3 4 5 6\n\nOutput\n6\n3 6 7 \n\n\n-----Note-----\n\n\n\n\n\n valid\n\n\n\n\n\n\n valid.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n a valid sequence\n\nIn the second", "\n\n\n\n-----Input-----\n\nInput\nn integers a_1,..., a_{n} \n\nOutput\n1\n2 3 3 \n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n first line\n\n\n\n\n\n valid.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to restore a tree with n", "\n\n\n1 \u2264 n \u2264 1\n2 \u2264 n \u2264 1 \n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n print the minimum number of changes\n\n\n\n\n\n a valid sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the first line.\n\n1", "\n\n\n\n\n-----Note-----\n\nThe first sample, it's the first sample.\n\n\n\n\n\n\n2 3 3 4 \n\nOutput\n3 4 3 4 \n\n\n-----Note-----\n\n\n\n\n first sample.\n\n\n\n\n\n the second sample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the second sample.\n\nThe first", "\n\n\n-----Note-----\n\n\n\n\n-----Input-----\n\n\n\n\n\n\n\n\n2 3 4 3 5 7 \n\n\n-----Output-----\n\n\n\n\n-----Note-----\n\n\n\n first line \n\n\n\n\n\n\n a valid sequence.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n valid.\n\n-----Note-----\n\nIn", "\n\n\n\n\n-----Input-----\n\n\n\n\n3 3 4 3 \n\n\n2 3 5 3 6 \n\n2 3 4 5 \n\n3 3 4 5 \n\n\n-----Output-----\n\n\n a valid sequence.\n\n\n\n\n\n a valid sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to change the minimum number of elements to", "\n\n\n0\n2 3 3 4 5 6 7\n\n\n-----Note-----\n\nThe first example is an example of an example. \n\n\n\n\n\n\n\n\n\n\n print the minimum number of changes. \n\n\n\n\n\n\n a good example. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n good to see the sequence. The second example is the", "\n\n\n\nOutput:\n\n0\n1 4 4 5 \n\n1\n2 3 6 6\n1\n1\n2 \n\n\n\n\n\n\n\n\n\n\n first.\n\n first.\n\n 3 \n\n\n\n2 3 6 7 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n not possible to get a valid sequence.\n\nOutput", "\n\n\n\n-----Input-----\n\nInput\n2\n2 3 4 \n\nOutput\n1\n2 3 4 \n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n a valid tree.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to get any of the given", "\n\n\n1 1 2 3 4 3 4 5 5 6 7 8 6 7 8 \n\n\n-----Input-----\n\n\n\n\n\nInput-----\n\n\n\n\n\n the following is a sample.\n\nOutput-----\n\n\n\n2 3 4 5 6 7 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to get 3 changes\n\nInput", "\n\n\n-----Notes-----\n\n\n\n\n-----Notes-----\n\n\n\n\n-----Input-----\n\nInput is a sequence numbered 1 through 1. \n\nOutput is an array numbered 1 through 1. \n\n-----Notes-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to change the number of elements possible", "\n\n\n\n\n-----Note-----\n\n\n\nOutput\n0\n1 2 2 3 \n\nOutput\n1\n2 3 4 3 \n\n\n-----Note-----\n\nIn the second example, there are many valid sequences possible to restore a valid sequence.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n a valid sequence and its parents", "\n\n\n\n\n-----Note-----\n\nThis procedure is only useful for the first sample.\n\n-----Note-----\n\n\n\n\n\n\n\n2 3 3 4 3 \n\n\n\n possible to restore a valid sequence. \n\n \n\n\n\n\n\n only a good example. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to get all valid sequences possible to", "\n\n\n\n\n\n-----Notes-----\n\n\n\n\n1\n2 3 4 3 \n\n1\n2 3 6 7 \n\n1 \n\n2\n3 7 8 \n\n1\n3 \n\n1 \n\n2 \n\n1 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n possible to get a"], "prompt": "\nQUESTION:\nA tree is an undirected connected graph without cycles.\n\nLet's consider a rooted undirected tree with n vertices, numbered 1 through n. There are many ways to represent such a tree. One way is to create an array with n integers p_1, p_2, ..., p_{n}, where p_{i} denotes a parent of vertex i (here, for convenience a root is considered its own parent). [Image] For this rooted tree the array p is [2, 3, 3, 2]. \n\nGiven a sequence p_1, p_2, ..., p_{n}, one is able to restore a tree:  There must be exactly one index r that p_{r} = r. A vertex r is a root of the tree.  For all other n - 1 vertices i, there is an edge between vertex i and vertex p_{i}. \n\nA sequence p_1, p_2, ..., p_{n} is called valid if the described procedure generates some (any) rooted tree. For example, for n = 3 sequences (1,2,2), (2,3,1) and (2,1,3) are not valid.\n\nYou are given a sequence a_1, a_2, ..., a_{n}, not necessarily valid. Your task is to change the minimum number of elements, in order to get a valid sequence. Print the minimum number of changes and an example of a valid sequence after that number of changes. If there are many valid sequences achievable in the minimum number of changes, print any of them.\n\n\n-----Input-----\n\nThe first line of the input contains an integer n (2 \u2264 n \u2264 200 000)\u00a0\u2014 the number of vertices in the tree.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n).\n\n\n-----Output-----\n\nIn the first line print the minimum number of elements to change, in order to get a valid sequence.\n\nIn the second line, print any valid sequence possible to get from (a_1, a_2, ..., a_{n}) in the minimum number of changes. If there are many such sequences, any of them will be accepted.\n\n\n-----Examples-----\nInput\n4\n2 3 3 4\n\nOutput\n1\n2 3 4 4 \n\nInput\n5\n3 2 2 5 3\n\nOutput\n0\n3 2 2 5 3 \n\nInput\n8\n2 3 5 4 1 6 6 7\n\nOutput\n2\n2 3 7 8 1 6 6 7\n\n\n\n-----Note-----\n\nIn the first sample, it's enough to change one element. In the provided output, a sequence represents a tree rooted in a vertex 4 (because p_4 = 4), which you can see on the left drawing below. One of other correct solutions would be a sequence 2 3 3 2, representing a tree rooted in vertex 3 (right drawing below). On both drawings, roots are painted red. [Image] \n\nIn the second sample, the given sequence is already valid.\nUse Standard Input format\nANSWER:\n"}}