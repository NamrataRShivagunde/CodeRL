{"509": {"code": ["\n\n\n\n\n-----Constraints-----\n\nN M\n\n\n\n\n\n\n3 3\n\n\n2 2\n3\n2\n\n\n-----Constraints-----\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n, the second edge will be removed.", "\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n2\n3\n will be removed.\n\n-----Constraints-----\n\n\n1 3 3\n2 2 3\n1 1 2 3\n1 2 3\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n connects Vertex 1", "\n\n\n\n\n\n\n\n1\n1\n\n\n-----Constraints-----\n\n0 0\n0\n\n1 2 2\n1 2\n1 2\n1\n\n-----Constraints-----\n\nN 1\n3\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, the first edge will be removed.\n\n", "\n\n\n\n\n\n1 2 2\n1\n2 2 3\n1 4 1 1\n\n-----Constraints-----\n\n\n\n\n\n, we have two edges:\n 3 4\n1 2 3\n2 1 2\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n2\n, the edge 1 and 3 will be removed", "\n\n\n1 2 3\n1 2 3\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n1 0 2 2 3\n\n-----Constraints-----\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n,\n - The given graph is not connected", "\n\n\n\n\n-----Constraints-----\n\nN M\n\n\n\n\n\n\n\n1 2 2\n1 2\n1 2\n1 2\n2\n1 2\n1 3\n\n-----Constraints-----\n\n\n,\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n, the current edge will be removed", "\n\n\n\n\n\n-----Constraints-----\n\n\n1\n2\n1\n2\n3\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n1\n2\n1\n\n and Edge 4", "\n\n\n\n\n\n\n\n\n1 2 2 3\n2 3 3\n\n-----Constraints-----\n\nN M\n\n1 2 2 3\n\n\n-----Constraints-----\n, the edges will be removed.\n\n\n\n1 2 2 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n and Edge 4", "\n\n\n\n\n\n\n\n\n\n\n1 1 2 1\n2 1 1\n\n-----Constraints-----\n1 1 2 1\n\n\n-----Constraints-----\n\n0 1 1 1\n,\n\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n and Edge 4 we write 1, 2, 3,", "\n\n\n\n\n-----Constraints-----\n\n1 2 3\n\n\n\n1 2 3\n\n\n\n\n-----Constraints-----\n\n, the second edge will be removed.\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n\n and Edge 4", "\n\n\n1\n2\n3\n2\n3\n4\n3\n3\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n0 1\n1 2 2\n, N", "\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n1 2\n1 1 3\n\n\n-----Constraints-----\n the output is:\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n-----Constraints-----\n\n\n connects Vertex 1 and 3, we", "\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n2\n1\n2\n\n\n-----Constraints-----\n\nN M\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n1\n2\n\n1\n, we", "\n\n\n\n-----Constraints-----\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n\n-----Constraints-----\n\n\n\n\n\n\n\n the following will be removed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n - After Edge 1, the current edge will be removed.,", "\n\n\n1 3 2\n2 3\n1 3\n\n-----Constraints-----\n1 1 2 3\n1 2 1\n1 1 1\n\n-----Constraints-----\n1 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\nN M\n\n\n\n, the first vertex is connected on the", "\n\n\n\n-----Constraints-----\n\nA valid edge is connected to a given vertex\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n1\n\n\n 2\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n-----Constraints-----\n\nN M\nu_1 v_1 c_1\n2\n\n\n\n\n, the condition is", "\n\n\n\n\n\n1\n2\n3\n\n\n\n\n2\n3\n\n\n1\n2\n1\n\n\n\n 3\n2\n1\n1\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n-----Constraints-----\n\nN M\n\n2\n1\n2\n3\n\n\n and Edge 4 the same label", "\n-----Constraints-----\n\n\n\n-----Constraints-----\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\nN M\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n - After Edge 4, the given graph is not connected.\n\n-----Constraints-----\n, the given graph", "\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n-----Constraints-----\n\n\n2\n3\n2\n3\n\n\n2\n3\n, the edge will be removed.\n\n\n\n connects Vertex 1 and 3.\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n and Edge 4, the two edges are not", "\n\n\n1 2\n2 3\n3\n\n-----Constraints-----\n1 2 2\n1 3 3\n1 2\n\n-----Constraints-----\n1 2\n1\n\n\n\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n1 2 2\n1\n\n\n\n\n\n and Edge 4, both integers written on"], "prompt": "\nQUESTION:\nGiven is an undirected connected graph with N vertices numbered 1 to N, and M edges numbered 1 to M.\nThe given graph may contain multi-edges but not self loops.\nEach edge has an integer label between 1 and N (inclusive).\nEdge i has a label c_i, and it connects Vertex u_i and v_i bidirectionally.\nSnuke will write an integer between 1 and N (inclusive) on each vertex (multiple vertices may have the same integer written on them) and then keep only the edges satisfying the condition below, removing the other edges.\nCondition: Let x and y be the integers written on the vertices that are the endpoints of the edge. Exactly one of x and y equals the label of the edge.\nWe call a way of writing integers on the vertices good if (and only if) the graph is still connected after removing the edges not satisfying the condition above. Determine whether a good way of writing integers exists, and present one such way if it exists.\n\n-----Constraints-----\n - 2 \\leq N \\leq 10^5\n - N-1 \\leq M \\leq 2 \\times 10^5\n - 1 \\leq u_i,v_i,c_i \\leq N\n - The given graph is connected and has no self-loops.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nu_1 v_1 c_1\n\\vdots\nu_M v_M c_M\n\n-----Output-----\nIf there is no good way of writing integers, print No.\nOtherwise, print N lines. The i-th line should contain the integer written on Vertex i.\nAny good way of writing integers will be accepted.\n\n-----Sample Input-----\n3 4\n1 2 1\n2 3 2\n3 1 3\n1 3 1\n\n-----Sample Output-----\n1\n2\n1\n\n - We write 1, 2, and 1 on Vertex 1, 2, and 3, respectively.\n - Edge 1 connects Vertex 1 and 2, and its label is 1.\n - Only the integer written on Vertex 1 equals the label, so this edge will not get removed.\n - Edge 2 connects Vertex 2 and 3, and its label is 2.\n - Only the integer written on Vertex 2 equals the label, so this edge will not be removed.\n - Edge 3 connects Vertex 1 and 3, and its label is 3.\n - Both integers written on the vertices differ from the label, so this edge will be removed.\n - Edge 4 connects Vertex 1 and 3, and its label is 1.\n - Both integers written on the vertices equal the label, so this edge will be removed.\n - After Edge 3 and 4 are removed, the graph will still be connected, so this is a good way of writing integers.\nUse Standard Input format\nANSWER:\n"}}