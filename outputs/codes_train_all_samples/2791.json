{"2791": {"code": ["\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\ndef trigrams(phrase):\n\t\nUse Call-Based format\n\n\t\nUse String-based format\n\n \\_ t\\_ quick \\_ re\n\n\t\n\n\n \\_\n\n\t\n\n\nUse A-Based format\n\n\n\n\n\nTrigrams are a special", "\nUse Call-Based format:\n the quick \\_\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Apython format\n\nUse Python format \\_e\\_\n\n\t\nUse Python format\n\n\nUse Python format\n \t\n\n\n\n\n\n\nthe quick\n\ntrigrams('the quick') ==\n\n\n", "\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\ntrigrams('the quick')\n\nUse String-Based format\n\n\n\n\n \\_\n\t\nUse Function-Based format\n\n \\_\n\n\t\nUse Call-Based format\n\nExample:\n\ntrigrams(phrase)\n\n\n\n_\n\n\nTrig", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\ntrigrams('the quick red') ==  the quick red\n\n\n\n\n\n\n\n\n\nUse Call-Based format \\_\n\t\n\n\nUse Call-Based format\n\n\n\n\nThe quick red trigrams\n\n\n\n\n\n\n\n\n\ntrigrams('the quick", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\ntrigrams(phrase):\n\nUse Call-Based format\n\\_ t\\_ quick\\_ g\\_ g\\_\n\t\n\n\n\n\n\n\n\n\n\ntrigrams('the quick red') == the quick red\n\n\n", "\nUse Call-Based format:\n\n\n\n\n\nthe quick\ntrigrams('the quick')\n\n\n\n\n\n\n\n\t\nUse Function-Based format\n\n\nUse Call-Based format \\_\n\n\n\n\n \\_\n\t\n\n\nUse Call-Based format\n\ntrigrams()\n\n\n\n\n\n\nTrigrams are a special case", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\ntrigrams('the quick red')\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format \\_t quick\\_ t\\_\n\nUse String-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The n-gram is a special case of", "\nUse Call-Based format:\n\n\n\n\n\n\ntrigrams('the quick red')\n\n\n\n\n\n\n\n\t\n\ntrigrams()\n\nUse Call-Based format \\_ u\\_i \\_r \\_\n\n\t\n\n\nUse String-Based format\n\t\n\n\n\n\n \\_\n\t\n\n\ntrigrams('the", "\nUse Call-Based format:\n\n\n\n\nUse String format\n\n\n\n\n\n\n\n \\_ \n\ntrigrams('the quick red') ==  the quick\\_\ntrigrams('the red') ==  the red\n\t\n\n\n \\_\t\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nTrigrams are a special case of", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n the quick\\_\n\t\n\n\n\nUse String-Based format \\_m \\_g \\_s \\_t\n\n\t\nUse Function-Based format\n\nUse Call-Format\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrigrams are a special case", "\nUse Call-Based format:\n\n\n\n\n\n\ntrigrams('the quick red') ==  the quick\n\n\n\n\n\n\n\n\n\n\n\ntrigrams(phrase):\n\nUse Call-Based format \\_k \\_r \\_r the quick\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n    The n-gram is the n", "\nUse Call-Based format:\n\n\n\n\n \\_ the quick\\_ red\n\n\n\n\n\n\n\ntrigrams('the quick') ==  the quick \n\n\n\n\n\n\nUse String format \\_\n\n\t\n\nUse String format\n\n\t\n\nthe quick\\_ e\\_ g\\_\n\n\n\n\n\n\ntrigrams('the", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n the quick\\_\n\n\n\nUse Python format\\_ \n\n\t\n\n\n \\_\n\n\t\n\n\nUse Call-Based format\n\n\n\n \\_\n\n\n\n\n\n\nTrigrams are a special case, where", "\nUse Call-Based format:\n\n\nUse String-Based format\n\n\n\ntrigrams('the quick red') ==  the quick\\_\n\n\n\n\n\n\n\n\t\n\n\n \\_ t\\_ p \\_\n\n\t\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nthe quick\\_ \n\n\n\n\ntrigrams('", "\nUse Call-Based format:\n\n\n\n\n \\_ the quick\\_ red\n\n\n\n\n\n\n\n\n\ndef\t\n\n\n\ntrigrams(phrase):\n\nUse Call-Based format\n \\_\n\t\n\n \\_k \\_r\n\n\n\n\n\nno trigrams found\n\n\n\n\n\n\n\ntrigrams('the quick", "\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n the quick\\_\n\tred\n\n\n\nUse String-Based format\n\ntrigrams(phrase):\n\nUse String-Based format\n \\_\n\t\n\nUse Call-Based format\n\n\t\n\n\n\n\n\n\n\n\t\n\n\nTrigrams are a special case", "\n:\n\n\nUse Call-Based format\n\n\n \\_\n\n\n\n\n\nUse Call-Based format\n\n\ndef\n\t\n\n\n \\_ t\\_ quick \\_ r \\_ k\\_ r \\_ re \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nTrigrams are a special case of the n", "\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Simple Format\n\n the quick\\_ r\\_\n\n\t\nUse Function-Based format\n\nUse Command-Based format\n\n\n\t\n\n\n\n\n\n\n\ntrigrams('the quick') == the quick\n\n\n", "\n:\n \n\n\n\nUse Call-Based format\n\n\n\n\n\n\ndef trigrams(phrase):\n\t\nUse Call-Format\n\t\n\n\n \\_\n\n\t\nUse String-Based format\n\n \\_\n\t\nUse Call-Based format\n\n\n\n\n\n\n \\_ e \\_ q \\_ u\\_\n\n\n\n\nTrig", "\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrigrams(phrase):\n\nUse Call-Based format\n \\_\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\t\n\n\n\n\n\n_\n\nNOTE:\n\n\n\n\n\ntrigrams('the quick red"], "prompt": "\nQUESTION:\nTrigrams are a special case of the n-gram, where n is 3. One trigram is a continious sequence of 3 chars in phrase. [Wikipedia](https://en.wikipedia.org/wiki/Trigram)\n\n - return all trigrams for the given phrase \n - replace spaces with \\_ \n - return an empty string for phrases shorter than 3\n\nExample:\n\ntrigrams('the quick red') ==  the he\\_ e\\_q \\_qu qui uic ick ck\\_ k\\_r \\_re red\ndef trigrams(phrase):\n\t\nUse Call-Based format\nANSWER:\n"}}