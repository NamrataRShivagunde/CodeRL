{"414": {"code": ["\nUse Call-Based format\n\n\n\n    def getWinner(self, arr, k: int):\n        return 1\n\n\n\n\n\n\n\n\nGiven an integer array arr, k:\n 1\n \n\n\n k = 10\n\n\n\n\n\n\n\n\n\nWinner the game\n\n\u00a0\n\n\n\n\n\nGiven an integer array arr, k", "\nUse Call-Based format\n\n\n\n    def getWinner(self, arr, k):\n      return arr[k]\n\n\n\n\n\n\n\n    arr = [1, 2, 3]\n\n\n\n\n   \n       \n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 1:\n\n\n\n\nGiven an integer array arr", "\nUse Call-Based format\n\n\n\n    def getWinner(self, arr, k):\n        return arr[k]\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narr = [2,3]\n\n\n\nGiven an integer array arr", "\n\n\n \u00a0\n\n    Use Call-Based format\n\n    def getWinner(self, arr: List[int], k: int):\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n arr[0] == arr[1] == arr[2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \u00a0\n \ufffd", "\n\n\n\n   \n    win_count = 1\n\n\n\n\n\n\n   \n    win_count = 10\n\n\n\n\n\nUse Call-Based format\n\n\n\n  \u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> arr = [3,5,7,9]\n\n\n\n\n\n  arr = [2,", "\nUse Call-Based format\n\n\n\n\n\n    Use Call-Based format\n\n\n\n\n\n\n    arr[0] <= arr[1] <= arr[2] <= arr[k]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, and an integer k:\n\n\n\n\nGiven an integer array arr, k", "\nUse Call-Based format\n\n\n\n    def getWinner(self, arr, k: int):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 10\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 2\n\nGiven", "\nUse Call-Based format\n\n\n\n    def getWinner(self, arr: List[int], k: int):\n        return arr[k]\n\n\n\n\n\n\n\n\n\nOutput: 8\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= arr.length <= 10^6\n\n\n\n\nGiven an integer array arr of", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    win_count\n\n    arr, k\n\n    k\n\n   \n\n    arr, k\n\n\n\n\n\n\n  win_count\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narr[0] = 10\n\n\n\n\nGiven an integer array arr", "\nUse Call-Based format\n\n\n\n\n\n\nReturns an integer array of winners.\n\n\n\n\nGiven an integer array arr of distinct integers and an integer k:\n\n\nGiven an integer array arr of distinct integers and an integer k:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr of distinct integers and k:\n\n\nGiven an", "\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nArgument:\n  arr\n  k\n\nExplanation:\n\n    arr\n      k\n\nExplanation:\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    arr\n    k\n\n   \n\n\nGiven an", "\nUse Call-Based format\n\nExplanation:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k, return the winner of the game.\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\nGiven an integer array arr, k", "\n\n\n\n    def getWinner(self, arr, k):\n    return arr[k]\n    \nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an integer array arr of distinct integers and an integer k:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 10\n\n\n\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nInput: arr, k: int\nOutput: 10\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n arr       | k          | win_count\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput: arr, k:\n\nOutput:\n\n", "\nUse Call-Based format\nUse Call-Based format.\n\nExample:\n    def getWinner(self, arr, k):\n        return k\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 2,\n\n\n\n\n\n\n\n\n\n\narr = [1]\n\n\nGiven an integer array arr", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def getWinner(self, arr: List[int], k: int):\n   \n    \n\n\n\nGiven an integer array arr, k:\n\n\n\n\n k = 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n  arr[0] = 2\n ", "\nUse Call-Based format\n\n\n\n    def getWinner(self, arr: List[int], k: int):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an integer array arr of distinct integers and an integer k:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr,\nGiven an integer array", "\nUse Call-Based format\nUse Call-Based format\n\n\n    def getWinner(self, arr, k) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n k = 3\n\nExample 5:\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k = 10\n\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n\n    def getWinner(self, arr, k):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an integer array arr, and an integer k:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr, k:\n\n\n\n\n\n\nGiven an integer array arr", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def win(self, arr, k: int):\n    return arr[k]\n\n\n\n\n\n\n\n\n  1   | arr[1]\n  2     | k\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array arr of distinct"], "prompt": "\nQUESTION:\nGiven an integer array arr of distinct integers and an integer k.\nA game will be played between the first two elements of the array (i.e. arr[0] and arr[1]). In each round of the game, we compare arr[0] with arr[1], the larger integer\u00a0wins and remains at position 0 and the smaller integer moves to the end of the array. The game ends when an integer wins k consecutive rounds.\nReturn the integer which will win the game.\nIt is guaranteed that there will be a winner of the game.\n\u00a0\nExample 1:\nInput: arr = [2,1,3,5,4,6,7], k = 2\nOutput: 5\nExplanation: Let's see the rounds of the game:\nRound |       arr       | winner | win_count\n  1   | [2,1,3,5,4,6,7] | 2      | 1\n  2   | [2,3,5,4,6,7,1] | 3      | 1\n  3   | [3,5,4,6,7,1,2] | 5      | 1\n  4   | [5,4,6,7,1,2,3] | 5      | 2\nSo we can see that 4 rounds will be played and 5 is the winner because it wins 2 consecutive games.\n\nExample 2:\nInput: arr = [3,2,1], k = 10\nOutput: 3\nExplanation: 3 will win the first 10 rounds consecutively.\n\nExample 3:\nInput: arr = [1,9,8,2,3,7,6,4,5], k = 7\nOutput: 9\n\nExample 4:\nInput: arr = [1,11,22,33,44,55,66,77,88,99], k = 1000000000\nOutput: 99\n\n\u00a0\nConstraints:\n\n2 <= arr.length <= 10^5\n1 <= arr[i] <= 10^6\narr contains distinct\u00a0integers.\n1 <= k <= 10^9\nclass Solution:\n    def getWinner(self, arr: List[int], k: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}