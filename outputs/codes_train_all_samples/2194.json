{"2194": {"code": ["\nExamples-----\n\n\n\n\n\n-----Input-----\n\n7\n1 2 1 4 4\n\n5 4 4 4 4\n\n\n\n\n\n\n\n\n\n\n\n\n1 1 2 3 4 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n7\n2 2 1 4", "\n\n-----Examples-----\nInput\n7\n1 2 3 4 4\n\n\n\n\n-----Examples-----\n\n\nInput\n3\n\n\n\n\n6\n1 1 2 3 4 4\n\n\n\n\n\n\n\n1 2 3 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n1 2", "\n\n-----Examples-----\n\nExamples:\n\n7\n2 4 4\n\n\n\n\n\n\n\n\n\n\n\nInput-----\n\n\n\n\n\n\n\n\n\n\n\n\n1 2 3 4 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n2 1", "\n\n-----Input-----\n\n[Image]\n\n\n\n\n\n\n\n\n\n\n\nInput-----\n\n[Image]\n\n\n\n\n1 1 2 3 4 5\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n5\n\n\n\n9\n\n2 1 2 1 4 4\n\n", "\n\nExamples-----\n\nInput\n\n7\n1 2 2 3 4 4\n\n\n\n\n\n\n\n\n\n1 1 2 2 3 4 5 6 6\n\n\n\n\n\n\n1 1 2 2\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n7\n2", "\nExamples-----\nInput\n7\n2 1 1 4\n\n\n\n\n\nInput\n7\n2 1 1 1 4\n\n\n-----Examples-----\nInput\n7\n4 4 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n2 3 4\n\n\n\n\n\n\n\n\n6\n2", "\n\n-----Examples-----\n\n\n\n\n\n\nExample\n\n7\n1 2 2 3 4 4\n\n7\n1 2 2 3 4\n\n7\n1 2 2 3 4\n\n7\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n7\n2", "\nExamples-----\n\n\n\n\n[Image]\n\n\n\n\nInput-----\n\n7\n1 2 3 4 4 4 4\n\n\n\n3\n4 4 4\n\n5\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n\n2 2 4\n\n1", "\n\n-----Input-----\n\n\n\n\n\n-----Output-----\n\n\n\n\nInput-----\n\n1 1 1 1 1\n\n2 2 3 4 4 5 4 6\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 2 2 3\n\n\n\n8\n1", "\nExamples-----\n\n\n\n\n\n\nExamples-----\n\nInput\n6\n1 2 3 4\n5\n\n1 2 3 3 4\n\n1 1 2 3 4\n\n1 2 2 3 4\n\n1 2 1 3 4 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8\n\n1 2 2 4", "\nExamples-----\n\n\n\n\n\n\n\n\n7\n2 1 4 4\n\n\n7\n2 1 1 2\n\n5 3 4 4\n\n5 4 4\n\n4\n\n\n\n\n\n\n\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n1 2 2 3 4 4\n\n\n\n\n8\n2", "\n\n-----Examples-----\n\n\n\n\n\n\nInput\n7\n1 2 1 3 4\n\n5 3 2 4 3 4 4\n\n6\n\n\n\n\n\n6 4 3 3 4\n\n\n\n1 2 3\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7 2 3 4 4\n", "\nExamples-----\n\n\n\n\n\n\n\nExamples-----\n\n7\n1 2 3 4\n\n5 4\n6 4\n\n6 4\n\n4 4\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 1 2 3 4 4 4\n\n\n\n\n\n8\n\n1", "\nExamples-----\n\n\n\n1 2 3 4 4\n\n1 3 4 4\n\n1 2 3 4 4 4\n\n1 2 3 4 4\n\n1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n8\n\n1 2 3", "\n[Image]\n\n\n\n\n\n\nExamples-----\nInput\n7\n1 2 1 4 4\n\n5\n\n1 2 2 3 4 4\n\n5\n\n6\n\n\n\n\n\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n2 1 1\n5 4\n5\n\n\n\n\n\n\n7\n2 1 1", "\nExamples-----\nInput\n7\n4 1 1 1\n\n6 1 1\n\n5 1 2 1 2\n\n6 1 1\n\n\n\n\n\n\n\nInput\n6\n\n\n\n\n\n\n\n1 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7\n2 1 4 4\n", "\nExamples-----\n\n\n\n\n\n-----Input-----\n\n\n\n\n [Image]\n\n\n\n1 2 2 3 4 4 3 4 3 4\n\n\n\n\n\n\n\n1 2 1 1 4\n\n\n\n3 3 4 3 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n8\n\n2 3", "\nExamples-----\n\n[Image]\n\n\n\n\n\n\n\n\n\n1 2 3 4 4\n\n5 6 6\n\n\n6\n\n3\n2 1 4\n\n\n6\n5\n\n6\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n1\n\n\n\n\n8\n\n1 2 3", "\n\n-----Input-----\n\n[Image]\n\n\n\n\n\n[Image]\n\n\n\n\n\n\nInput\n6\n2 1 1 1 1 2 1\n\n\n\n\n\n2 1 1\n\n\n1 1 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 2 3 4\n\n\n\n\n7\n2", "\n\n-----Example-----\nExample\n\n\n\n\n\n\n\nExample\n\nInput-----\n\n7\n3 3 4 5 5 6 7 7 8 7 9 9 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----"], "prompt": "\nQUESTION:\nBarney lives in country USC (United States of Charzeh). USC has n cities numbered from 1 through n and n - 1 roads between them. Cities and roads of USC form a rooted tree (Barney's not sure why it is rooted). Root of the tree is the city number 1. Thus if one will start his journey from city 1, he can visit any city he wants by following roads.\n\n [Image] \n\nSome girl has stolen Barney's heart, and Barney wants to find her. He starts looking for in the root of the tree and (since he is Barney Stinson not a random guy), he uses a random DFS to search in the cities. A pseudo code of this algorithm is as follows:\n\n\n\nlet starting_time be an array of length n\n\ncurrent_time = 0\n\ndfs(v):\n\n        current_time = current_time + 1\n\n        starting_time[v] = current_time\n\n        shuffle children[v] randomly (each permutation with equal possibility)\n\n        // children[v] is vector of children cities of city v\n\n        for u in children[v]:\n\n                dfs(u)\n\n\n\nAs told before, Barney will start his journey in the root of the tree (equivalent to call dfs(1)).\n\nNow Barney needs to pack a backpack and so he wants to know more about his upcoming journey: for every city i, Barney wants to know the expected value of starting_time[i]. He's a friend of Jon Snow and knows nothing, that's why he asked for your help.\n\n\n-----Input-----\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of cities in USC.\n\nThe second line contains n - 1 integers p_2, p_3, ..., p_{n} (1 \u2264 p_{i} < i), where p_{i} is the number of the parent city of city number i in the tree, meaning there is a road between cities numbered p_{i} and i in USC.\n\n\n-----Output-----\n\nIn the first and only line of output print n numbers, where i-th number is the expected value of starting_time[i].\n\nYour answer for each city will be considered correct if its absolute or relative error does not exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n7\n1 2 1 1 4 4\n\nOutput\n1.0 4.0 5.0 3.5 4.5 5.0 5.0 \n\nInput\n12\n1 1 2 2 4 4 3 3 1 10 8\n\nOutput\n1.0 5.0 5.5 6.5 7.5 8.0 8.0 7.0 7.5 6.5 7.5 8.0\nUse Standard Input format\nANSWER:\n"}}