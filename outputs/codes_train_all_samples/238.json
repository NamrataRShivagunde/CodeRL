{"238": {"code": ["\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n    return maxProfit\n\nSay you have an array for which the price is on day 1\n\n   \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nSay you have an array for which the array containsS", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n   \n\n\nSay you have an array for which you have an array for which the price on day i.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\nSay you have an array for which the price is on day 0.\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array for", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n\n\n\n   \n   \n    print(self.maxProfit(prices))\n\nUse Call-Based format\nSay you have an array for which you have an array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nSay you have an array for which you have a class:\n\n\n\n\n\n   \n\n\nSay you have an array for which you have an array\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n   \n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nSay you have an array\n\n\n\n\nSay", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n   \n   \n\n\nSay you have an array for which the input is an array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array for which the", "\nUse Call-Based format\nUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n\n\nUse Call-Based format\n\n\n\n   \n\n\nSay you have an array for which you have a price\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array for which the", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\nSay you have an array for which the price is in the array.\n\n   \n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n   \n\nUse Call-Based format\nSay you have an array for which the price is on day i.\n\n   \n\n\n\n\n\n\n\n\n\n\nSay you have an array for which prices are\n\n\n\nSay you", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\nClass Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\nSay you have an array for which you have an array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array for", "\nUse Call-Based format\nUse Call-Based format\n\u00a0\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\nSay you have an array for which you have an array for which the prices.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\nSay you have an array for which you have an array for which the price is on day 0.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array\nS", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n   \n\n\nSay you have an array for which you have an array for which the prices are on day i.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\n\n\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\nUse\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nSay you have an array for which", "\nUse Call-Based format\nUse Call-Based format\n\u00a0\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\nSay you have an array for which you have a price for each stock on day i.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n    maxProfit(self, prices) -> int\n\nUse Call-Based format\n\nCLASS\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nSay you have an array for which the price is on a day.\n\n\n   \n\n\nSay you have an array for which the price is on the day.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nOPTIMIZATION:\nUse Call-Based format\n\n\nUse Call-Based format\n\nInput:\n        prices\n\nOutput:\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Prices:\n    Prices"], "prompt": "\nQUESTION:\nSay you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete at most two transactions.\n\nNote:\u00a0You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\n\nExample 1:\n\n\nInput: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n\u00a0            Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n\nExample 2:\n\n\nInput: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n\u00a0            Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n\u00a0            engaging multiple transactions at the same time. You must sell before buying again.\n\n\nExample 3:\n\n\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\nclass Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}