{"4079": {"code": ["\n\n\nUse Call-Based format\n\n\n\n\n\n\nWrite\n\t\t\nWrite\n```python\nstring.encode()```\n:\n\n\n\n\t\nUse Unicode format\n\n\n\n\n\n\nWrite\n```python\ndef encode(string)```\n\nWrite Call-Based format\n\n\n\n\n:\n\n\n\n\n\nWrite\n``", "\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\nRead\n```python\n\nWrite\n```python\n\n:\n\n\n\n\t\nWrite to string:\n\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\nRead\n```python\n\n\n:\n\n\n\n:\n\n``", "\n\nUse Call-Based format\n\n\n\n\t\nUse String-Based format\n:\n\n\nWrite\n```python\n\n\nWrite\n```python\n\t\n:\n\n\n\n\t:\n:\n\nUse Call-Based format\n\n\n:\n\n\n\n\nWrite\n```python\n```\n\n\n:\n\n\n```\n:\n\n", "\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\t\nWrite\n```python\n\t\n:\n\n\n\n\t\nWrite\n```python\nencode(string):\n\t\nUse Call-Based format:\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\nWrite\n```python\n\n\n:\n\n\n:\n\n", "\n\n\nUse Call-Based format\n\n\t\n\n:\n\n\n`\n\n\nRead\n```python\n\n:\n\n\n\nRead\n```python\n\n\t\nUse Call-Based format\n:\n\n\n:\n\n\nUse Call-Based format\n\n\n:\n\n\n\nWrite\n```python\n\n\n\n:\n\n\n:\n\n", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nWrite\n```python\n\t\nWrite a string ```string```\n:\n\n\n\n\t\nWrite Call-Based format:\n:\n\n\n\n\n:\n\n\n\nWrite\n```python\n```\n\n\n\n:\n\n\n\nWrite\n```python\n\n:\n", "\n\n\nUse Call-Based format\n\n\n\nWrite\n:\n\n\n\n\n\nWrite\n```python\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n:\n\n\n\n\nRead\n```python\n```\n\n\n\n:\n\n\n```\n\n:\n\nWrite\n", "\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n:\n\n\n`\n\n\nWrite\n```python\n\n:\n\n\n\n\n\nWrite\n```python\ndef encode(string):\n\t:\n:\n\n\n\n:\n\n\nWrite\n```python\n```\n\n:\n\n\n\nWrite\n\nWrite\n", "\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\nWrite\n```python\n\t\n:\n\n\nUse String-Based format\n\n\nRead\n```python\n\n\n:\n\n:\n\n\n\n:\n\n\n\nWrite\n```python\n```\n\n:\n\n\n\nWrite\n```\n", "\n\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\t\nWrite\n```python\n\t\n:\n\n\n\n\t\nUse Call-Based format:\n\n:\n\nUse Call-Based format\n\n\nWrite\n:\n\n\n\n\nRead\n```python\n```\n\n\n:\n\n\n\n\n:\n\n``", "\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\nWrite\n\t\nWrite\n```python\nencode(string)```\n\nUse Call-Based format:\n\n\nUse Call-Based format\n\n\n\t\n:\n\n\n\n:\n\n\n\nWrite\n```python\n```\n\n\n\n:\n\n\n\n\nWrite\n``", "\n\n\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n:\n\n\n\n\nWrite\n```python\n\n:\n\n\n\n\t\nUse Unicode format\n:\n\n:\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\nRead\n```python\n```\n\n\n:\n\n\n\n\n\nRead\n``", "\n\n\n\nUse Call-Based format\n\n\nWrite\n```python\nencode(string)```\n\nUse Call-Based format\n:\n\n\n\nRead\n```python\n\nWrite\n```python\n\t:\n\n\n\t::\n\n\n\n:\n\n\nWrite\n```python\n\n\n:\n\n\n:\nThis is follow up from", "\n\n\nUse Call-Based format\n\t\n\n:\n\n\n\n\n\n\t\n:\n\n\n\n\n\n\nWrite\n```python\ndef encode(string):\n\t\nWrite Call-Based format:\n:\n\n\n\n\n\n:\n\n\n\n\nWrite\n```python\n\n\n\n:\n\n\n\n\n\n\nRead\n```python", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n:\n\n\n\nWrite\t\nWrite\n```python\n# string\n```\n:\n\n\n\n\n\nWrite\n```python\n\nWrite string\n:\n:\n\n\n:\n\n\nUse Unicode format\n\n\n\n\n\n\n\n\n\n\n\nThis is follow", "\n\nUse Call-Based format\n\n\n\n\t\n\nUse Call-Based format\n:\n\n\n\n\nRead\n```python\n\n\nWrite\n```python\n\n:\n\n\n\t:\n\n:\n\n\n\n:\n\n\n\n\n```python\n```\n\n\n\n:\n\n\n\n\n:\n\nWrite\n```python\n", "\n\nUse Call-Based format\n\n\n\n:\n\n\n\nWrite\n```python\n\n\t\nWrite\n```python\n\nWrite\n```python\ndef encode(string):\n\t\n:\n\n\n\n:\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\nWrite\n```python\n\n\n:\n\n\n:\n\n", "\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\t\nWrite\n```python\n\t\n:\n\n\n\n\t:\n\n\n:\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\nWrite\n```python\n```\n\n:\n\n\n\n:\n\n``", "\n\n\nUse Call-Based format\n\t\nUse Call-Based format\n:\n\n\nWrite\n```python\n\nWrite\n```python\n\t\n:\n\n\n\n\t\nUse Call-Based format:\n\n\nWrite\n```python\nstr = string\n:\n\n\n:\n in\n\nRead\n```python\n\n\n:\n\n\n:\n", "\n\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\t\nRead\n```python\n\t\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\nRead\n```python\n```\n\n\n:\n\n\n\n\n\nWrite\n```"], "prompt": "\nQUESTION:\nThis is a follow up from my kata The old switcheroo\n\nWrite\n```python\ndef encode(str)\n```\nthat takes in a string ```str``` and replaces all the letters with their respective positions in the English alphabet.\n\n```python\nencode('abc') == '123'   # a is 1st in English alpabet, b is 2nd and c is 3rd\nencode('codewars') == '315452311819'\nencode('abc-#@5') == '123-#@5'\n```\nString are case sensitive.\ndef encode(string):\n\t\nUse Call-Based format\nANSWER:\n"}}