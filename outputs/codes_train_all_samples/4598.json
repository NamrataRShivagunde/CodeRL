{"4598": {"code": ["\t\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\ndef call(n1, n2, o):\n\t\nUse Call-Based format\n\n:\n`\n\n\n\n:\n\n\n:\n:\n\n1 - 1 === 10\n:\n:\n`\no =\n\n```", "\n\n\n\n\n\nUse Call-Based format\n1 + 1 === 10\n10 + 100 === 20\n1 - 10 === 20\n\nExamples:\n```\n1 - 1 === 10\n```\n1 + 10 === 10\n1 - 100 === 20\n```\n\n,\n\n`,\n::\n\n::\n\n:\n\n`\n\n\n```", "\nUse Call-Based format\t\nUse Call-Based format\n\t\nUse Call-Based format\n:\nUse Call-Based format\n\ndef\n\t\nUse Call-Based format\n\ndef format(n, n2, o):\n\t\n\t:\n`\n\n\n::\n\n::\n\n:\n\n\n\n1 - 10 === 1\n\n\n```", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\ndef call(n):\n\t\nUse Call-Based format\n\n\n:\n\n`\n\n\t\n:\n:\n\n\n\n:\n\n```\n\n\n\n\n\n\n```\n\n\n```\n\n\n```\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\ndef call(o):\n\t\nUse Call-Based format\n\ndef calculate(n, o):\n\n\n`\n\n\n\n:\n\n::\n\n:\n:\n\n\n\n\n\n```o```", "\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\ndef\n\n\ndef call(n1, n2, o):\n\t\nUse Call-Based format\n\n\n\n\n`\n\n\n::\n\n::\n\n:\n\n\n`\n\n\n\n```o``", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n`\n1 + 1 === 10\n10 + 10 === 100\n\nReturns:\n```\nstring\n\n\n\n\n\t\n:\n`\n,\n:\n:\n\n\n:\n:\n\n```\n\n\n\n\n```\no = add - subtract\n\n\n```", "\t\nUse Call-Based format\t\nUse Call-Based format\n\n\t\nUse Call-Based format\n`\ndef calculate(n1, n2, o):\n\nUse Call-Based format\n\n\n\n:\n`\n\n\n:\n:\n\n\n:\n\n1 - 10 === -10\n10 - 100 === -100\n\n\n\n\n\n```o", "\n\n\n\n\n\n\nUse Call-Based format\n\ndef calculate(n1, n2, o):\n\t\nUse Call-Based format\ndef calculate(n1, n2, o):\n\t\nUse Call-Based format\n\ndef calculate(n1, n2, o)\n\n\n\n\n\n::\n\n::\n,\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n`\n\n\n\n\t\nUse Call-Based format\n\nRETURN:\n\t\nUse Call-Based format\n\nRETURN:\n\n\n:\n`\n\n\n\n:\n\n::\n\n```\n```\n\n`\no =\n\n\n```\n\n", "\n\t\n\n\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\n\ndef call(n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef call(n):\n\t\n\n:\n:\n\n\n\t:\nUse Call-Based format\n\n\n\n\n\n\n\n\n    The kata kata should write", "\t\nUse Call-Based format\t\n\n\t\nUse Call-Based format\t\nUse Call-Based format\n`\n1 + 1 === 10\n10 + 100 === 100\n\nReturns:\n```\n2 + 1 === 10\n\n,\n:\n`\n\n\n:\n:\n\n::\n\n:\n\n`\nn1 = 10\nn2 =\n\n", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\ndef\n\t\nUse Call-Based format\nINPUT:\n\t\nUse Call-Based format\nOUTPUT:\n\n:\n`\n,\n\n:\n\n\n:\n\n, add, subtract\n\n```\n\n\n\n\n\n\n\n\n\n```\n", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\ndef calculate(n1, n2, o):\n\t\nUse Call-Based format\n\n:\n`\n\n\t\n:\n:\n\n\n::\n\n```\n\n```\n\n\n\n\n1 - 10 === 1\n\n\n``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef call(n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n\n\n\nUse Call-Based format:\n\n```\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef\n\t\nUse Call-Based format\n\nUse Call-Based format\ndef call(n, o):\n\n\n\n\n\n\n:\n:\n\n::\n\n\n:\n\n\n\n\n\n\n\n```n1", "\n\n\n\n\nUse Call-Based format\n\n`\n1 - 1 === -1\n10 - 100 === -10\n\nUse Call-Based format\n\nExample:\n```\n\nUse Call-Based format\n\n\n\n\t\n\n\n`\n\n\t\n\n:\n\n::\n\n\t\n\n\n\n\n\n\n\n\n```\n#```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\ndef call(n1, n2, o):\n\t\nUse Call-Based format\n\n\n:\n`\n\n\n:\n:\n\n:\nUse Call-Based format:\n\n```\n\n\n\n\n\n```\n\n\n```\n", "\nUse Call-Based format\n\n\t\nUse Call-Based format\nUse Call-Based format\n`\n1 + 10 === 10\n10 + 100 === 10\n\n\n\t\n\n:\n`\n\n\t\n\t\nUse Call-Based format:\n:\n\n:\n:\n,\n\n\n\n\n\n\n\n\n\n\t```n1`````\n``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\ndef call(n, n2, o):\n\t\nUse Call-Based format\n\n:\n`\n\n\t\n\t\n:\n:\n\n\t\nUse Call-Based format:\n\n\n\n\n\n1 - 1 === 10\n10 - 100 ===\n\n"], "prompt": "\nQUESTION:\nIn this kata you need to write a function that will receive two strings (```n1``` and ```n2```), each representing an integer as a binary number. A third parameter will be provided (```o```) as a string representing one of the following operators: add, subtract, multiply.\n\nYour task is to write the calculate function so that it will perform the arithmetic and the result returned should be a string representing the binary result.\n\nExamples:\n```\n1 + 1 === 10\n10 + 10 === 100\n```\n\nNegative binary numbers are usually preceded by several 1's. For this kata, negative numbers can be represented with the negative symbol at the beginning of the string.\n\nExamples of negatives:\n```\n1 - 10 === -1\n10 - 100 === -10\n```\ndef calculate(n1, n2, o):\n\t\nUse Call-Based format\nANSWER:\n"}}