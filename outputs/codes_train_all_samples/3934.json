{"3934": {"code": ["\n\n\n## Task:\n\n# Task\n## Task\n\n\n## Task:\n\n\n# Task\n\n\n## Task:\n\n# Task\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n      11\n     \n\n\n\n\n\n\n\n\n\n## Task:\n\n\n### Task:\n\n\n\n\n\n\n###", "\n\n\n## Task:\n\n# Task\n# Task\n\n# Task\n# Task\n# Task\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    11\n      11\n      4\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n## Task:\n\n###", "\n## Example:\n# Example\n## Example:\n# Example\n# Example\n# Example\n# Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n\n\n\n## Task:\n\n\n\n      11\n      43\n      4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n\n### Task", "\n## Example:\n## Task:\n## Task\n## Task:\n\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n### Task:\n\n      11\n      4\n\n### Examples:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###", "\n\n\n## Task:\n\n# Task:\n\n## Task:\n\n\n\n### Rule:\n\n# Rule:\n\n# Task:\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n\n\n\n###", "\n## Example:\n# Example\n## Example\n# Example\n# Example\n# Example\n# Example\n#\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n\n\n\n\n## Task:\n\n\n\n      11\n     \n\n\n\n\n\n\n\n\n\n## Task:\n\n## Task:\n\n\n\n\n\n\n## Task:\n", "\n## Example:\n## Task\n## Task\n\n\n\n\n## Example:\n## Task:\n\n## Task:\n## Task\n\n\n\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n      11\n      4\n      11\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n", "\n## Example:\n## Task:\n## Task\n## Task\n\n\n\n# Task:\n# Task\n\n## Task:\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n\n\n\n     \n\n\n\n\n### Rules/Note:\n\n\n\n\n\n\n\n\n\n\n\n\n### Task", "\n\n\n# Task:\n### Task:\n# Task:\n\n### Task:\n## Task:\n# Task\n\n### Task:\n\n### Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      11\n      11\n    \n\n\n### Rules:\n\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n\n", "## Task:\nUse Call-Based format## Task:\n\n## Task:\n\n\n\n\n\n\n\n## Task:\n\n\n\n\n\n### Task:\n\n\n\n\n## Task:\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n###", "## Task:\n## Task:\n\n\n\n\n# Task:\n\n\n\n\n\n### Task:\n### Task:\n\n\n\n# Task:\n\n\n\n\n\n\n      11\n      11\n      11\n      1\n      2\n      3\n    \n### Rules:\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n###", "\n## Task:\n## Task\n## Task:\n## Task\n## Task:\n\n\n\n## Task:\n\n\n## Task:\n\n\n\n\n\n## Task:\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n## Task:\n\n### Task:", "\n## Bowards:\n##\n#\n#\n#\n\n#\n\n\n\n## Task:\n\n#\n\n\n\n\n\n\n\n### Task:\n\n\n\n\n# Task:\n\n\n\n\n\n\n\n\n## Task:\n## Task\n\n### Task:\n\n\n\n\n\n\n\n\n\n### Task:\n\n\n### Task:", "\n## Task:\n\n\n## Task:\n\n\n## Task:\n\n\n\n# Task:\n### Task:\n\n\n\n## Task:\n\n## Task:\n\n## Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n     \n\n\n\n\n\n\n\n## Task:\n\n\n\n", "\n\n\n## Task:\n\n\n\n\n\n### Task:\n\n\n### Task:\n\n## Task:\n\n\n\n## Task:\n\n\n\n### Task:\n\n\n\n\n\n\n### Task:\n\n\n   \n      (n)\n      (n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n\n", "\n## Task:\n# Task\n\n\n\n\n## Task:\n# Task\n# Task\n\n# Task\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n## Task:\n\n\n      11\n      11\n      11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n", "\n\n\n\n## Task:\nUse Call-Based format\n\n\n## Task:\n## Task:\n\n\n\n\n## Task:\n\n### Task:\n## Task:\n\n\n\n\n\n\n      11\n      11\n      11\n\n### Rules/Note:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n\n   ", "\n# Task:\n# Task\n\n\n\n# Task:\n# Task\n\n\n\n## Task:\n\n## Task:\n\n\n\n# Task:\n## Task:\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n### Task:\n\n## Task:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n# Task:\n", "\n## Tasks:\n## Task:\n## Task\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n## Task:\n# Task:\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n## Task\n\n\n\n\n\n### Task:\n\n\n\n\n# Task:\n\n\n### Task:\n", "\n\n\n# Task:\n# Task\n\n## Examples:\n## Examples\n## Examples\n# Task\n\n### Rules:\n### Task\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n\n### Task:\n\n\n\n     \n\n\n\n## Task:\n\n\n\n\n\n# Task:\n\n#"], "prompt": "\nQUESTION:\n## Task:\nYou have to write a function `pattern` which returns the following Pattern (See Pattern & Examples) upto `n` number of rows. \n\n* Note: `Returning` the pattern is not the same as `Printing` the pattern.\n\n### Rules/Note:\n* If `n < 1` then it should return \"\" i.e. empty string.\n* There are `no whitespaces` in the pattern.\n\n### Pattern:\n\n    (n)(n-1)(n-2)...4321\n    (n)(n-1)(n-2)...432\n    (n)(n-1)(n-2)...43\n    (n)(n-1)(n-2)...4\n    ...............\n    ..............\n    (n)(n-1)(n-2)\n    (n)(n-1)\n    (n)\n    \n### Examples:\n\n* pattern(4):\n\n      4321\n      432\n      43\n      4\n    \n* pattern(11):\n\n      1110987654321\n      111098765432\n      11109876543\n      1110987654\n      111098765\n      11109876\n      1110987\n      111098\n      11109\n      1110\n      11\n\n\n~~~if-not:cfml\n* Hint: Use \\n in string to jump to next line\n~~~\n~~~if:cfml\n* Hint: Use chr(10) in string to jump to next line\n~~~\n\n[List of all my katas](\"http://www.codewars.com/users/curious_db97/authored\")\ndef pattern(n):\n\t\nUse Call-Based format\nANSWER:\n"}}