{"4739": {"code": ["\nUse Call-Based format\n\n\nsame_col_seq(1, 1, 'blue')\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nsame_col_seq()\n```\n\n\n\n\n\n\npython\nsame_col_seq()\n```\n\n\n\n", "\nUse Call-Based format\n\n\nsame_col_seq(val, k, colour)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nsame_col_seq(val, k, colour)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nsame_col_seq(3, 3)\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\npython\nsame_col_seq(3, 3,'red') == [3, 4, 2, 3, 3]\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nsame_col_seq()\n```\n\nval\n```\n\n\n\n", "\nUse Call-Based format\n\n\nsame_col_seq(1, 3, 'blue')\n\n\n\n\n\n\n\n\n\npython\n#same_col_seq(val, k, colour)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nsame_col_seq()\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\nsame_col_seq(val, k, col)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\npython\nterm   value   colour\n1       k       3       4     5       7       11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* If you need to use the", "\nUse Call-Based format\n\n\nsame_col_seq(1, 3, 'blue')\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n0 < k < 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nsame_col_seq(3, 3,'red')\n```\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n- `val`, an integer number:\n1 < val < 3\n1 < k < 3\n1 < k < 2\n1 < k < 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe have the same number of colours with the same value:\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\nsame_col_seq()\n\nUse Call-Based format\n\n\n\n\npython\n\nsame_col_seq()\n\nUse Call-Based format\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe have the same number of colours in a sequence\n\n\n\n\n\n* Nmber of tests", "\nUse Call-Based format\n\n\n\n\n\n\npython\nsame_col_seq(3, 6, 'blue')\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe have the same colours and values in the same sequence:\n\n- `val`, an integer number\n\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\n\n\n\n\n\n\npython\nsame_col_seq(1, 2, 'blue') == [1, 2, 3]\n\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\npython\nsame_col_seq()\n\n\n\n\n```python", "\nUse Call-Based format\n\n\nval, k, colour\n\n```python\nsame_col_seq(3, 5,'red')\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nsame_col_seq()\n```\n\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\nsame_col_seq(3, 3, 'blue')\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe have the same number of terms with different colours:\n\n- `val`, an integer number\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\n\n\n\nthe function is called with a number of arguments and a function\n\n- `val`, an integer number\n- `colour`, a string\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nsame_col_seq()\n```\n\n\n\n\n\n\n\n\n```", "\n\nsame_col_seq()\n\nUse Call-Based format\n\n\n\n\npython\nsame_col_seq()\n\n\n\npython\nterm   value   colours\ncolours   colours\n```python\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\npython\nsame_col_seq()\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nsame_col_seq()\n\nThe function can be used in two ways:\n\n```python\nsame_col_seq('blue')\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\n\n\n\npython\nterm   value   colour\nk   col   col\n```python\nterm   k   col\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nsame_col_seq(3, 3,'red')\n\n\n\n\n```python\n", "\n\nUse Call-Based format\n\n\nsame_col_seq()\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n```python\nsame_col_seq()\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python", "\n\nsame_col_seq(val, k, col)\n\nUse Call-Based format\n\n\n\n\npython\n\n\n\npython\n2* k* val == 3* k * val\n```python\n3* k * val == 1\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ```\n\nsame_col_", "\n\n\nsame_col_seq(val, k, colour)\n\nUse Call-Based format\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n```python\nsame_col_seq()\n```\n\n\n\n\n\n\n\n\n\n\nWe have the same number of values with colours\n\n\n\n\n\n```python\nsame", "\n\nUse Call-Based format\n\nsame_col_seq(val, k, colour)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nval, k, colour\nk   k, col\n\n```python\nval  k  col\n\n\n\n\n\n\n\n\n\n\n\n  we have the numbers with the same"], "prompt": "\nQUESTION:\nWe have the numbers with different colours with the sequence: ['red', 'yellow', 'blue'].\n\nThat sequence colours the numbers in the following way:\n\n 1   2   3    4    5   6  7   8   9   10   11  12   13 .....\n\nWe have got the following recursive function:\n\n  ```\nf(1) = 1\nf(n) = f(n - 1) + n\n```\n\nSome terms of this sequence with their corresponding colour are:\n\n```\nterm   value   colour\n1        1     \"red\"\n2        3     \"blue\"\n3        6     \"blue\"\n4       10     \"red\"\n5       15     \"blue\"\n6       21     \"blue\"\n7       28     \"red\"\n```\n\nThe three terms of the same colour \"blue\", higher than 3, are: `[6, 15, 21]`\n\nWe need a function `same_col_seq(), that may receive three arguments:\n\n- `val`, an integer number\n- `k`, an integer number\n- `colour`, the name of one of the three colours(red, yellow or blue), as a string.\n\nThe function will output a sorted array with the smallest `k` terms, having the same marked colour, but higher than `val`.\n\nLet's see some examples:\n\n```python\nsame_col_seq(3, 3, 'blue') == [6, 15, 21]\nsame_col_seq(100, 4, 'red') == [136, 190, 253, 325]\n```\n\nThe function may output an empty list if it does not find terms of the sequence with the wanted colour in the range [val, 2* k * val]\n\n```python\nsame_col_seq(250, 6, 'yellow') == []\n```\n\nThat means that the function did not find any \"yellow\" term in the range `[250, 3000]`\n \nTests will be with the following features:\n\n* Nmber of tests: `100`\n* `100 < val < 1000000`\n* `3 < k < 20`\ndef same_col_seq(val, k, col):\n\t\nUse Call-Based format\nANSWER:\n"}}