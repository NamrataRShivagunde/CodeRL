{"2878": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nD\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n___\n\n\n\nUse Call-Based format,\n\n\n\nGiven a string `S` and a character `C`, return an array of integers\n\n\n\n\nGiven a string `S", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2\n\n\n\n___\n\n\n\n\n\n\nGiven a string `s", "\n\n\n\n\nUse Call-Based format\n\n\n_\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n___\n\n\nUse Call-Based format\n, []\n\n\n\n\nUse Call-Based format\n\nS, C, D, D, D, D\n\n\n\n\n\n\nGiven a string `", "\nUse Call-Based format\n___\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n___\nUse Call-Based format\n\n, []\n\n\n\n\n\ngiven a string `S`, `c`, return the shortest distance from `S` to `C`\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nD\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format,\n\n\n\n## Notes\n\n\n`S` is a string, `C` is a character\n\n\n\n\n\n\n```python\nshortest_", "\n\n\n\n\nUse Call-Based format\n\n\nD\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nshortest_to_char(\"lovecodewars\", \"e\") == [3, 2, 1, 2, 1]\n\n\n\n\n\n\n\n\nGiven a string `S`", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nD\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n___\n\n\n\n,\n\n\n\n\nUse Call-Based format\ngiven a string `S` and a character `C`\n\n\n\n\n\n\n\ngiven a string", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n_\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n___\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a string `S`, and a character `C`, return the shortest distance\n\n\n\n\n___\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, []\n\n___\n\n\n\n\nGiven a string `S` and a character `C`, return an array of integers representing the shortest distance from the current character in `S` to `C`.\n\n", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n_\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n\n\n\n\n\nS:\nS\nC:\nC\n\n___\n\n\n\n\ns:\nS\nC:\nC\n___\n\n", "\n\nUse Call-Based format\n__\n\n\n\nUse Call-Based format\n\n\nD\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n, []\n\n\n\n\n\n\n\n\nS,C = shortest_to_char(\"s\", \"c\")\n\n\n\n___\n\n\nGiven a", "\nUse Call-Based format\n_\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format, [], []\n\n___\n\n\n\nGiven a string `S` and a character `C`,\n\n\n\n\nGiven a string `S`", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n_\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n___\n\nUse Call-Based format\n\n\n\n\nGiven a string `S` and `C`, return an array of integers\n\n\n\n\nGiven a string `", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nD\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n___\n\n\n\n\nUse Call-Based format, 1, 2, 3, 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven a string `S` and a character `C", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n___\n\n\nUse Call-Based format\n, [], []\n\n## Examples\n\n```python\nshortest_to_char(\"lovecodewars\", \"e\")\n\n\n\n\n\n\n\n___\n\nGiven a string", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n_\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n___\n\n\nUse Call-Based format\nUse Call-Based format\n\n## Examples\n\n\n___\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a string `S`", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nD\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n_\n\nS is a string `S` and `C` is a character `C`\n\n\n\n\n\n\nS is a string `S` and `C` is a character", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nD\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n, []\n\n\n\n\nGiven a string `S` and a character `C`, return the shortest distance between them\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nD\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n, [3, 2, 1, 0]\n\n\n\n\n\nUse Call-Based format\ngiven a string `S` and a character `C`\n\n\n\n\n\ngiven a string `S", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n___\n\nUse Call-Based format\n, [], []\n\n\n\n\n\nS and C are the same\n\n___\n\n\n\n\n\nS:\n* `S` is a"], "prompt": "\nQUESTION:\nGiven a string `S` and a character `C`, return an array of integers representing the shortest distance from the current character in `S` to `C`.\n\n### Notes\n\n* All letters will be lowercase.\n* If the string is empty, return an empty array.\n* If the character is not present, return an empty array.\n\n## Examples\n\n```python\nshortest_to_char(\"lovecodewars\", \"e\") == [3, 2, 1, 0, 1, 2, 1, 0, 1, 2, 3, 4]\nshortest_to_char(\"aaaabbbb\", \"b\") == [4, 3, 2, 1, 0, 0, 0, 0]\nshortest_to_char(\"\", \"b\") == []\nshortest_to_char(\"abcde\", \"\") == []\n```\n\n___\n\nIf you liked it, please rate  :D\ndef shortest_to_char(s, c):\n\t\nUse Call-Based format\nANSWER:\n"}}