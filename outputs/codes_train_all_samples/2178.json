{"2178": {"code": ["\nUse Standard Output format\n\n\n\nUse Standard Input format\n\n\n1 3 2 3\n2 4 2\n\n-----Input-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\nUse Standard Input format\n\n\n\n-----Examples-----\n\nThe Little Elephant loves permutations\n\n\n1", "\n\n-----Input-----\nUse Standard Input format\n\n\n0.500000000\nUse Standard Input format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.5000\n\n-----Output-----\n\nUse Standard Input format\n\n\n\n\n\n\n-----Input-----\n\n\n\n\n\n\n-----Input-----\n\n2", "\n\n-----Input-----\n\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n1 2 3 4\n2 2 3\n2 2\n1 1\n\n\n-----Input-----\n\n2 3 2\n1 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\nThe\n\n\n\n\n-----Input-----\n\n", "\nUse Standard Input format\n\n\n\n-----Examples-----\n\nUse Standard Output format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.500000000\n\n\n-----Examples-----\n\nUse Standard Input format\n\n\n\n\n\n\n-----Examples-----\n\nThe Little Elephant\n2", "\n\n\n1.0\n1.0\n1.0\n0.0\n1.0\n1.0\n\n-----Examples-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n3.000000000\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n0.0\n\n\n\n\n\n  0.5\n\n\n-----", "\n\n\n\n0.000000000\nUse Standard Input format\nANSWER:\n\n\n\n\n\n0.000000000\nUse Standard Output format\n\n-----Input-----\n\nUse Standard Input format\n\nInput\n4 3 3 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n2 3 4 3\n2 2 4", "\nUse Standard Output format\n\n\n1.000000000\nUse Standard Input format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n2 2\n3 2\n\n\n-----Examples-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n-----Output-----\n\nThe Little", "\nUse Standard Input format\nANSWER:\n\nUse Standard Input format\n\n\n\n-----Input-----\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n1 2 3 2\n2 3\n1 2\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n1 2 3 2 4\n", "\nUse Standard Output format\n\n\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n2 1 2 2 2\n1 2 2\n2 2 2\n1 2 2\n\n\n-----Examples-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\nUse Standard Input format\n\n1 1", "\nUse Standard Output format\n\n\nUse Standard Input format\nANSWER:\n\n\n\n\n-----Input-----\n\nUse Standard Input format\nInput:\n1 2 3 3 4\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.500000000\n\n\n\n\n\n-----Input-----\n\n1 2 3 2 42", "\n\n0.500000000\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n\n3.000000000\nUse Standard Output format\n\n-----Input-----\n\nUse Standard Input format\n\nInput\n1 2 3 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 3 2 3 3 4\n2 3 2\n\n\n\n2 0", "\nUse Standard Input format\n\n1.1.1.1\nUse Standard Input format\nANSWER:\n\n1.000000000\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Input-----\n\nUse Standard Input format\n\n\n\n\n1 3 2 2 3 4\n2 4", "\nUse Standard Output format\n\n\n0.500000000\nUse Standard Input format\nANSWER:\n\n\n\n\n\n0.500000000\nUse Standard Input format\n\n-----Input-----\n\nUse Standard Input format\n\nInput\n4 3\n2 3\n2 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Input-----\n\n", "Use Standard Output format\n\n\n0.500000000\nUse Standard Input format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n-----Input-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\nUse Standard Input format\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n-----Input-----\n\n2\n", "\nUse Standard Input format\n\n\nUse Standard Output format\nANSWER:\n\nUse Standard Input format\n\nUse Standard Output format\n\n-----Input-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 3 2 4\n2 2 3\n\n\n\n\n-----Input-----\n", "\n\n\n\n0.0001000000\nUse Standard Input format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n0.500000000\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n1 2 2\n1 2\n1 2\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n-----Input-----\n\nThe Little E", "\nUse Standard Input format\n\n0.500000000\nUse Standard Output format\nANSWER:\n\n\n\n\n\n-----Input-----\n\nThe Little Elephant loves permutations of two integers n and m\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.000000000\n\n-----Examples-----\n\n\n\n\n\n-----Input-----\n", "\nUse Standard Output format\n\n\n0.500000000\nUse Standard Input format\nANSWER:\n\n\nUse Standard Input format\n\n\n\n\n\n\n1 2 3 3\n2 2 2\n2 2 3\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n1 2 3 4\n1 2\n2 3\n1 2\n\n\n\n1", "\nUse Standard Input format\n\n\nUse Standard Output format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n\n2 3 3 4 4\n\n-----Output-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n3.000000000\n\n\n-----Examples-----\n\n\n\n\n\n\n1", "\n\nUse Standard Input format\n\n\n0.000000000\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n2 3 3\n1 2\n2 2\n\n\n-----Input-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n1 2 3 4 4\n2 2"], "prompt": "\nQUESTION:\nThe Little Elephant loves permutations of integers from 1 to n very much. But most of all he loves sorting them. To sort a permutation, the Little Elephant repeatedly swaps some elements. As a result, he must receive a permutation 1, 2, 3, ..., n.\n\nThis time the Little Elephant has permutation p_1, p_2, ..., p_{n}. Its sorting program needs to make exactly m moves, during the i-th move it swaps elements that are at that moment located at the a_{i}-th and the b_{i}-th positions. But the Little Elephant's sorting program happened to break down and now on every step it can equiprobably either do nothing or swap the required elements.\n\nNow the Little Elephant doesn't even hope that the program will sort the permutation, but he still wonders: if he runs the program and gets some permutation, how much will the result of sorting resemble the sorted one? For that help the Little Elephant find the mathematical expectation of the number of permutation inversions after all moves of the program are completed.\n\nWe'll call a pair of integers i, j (1 \u2264 i < j \u2264 n) an inversion in permutatuon p_1, p_2, ..., p_{n}, if the following inequality holds: p_{i} > p_{j}.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 1000, n > 1) \u2014 the permutation size and the number of moves. The second line contains n distinct integers, not exceeding n \u2014 the initial permutation. Next m lines each contain two integers: the i-th line contains integers a_{i} and b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n, a_{i} \u2260 b_{i}) \u2014 the positions of elements that were changed during the i-th move.\n\n\n-----Output-----\n\nIn the only line print a single real number \u2014 the answer to the problem. The answer will be considered correct if its relative or absolute error does not exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n2 1\n1 2\n1 2\n\nOutput\n0.500000000\n\nInput\n4 3\n1 3 2 4\n1 2\n2 3\n1 4\n\nOutput\n3.000000000\nUse Standard Input format\nANSWER:\n"}}