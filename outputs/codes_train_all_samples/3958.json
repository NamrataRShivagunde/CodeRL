{"3958": {"code": ["```\n\nclassical fibonacci\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n* a signature of length `length`\n* a starting index `[0,1]`\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n #classical fibonacci!\n", "\n\n\n\n```\n\n\n\nI need a more general algorithm:\n\nI use it:\n\n```python\n\nI have a general algorithm:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\nThe code is:\n\n\n\n\n```\n\n#", "```\nclassical fibonacci\n\nclassical fibonacci\n\nQUESTION:\n\nI'm not sure what you really want to do...\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\ndef custom_fib(", "\n```\nclassical fibonacci\n```\n\nclassical fibonacci\n```\n\n```\n\n```\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n #classical fibonacci!\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\ndef custom_f", "\n```\n\n\n\n*\n\n\n\n\n\nI have to check your codewars:\n\n*\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n #classical fibonacci!\n\n```\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```", "\n```\nclassical fibonacci\n```\n\nclassical fibonacci\n```\n\n```\n```\n```\n\n\n\n\n\n\n\n\n\n\n\n\n*\n #classical fibonacci!\n```\n\n```\n\n\n\n```\n\n\n\n\"\"\"\n\n        # I'm not", "\n\n\n```\n\nThe code below is used in the following example:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* a signature of length `length`\n* a second parameter\n* a third parameter\n\n\n\n\n\n```\n\n\n\n```\n\n# of the above\n\n# The following code is", "\nclassical fibonacci!\n\nclassical fibonacci!\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n #classical fibonacci!\n\n```\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n#\n#  `#\n#\n#\n", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\nI know about the following:\n\n* a signature of length `length`\n* a first parameter\n* a second parameter\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\nreturn\n\n\n\n```\n\ndef custom_f", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n```\n\n\n\n\n\n\n\n\nclassical fibonacci!\n\n```\n\nclassical fibonacci!\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n#!/\n#", "\n\n\n\n\n\n\n\n\n\n\nI have a few more ways to get a signature of length `5` and `[0,1,2]` and `[0,1,2]`:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n*\n\n* a third parameter is a list/array\n\n\n```", "\n```\n\n\n\nI know how to get a signature of length `length`\n\nI know how to get a signature of length `length`\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n\nThe code wars in Code", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"Fibonacci\"\n\n\nI will be able to make a very short-circuiting of the following code:\n\n\n\n\n\n\n\n\n\n\n* #classical fibonacci!\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n# The", "```\n\n\n\n\n\n\n\n\n\n\nI have a few examples:\n\nI have a few examples:\n\nI have a few examples:\n\nI have a few examples:\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\ndef custom_", "```\n\n\n\n\n\n\n\n\nclassical fibonacci\n\n```\n\nThe fibonacci sequence is:\n\n* a signature of length `length`\n* a signature of length `5`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n# Chapter 4", "\nclassical fibonacci!\n\nclassical fibonacci!\n\n```\n```\n```\n\n\n\n\n\n\n\n\n\n\n\n #classical fibonacci!\n\n* #classical fibonacci!\n```\n\n```\n\n\n\n\n\n```\n\n\"\"\"\n\n#TODO:", "```\n\n\n\n\n\n\nI recommend you are using a lot of familiar familiar Fibonacci sequences\n\nI recommend you are using the following rules:\n\n\n\n\n\n\n\n\n\n\n\n\n* #classical fibonacci!\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n", "\n```\nclassical fibonacci\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n```\n\n\n* a signature of length `length`\n* a number you need to sum\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\nI will have a few\n\n```\n\n#", "\n```\nclassical fibonacci\n```\n\n\n\n\n\n\n\n\n\n\n\n\n #classical fibonacci!\n\n\n```\n\n\n #classical fibonacci!\n\n* #classical fibonacci!\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n#", "\n```\nclassical fibonacci\nclassical fibonacci\n```\n\n```\n```\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n #classical fibonacci!\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n```\n\n## Examples\n\n#``"], "prompt": "\nQUESTION:\nLeonardo Fibonacci in a rare portrait of his younger days\n\nI assume you are all familiar with the famous Fibonacci sequence, having to get each number as the sum of the previous two (and typically starting with either `[0,1]` or `[1,1]` as the first numbers).\n\nWhile there are plenty of variation on it ([including](https://www.codewars.com/kata/tribonacci-sequence) [a few](https://www.codewars.com/kata/fibonacci-tribonacci-and-friends) [I wrote](https://www.codewars.com/kata/triple-shiftian-numbers/)), usually the catch is all the same: get a starting (signature) list of numbers, then proceed creating more with the given rules.\n\nWhat if you were to get to get two parameters, one with the signature (starting value) and the other with the number you need to sum at each iteration to obtain the next one?\n\nAnd there you have it, getting 3 parameters:\n\n* a signature of length `length`\n* a second parameter is a list/array of indexes of the last `length` elements you need to use to obtain the next item in the sequence (consider you can end up not using a few or summing the same number multiple times)' in other words, if you get a signature of length `5` and `[1,4,2]` as indexes, at each iteration you generate the next number by summing the 2nd, 5th and 3rd element (the ones with indexes `[1,4,2]`) of the last 5 numbers\n* a third and final parameter is of course which sequence element you need to return (starting from zero, I don't want to bother you with adding/removing 1s or just coping with the fact that after years on CodeWars we all count as computers do):\n\n```python\ncustom_fib([1,1],[0,1],2) == 2 #classical fibonacci!\ncustom_fib([1,1],[0,1],3) == 3 #classical fibonacci!\ncustom_fib([1,1],[0,1],4) == 5 #classical fibonacci!\ncustom_fib([3,5,2],[0,1,2],4) == 17 #similar to my Tribonacci\ncustom_fib([7,3,4,1],[1,1],6) == 2 #can you figure out how it worked ;)?\n```\ndef custom_fib(signature, indexes, n):\n\t\nUse Call-Based format\nANSWER:\n"}}