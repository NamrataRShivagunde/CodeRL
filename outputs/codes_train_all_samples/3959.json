{"3959": {"code": ["\n\n# Example:\n# Max_sum(arr,ranges)\n\n\n\n\n# Example:\n#\n\n\n\n\n# Example:\n#\n\n\n# Example:\n#\n\n\n\n# Examples:\n#\n#\n#\n#\n\n#\n#\n\n#\n#\n\n#\n\n\n#\n# sum_array(arr,ranges,", "\n# Description:\n\n# Examples:\n#\n\n# Examples:\n# Examples:\n# Examples:\n# Examples:\n# Examples:\n\n# Examples:\n\n#\n\n\n\n\n# Examples:\n#\n#\n#\n\n\n\n#\n#\n#\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n#\n# Description:", "\n\n\n# Description:\n#\n\n# Example:\n#\n\n# Examples:\n#\n#\n#\n\n#\n#\n\n# Example:\n#\n#\n#\n#\n#\n#\n#\n\n# Examples:\n#\n#\n#\n#\n#\n#\n\n\n\n#\n\n\n\n\n\n\n\n# Description:\n#", "\n# Example:\n#\n# Example:\n# Example:\n# Example:\n# Example:\n# Example:\n#\n# Example:\n#\n\n\n\n#\n\n# Example:\n\n#\n#\n\n\n\n\n\n\n\n#\n\n#\n\n\n#\n\n\n\n\n#\n\n\n\n\n\n\n#\n# Example:\n#", "\n# Example:\n#\n# Max sum\n#\n# Example:\n#\n#\n\n# Examples:\n#\n#\n\n# Examples:\n\n\n#\n\n# Example:\n#\n#\n\n\n#\n#\n#\n#\n\n#\n\n#\n\n\n#\n#\n\n#\n\n#\n#\n# Returns\n#\n0\n", "\n# Examples:\n#\n#\n#\n#\n#\n\n#\n\n\n\n# Note:\n#\n# Note:\n#\n#\n\n\n#\n\n#\n#\n\n# Examples:\n#\n\n\n\n#\n#\n#\n#\n\n\n\n#\n\n\n\n\n\n\n\n#\n\n#\n\n#\n# Description:", "\n# Example:\n# max_sum(arr,ranges)\n# Example:\n#if:python\n#\n# Example:\n#\n\n\n\n# Examples:\n#\n#\n#\n\n\n#\n#\n#\n#\n# Example:\n#\n#\n#\n#\n\n#\n#\n\n#\n\n#\n#\n\n#\n# ---", "\n# Example:\n# max_sum(arr,ranges)\n# Example:\n#if:python\n#\n# Example:\n# Example:\n#\n\n\n\n\n\n#\n\n\n\n\n#\n#\n# Example:\n#\n\n\n#\n\n\n#\n\n\n\n\n# Example:\n\n#\n\n\n\n\n#\n# ---\n", "\n# Example\n# Max_sum(arr,ranges)\n# Example\n\n\n# Examples:\n\n# Description:\n\n# Examples\n# Examples:\n#\n\n\n\n\n\n# Note:\n\n\n#\n\n\n\n\n\n#\n#\n\n#\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n#\n# ---", "\n# Example:\n# max_sum(arr,ranges,start,end):\n\n\n\n\n\n\n\n# Example:\n#\n#\n# Use Call-Based format\n\n\n\n#\n#\n# Example:\n#\n\n#\n#\n#\n#\n#\n\n\n# Notes:\n\n\n\n\n\n\n\n#\n# sum(arr,", "\n# Example:\n#\n# max_sum(arr,ranges,start,end):\n#\n# Description:\n#\n\n\n\n\n\n\n\n\n# Example:\n\n#\n#\n\n\n\n\n#\n#\n#\n\n#\n\n\n#\n\n# Example:\n\n\n\n\n#\n\n\n\n\n#\n# sum(arr,", "\n# Example:\n#\n#\n# Examples:\n#\n#\n\n\n#\n# Example:\n#\n#\n\n# Example:\n#\n\n#\n\n\n#\n#\n\n\n#\n\n#\n#\n#\n#\n#\n\n#\n#\n\n\n\n\n\n\n\n#\n\n#\n\n#\n#\n# Description:", "\n\t\n# Example:\n#\n#\n# Example:\n#\n#\n\n\n# Example:\n#\n#\n#\n#\n#\n\n# Example:\n#\n\n#\n\n# Example:\n#\n\n\n#\n#\n#\n#\n#\n#\n\n\n\n\n#\n\n\n\n\n\n#\n#     start=1\n", "\n# Examples:\n#\n# [min,max]\n#\n# Note:\n##\n\n#\n#\n\n# Examples:\n\n#\n\n\n\n# Example:\n\n#\n#\n\n\n#\n#\n#\n#\n#\n\n#\n#\n\n#\n#\n\n#\n#\n#\n#\n\n#\n#\n#", "\n# Example:\n# max_sum(arr,ranges)\n# Example:\n# Example:\n#\n\n#\n# Example:\n\n\n\n\n\n# Example:\n\n# Note:\n\n\n\n#\n\n\n\n\n\n\n#\n\n#\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n\n#\n#", "\n# Example:\n# max_sum(arr,ranges)\n# Example:\n#if:py\n#\n\n# Example:\n#\n\n\n\n# Example:\n\n#\n\n#\n\n\n\n\n#\n\n#\n\n#\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n#", "\n# Example:\n#\n# Example:\n#\n# Examples:\n#\n# Examples:\n#\n\n# Examples:\n#\n\n\n\n\n\n# Example:\n#\n\n\n\n\n\n\n\n\n# Examples:\n\n#\n\n#\n#\n#\n\n#\n\n\n\n\n\n\n\n#\n\n\n# Description:\n#\n", "\n# Example:\n#   max_sum(arr,ranges)\n\n\n# Example:\n#   max_sum(arr,ranges)\n#\n\n\n\n\n\n\n# Example:\n\n#\n#\n\n\n#\n#\n#\n#\n\n#\n\n#\n\n\n\n\n\n\n# Examples:\n\n#\n\n\n#\n# ---", "\n\n# Example:\n# Max_sum(arr,ranges,start,end)\n\n\n\n\n# Example:\n#\n\n\n\n\n\n# Example:\n\n#\n\n#\n\n\n#\n#\n#\n#\n\n# Example:\n#\n#\n#\n\n\n\n#\n\n\n\n# Note:\n\n\n\n#\n# ---", "\n# Example:\n# max_sum(arr,ranges,start,end)\n# Description:\n\n# Examples:\n#\n\n\n\n\n# Example:\n\n#\n#\n\n\n\n# Example:\n\n\n\n#\n\n\n# Examples:\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n#\n# Description:"], "prompt": "\nQUESTION:\n>When no more interesting kata can be resolved, I just choose to create the new kata, to solve their own, to enjoy the process  --myjinxin2015 said\n\n# Description:\n\n```if:javascript\nGiven an array `arr` that contains some integers(positive, negative or 0), and a `range` list such as `[[start1,end1],[start2,end2],...]`, start and end are the index of `arr` and start always less than end. Your task is to calculate the sum value of each range (start index and end index are both inclusive), and return the maximum sum value.\n```\n```if:ruby\nGiven an array (`arr`) of integers and an array (`ranges`) of ranges (e.g. `[[1, 32], [16, 24],...]`), which represent an index range of `arr`, calculate the sum of each range (start index and end index are both inclusive) of `arr`, and return the maximum sum.\n```\n```if:php\nGiven an array `$a` that contains some integers and a `$range` list such as `[[$start1, $end1], [$start2, $end2], ... ]` where `$start(n)` and `$end(n)` are valid keys of the non-associative array `$a` and `$start(n)` is always guaranteed to be strictly less than `$end(n)`.  Your task is to calculate the sum value of each range (start index and end index are both inclusive) and return the maximum sum value.\n```\n```if:haskell\nGiven a list `arr` that contains some integers(positive, negative or 0), and a `range` list such as `[(start1,end1),(start2,end2),...]`, start and end are the index of `arr` and start always less than end. Your task is to calculate the sum value of each range (start index and end index are both inclusive), and return the maximum sum value.\n```\n\nFor example:\n \n# Note:\n\n - `arr`/`$a` always has at least 5 elements;\n - `range`/`$range`/`ranges` always has at least 1 element;\n - All inputs are valid;\n - This is a simple version, if you want some challenge, please [try the challenge version](https://www.codewars.com/kata/the-maximum-sum-value-of-ranges-challenge-version/).\n\n# Some Examples\ndef max_sum(arr,ranges):\n\t\nUse Call-Based format\nANSWER:\n"}}