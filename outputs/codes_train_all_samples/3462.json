{"3462": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nIntroduction to Disjunctions\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nDisjunctions\n\n   \n\n   \n   \n\n   \n\treturn r\n\n    EXPRESSION:", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nEXPR:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    # p = 2 < 3 = true\n    # q =", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\nDisjunctions\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\n\n\n\n\nIntroduction to Dis", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nIntroduction to Disjunctions\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n   \n\n    A disjunction.\n\n   \n\n\n\n\n    Use Call-Based format\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\t\nCall-Based format\n\n\n\n\n\nDisjunctions\n\nUse Call-Based format\n\nOperation:\n\t\nUse Call-Based format\n\nOperation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    :param operands:\n    :param", "\nUse Call-Based format\nUse Call-Based format\n\n\n\t\n\nQUESTION:\nUse Call-Based format\n\nExample of disjunction:\n\n\t\tp || q\n\t\tr = q\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    I am not sure how to handle this case\n   \n\np =", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nExamples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\nIntroduction to Disjunctions\n\n\n\n\nIntroduction to", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nEXPLANATION:\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nEXPLANATION:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConjunctions\n\n\n\n\n  p \u22bb q \u22bb r\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nEXAMPLES:\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConjunctions\n\nThe above example:\n\n\n\n\n\n\n    I am a disjunction\n", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\nDisjunction:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\nUse Call-Based format\n\n\n\n\n\n        # TODO: Add a transform", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nCOMPARISON:\n\nDisjunctions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n    :param operands:\n    :param is", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\nIntroduction to Disjunctions\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\nIntroduction to Disjunctions\n\n\n\n\nDisjunction", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nDisjunction:\n\nDisjunctions\n\nUse Call-Based format\n\nQUESTION:\nIntroduction to Disjunctions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n    Examples:\n\n    In logic:\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nIntroduction to Disjunctions\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nExtrusive disjunction\n\n\n\n\n\n    I am just adding a boolean to", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nConjunctions\n\nIf a disjunction is used, we return true or false.\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\n\n\n\n\n\n\n    # TODO:\n    If a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nEXCHANGE:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np = 1 < 2\nq = 2 < 3\nr", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nNOTE:\n\nUse Call-Based format\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\n\n\n\n\n\n\n    # Example 2:", "\nUse Call-Based format\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nIntroduction to Disjunctions\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to Disjunctions\n\n\n\n\nIntroduction to Disjunction", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\nUse Call-Based format\n\nDisjunction:\n\nUse Call-Based format\n\nDisjunction:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDisjunctions\n\n\n\n\n\n\n\n    Disjunctions:\n    p = 2", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nDisjunction:\nIntroduction to Disjunctions\nUse Call-Based format\n\nExample:\nUse Call-Based format\n\nEXAMPLES:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> p = 2 > 3\n"], "prompt": "\nQUESTION:\nIntroduction to Disjunctions\nIn logic and mathematics, a disjunction is an operation on 2 or more propositions.  A disjunction is true if and only if 1 or more of its operands is true.  In programming, we typically denote a disjunction using \"||\", but in logic we typically use \"v\".\nExample of disjunction:\np = 1 > 2 = false\nq = 2 < 3 = true\ntherefore p v q is true\nIn a programming language, we might write this as:\nvar p = 1 > 2;        // false\nvar q = 2 < 3;        // true\nvar result = p || q;  // true\nThe above example demonstrates an inclusive disjunction (meaning it includes cases where both operands are true). Disjunctions can also be exlusive. An exclusive disjunction is typically represented by \"\u22bb\" and is true if and only if both operands have opposite values.\np = 1 < 2 = true\nq = 2 < 3 = true\ntherefore p \u22bb q is false\nThis can become confusing when dealing with more than 2 operands.\nr = 3 < 4 = true\np \u22bb q \u22bb r = ???\nWe handle these situations by evaluating the expression from left to right.\np \u22bb q = false\n(p \u22bb q) \u22bb r = true\nDirections:\nFor this kata, your task is to implement a function that performs a disjunction operation on 2 or more propositions.\n\nShould take a boolean array as its first parameter and a single boolean as its second parameter, which, if true, should indicate that the disjunction should be exclusive as opposed to inclusive.\nShould return true or false.\ndef disjunction(operands, is_exclusive):\n\t\nUse Call-Based format\nANSWER:\n"}}