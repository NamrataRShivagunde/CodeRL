{"2530": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    numPairsDivisibleBy60(self, time: List[int]):\n        \n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, i-", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n        numPairsDivisibleBy60(self, time: List[int]) -> int:\n        \n\n\n   :\n        pass\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nIn a list of songs:\n\n\n\n\nIn a list of songs:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n    pass\n\n\nin a list of songs, the i-th song has a total duration of 60 seconds.\n\n   :\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nIn a list of songs, the", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n        numPairsDivisibleBy60(self, time)\n\n\n\n\n\nUse Call-Based format\n\nExample:\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, i-", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n   :\n        return numPairsDivisibleBy60(self, time)\n\n\n\n   \n        \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nIn a list of songs:\n\nIn a list of", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n   :\n        pass\n        \n\n\n\n\n   \n    print(self.numPairsDivisibleBy60(time))\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nIn a list of songs,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    numPairsDivisibleBy60(self, time: List[int]) -> int:\n        \n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\nIn a list of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    def numPairsDivisibleBy60(self, time: List[int]):\n        return len(time)\n\n\nUse Call-Based format\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, the i", "\nUse Call-Based format\n\n\n\n\n\n\n\n    numPairsDivisibleBy60(self, time) -> int:\n        \nUse Call-Based format\n\n       ...\n\n\n\n\n   \n        \n\nUse Python 3.7 format\n\n\n\n\nUse Python 2.7 format\n\n\n\n\n\n\n\nIn a list of songs, i-", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        \nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n   \n        print(\".\")\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nIn a list of songs, the i-th song has a duration.\n\n\n\nIn", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n        #...\n        \n\n\n\n\n\n\n        #...\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nIn a list of songs, the i-th song has a duration.\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   :\n        \n\n\n\n    numPairsDivisibleBy60(time: List[int]) -> int\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, the i-", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n   \n        return numPairsDivisibleBy60(self, time)\n\n\n\n   :\n        return numPairsDivisibleBy60(time)\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, i-", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n    numPairsDivisibleBy60(self, time: List[int]) -> int:\n\nUse Call-Based format\n\nExample 3:\n:\n\n\n   :\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, the i", "\nUse Call-Based format\n\n\n\n\n\n\n\n    numPairsDivisibleBy60(time: List[int]) -> int:\n        \nUse Call-Based format\n\nExample 3:\n   \n\n\n\n   :\n        \n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 3\nExplanation: 3\n\n\n\n\n\nIn a list of", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   :\n        return self.numPairsDivisibleBy60(time)\n\n\n\n   :\n        pass\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nIn a list of songs,\n\n\n\n\nIn a list of songs", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n    numPairsDivisibleBy60(self, time: List[int]) -> int:\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs,", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        numPairsDivisibleBy60(self, time)\n        \nUse Call-Based format\n\n\n   :\n        \n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nIn a list of songs, the i", "\nUse Call-Based format\n\n\n    def numPairsDivisibleBy60(self, time: List[int]):\n            return numPairsDivisibleBy60(self, time)\n\n\n\n\n\n\n   \n       \n\n\n   :\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a list of songs, i-", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n        return self.numPairsDivisibleBy60(time)\n\n\n\n\n   :\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nIn a list of songs, i-th"], "prompt": "\nQUESTION:\nIn a list of songs, the i-th\u00a0song has a duration of\u00a0time[i] seconds.\u00a0\nReturn the number of pairs of songs for which their total\u00a0duration in seconds is divisible by 60.\u00a0 Formally, we want the number of\u00a0indices i, j such that\u00a0i < j with (time[i] + time[j]) % 60 == 0.\n\u00a0\nExample 1:\nInput: [30,20,150,100,40]\nOutput: 3\nExplanation: Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n\n\nExample 2:\nInput: [60,60,60]\nOutput: 3\nExplanation: All three pairs have a total duration of 120, which is divisible by 60.\n\n\n\u00a0\nNote:\n\n1 <= time.length <= 60000\n1 <= time[i] <= 500\nclass Solution:\n    def numPairsDivisibleBy60(self, time: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}