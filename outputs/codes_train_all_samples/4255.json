{"4255": {"code": ["\n\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n\t\n:\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n \n``~~~else:bf\n\n\n\n\n\n```if:bf\n\n\nWrite a function which converts the input string to uppercase\n\n~~~", "\n:\n\n~~~\n\n\nUse Call-Based format\n:\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n~~~else:bf\n\nUse BF format\n~~~endif\n\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```B", "\n:\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n:\n:\n\n\n\n:\n\n\n\n\n\n\n:\n\t\nUse Call-Based format \n\n~~~else:\n\n~~~else:bf\n\n\n\n\n\n\n\n\t\n\t\ns = make_upper_case(s)\n\t\n\n\t##", "\n\nUse Call-Based format:\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n:\n:\n\n\n\n\t\n:\n\n\n```\n\n\nUse Function-Based format\n\n\n:\n\n\n~~~else:bf\n\n\n\n\n~~~else:bf\n\n\n\n\n    s = make_upper_case(s", "\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n:\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n\t\n\n~~~\n\n\n\n\n\n\n\n---\n\t\n# s --\n# s --\ns\n\n```\n\n---\n## Examples:\n```", "\n:\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format:\n\t\n\n\t\n::\n\t\nUse Call-Based format\t\n\n\t:\n\t\nUse Call-Based format\n\n\n~~~else:bf\n:\n\n\n\n\n~~~else:bf\n\n\n\n\n\n~~~else:bf\n\n\nTBD", "\n:\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n~~~\n\n:\n\n \n\n\n\t\n\n\n\n```\n\n\n```\nBF:\n\n\n\n>>> if:bf\nIf:bf\nUse BF format\n```", "\n:\n\n\n\n\n\n\n\n\t\n::\n\n\n:\n\n\n\n\nUse Call-Based format\n\n~~~else\n\n\nUse BF format:\n\nUse Call-Based format\n\n\n~~~else:bf\n\n\n\nWrite a function which converts the input string to uppercase. \n\n\n\n\n\n\nA:\n\n\t\n", "\n\nUse Call-Based format:\n\n\n\n\t\n:\n\n\n\n\n\n:\n\n\n\n\t:\n\n\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n~~~else:bf\n\n\n$ make_upper_case(s)\n\n\n\n\n\n\n```\n\n>>> if:bf\n", "\n\nUse Call-Based format:\n\n\n\n\n\n:\n\n\n\n:\n:\n\n\n\n:\n\nUse Call-Based format\n\n~~~\n\n\n~~~\n:\n\t\nUse Call-Based format\n\n~~~else:bf\n\n\n\n\ns = s.upper()\n\t\n\n\n\n~~~if:bf\nWrite a", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n:\n\n\n\n\n~~~if:ff\n\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n~~~else:bf\n(make_lower_case(s))\n\n\n\n\n\n\n\nWrite a function which converts the input string to", "\n\nUse Call-Based format:\n\n\n\n\n:\n\t\n\n\n:\n\t:\n\n\n~~~\t\n:\n\nUse Call-Based format\n\n\n:\n\t\nUse Call-Based format\n\n~~~else:bf\n\n\n\n\n\n\n\n~~~else:bf\n\n\nWrite a function which converts the input string to uppercase. ", "\n:\n\n\n\n\n\n\n\n\n\n\n:\n\t:\n\n\n\n\t:\n\n\n\n\n~~~if:a\n\n\n~~~else:bf\n\n\n\n:\n\nUse Call-Based format\n\n$\n\n\n~~~endif\n\n\n\n\n\n\n\n\n$\n\nQUESTION:\n\t\nRead a function which", "\n\nUse Call-Based format:\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n:\n\n\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n~~~if:bf\nif s.endswith(\\0):\n", "\n:\n\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n\t\n:\n\n:\n\n\n\n:\n\n\n\nUse Call-Based format\n\n\n:\n\t\nUse Call-Based format\n\n\n~~~else:bf\n\n\n\n\n\n~~~else:bf\n\n\n\n````\n\n```s``:\n", "\n\nUse Call-Based format:\n\n\n\n\n\n:\n\n\n\n:\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n~~~\n\n\n~~~else\n\n\n\n\n\n\n\n\n\n```\n\n```\n\ns = 'A', 'A', 'A', 'A', 'A', 'A', 'A',", "\n:\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n:\n\n:\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format\n\n\n~~~else:bf\n\n\n\n\n\n\n~~~else:bf\n\n\n\n~~~if:bf\nIf BF all inputs end", "\n\nUse Call-Based format:\n\n\n\n:\n\t\nUse Call-Based format\n\n\n::\n\n\n:\n\nUse Call-Based format\n\n\n:\n\t\nUse Call-Based format\n\n\n~~~else:bf\n\n\n\n\n\n\n\n\n\n-----\nS:\n\t\tGive a function which converts the input string to uppercase", "\n:\n\n\n\n\n\n\n\n\n\n:\n\t:\n\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format\n\n~~~else:bf\n\n\n\n`\n\n:\n\n\n\n\n\n~~~endif\n\n\n\n\n\n\n\n\n````\n\n````\nQUESTION:", "\n:\n\n\n\n\n\n\n\n\n\n\n:\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n~~~else:bf\n\n\n~~~else:bf\n\n:\n\n\n\n\n~~~else:bf\n\n\nUse Call-Based format\n\n\n\ns = s.upper()\n\n\n\n\ns = make_upper"], "prompt": "\nQUESTION:\nWrite a function which converts the input string to uppercase.\n\n~~~if:bf\nFor BF all inputs end with \\0, all inputs are lowercases and there is no space between. \n~~~\ndef make_upper_case(s):\n\t\nUse Call-Based format\nANSWER:\n"}}