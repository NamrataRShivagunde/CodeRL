{"4938": {"code": ["::\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\treturn count_char(s, c)\n\n\n:\n:\n\n,\n:\n: => 6\n\n\n\n:\n\n\n   \n\n   \n\n\n:\n\n\n\ncount_char:\n\n   \n\n\n\n    The goal is to write a", "::\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\t\n::\n\n\t\t\n\n:\n:\"\n\n\nThe kata kata count_char function is a function that takes two inputs: a string and a character.:\n\n\n:\ncount_char(\"foo\",\"foo\")\n:\n\n\n\n\n\n```", "::\n\n\n:\n\ndef count_char(s, c):\n\t\n\n:\n\n\n:\n: => 7\ncount_char(\"Fancy fifth fly aloof\",\"a\") => 8\n\n\n\n:\n\nThe function will be counted by one character in each string.\n\n:\n\n:\n\n\n\n\n\n\n```python\n", "::\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\ndef count_char(s, c):\n\t\nUse Call-Based format\n\n:\n\n\n:\n:\n => 6\n\n\n\n\nUse Call-Based format:\n\n => 3\n\n:\n\n:\n\n\n\n\n\nQUESTION:\nThe goal is to", ":\n:\n\n\nUse Call-Based format\n::\n\nUse Call-Based format\ncount_char(s, c) => count\n\nUse Call-Based format\n\n\n\n:\n\n\t\n\n:\n: => 10\n\n\n\n:\n\nNote:\n => 1\n:\n\n\n:\n\n\n\n\n\n\nQUESTION:\n\nThe", "::\n\n\n:\nUse Call-Based format\n\t\n\n\t::\n\n\n:\n:\n\"f\" => 2\ncount_char(\"French fifth fifth\",\"l\") => 3\ncount_char(\"brown fizz\",\"a\") => 4\n\n\n:\n\n:\n:\n\n\n\n\n\t>>> kata.count_char", "::\n\nUse Call-Based format\n\n:\n\n\n\n\t\n\n:\n\n\t\n\n:\n:\n\"\",\"b\")\ncount_char(\"Fancy fifth fly\",\"a\") => 6\n\n\n\n\nUse Call-Based format:\n\n\n\n\ncount_char:\n\n\n\n:\n\n\ncount_char:\n\n\n\n", ":\n:\n\n\n:\nUse Call-Based format\ncount_char(\"fizzbuzz\",\"b\") => 6\ncount_char(\"fizz\",\"b\") => 7\n\n\t\t\n:\n:\n\t\n:\n:\n\n\n\n\n:\n\n\n\n:\n\ncount_char(\"Fizz buzz\",\"b\")\n:\n\n\n\n\n``", "::\nUse Call-Based format\n\n\n:\n\n\t\n\t\n\n:\n\n\treturn 1\n\t\n\n:\n:\n\nUse Call-Based format\",\"f\")\n\n\n\n:\n\n\n\n```python\ncount_char(\"foo\", \"bar\") => 2\n```\n\n:\n:\n\n\n:\n\n```python\ncount", ":\nUse Call-Based format:\n\n\n:\n:\ncount_char(\"fizzbuzz\", \"z\")\ncount_char(\"aloof\", \"f\")\n\n\n\n:\n:\n,\n::\ncount_char(\"Fizzbuzz\",\"a\") => 3\n\t::\n\n:\n:\n\n\n:\n\n\n```python\n", "::\nUse Call-Based format\n\n\n:\n\t\n\n\t\n\n:\n\n\t\n\n:\n:\ncount_char(\"Fancy fifth fly aloof\",\"f\") => 4\ncount_char(\"Fancy fifth fly\",\"a\") => 5\n\n\n:\n\n:\n:\n\n\n\n:\n\n**NOTE** This kata", ":\n:\n\n\nUse Call-Based format\n:\n\n\t\n\t\n\n:\n\t\n\n\n:\n\n:\n\n\n => 4\ncount_char(\"Fancy fifth fly aloof\",\"a\") => 5\n\n\n\n:\n\nThe function should be count by character.\n\n\n:\n:\n\n\n\n\nNOTE:\nThe k", "::\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\t\n\n\n\n:\n\n\n\n:\n:\n\n => 4\n\n\n\n\n:\nUse Call-Based format\n\nThe string is often a string.\n\n\n\n:\n\n:\n\n\n\n\n\n\n_:\n```python", "::\nUse Call-Based format\n\n\n\n:\ncount_char(\"Fizzbuzz\", \"a\")\n\n\n\t\n::\n\n\t\n\n:\n: => 6\n\n\n\n:\n\nThe string must contain at least one character.\n\nUse Call-Based format\n\n:\n\n:\n => 4\n\n\n\n\nA string can be any", "::\n\n\nUse Call-Based format\n\n:\ncount_char(\"fizzbuzz\",\"z\")\n\nUse Call-Based format\n\n\t\n\n:\n\n\t\n\n:\n: => 6\ncount_char(\"foobar\",\"b\") => 7\n\n::\n\n\n:\n:\n => 6\n\n\n\n\n\n\n```python\n", "::\n\n\n\n:\ncount_char(\"fizzbuzz\",\"z\")\n\nUse Call-Based format\n\n\t\n\n:\n\n\n\t\n:\n: => 6\ncount_char(\"Fancy fifth fly aloof\",\"f\") => 7\n\n::\n\n\n:\n:\n\n\n\n\n_, _, _\n\ncount_", "::\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\ndef count_char(s, c):\n\t\n\n\n:\n\n\t\n\n:\n: => 3\ncount_char(\"fizz\",\"a\") => 4\n\n\n\n:\n\n\n:\n\ncount_char:\n\n\n\n\n\n* Example:*\n* count", "::\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\t\n\n:\n\n\n\t\n\n:\n:\n => 6\ncount_char(\"Fancy fifth fly aloof\",\"a\") => 7\n\n::\n\n\n:\ncount_char(\"foo\", \"bar\")\n:\n\n\n\n\n```python", "::\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\t\n\n\n:\n\n\t\n:\n:\ncount_char(\"Fancy fifth fly aloof\",\"b\") => 6\n\n\t\n::\n\nThe => 4\n:\n\n:\n\n\n\n\n\n\n```python\ncount_", "::\n\n\n\n:\n\n\n\t\n\t\n:\n\n\t\n\n\n:\n:\ncount_char(\"fizzbuzz\",\"f\") => 6\ncount_char(\"fizzbuzz\",\"f\") => 7\n\n\n\n:\n\nThis is a kata apple. \n\n\n:\n\n:\n\ncount_char:\n\n\n\n``"], "prompt": "\nQUESTION:\nThe goal of this kata is to write a function that takes two inputs: a string and a character. The function will count the number of times that character appears in the string. The count is case insensitive.\n\nFor example: \n\n```python\ncount_char(\"fizzbuzz\",\"z\") => 4\ncount_char(\"Fancy fifth fly aloof\",\"f\") => 5\n```\n\nThe character can be any alphanumeric character. \n\nGood luck.\ndef count_char(s, c):\n\t\nUse Call-Based format\nANSWER:\n"}}