{"2748": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\nGiven: an array containing hashes of names\n\nReturn: a string formatted as a list of hashes\n\n```\n\n\n\n\nGiven: an array containing hashes of names\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven: array of hashes of names\n\nReturn:\n\n\nGiven:", "\nUse Call-Based format\n\n\n\n\n\n\nlist(names):\n\nUse Call-Based format\n\n\n\n# returns ''\n```\n\n# returns ''\n```\n\n\nGiven: an array containing hashes of names\n\n`\n\n\n\n\n\n\n\n\n\n\n\nGiven: a list of hashes of names\n\n\n\n\n\nGiven:\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nGiven:\n\nReturn:\n\nReturn:\n\nReturn:\n\n\n\n\n# returns ''\n```\n```\npython\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven: an array containing hashes of names\n\nReturn:\n\n\n\nGiven", "\n\n\n\n\n\n\ngiven: an array containing hashes of names\nreturn: a string formatted as a list of names\n\nExample:\n\n``` ruby\nlist([])\n# returns ''\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturn: names\n\nReturns:\n\nReturn:\n\n\n\n\n\n```\n\n\nGiven", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nlist(['A-Z', 'A-Z', 'Maggie', 'Maggie', 'Maggie'])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn\n\nReturns:\nA string\n\nReturns:\n\n\n\n\n\n```\n\nGiven:\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nlist(names)\n\nReturns:\n\nString:\n\nReturn:\n\nReturns:\n\n```\n\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven:\nhash\n\nReturn:\n\n\n\n\n\nGiven:", "\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\nlist(hashlist)\n\n\n```\n# returns ''\n```\n```\n\n# returns ''\n```\n\n\n\n\n# returns ''\n```\n\n\n\n\n\n\n\n\n\n\n\n\ngiven: an array containing hashes of names\n\n\n\n\nGiven:\n", "\n\n\n\n\n\nUse Call-Based format\n\nReturn:\n\n```\nlist([], [])\n# returns ''\n```\n\n\n\n# returns ''\n```\n```\n\n\n\n\n\n\n\n\n\n\n\n\nGiven: an array containing hashes of names\n\n\n\n\ngiven:\n\n\n\n```\n\n\nGiven:\n", "\n\n\n\n\nUse Call-Based format\n\nGiven: an array containing hashes of names\nReturn: a string formatted as a list of names\n\nReturns: a string\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven: an array containing hashes of names\n\n\n\n\nGiven:", "\n\n\n\n\n\n\nlist(namelist)\n# returns ''\n```\n\n\n\n# returns ''\n```\n\n# returns ''\n```\n\n\n\n\n\n\n# returns ''\n```\n\n\n\n\n\n\nnames\n\nReturns:\nReturn:\n\nReturn:\n\nReturns:\n\n\n\n\n\n\n```\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\nGiven: an array containing hashes of names\nReturn: a string formatted as a list of hashes\n`\n```\n\n# returns ''\n```\n```\n\n\n\n\n\n\n\n\n\n\n\n\nGiven: a list of hashes of names\n\n\n\n\n\nGiven:\n\n\n\nGiven: an array containing", "\n\nUse Call-Based format\n\n\n\n\n\nreturn\n# returns 'Bart & Maggie'\n# returns ''\n```\n\n\n# returns 'Bart & Maggie'\n\n# returns ''\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven: an array containing hashes of names\n\n\n\nGiven:", "\n\n\n\n\n\nUse Hash-Based format\n\n\n\nlist([ {name: 'Bart'}, {name: 'Lisa'}, {name: 'Maggie'} ])\n# returns 'Bart & Lisa'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nGiven:\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\ngiven:\nhash\n\nreturn:\n\nReturns:\n\n```\nstr\n\n```\n\n\n# returns ''\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven:\nhash\nReturn:\n\n\n\n\nGiven", "\n\n\n\n\nuse Call-Based format\n\n\n\n\nlist([], [1])\n# returns ''\n```\n\n\n# returns ''\n```\n\n\nGiven: an array containing hashes of names\n\nReturn: a string\n\n`\n\n\n\n\n\n\n\n\n\n\n\ngiven: an array of hashes of names\n\n\n\n\n\nGiven:", "\n\n\n\n\nUse Call-Based format\n\n\nGiven: array of hashes of names\nReturn: a string formatted as a list of names\n\nUse Call-Based format\n\n```\n\n# returns ''\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven: array of hashes of names\n\nReturn:\n\n\n\n\nGiven:", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven: a list of hashes of names\nReturn: a string\n\nExample:\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven: an array containing hashes of names\n\nReturn:\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\nGiven: an array containing hashes of names\nReturn: a string formatted as a list of names\n\nExample:\n\n```\n\n\n```\n\n\n\n\n\n\n\n\nGiven:\n\n\n\n\nGiven:\nnames\n\nReturns:\n\n\n\n\n\ngiven:\n\n```\nGiven:\ngiven", "\n\n\n\n\n\n\n\n\n\n# returns ''\n```\n```\n# returns 'Bart'\n\n\n\n\ngiven: an array containing hashes of names\nReturn: a string formatted as a list of names\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven: array of hashes of names\nReturn:\n\n\nGiven:", "\n\n\n\n\n\n\n\n\n\n```\n# returns 'Bart & Maggie'\n\n\n\n\n\n\ngiven: an array containing hashes of names\n\nReturn: a string formatted as a list of names\n\nExample:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\ngiven:\nhash\n\nReturn:\n\n\n\nGiven"], "prompt": "\nQUESTION:\nGiven: an array containing hashes of names\n\nReturn: a string formatted as a list of names separated by commas except for the last two names, which should be separated by an ampersand.\n\nExample:\n\n``` ruby\nlist([ {name: 'Bart'}, {name: 'Lisa'}, {name: 'Maggie'} ])\n# returns 'Bart, Lisa & Maggie'\n\nlist([ {name: 'Bart'}, {name: 'Lisa'} ])\n# returns 'Bart & Lisa'\n\nlist([ {name: 'Bart'} ])\n# returns 'Bart'\n\nlist([])\n# returns ''\n```\n``` elixir\nlist([ %{name: \"Bart\"}, %{name: \"Lisa\"}, %{name: \"Maggie\"} ])\n# returns 'Bart, Lisa & Maggie'\n\nlist([ %{name: \"Bart\"}, %{name: \"Lisa\"} ])\n# returns 'Bart & Lisa'\n\nlist([ %{name: \"Bart\"} ])\n# returns 'Bart'\n\nlist([])\n# returns ''\n```\n``` javascript\nlist([ {name: 'Bart'}, {name: 'Lisa'}, {name: 'Maggie'} ])\n// returns 'Bart, Lisa & Maggie'\n\nlist([ {name: 'Bart'}, {name: 'Lisa'} ])\n// returns 'Bart & Lisa'\n\nlist([ {name: 'Bart'} ])\n// returns 'Bart'\n\nlist([])\n// returns ''\n```\n```python\nnamelist([ {'name': 'Bart'}, {'name': 'Lisa'}, {'name': 'Maggie'} ])\n# returns 'Bart, Lisa & Maggie'\n\nnamelist([ {'name': 'Bart'}, {'name': 'Lisa'} ])\n# returns 'Bart & Lisa'\n\nnamelist([ {'name': 'Bart'} ])\n# returns 'Bart'\n\nnamelist([])\n# returns ''\n```\n\nNote: all the hashes are pre-validated and will only contain A-Z, a-z, '-' and '.'.\ndef namelist(names):\n\t\nUse Call-Based format\nANSWER:\n"}}