{"262": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample 1:\n\nReturn True\u00a0if the equation is solvable\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\nGiven an", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\nGiven an equation", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nExplanation:\n\nUse Call-Based format\nExplanation:\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\nGiven an equation,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nConstraints:\n\n1 <= words.length <= 5\n1 <= result.length <= 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words on left", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\nUse Call-Based format\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\nGiven an equation", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nExplanation:\nUse Call-Based format\n\nUse Call-Based format\n\nExample 1:\nUse Call-Based format\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result\n\n\n\n\n\nGiven", "\nUse Call-Based format\n\nUse Call-Based format\nEXPLANATION:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n   \n\n\nGiven an equation\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\nGiven an equation,", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an equation, represented by words, and result:\n\nGiven an equation, represented by words, and result:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words, and result:\n\n\n\n\nGiven an equation", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nConstraints:\n\n0 <= words.length <= 1\n1 <= result.length <= 2\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\nGiven an equation,", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nInput:\n    words: List[str]\n    result: str\n\nUse Call-Based format\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words on left", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    def isSolvable(self, words: List[str], result: str):\n    return result.isSolvable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\nGiven an equation", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven an equation, represented by words, result:\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an equation, represented by words, result:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\nGiven an equation, represented", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an equation, represented by words and result.\n\nUse Call-Based format\nGiven an equation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result.\n\n\n\n\n\nGiven an equation, represented", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\nGiven an equation, represented by words, result:\n\n\n   \n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words, result:\n\n\n\n\n\nGiven an equation, represented by", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nGiven an equation, represented by words and result:\n\n\n\nReturn True if the equation is solvable.\n\nConstraints:\n\n2 <= words.length <= 5\n1 <= result.length <= 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\nGiven an equation, represented by words and result, return True\u00a0if the equation is solvable\n\nConstraints:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\nGiven an equation,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\nExample 1:\n\n\n\n\n\nGiven an equation, represented", "\nUse Call-Based format\nEXPLANATION:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\nGiven an equation, represented by words on left", "\nUse Call-Based format\n\nUse Call-Based format\nEXPLANATION:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words, result:\n\n\n\n\nGiven an equation", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExplanation:\nUse Call-Based format\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation, represented by words and result:\n\n\n\n\n\n\n\n\n\n\n\nGiven an equation:\n\n\n\nGiven an equation, represented"], "prompt": "\nQUESTION:\nGiven an equation, represented by words on left side and the result on right side.\nYou need to check if the equation is solvable\u00a0under the following rules:\n\nEach character is decoded as one digit (0 - 9).\nEvery pair of different characters they must map to different digits.\nEach words[i] and result\u00a0are decoded as one number without leading zeros.\nSum of numbers on left side (words) will equal to the number on right side (result).\u00a0\n\nReturn True\u00a0if the equation is solvable otherwise\u00a0return\u00a0False.\n\u00a0\nExample 1:\nInput: words = [\"SEND\",\"MORE\"], result = \"MONEY\"\nOutput: true\nExplanation: Map 'S'-> 9, 'E'->5, 'N'->6, 'D'->7, 'M'->1, 'O'->0, 'R'->8, 'Y'->'2'\nSuch that: \"SEND\" + \"MORE\" = \"MONEY\" ,  9567 + 1085 = 10652\nExample 2:\nInput: words = [\"SIX\",\"SEVEN\",\"SEVEN\"], result = \"TWENTY\"\nOutput: true\nExplanation: Map 'S'-> 6, 'I'->5, 'X'->0, 'E'->8, 'V'->7, 'N'->2, 'T'->1, 'W'->'3', 'Y'->4\nSuch that: \"SIX\" + \"SEVEN\" + \"SEVEN\" = \"TWENTY\" ,  650 + 68782 + 68782 = 138214\nExample 3:\nInput: words = [\"THIS\",\"IS\",\"TOO\"], result = \"FUNNY\"\nOutput: true\n\nExample 4:\nInput: words = [\"LEET\",\"CODE\"], result = \"POINT\"\nOutput: false\n\n\u00a0\nConstraints:\n\n2 <= words.length <= 5\n1 <= words[i].length,\u00a0result.length\u00a0<= 7\nwords[i], result\u00a0contains only upper case English letters.\nNumber of different characters used on the expression is at most\u00a010.\nclass Solution:\n    def isSolvable(self, words: List[str], result: str) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}