{"3546": {"code": ["\n\n\n\nEAN is an EAN-Code\n\nEAN is an EAN-Code with 9-digit data\n\nEAN is an EAN-Code with 9-digit checksum\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n## Example\n\n# The", "\n\nYou have to call the code with the required arguments.\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n\n```python\n\n# Chrom", "\n\n\n\nUse Call-Based format\nValidate a given EAN-Code\n\nReturns True if validation is successful\nReturn False if validation is not successful\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\nEAN-8\n= 8\n59", "\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n  * validate_ean(code) # => True\n\n```python\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nValidate a given EAN-Code\n\n\n\n\n```", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidate a given EAN-Code\n\nUse Call-Based format\n\n```python\n\nValidate a given EAN-Code\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nIf the code is \"", "\n\n\n\n\n\n\n\n\n\n\n\nThe code has to be a valid EAN-Code\n\nformal:\n\n400330101839\n\nformal:\n\n400330101839\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n# [1]\n", "\n\nEAN:\n  The EAN-Code to validate.\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\nValidate a given EAN-Code:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n```python\n\nCheck the checksum", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValid EAN-Code:\n\n  4003301018398\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nif sum mod 10 == 0:\n\n = 10\n", "\n```python\n\nValidate a given EAN-Code\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe validation function takes a string and returns a boolean\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nvalidate_ean(\"4003301\")\n", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n```python\nValidate a given EAN-Code\n\n\n\n\n\n\n\n\n\nThe following code is used:\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n```python\n\n[\n  \"400", "\n\n\n\n\nThe code is a string.\n\nExample:\n\n  validate_ean(\"400330101839\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEAN-8\n\nEAN-8\n\n\n\n\n\n\n\n```python\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```\n\n\n\nThe code is a 13-digit barcode.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nEAN is a 13-digit barcode\n\n```\n\n\n\n\n\n\n\n\n\n\n```python\n\n## Examples\n", "\n\n\n\n\nUse Call-Based format\nUse Call-Based checksum\n\n\n\n\n\n\n\n\n\n\n\n```python\nValidate a given EAN-Code\n\n```python\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nEAN-8\nChecksum: 8\n\n\n\n\n=", "\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\nValidate a given EAN-Code:\n\n  code = EAN\n\n  checksum = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n# Example\n\n4\u00b71 + 0\u00b73 + 0\n", "\n\nExample:\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlease use Call-Based format:\n\n```python\n\n\n```python\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n```python\n\n\n```python\nvalidate_", "\n\n\n\n\n\n\nvalidate_ean(code)\n\nUse Call-Based format:\n\n```python\nValidate a given code.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvalidate_ean(\"4003301018398\")\n\n\n\n\"\"\"\n\n\n\n\n\n", "\n\n\nValidate a given EAN-Code\n\nIf the given code is not valid, return false.\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is a very dumb implementation.\n\n```python\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n```python\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck the given code\n\n```python\nValidate a given code\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nEAN-8\n \n\n```\n\n\n\n", "\n\n\n\nExample:\n\n  validate_ean(\"400330101839\")\n\n  validate_ean(\"400330101839\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nif validate_e", "\n\nCheck EAN-Code\n\n\n\n\n\n\n\nEAN-Code is a 12-digit barcode\n\nThe code is a 12-digit barcode\n\nExample:\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n```python\n\nif validate_"], "prompt": "\nQUESTION:\nA lot of goods have an  International Article Number (formerly known as \"European Article Number\") abbreviated \"EAN\". EAN is a 13-digits barcode consisting of 12-digits data followed by a single-digit checksum (EAN-8 is not considered in this kata).\n\n\nThe single-digit checksum is calculated as followed (based upon the 12-digit data):\n\nThe digit at the first, third, fifth, etc. position (i.e. at the odd position) has to be multiplied with \"1\". \nThe digit at the second, fourth, sixth, etc. position (i.e. at the even position) has to be multiplied with \"3\".\nSum these results. \n\nIf this sum is dividable by 10, the checksum is 0. Otherwise the checksum has the following formula:\n\n  checksum = 10 - (sum mod 10)\n\nFor example, calculate the checksum for \"400330101839\" (= 12-digits data):\n\n4\u00b71 + 0\u00b73 + 0\u00b71 + 3\u00b73 + 3\u00b71 + 0\u00b73 + 1\u00b71 + 0\u00b73 + 1\u00b71 + 8\u00b73 + 3\u00b71 + 9\u00b73\n= 4 + 0 + 0 + 9 + 3 + 0 + 1 + 0 + 1 + 24 + 3 + 27 \n= 72\n10 - (72 mod 10) = 8 \u21d2 Checksum: 8\n\nThus, the EAN-Code is 4003301018398 (= 12-digits data followed by single-digit checksum).\n \nYour Task\nValidate a given EAN-Code. Return true if the given EAN-Code is valid, otherwise false.\n\nAssumption\nYou can assume the given code is syntactically valid, i.e. it only consists of numbers and it exactly has a length of 13 characters.\n\nExamples\n\n```python\nvalidate_ean(\"4003301018398\") # => True\nvalidate_ean(\"4003301018392\") # => False\n```\n\nGood Luck and have fun.\ndef validate_ean(code):\n\t\nUse Call-Based format\nANSWER:\n"}}