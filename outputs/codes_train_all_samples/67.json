{"67": {"code": ["\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample\n1\n\n2\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample\n\n2\n\n\n\n\n\n\n-----Example-----\n\nHouhe\n\n\n\n\n-----Example-----\n\nExample\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n$2", "\n\n-----Example-----\n\nExample:\n\nhe can't get the number of operations of the same length.\n\n-----Example-----\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n", "\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n-----Example-----\nOutput\n\n\n\n\n\n\n\n\n\n\n-----Test The Code-----\n\nThis problem has the following problems:\n\n  - The first line is always one word, the second is a word, and the next is another word\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first line contains a single integer $k$ ($1 \\leq k \\leq 1000$), $i \\leq n$ ($2 \\leq i \\leq j$).\n\n\n\n\n\n\n\n\n\n\n\n\n$", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThis problem is very very large, the number of swaps is a very small number of strings: $k \\le q 1000\n$n \\le q 50\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n2 \\", "\n\n\n\n\n\n\n\n\n\n\n\non\n\n\n\n\n-----Test cases-----\n\nThe first line is the last line\n\n\n\n\n\n\n\n-----Test cases-----\n\nYou can run the following problem:\n\nk \\leq 1000$\n$2 \\leq 50$\n\n\n\n\n\n\n\n\n\n-----Output-----\n\nThe second", "\n\n-----Notes-----\n\n\n\n\n\n\n-----TestCases-----\n\ndecide\n2\n\n-----Example-----\n\n\n\n\n\n-----Example-----\n\nExample\n1\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n-----Example-----\n\n", "\n\n\n\n\n\n\n-----Error-----\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nThe output is a single string $k$\n\n2 \\le k \\le 50$\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n-----", "\n\n\n\n\nHoha\n\n-----Example-----\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\nExample:\n\n-----Input-----\n\nThe first line contains two integers $i$ and $t$\n\nn$\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n   ", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first line contains the number of strings to swap\n\nThe second line contains the number of strings to swap\n\nThe first line contains the number of strings to swap\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\\n\n+\n", "\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nHouhe\n\nHe performs a number of operations of length $2n$ (the number of operations of length $2n$ or shorter is suitable).\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nExemple:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHouhe\n\n\n-----Error-----\n\nYou can't find the correct problem.\n\n\n\n\n\n\n\n-----Error-----\n\n\n\n-----Example-----\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n-----", "\n\n-----Example-----\n\nExample\n\nhello\n\n\n\n\n\n\n\nOutput\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n-----Example-----\n\nExample\n\n\n\n\n\n\n\n\n\n\n\n-----", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test Description-----\n\nThe above string is the same as the above code.\n\n-----Test Description-----\n\nThe above string is the second string.\n\n-----Test Description-----\n\nThe second string is the second string\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample:\n\n-----Input-----\n\n4\n\nsous\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample\n\n-----Input-----\n\n5\n2\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n", "\n\n\n\n\n\n\n-----Error-----\n\ndecide\n1\n2\n3\n4\n5\n\n\n\n\n\n\n-----Example-----\n\nExample\n\n1\n2\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Error-----\n\nYou can see more problems\n\n-----Output-----\n\n\n\n\n\n\n\nBy", "\n\n-----Example-----\n\n\n\n\n\n\n-----Example-----\n\ndecide\n1\n2\n3\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n5\n6\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n", "\nMusi\n\n\n\n-----Examples-----\n\nUjan\n\nThe above problem was generated\n\n-----Example-----\n\nExample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n1\n2\n\n5", "\nTest case:\n\nbouhe\n\n\n\n\n-----Test case:\n\n\ndecide\n\n\n\n\n-----Test case:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Error-----\n\n\n\n\n-----Error-----\n\nThe last line contains an integer $k$\n\n\n\n\n\n-----Example-----\n\n", "\n\n\n\n\n\n-----Error-----\n\nYou can't get the number of operations of the same length, just use the first line.\n\n-----Warning-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Error-----\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n-----Example-----\n"], "prompt": "\nQUESTION:\nThis problem is different from the easy version. In this version Ujan makes at most $2n$ swaps. In addition, $k \\le 1000, n \\le 50$ and it is necessary to print swaps themselves. You can hack this problem if you solve it. But you can hack the previous problem only if you solve both problems.\n\nAfter struggling and failing many times, Ujan decided to try to clean up his house again. He decided to get his strings in order first.\n\nUjan has two distinct strings $s$ and $t$ of length $n$ consisting of only of lowercase English characters. He wants to make them equal. Since Ujan is lazy, he will perform the following operation at most $2n$ times: he takes two positions $i$ and $j$ ($1 \\le i,j \\le n$, the values $i$ and $j$ can be equal or different), and swaps the characters $s_i$ and $t_j$.\n\nUjan's goal is to make the strings $s$ and $t$ equal. He does not need to minimize the number of performed operations: any sequence of operations of length $2n$ or shorter is suitable.\n\n\n-----Input-----\n\nThe first line contains a single integer $k$ ($1 \\leq k \\leq 1000$), the number of test cases.\n\nFor each of the test cases, the first line contains a single integer $n$ ($2 \\leq n \\leq 50$), the length of the strings $s$ and $t$. \n\nEach of the next two lines contains the strings $s$ and $t$, each having length exactly $n$. The strings consist only of lowercase English letters. It is guaranteed that strings are different.\n\n\n-----Output-----\n\nFor each test case, output \"Yes\" if Ujan can make the two strings equal with at most $2n$ operations and \"No\" otherwise. You can print each letter in any case (upper or lower).\n\nIn the case of \"Yes\" print $m$ ($1 \\le m \\le 2n$) on the next line, where $m$ is the number of swap operations to make the strings equal. Then print $m$ lines, each line should contain two integers $i, j$ ($1 \\le i, j \\le n$) meaning that Ujan swaps $s_i$ and $t_j$ during the corresponding operation. You do not need to minimize the number of operations. Any sequence of length not more than $2n$ is suitable.\n\n\n-----Example-----\nInput\n4\n5\nsouse\nhouhe\n3\ncat\ndog\n2\naa\naz\n3\nabc\nbca\n\nOutput\nYes\n1\n1 4\nNo\nNo\nYes\n3\n1 2\n3 1\n2 3\nUse Standard Input format\nANSWER:\n"}}