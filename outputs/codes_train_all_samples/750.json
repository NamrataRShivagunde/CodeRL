{"750": {"code": ["\nUse Standard Output format\n\n\n\n\n\n\n\n1 2 3 4 5 1\n2 3 4 5 1\n1\n1\n1\n1\n1\n1\n1\n0\n\n\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 2\n2 3 4 5 1\n3 4 4 5 1\n\n\n\n100", "\nUse Standard Output format\n\n\nUse Standard Output format\n\n\n\n\n\nUse Standard Output format\n\n\nUse Standard Output format\n\n1 2 3 4 5 1 1\n2 3 4 5 1\n1\n1\n1\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 2 2\n1\n1\n\n\n\nA test case", "\n\n\n\nUse Standard Output format\n\n\n\n\n\n1 4 3 2\n2 3 4 5 1\n1\n1\n1\n0\n1\n1\n0\n0\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you are not using", "\nUse Standard Output format\n\n\n\n\n\n\n\nambiguous\nnot ambiguous\n\n\n\nnot ambiguous\nnot ambiguous\n\n-----Input Specification-----\n1 4 3 2\n5 3 3 4 1\n5\n\n\n\n\n\n\n\n\n\n1 4 3 2 3\n1 3 4 5 1 1\n1\n1\n1\n\n\n\n\n\n\nSome programming cont", "\nUse Standard Output format\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\n2 4 3 2\n3 4 5 1\n2 3 4 5 1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 4 5 1\n1\n0\n\n\nUse Standard Output", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\nnot ambiguous\nnot ambiguous\n\n-----Sample Input Specification-----\n4\n1\n2\n3\n5\n1\n1\n1\n1\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Input Specification-----\n\n1 2 3 2\n", "\nUse Standard Output format\n\n\n\n\n\n\n\n\nambiguous\nnot ambiguous\nambiguous\nnot ambiguous\nambiguous\n\n-----Output Specification-----\nambiguous\nnot ambiguous\nambiguous\nnot ambiguous\n\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n1 4 3 2\n3 4 5 1\n2\n3\n\n\nA permutation", "\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n1\n3\n0\n0\n\n-----Output Specification-----\n\nnot ambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\n\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n1 4 3 4 2\n3 4 5 1\n\n\nIf", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n2 3 4 5 1\n1\n0\n0\n\n\n\n\nnot ambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTomas are not very tricky:", "\nUse Standard Output format\n\n\n\n\n\n\n\nambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n1 2 3 4 5 1\n2 3 4 5 1\n1\n\n\n\n\n\n-----Input Specification-----\n4\n\nIf you have", "\nUse Standard Output format\n\n\n\n\n\n\n\nambiguous\nnot ambiguous\nnot ambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\nambiguous\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe programming contest problems are really tr", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\nambiguous\nnot ambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 2 4 5 1\n0\n\n\nI am", "\nUse Standard Output format\n\n\n\n\n\n\n\n2 3 4 5 1\n2 3 5 1\n1\n\n\n\n\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n1 3 4 5 1\n1\n\n\n\n\n\n\n\n\n\n-----Input Specification-----\n4\n3", "\n\n\n\n\n\n\n\n\nnot ambiguous\nambiguous\nambiguous\nambiguous\nnot ambiguous\n\nUse Standard Output format\nANSWER:\n\n\nUse Standard Output format\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\n\n3\n4\n2\n3\n5\n1\n1\n0\n\n\n\n\n\n\n\nThe programming contest", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\nambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Input Specification-----\n4\n1 4 3 2\n5\n\nA lot", "\nUse Standard Output format\n\n\n\n\n\n\n\nnot ambiguous\nnot ambiguous\nambiguous\n\n\n\n\n\nambiguous\nnot ambiguous\nambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output Specification-----\n\n4\n2 3 2\n5 3 4", "\nUse Standard Output format\n\n\nUse Standard Output format\n\n\n\n\n\nUse Standard Output format\n\n\nambiguous\nnot ambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n5\n3 4 5 1\n1\n2\n2\n3 4 5 1\n1\n1\n1\n\n\n\n\n\n\n\nSome program", "\nUse Standard Output format\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\nnot ambiguous\nnot ambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 4 5 1\n2 3 4 5 1\n\n\nAnother", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 2\n2 4 3 4 1\n5 2 3 4 1\n3 4 5 1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 3 4 2\n2 3 4 5 1\n4 3 5 1\n1\n0\n\n\n\n\n\n\n", "\nUse Standard Output format\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\nambiguous\nambiguous\nnot ambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\nambiguous\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 4 3 2\n1 3 4 5 1\n\n\n\n100"], "prompt": "\nQUESTION:\nSome programming contest problems are really tricky: not only do they\nrequire a different output format from what you might have expected, but\nalso the sample output does not show the difference. For an example,\nlet us look at permutations.\n\nA permutation of the integers 1 to n is an\nordering of\nthese integers. So the natural way to represent a permutation is\nto list the integers in this order. With n = 5, a\npermutation might look like 2, 3, 4, 5, 1. \n\nHowever, there is another possibility of representing a permutation:\nYou create a list of numbers where the i-th number is the\nposition of the integer i in the permutation. \nLet us call this second\npossibility an inverse permutation. The inverse permutation\nfor the sequence above is 5, 1, 2, 3, 4.\n\nAn ambiguous permutation is a permutation which cannot be\ndistinguished from its inverse permutation. The permutation 1, 4, 3, 2\nfor example is ambiguous, because its inverse permutation is the same.\nTo get rid of such annoying sample test cases, you have to write a\nprogram which detects if a given permutation is ambiguous or not.\n\n-----Input Specification-----\nThe input contains several test cases.\n\nThe first line of each test case contains an integer n\n(1 \u2264 n \u2264 100000).\nThen a permutation of the integers 1 to n follows\nin the next line. There is exactly one space character\nbetween consecutive integers.\nYou can assume that every integer between 1 and n\nappears exactly once in the permutation.\n\nThe last test case is followed by a zero.\n\n-----Output Specification-----\nFor each test case output whether the permutation is ambiguous or not.\nAdhere to the format shown in the sample output.\n\n-----Sample Input-----\n4\n1 4 3 2\n5\n2 3 4 5 1\n1\n1\n0\n\n-----Sample Output-----\nambiguous\nnot ambiguous\nambiguous\nUse Standard Input format\nANSWER:\n"}}