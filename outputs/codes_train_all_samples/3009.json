{"3009": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\ndef time(ar):\n\t\n\n\n\nHaskell\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nHaskell\n\n\nHaskell\n\n\n\n\n\n```H", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n4a5c2b0b11b7\ndef times(ar):\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n```\n\n\n\nHaskell\n\n\n\n\n\n\n```Haskell\nH", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ndef pairs(ar):\n\t\nUse Call-Based format\n\n\n\nHaskell\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nHaskell\n\n\n\n\n\n\nHaskell\nH", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\na3c911e5b98a3c3b\ndef time():\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\ne8c0c5\n```\n\n\n\nHaskell\n\n\n\n\n\n\n```H", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format007d\n\ndef time_difference(a,b):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n```Haskell\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\ndef pairs(ar):\n\nUse Call-Based format\n\n\n\n\nHaskell\n\nUse Simple time difference\ndef\n\n\n\n\n\n\n\n\n\n```Haskell\npairs(ar) = 3\n```\n\n\n\n\n\n\n\n\n\n```Hask", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Simple time difference format\n\ndef time(ar):\n\t\nUse Call-Based format\n\n\n\nHaskell\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Simple Time Difference format\n\n\n\n\nHaskell\n\n\n\n\n\n```Haskell\nHask", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n8f9b5adb8a9b9b8a4de1ad\ndef times(ar):\n\t\n\n\n\n\n\ndef\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nHaskell\n\n\nHaskell\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\na4b1e4c2b7b1b9d5b8b9c4b7b9a1b\ndef\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nHaskell\n\n\n\n\n\n\nHaskell\nH", "\nUse Call-Based format\n\n\n\n\n\n\n\ndef time(ar):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n```\n\n\n\nHaskell\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format9de6db0000f2\n\ndef time():\n\t\n\n\n\n\nHaskell \n\nUse Simple Time Difference format\n\n\n\t\n\n\n\n\nUse Call-Based format\n\n\n```\n\n\n\nHaskell\n\n\n\n\n\n\n\n### Examples:\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ndef time(ar):\n\t\n\n\n\n\nUse Haskell format\n\nUse Call-Based format\n\ndef\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nHaskell\n\n\n\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\ndef pairs(a):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nUse Haskell format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nHaskell\n\n\n\n\n\nHaskell, Haskell,", "\nUse Call-Based format\n\n\n\n\nf5b9e37eb6a4f8b6f74e5b\ndef time(ar):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nHaskell\n\n\n\n\n\n\n\nHaskell\nHaskell", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\ndef time():\n\t\n\n\n\n\nHaskell\n\nUse Call-Based format\n\n```Haskell\n\n\n\n\n\n\n\n\n\n\n)\n```\n\n\n\nHaskell\n\n\n\n\n\nHaskell:\nH", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\ndef time(ar):\n\t\nUse Call-Based format\n\n\n\n\n\nHaskell \n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\n\nHaskell\n\n\n\n\n\n\nHaskell\nHask", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nb8b1c6c2c8b3b4f6b5c440\n\n\ndef time():\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nHaskell\n\n\n\n\n\n\n```Haskell``", "\n\n\n\n\n\nUse Call-Based formatb\ndef time(ar):\n\t\nUse Call-Based format\n\n\n\nUse Simple Time Difference\ndef time(ar):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\nUse Simple Time Difference format\n\n\n\n\n\n\n\n\n\n\nHaskell your task will return", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\ndef pairs(a):\n\t\n\n\n\nHaskell\n\nUse Simple Time Difference format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nHaskell\n\n\nHaskell\n\n\n\n\n\n\nHaskell\nH", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n8a7d901c6e0d9b8b1d7c\ndef times(ar):\n\t\n\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\n\n```Kata\n\n\n\nHaskell\n\n\n\n\n```Hask"], "prompt": "\nQUESTION:\nIn this Kata your task will be to return the count of pairs that have consecutive numbers as follows:\n```Haskell\npairs([1,2,5,8,-4,-3,7,6,5]) = 3\nThe pairs are selected as follows [(1,2),(5,8),(-4,-3),(7,6),5]\n--the first pair is (1,2) and the numbers in the pair are consecutive; Count = 1\n--the second pair is (5,8) and are not consecutive\n--the third pair is (-4,-3), consecutive. Count = 2\n--the fourth pair is (7,6), also consecutive. Count = 3. \n--the last digit has no pair, so we ignore.\n```\n\nMore examples in the test cases. \n\nGood luck!\n\nPlease also try [Simple time difference](https://www.codewars.com/kata/5b76a34ff71e5de9db0000f2)\ndef pairs(ar):\n\t\nUse Call-Based format\nANSWER:\n"}}