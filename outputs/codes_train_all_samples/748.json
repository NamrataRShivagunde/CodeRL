{"748": {"code": ["\n\tExample-----\n\t6\n\n\tExample-----\n\n\tInput:\n\t- T \u2264 1\n\t\tT \u2264 6\n\n\tExample-----\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\n\n-\n-\n-\n 6 1\n6 1 4", "\n\tExample-----\n\n\tInput: 1, 2, 3, 4, 5, 6\n\n\n\tInput: 1, 2, 3\n\n\tConstraints-----\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tExample-----\n\n\tExample:\n\n\n\n\n\n\n\n1\n\n\n\n\n 6\n6 1 1", "\n\tExamples:\n\tExample-----\n\n\tExample-----\n\n\tInput:\n\t- 1\n\n\tExamples:\n\tExample-----\n\n\tExample:\n\t\n\n\n\n-\n\n\n\n\n\n\n- 1\n2\n4\n\n\n\n- 1 \u2264 1\n\n\n\n\n\n\n\n1\n1\n1\n 1\n6 1", "\n\tExample-----\n\n\tInput:\n\t\tT \u2264 T\n\t\tN \u2264 N\n\n\n\n\n\n\t\n\n\n\tInput:\n\n\tT \u2264 T\n\n\tExample-----\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n-\n\n- original constraints\n\n 4 3\n-1", "\n\tInput-----\n\tInput: T\n\n\tConstraints-----\n\tInput: T\n\tOutput: T\n\n\tConstraints-----\n\n\tExample-----\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\t\n\n\n\t\n\n\n\tExample-----\n\n-\n\n-\n\n\n 6 6\n-", "\n\tConstraints-----\n\n\tInput-----\n\tInput: 1\n\tOutput: 1\n\n\tConstraints-----\n\n\tExample:\n\t\n\n\tConstraints-----\n\n\tInput: 1\n\n\t\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n-\n\n\n1\n\n\n\n- 1\n 1\n6 1 2", "\n\tExample-----\n\n\tInput:\n\t-\n\tOutput:\n\t- 1\n\t- 1\n\n\tExample-----\n\n\n\n\n\t\n\t\n\n\n\n\n\n-\n\n- original constraints\n\n\n\n\n\n\t\n\n\n\n\t\n\n\tExample-----\n\n\tExample-----\n\n\t\n\n\n-\n\n\n 6 6 6\n", "\n\tExample-----\n\n\tInput:\n\t- T \u2264 6\n\n\tOutput:\n\t- T \u2264 6\n\n\n\n\n\n- original constraints\n\n- original constraints\n\n- original constraints\n\n- original constraints\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n1\n 1\n6 1", "\n\t\n\t\u2264 T\n\t- 1 \u2264 N\n\t- 1 \u2264 Ai\n\n\tExample:\n\t\n\n\n\n\tInput:\n\t-\n\n\n\n\n\n\n\n\n\n\n\n\n\tExample-----\n\n\n\n\n\tExample-----\n\n\tOutput:\n\t\n\n\n\n\n\n 6 6\n6", "\n\tExample:\n\tInput:\n\t\tT \u2264 500\n\n\tExample:\n\t\n\tExample:\n\tOutput:\n\t\n\n\n\n\n\tInput:\n\tT \u2264 500\n\n\tExample:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n 6 1\n6 1", "\n\tExample-----\n\n\tInput:\n\t- 1 \u2264 T\n\n\tOutput:\n\t1 \u2264 T\n\n\tExample-----\n\n\n\n\n\n\n- original constraints\n\n- original constraints\n\n- original constraints\n\n- original constraints\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 2 6 1", "\n\tExample:\n\tInput: T\n\tOutput: T\n\n\tExample:\n\t\n\tInput: T\n\tOutput: T\n\n\tExample:\n\t\n\n\n\n\t\n\n\n\n\n\n\n-\n- original constraints\n\n\n\n\n\n\n\n\n\n\n1\n\n\n-\n6 6 1\n-1\n\n\n 6 6\n-", "\n\tExample:\n\tInput:\n\t\tT \u2264 T\n\n\tExample:\n\t\n\tExample:\n\t\n\n\n\n\t\n\n\tExamples:\n\t\n\n\n\n\n- 1\n- 1\n6 1\n\n\n\n\n\n-\n\n\n\n-\n\n\n\n-\n\n\n\n- 1\n4 4 3\n 6 1", "\n\tExample-----\n\n\tInput: T\n\tOutput: T\n\n\n\n\n\n\n\tInput: T\n\n\tOutput: T\n\n\tExample-----\n\n\tInput: T\n\n\tExample-----\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n-\n\n\n\n- 1\n6 6\n 6\n", "\n\t\n- 1 \u2264 T \u2264 500\n- 1 \u2264 T \u2264 500\n\n\n\n\t\n\tInput:\n\t- 1 \u2264 T \u2264 500\n\n\tOutput:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n-\n-\n 6\n6", "\n\tInput: T\n\tOutput: T\n\n\tConstraints:\n\tInput: T\n\tOutput: T\n\n\tConstraints:\n\n\n\n\n\n\tExample:\n\tInput: T\n\n\tOutput: T\n\n\tExample:\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n-\n\n\n\n 6 6\n6 1", "\n\tInput:\n\t- T \u2264 100\n\tOutput:\n\t- T \u2264 100\n\n\tExample:\n\t\n\t\n\n\n\n-\n\n\n\n\n\n\n-\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\n\tExample-----\n\n\n\n\n\t\n\n\n\t\n\n\n 2\n6 1", "\n\tExample-----\n\n\tInput:\n\t- 1 \u2264 T\n\t- 1 \u2264 N\n\n\tExample-----\n\n\tExample-----\n\n\tInput:\n\t-\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n 6 6\n6 1 4", "\n\tOutput:\n\t- original constraints\n\n\tInput:\n\t- T \u2264 6\n\n\tConstraints:\n\t\n\n\tExample:\n\t\n\n\n\n\n-\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n1\n- 1\n2\n6\n\n\n 2\n6 1", "\n\tExample-----\n\n\tInput:\n\t1 0 1 0 1 0 1 0 1 0 1 0\n\tInput:\n\t1 0 1 0 1 1 1 0 1 1\n\n\n\n\t\n\n\n\n\n\n\n- original constraints\n\n\n\n-\n\n\n\t\n\n\n\t\n\n\n\n\n-\n\n-\n\n 6 6\n6 4 1 1"], "prompt": "\nQUESTION:\n\tChef has a cubic die with 6 faces kept on an infinite plane. Each face has a distinct integer in the range [1,6] written on it, but the exact arrangement of the numbers on the faces of the die is unknown to Chef. Curiosity gets the better of Chef and he wants to find out o(1), o(2), ..., o(6), where o(i) is the number written opposite to the number i.\n\n\tChef performs the following N-1 steps to learn the exact arrangement of the numbers on the die. In the i-th step, Chef pushes the die in some direction (there are 4 possible directions), and the die rolls 90o in this direction. The picture below demonstrates a die and the result that it produced after rolling in each of the 4 directions respectively. For this die, we have o(1)=4, o(2)=5, o(3)=6, o(4)=1, o(5)=2, o(6)=3.\n\n\tChef records N numbers A1, A2, ..., AN, where Ai is the number written on the top of the die before the i-th step. However, the information on the direction in which he pushes the die each time are lost. Can you help him determine the arrangement of 1-6? You need to output o(1), o(2), ..., o(6). If there are multiple solutions, output any one of them.\n\n-----\n\tInput-----\n- The first line of input contains a single integer T, the number of test cases.\n- Each test case consists of two lines.\n- The first line contains an integer N, and the second line contains N space-separated integers A1, A2, ..., AN.\n\n-----\n\tOutput-----\n\n\tFor each test case, output one line. If a possible solution exists, then output 6 space-separated integers o(1), o(2), ..., o(6); otherwise, output -1.\n\n-----\n\tConstraints-----\n\n- 1 \u2264 T, N \u2264 500\n- 1 \u2264 Ai \u2264 6\n\n\tSubtask #1 (17 points):\n\n- N \u2264 2\n\n\tSubtask #2 (83 points):\n\n- original constraints\n\n-----\n\tExample-----\nInput:\n4\n9\n1 3 4 6 1 3 4 6 1\n10\n1 2 1 3 1 4 1 5 1 6\n6\n1 2 3 4 5 6\n4\n1 3 3 1\n\nOutput:\n2 1 6 5 4 3\n-1\n4 5 6 1 2 3\n-1\n\n-----\n\tExplanation-----\nExample case 1: See below.\n\nExample case 2: You can prove that there's no solution.\nExample case 3: The solution is not unique. 3 5 1 6 2 4 is another valid solution.\nUse Standard Input format\nANSWER:\n"}}