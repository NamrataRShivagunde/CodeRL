{"388": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nOutput: 3\n\nUse Call-Based format\n\n\n\n   \n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nN\n\n\nGiven an array of citations of the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Python-based format\n\nclass Solution:\n    def hIndex(self, citations: List[int]):\n\n\n\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an array of citations\n\n\nGiven a list of", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n    def hIndex(self, citations: List[int]):\n       \nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an array of citations\n\n\nGiven an array of", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n        return self.hIndex(citations)\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nHow many papers:\n\nGiven an array", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nClass Solution:\n    def hIndex(self, citations: List[int]):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of c", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n    return self.hIndex(citations)\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an array of citations\n\n\n\nGiven an array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n   \n    pass\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations,", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nGiven a list of citations, write a function to compute the researcher's h-index\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nN papers\n\nGiven an array of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nInput: citations\nOutput: citations\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of c", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nExplanation:\n\n\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nGiven a list of citations:\n\n   \n    pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array of citations:\n\nGiven an array of citations:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nReturns:\n\nhIndex\n\n\n\n\n\n   \n    hIndex(self, citations: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHier\n\n\nGiven an array of citations", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Function-Based format\n\nUse Call-Based format\nEXAMPLE:\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nClass Solution:\n    def hIndex(self, citations: List[int]):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a list of citations,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nclass Solution:\n    def hIndex(self, citations: List[int]) -> int:\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nClass Solution:\n    def hIndex(self, citations):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of c", "\nUse Call-Based format\n\n\n    def hIndex(self, citations: List[int]) -> int:\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nclass\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a list of citations:\n\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \nUse Call-Based format\n\n\n\n    def hIndex(self, citations: List[int]) -> int:\n        \nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def cIndex(self, citations: List[int]) -> int:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nUse Function-Based format\n\nUse Call-Based format\n\n\n\n    def hIndex(self, citations: List[int]):\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations, write"], "prompt": "\nQUESTION:\nGiven an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\n\nAccording to the definition of h-index on Wikipedia: \"A scientist has index h if h of his/her N papers have at least h citations each, and the other N \u2212 h papers have no more than h citations each.\"\n\nExample:\n\n\nInput: citations = [3,0,6,1,5]\nOutput: 3 \nExplanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had \n             received 3, 0, 6, 1, 5 citations respectively. \n\u00a0            Since the researcher has 3 papers with at least 3 citations each and the remaining \n\u00a0            two with no more than 3 citations each, her h-index is 3.\n\nNote:\u00a0If there are several possible values for h, the maximum one is taken as the h-index.\nclass Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}