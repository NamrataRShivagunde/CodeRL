{"4817": {"code": ["\n\n\n\n\n\nUse Call-Based format\n\n`\n\n\n\t\nUse Function-Based format\n\n```python\ndef spread(func, args):\n\ndef spread(lambda func, args)\n```\ndef spread(func, args):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou", ":\n\n\n\n\n\n\n\nUse Call-Based format\n```python\n\ndef\n\n```python\ndef spread(func, args)\n```\ndef\n:\n\n\n\t:\n\n:\n\n\n\n\nUse Call-Based format\n\n\n```python\n\n\n\n\n\nUse Python3\n\n\n\nYou must create a function, `", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n`\n\n\n\t\nUse Lambda-Based format\n\ndef spread(func, args):\n\t\nUse Function-Based format\n\ndef\n:\n\n\n\t\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n\n\n\n```python\n# is", ":\n\nUse Call-Based format\n\n\n\n\n\n`\n\nUse Simple Call-Based format\n\n```python\n\ndef\n\n```python\n\ndef spread(func, args)\n\ndef spread(func, args):\n\t\nUse Lambda format\n\t:\n\n\t:\n\n\n\n\n\n\n\n\n\n\n`\n\n\n\n\nYou", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n(someFunction, [1, true, \"Foo\", \"bar\"] )\ndef\n:\n\nUse Call-Separated format\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nuse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nNote:\nYou", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n`\n\n\ndef spread(func, args):\n\t\nUse Call-Based format\ndef\n:\n\n\n\n\t\n:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n* This is a sample of a work", ":\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n`\n\n(someFunction, [1, true, \"Foo\", \"bar\"])\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n```python\n#", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nuse(spread)\n\nuse Function-Based format\nuse\n:\n\n\n\n\t:\n\n\n\n\n\n\n\n\n\n\n\n\nuse Call-Based format\nEXAMPLE:\n\n\n\n\n\n`\n\n\t\n\n\n```python\n# is the same", "\n\n\n\n\nUse Function-Based format\n\n\n`\n\n\n\ndef spread(func, args):\n\t\nUse Lambda-Based format\n\n\n\n# use Call-Based format\n\ndef\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\n\n```\n\n\n\n\n\n\n\n```python\n# is", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n`\n\nUse Python-Based format\n\n```python\n,\n\n\n\ndef\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n```python\nspread(someFunction, [1, true, \"Foo\", \"bar\"])\n```\n\n", ":\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n`\n\n\ndef spread(func, args):\n\t\nUse Call-Based format\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\nUse Lambda-Based format\n\n\n\n\n\n\n\n\n\n\n\nYou must create a function", ":\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n`\n\n\n\ndef spread(func, args)\n\nuse Call-Like format\ndef\n:\n\n\n\n\t\n:\n:\n\n\n\n\n\n\n\n```python\n```\n\nYou must create a function, `spread`, that takes\n\n\n\n\nYou must", ":\n\nUse Call-Based format\n\n\n\n\n`\n\n(func, args)\n\n\nuse Python-based format\ndef\n:\n\n\n\n\t\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nexample:\n\ndef spread(someFunction, args):\n\n\n\n`\ndef\t\n\n", ":\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n`\n\ndef spread(func, args)\ndef spread(func, args):\n\t\nUse Call-Based format\n\t\n:\n\n\n\t:\n\n:\n\n\n\n\n\n```python\n```\n\n`\n\n\n\n\n```python\n# is the", "\n\n\n\n\n\nUse Call-Based format\n\n`\n\n\n\t\nuse Lambda-Based format\ndef\t\n:\n\n\n\ndef\t\n\n\n:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n```python\nspread(someFunction, [1, true, \"foo\", \"bar\"])\n```\n\n\n", "\n\n\nUse Call-Based format\n\n\n\n\n`\n\n```python\n\n\ndef spread(func, args):\n\t\nUse Function-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nspread(someFunction, [1, true, \"Foo\", \"bar\"])\n```\n\n\n", "\n\n\n\n\n\n\n`\n\nUse Python-Based format\n\nUse Call-Based format\n\nEXAMPLE:(lambda func, args):\n\t\nUse Lambda format\n\n:\n\n\n\t\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n`\n\n\n\n\n\n\n\n```python\nspread(lambda someFunction,", "\n\n\n\n\nUse Call-Based format\n\n\n`\n\nuse\n\ndef spread(func, args):\n\t\nUse Python-Based format\ndef spread(func, args):\n\t\nUse Lambda-Based format\ndef\n:\n\n\n\n\n\n\n\n\n\n\n\n```python\ndef```\n\n\n```python\n\n\n\n```", "\n\n\n\n\n\nUse Call-Based format\n\n`\n\ndef(func, args):\n\t\nUse Function-Based format\ndef\n:\n\n\ndef\n\t:\n\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n```python\ndef spread(func, args):\n\n\n\n\n\n\n\n\nYou must", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n`\n\ndef spread(someFunction, [args])\n\nuse Call-Based format\n\ndef\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n```python\nspread(someFunction)\n```\n\n\n\n\n\t\n\n\n\n.. code-block"], "prompt": "\nQUESTION:\nYou must create a function, `spread`, that takes a function and a list of arguments to be applied to that function. You must make this function return the result of calling the given function/lambda with the given arguments.\n\neg:\n```python\nspread(someFunction, [1, true, \"Foo\", \"bar\"] ) \n# is the same as...\nsomeFunction(1, true, \"Foo\", \"bar\")\n```\ndef spread(func, args):\n\t\nUse Call-Based format\nANSWER:\n"}}