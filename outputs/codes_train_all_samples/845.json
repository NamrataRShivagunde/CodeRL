{"845": {"code": ["Use Standard Input format\n\n\n\n\n\n\nGive me Biscuit\n\nBiscuit can be used as a biscuit\n\nBiscuit can be cut into three different pieces\n\nConstraints\n\nc,d\n\nc,d\n\nd\n\nc\nd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nG", "Use Standard Input format\nN\n\n\n\n\n\nGive me Biscuit\n\nBiscuit is cut into 2,3,1,2,3,3\n\nConstraints\n\nN\n\n3\n\n3\n\n1\n\n3\n\n3\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive", "Use Standard Input formatUse Standard Output format\n\n\nUse Standard Output format\nGive me Biscuit\n\n\nGive me Biscuit\n\nBiscuit\n\n\nc,d\n\n\n\n\nGive me Biscuit\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive me Biscuit\n\n\n6\n\n6\n\n\nGive", "Use Standard Input formatUse Standard Output format\n\n\n\nUse Standard Output format\nN\n\n6\n\n\n6 9\n\n6 9\n\n\n1\n\n2\n\n2 3\n\n1\n\n\n6\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive me Biscuit\n\n\n\n\n\nGive me", "Use Standard Input formatGive me Biscuit\n\nUse Standard Output format\n\n\n\nUse Standard Input format\n\nc,d\n\nc,d\n\nd\n\n\nGive me Biscuit\n\nN\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive me Biscuit\n\n\n\n\n1\n\n6\n\n\nGive", "\nUse Standard Input format\n\n\n\n\n\nGive me Biscuit\n\nBiscuit is a square\n\nBiscuit is a square\n\nBiscuit is a square\n\nConstraints\n\nN 1\n\n2 2\n\n3 3\n\n3 3\n\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nG", "\nUse Standard Input formatUse Standard Output format\n\n\nUse Standard Output format\n\n\n\nGive me Biscuit\n\nBiscuit can be cut into two different pieces\n\n\n\nGive me Biscuit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive me Biscuit\n\nBiscuit\n\n\n\n\n\nGive me", "Use Standard Input format\n\n\n\nGive me Biscuit\n\n\nN 2 2\n\nN 3 3\n\nN 2 2\n\nN 1 2\n\nN 2 2\n\nN 2 2\n\nN 2 2\n\nN 2\n\n1 2\n\nN 2\n\n1 2\n\n2 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive me Biscuit\n\nBiscuit\n\n\n\n\nGive me Biscuit\n\n\n\n1\n\nN", "Use Standard Output formatUse Standard Input format\n\n\n\n\n\nGive me Biscuit\n\nSuck me Biscuit\n\nSuck me Biscuit\n\nBiscuit is a square\n\nConstraints\n\nc,d\n\nc,d\n\nd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive", "\n\n\n\nUse Standard Input format\n\n\nBiscuit\n\nBiscuit is an uncut\n\n1 2 2 3\n\n6 2 3\n\n6 9\n\n6 1 2 3\n\n6 1 3\n\n6 9\n\n6\n\n6 9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\nG", "\nUse Standard Input format\n\n\nUse Standard Output format\nUse Standard Input format\nUse Standard Output format\n\nGive me Biscuit\n\nBiscuit is a slice of five lines of size 1,2,3\n\nBiscuit is a slice of 6 x 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive me", "\nUse Standard Input format\n\n\n\n\n\nGive me Biscuit\n\nUse Standard Output format\n\nExplanation \n\t\n\nN\n\n1\n\n2 2\n\n3 2\n\n3 3\n\n6\n\n9\n\n\n6\n\n\n6\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "Use Standard Output format\n\n\n\nUse Standard Input format\n\nGive me Biscuit\n\nBiscuit\n\n\nBiscuit\n\n\nBiscuit\n\n\nBiscuit\n\n\nBiscuit\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\nGive me Biscuit\n\n\n\n\nG", "Use Standard Output format\n\n\n\n\nGive me Biscuit\n\n\n6\n\n6\n\n9\n\n6\n\n9\n\n6\n\n9\n\n6\n\n6\n\n6\n\n9\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n\nGive", "Use Standard Input format\nGive me Biscuit\n\n\n\nUse Standard Output format\nUse Standard Input format\n\nbiscuit\n\n\nbiscuit\n\n\nbiscuit\n\n\nbiscuit\n\n\nbiscuit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\n\nGive me", "Use Standard Output formatUse Standard Input format\n\n\nGive me Biscuit\n\n\n\nGive me Biscuit\n\nBiscuit can be cut into two different pieces.\n\nConstraints\n\n1,2,3\n\n1,2,3\n\n1,3\n\n2 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "Use Standard Output formatUse Standard Input format\n\n\n\n\n\nGive me Biscuit\n\nBiscuit\n\n\nBiscuit\n\n\nBiscuit\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n2 3\n\n\n\n\n\n\n\n\n\n\n\n\nBiscuit\n\nBiscuit\n\n\n9\n\n\n\nG", "\nUse Standard Input format\n\n\n\nGive me Biscuit\n\n\nN 2\n\n2 3\n\n2 2\n\n3 3\n\n3 3\n\n4 3\n\n6 7\n\n6 8\n\n9 7\n\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n1\n\n\n", "Use Standard Output formatUse Standard Input format\n\n\n\nUse Standard Output format\n\nN 2\n\nN 3\n\n6 9\n\n6 9\n\n6\n\n6\n\n1\n\n1\n\n1\n\n\n6\n\n1\n\n1\n\n1\n\n6\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "Use Standard Output formatUse Standard Input format\n\n\nUse Standard Input formatUse Standard Output format\n\n\n\n1\n\n2 2\n\n3 3\n\n3 3\n\n3 4\n\n1 1\n\n2 3\n\n3 4\n\n1\n\n1\n\n1\n\n2\n\n2 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGive meG"], "prompt": "\nQUESTION:\nGive me Biscuit\n\nSunny wants to make slices of biscuit of size c * d into identical pieces.\n\nbut each piece is a square having maximum possible side length with no left over piece of biscuit.\n\nInput Format\n\nThe first line contains an integer N.\n\nN lines follow. Each line contains two space separated integers c and d.\n\nwhich denote length and breadth of the biscuit.\n\nConstraints\n\n1 <= N <= 1000\n\n1 <= c,d <= 1000\nOutput Format\n\nN lines, each containing an integer that denotes the number of squares of maximum size, when the biscuit is cut as per the given condition.\n\nSample Input \n\n2\n\n2 2\n\n6 9\n\nSample Output \n\n1\n\n6\n\nExplanation \n\t\n\nThe 1st testcase has a biscuit whose original dimensions are 2 X 2, the biscuit is uncut and is a square.\n\nHence the answer is 1.\n\nThe 2nd testcase has a biscuit of size 6 X 9 . We can cut it into 54 squares of size 1 X 1 , 6 of size 3 X 3 . For other sizes we will have leftovers.\n\nHence, the number of squares of maximum size that can be cut is 6.\nUse Standard Input format\nANSWER:\n"}}