{"292": {"code": ["\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n2 <= arr1.length <= arr2.length <= 40000\n\n\u00a0\n\n\n\n\n\n\u00a0\n\nFor two", "\nUse Call-Based format\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nUse Call-Based format\n2\n\n\nGiven two arrays of", "\nUse Call-Based format\nUse Call-Based format\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\nUse Python-based format\n1 - 1 == 1\n\n\n\n\n\n1 - 1 == 1\n\nGiven two arrays", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\n\n\n\n\n   \n\nUse Python-based format\n\n\n\n\n\n\n\n1 - arr1 == 2\n\n\n\nUse Python-Based format\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\nGiven two arrays of integers with equal", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2):\n        return arr1[0]\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python-based format\n\n\n\n\u00a0\n\n\narr1.length == arr2.length\n\n\n\n\n\n\n\nGiven two arrays of integers with equal lengths,", "\nUse Call-Based format\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\n\n\n\n\n\n\n\n\n\n\n\n\n    arr1[i] - arr2[i]\n    arr2[i]\n\n\n\n\n\n\n\n\n\n\n1 - arr2\n\n\n\nGiven two", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\n\n\n\n\n\n\n1 - 2\n\n\nGiven two arrays of", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int:\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\n\n\n\n\n\n\n2\n\n\n\nGiven two arrays of integers", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\nGiven two arrays of integers with", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\nUse Call-Based format\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nExample 1:\n    arr1 = [0]\n\n\n\n\n\n1 - 2\n\n\nGiven two arrays", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\u00a0\n\n\n\nGiven two arrays of integers with equal lengths\n\n\nGiven two arrays", "\nUse Call-Based format\nUse Call-Based format\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    ::\n    maxAbsValExpr(arr1, arr2)\n\n           \n\n\n\n\n\n\n\n\n1 - arr1\n\n\n\nGiven two arrays", "\nUse Call-Based format\nUse Call-Based format\n\n    maxAbsValExpr(self, arr1, arr2):\n        return 1\n\nUse Call-Based format\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n2\n\n\n\n\n\n1 - 1\n\u00a0\n\nGiven two arrays", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2):\n       \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Python 3 format\n\n\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\n\n\n   \n\n\n1 - arr2\n\n\n\nGiven two arrays", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\n\nUse Python-based format\n\n\n\n\u00a0\n\n\n\n\n == arr2.length\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\nUse Python-based format\n\n\nGiven two arrays of integers", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\nUse Python-Based format\n\n\n\n\n\n\n\nUse Python-Call-Based format\n\n\n\n\n\n\n\n\u00a0\n\n\n\narr1 = 1\narr2 = 2\n\nGiven", "\nUse Call-Based format\n\n\n    def maxAbsValExpr(self, arr1, arr2):\n        return arr1 - arr2\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\n\n\n\n\n\n\n\n\n\nGiven two arrays of", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\n\n\n\n\n\n\nUse Python-based format\n\n - arr2 <= arr1 <= arr2\n\n\n\n\n\n\n\n\nUse Python-based format\n\n\u00a0\n\n\n\n\n\narr1\narr2\n\n\nGiven two arrays of", "\nUse Call-Based format\nUse Call-Based format\n\n    maxAbsValExpr(self, arr1, arr2) -> int\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n2 <= arr1.length <= 40000\n\n\n\n\n2\n\n\nGiven two arrays of", "\nUse Call-Based format\n\n\n    maxAbsValExpr(self, arr1, arr2)\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\nGiven two arrays of integers with equal lengths\n\n\n\nGiven two arrays"], "prompt": "\nQUESTION:\nGiven two arrays of integers with equal lengths, return the maximum value of:\n|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|\nwhere the maximum is taken over all 0 <= i, j < arr1.length.\n\u00a0\nExample 1:\nInput: arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\nOutput: 13\n\nExample 2:\nInput: arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\nOutput: 20\n\n\u00a0\nConstraints:\n\n2 <= arr1.length == arr2.length <= 40000\n-10^6 <= arr1[i], arr2[i] <= 10^6\nclass Solution:\n    def maxAbsValExpr(self, arr1: List[int], arr2: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}