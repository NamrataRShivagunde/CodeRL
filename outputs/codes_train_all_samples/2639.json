{"2639": {"code": ["\nEnter your expression\nUse Standard Input format\n\n\n\n:\n\nEnter a function or method to evaluate your expression\nUse Standard Input format\n\n=====Constraints=====\nEval() expression can be called multiple times.\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n=====Problem Descriptions=====\nEval() expression can be omitted\n\n\n\n=====", "\n:\n\nEval() expression must be a function or a function\n>>> type(\"eval\")\n<type 'builtin_function_or_method'>\n\n:\n:\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n=====Syntax Description=====\nInput string must be at least 100 characters.\n\n\n\n\n\n\n\n\n=====Function Descriptions=====", "\nRun eval() and print the result to STDOUT\n\n\n:\n:\n\nUse Standard Input format\n\n\n=====Constraint Statement Description=====\nUse Standard Expression format\n\nUse Standard Input format\n\nQuestion:\n\n\n\n\n\n\n\n\n\n\n\n\n>>> type(eval())\n<type 'eval'\n\n\n\n\n\n\n=====Function Descriptions=====", "\n\n\nEval() expressions are typically used as expressions.\nUse Standard Input format\n\n:\n# Enter a line to evaluate your expression\nUse Standard Input format:\n:\n\n# Enter a line to evaluate your expression\n\n\n\n\n\n\n\n>>> type(\"eval\")\n<type'str'>\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe eval", "\nEnter standard input format\n\n\n:\n:\n\n\nEval() expression is not a Python function or method. Use Standard Input format\n\n=====Constraints=====\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n\n=====Function Descriptions=====\nThe eval() expression is not a Python function\n\n\n", "\n:\n\nUse Standard Input format\n\n:\n\n:\n# Use Standard Input format\n# Use Standard Input format\n#\nUse Standard Input format#=====Expression Descriptions=====\n#\n=====Evaluation Description=====\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe eval() function is very powerful", "\nEnter a line of code to evaluate. Use Standard Input format:\n\n\n:\n:\n\n\n\n\n=====Syntax Description=====\nUse Python 2 syntax and use Standard Input format\n\n\n\n\n\n\n\n\n\n=====Expression Description=====\nThe eval() expression is a very powerful function of Python.\n\n\n\n\n\n\n\n=====Function Descriptions====", "\n\n\neval() expression is a Python function or method.\nUse Standard Expression format\n\n:\n:\n\n:\n\n\n\n\n\n\n\n\n=====Functions Descriptions=====\nEval() expression is a very powerful built-in function of Python.\n\n\n\n\n\n\n\n=====Expression Description=====\n\n\n\n\n\n=====Function Descriptions=====", "\n:\n\n\nEval() expression\n\nUse Standard Input format\n\nUse Standard Input format\n:\n\n:\n\nEval() expression\n\nUse Standard Output format\n\n\n\n\n\n\n\n=====Program Descriptions=====\nEval() expression\n\n\n:\n\n\n\n\n\n\n=====Function Descriptions=====\n\nEnter your expression.\n\n\n\n=====", "\n:\n\n\n\n\nRun eval() as an expression\nUse Standard Input format:\n\n\n\n\n\n\n\n>>> type(\"x\")\n<type 'int'>\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n\n=====Program Descriptions=====\nUse eval() expression\nUse Standard Input format\n\n\n\n=====Program Descriptions=====\n", "\nUse Standard Input format\n\n\n\n:\n\n# Use Python function description\nUse Standard Input format\n\n=====Constraints=====\n\nUse Standard Input format\n>>> type(\"len\")\n<type 'int'>\n\n\n\n\n\n\n\n\n\n\n\n>>> eval(\"10\")\n<type 'int'>\n\n\n\n\n\n\n\n=====Function Descriptions=====", "\n:\n\nUse Standard Input format\n\n\n:\n\n\nEval() expression can be used as a Python function, or a code object.\nUse Standard Input format\n=====Constraint Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Expression Description=====\nEval() expression can be used as a Python statement.\n\n\n\n=====Program Descriptions", "\n:\n\n\n\nUse Standard Input format\n\n:\n\n\n=====Constraints=====\nUse Standard Expression format\n>>> eval()\n<type'str'>\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n>>> type(\"eval\")\n<type'str'>\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe eval", "\n:\n\nUse Standard Input format\n\nUse Standard Input format\n\n:\n\nUse Python function descriptions or variables\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> eval()\n<type 'builtin_function_or_method'>\n\nUse Standard Input format\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe", "\n\n\neval()\neval(var)\n# Use Standard Input format\n\nUse Standard Input format\n:\n\nRun eval() on a Python interpreter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntype:'str'\n\n\n\n\n=====Code Descriptions=====\n\nType: str\n\n\n\n\n=====Function Descriptions=====\n", "\nRun eval() using standard input format:\n\n\n:\n\n:\n\n\n\n\n\n=====Expression Descriptions=====\n\nEval() expression\nUse eval()\n>>> eval()\n<type 'eval'>\n\n\n\n\n\n\n\n\n\n\n\n=====Program Descriptions=====\n\n# The eval() function\n\n\n\n=====Program Descriptions=====", "\n\n\n\n\n:\n\nUse Standard Input format\n\n\n=====Variables Description=====\nEval() expression must be used as a function or method.\n>>> type(var)\n<type'str'>\n\n\n\n\n\n\n\n\n\n\n=====Syntax Description=====\nUse Python Syntax syntax\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe", "\n\n\n\nUse Standard Input format\n:\n\nUse Standard Input format\n\nEval() expression can be used as a function or method.\nUse Standard Function Descriptions format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Input Descriptions=====\n\nInput string can be less than 100 characters\n\n\n\n\n\n=====Function Descriptions=====\n", "\n:\n\nUse Standard Input format\n\nUse Standard Input format\n:\nUse Python 2 functions and methods.\n\nUse Standard Input format\n\n=====Function Descriptions=====\nEval() expression is a very powerful function of Python.\n\n\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nEval() expression is a\n====", "\n\n\nEval() expression can be used with a single argument, or a list of arguments\nand the following are supported:\n\n\n\n:\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Variables Description=====\nUse Python keywords and variables as strings.\nUse Standard Input format\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nThe eval() expression is a very powerful built-in function of Python. It helps in evaluating an expression. The expression can be a Python statement, or a code object.\n\nFor example:\n>>> eval(\"9 + 5\")\n14\n>>> x = 2\n>>> eval(\"x + 3\")\n5\n\nHere, eval() can also be used to work with Python keywords or defined functions and variables. These would normally be stored as strings.\n\nFor example:\n>>> type(eval(\"len\"))\n<type 'builtin_function_or_method'>\n\nWithout eval()\n>>> type(\"len\")\n<type 'str'>\n\n=====Problem Statement=====\nYou are given an expression in a line. Read that line as a string variable, such as var, and print the result using eval(var).\nNOTE: Python2 users, please import from __future__ import print_function. \n\n=====Constraints=====\nInput string is less than 100 characters.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}