{"1849": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n    10\n   \n    0\n\n\n\n\n  \n\n\n\n\n\n\nUse Call-Based format\n    __init__(self)\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n \n  10\n\n\n\n    Given a", "\nUse Call-Based format\n\n\n\n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n \n\n\nGiven a binary tree,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n  \n\nUse Call-Based format\n\nUse Call-Based format \n    def __init__(self, val=0):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n \n  root.val\n\nGiven", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n  \n\n\n\nUse Call-Based format \n\n        return [3]\n\n\n    [3,9,20,null,null,15,7]\n       \n\n\n   \n        \n\n\n\n   \n\nUse Call-Based format\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n  \n\nUse Call-Based format\n\n\n\n\n\n\n   \n   \n       \n\n\n\n\n\n    root.val\n   \n    null\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format  \n\n    pass\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nGiven a binary", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\nUse Call-Based format\n\n\n    / \\\n  null null\n    / \\\n  15 7\n\n   ...\n\n\n   \n   \n   ...\n\n\n\n\n\n   \n\n\n\n  From left to right:", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n\n\n\n\n\n\n / \\\n\n\n\n\n\n    \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    null  null\n    \n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n\nUse Call-Based format\n\n\n   \n\n\n  \n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n    null\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n\nUse Call-Based format\n\n \n\n\n \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\nUse Call-Based format\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    [3,9,20,null,null,15,7]\n\n\n\n    [null]\n\n\n\n\n\n\n\n\n \n\n\n\n  [", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n\nUse Call-Based format /\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n   \n\n\n\n\n\n   \n  7\n      20\n\nGiven", "\nUse Call-Based format\n\n\n    null\n\n\n\nUse Call-Based format\n\n       \n       \n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n \n\n\n\n\n\n\n\n\n      [3,9,20,null,15,7]\n        \n\n   \n\n\n\n \n\n\n  [3", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n / \\\n  null  null\n\n\nUse Call-Based format\n\n\n\n    \n\n        null\n        \n\nUse Call-Based format\n\n   \n   \n        left\n        right\n\n\n\n\n\n\n   \n\n\nGiven a binary tree, return", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n    return [3,9,20,15,7]\n\n\n\n\n \n\nUse Call-Based format\nUse Call-Based format   \n  # This class is not an instance method\n\n\n\n\n\n\n\nUse Call-Based format\n\n   \n\n\nGiven a binary", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n / \\\n \nUse Call-Based format\n\n\nUse Call-Based format   \n        null\n        null\n        15\n        7\n        \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n \n\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n  If you're not in", "\nUse Call-Based format\n\n\n    levelOrder(self, root)\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n / \\ \\\nuse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\nUse Call-Based format\nGiven", "\nUse Call-Based format\n\n   \n       \n\nUse Call-Based format\n\n\n\n       \n\n   \n   \n\n\n\n /\n\nUse Call-Based format\n\n\nUse Call-Based format \n\nUse Call-Based format\n    # Element\n\n\n   \n\n\nUse Call-Based format\n\n\n\n\n \n\n\n  Given a binary", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a binary tree, return the level order traversal of its nodes' values.\n \nUse Call-Based format\n\n\n\n\nUse Call-Based format\n        \n\n\n        \n\n\n\n\n\n\nUse Call-Based format\n \n        \n\nGiven a"], "prompt": "\nQUESTION:\nGiven a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\n\n\nFor example:\nGiven binary tree [3,9,20,null,null,15,7],\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\n\nreturn its level order traversal as:\n\n[\n  [3],\n  [9,20],\n  [15,7]\n]\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        \nUse Call-Based format\nANSWER:\n"}}