{"4192": {"code": ["\n# Example\n\n# Call-Based format\n\n\n\n\nUse Call-Based format\n\n# Task\n\n\n \n \n# Task\n# Task\n\n\n\n \n\t\nUse Call-Based format\n# Task\n# Task\n\n\t\nUse Task-Based format\n\n\n\n\n\t\n# Task\n# Task\n\n\n# Task\n Given an array", "\n# Example\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n# Task\n# Task\n\n\n\n \n\t\nUse Call-Based format\n# Task\n\n\n \n\t\nUse Call-Based format\n\n# Task# Task\n\n\n\n\t\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n# Task\n Given", "\nUse Call-Based format\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n \n\t\nUse Call-Based format\n\n# Task# Task\n\n\n\n \n\t\nUse Call-Based format\t\n# Task\n\n\n\n\n# Task\n\n\n\n# Task\n\n# Task\n\n\n# Task\n Given an array `arr", "\n# Example\n\n\n\n\nUse Call-Based format\n\n# Task\n\n\n\n  sum(arr, n)\n\n  return 0\n\n\n# Task\n# Task\n Given an array `arr` and a number `n`.\n\n\n \n\t\n\n\n\n\n\n\t\n\n\n# Task\n\n# Task\n\n\n\n# Task\n Given an", "\t\nUse Call-Based format\n\n  Use Call-Based format\n\n# Input/Output\n\n  sum of indices\n\n  positive integer\n\n\n\t\nUse Call-Based format\n\n# Task\n\n\n \n\n\n# Task\n\n \n\n\n\n\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n\n# Task\n Given an", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n# Task\n\n\n\n \n\t\nUse Call-Based format\n\n# Task\n\n\n \n\n\t\nUse Call-Based format\n\t\n# Task\n\n\n\n\t\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n# Task\n Given an array `", "\t\nUse Call-Based format# Example\n\n\n\nUse Call-Based format\n\n# Task\n# Task\n\n\n\n\t\nUse Call-Based format# Task\n# Task\n Given an array and a number `n`\n\n\n\t\t\n# Task# Task\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Task# Task\n Given an array", "\t\nUse Call-Based format# Task\n\nUse Call-Based format\n\n\n# Task\n# Task\n\n\n\n\n \n\t\nUse Call-Based format# Task\n\t\n\n \n\t\nUse Call-Based format\n# Task\n\t\n\n\t\n\n\n\n\n\n# Task\n# Task\n# Task\n\n\n# Task# Task\n Given an", "\n# Example\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n# Task# Task\n\n\n \n  positive integer\n\n \n\n# Task\n \n  positive integer\n\n \n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n# Task# Task\n# Task\n\n\n# Task\n# Task\n Given an array", "\n# Example\n\n# Use Call-Based format\n\n\t\nUse Call-Based format\n\n# Task Given an array and a number `n`\n\n\n \t\n# Task\n \n\n\n# Task\n# Task\n\n\n\t\nUse Call-Based format\n\n\n\n\n# Task# Task\n# Task\n\n\n\n# Task\n Given an array `arr", "\n# Task\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n# Task\n# Task\n\n\n \n \n\n# Task\n\n\n# Task\n\n \n\n \n\t\nUse Call-Based format\n# Task\n\n\n\t\n\n\t\n\t\n\n\n\n\n# Task\n\n# Task\n\n\n\t\n\n# Task", "\nUse Call-Based format\n\n\n\n# Task\n\nUse Call-Based format\n# Task\n\n\n\n \n\t\nUse Call-Based format\n# Task\n\t\n\n \n\t\nUse Call-Based format\n\n# Task\n\n\n\n\n\t\n\n\n\n# Task# Task\n\n# Task\n\n\n# Task\n Given an array `arr`", "\n# Use Call-Based format# Example\n\n\n\n\t\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n \n\t\nUse Call-Based format# Task\n# Task\n Given an array `arr` and a number `n`\n\n\n\t\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n Given an array", "\nUse Call-Based format# Example\n\n\n\nUse Call-Based format# Task\n# Task\n\n\n\n  return n\n\n\n# Task\n\n\n\n# Task\n\t\n\n \n\t\nUse Call-Based format\n\n\n\n\t\n\n\t\n\n\n\n\n\t\n\n\n# Task\n\n\n\n# Task\n Given an array `arr`", "\n# Task\nUse Call-Based format# Task\n\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n \n\nUse Call-Based format# Task\n\n \n\n\n\n# Task\n# Task\n\n\n\t\n\t\n\t\n\n\n# Task\n\n# Task\n# Task\n\n\n# Task\n Given an array `arr`", "\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n# Task\n\nUse Call-Based format\n# Task\n\n\n\n \n\t\n# Task\n\n\n\n \n\t\nUse Call-Based format\n# Task\n\n\n\t\n\n# Example\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Task\n\n# Task\n", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n# Task\n# Task\n\n\n\n\n# Task\n# Task\n\n# Task\n Given an array `arr` and a number `n`\n\n\n# Task\n\n\n\n\n\n\t\n\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n Given an array `arr", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n \n\t\nUse Call-Based format\n# Task\n\n\n \n\t\n\n# Task\n# Task\n\n\n\t\n\t\n\t\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Task\n\n\n# Task\n Given an", "\nUse Call-Based format\n# Example\n\n\n\nUse Call-Based format# Task\n\n# Task\n\n\n\n\n# Task\n\n# Task\n\n \n  sum of indices\n\n  sum of indices\n\n \n\t\n\n# Task\n\t\n\n\t\t\n\n\n\n# Task\n# Task\n\n\n\n# Task\n Given an array `arr", "\n# Example\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n# Task\n\nUse Call-Based format\n# Task\n\n\n\n\n\n \n\t\nUse Call-Based format\n# Task\n\n\n \n\t\n\n# Task\n\n\t\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n# Task\n Given an"], "prompt": "\nQUESTION:\n# Task\n Given an array `arr` and a number `n`. Call a pair of numbers from the array a `Perfect Pair` if their sum is equal to `n`.\n\n Find all of the perfect pairs and return the sum of their **indices**. \n \n Note that any element of the array can only be counted in one Perfect Pair. Also if there are multiple correct answers, return the smallest one.\n\n# Example\n\n For `arr = [1, 4, 2, 3, 0, 5] and n = 7`, the result should be `11`.\n \n Since the Perfect Pairs are `(4, 3)` and `(2, 5)` with indices `1 + 3 + 2 + 5 = 11`.\n\n For `arr = [1, 3, 2, 4] and n = 4`, the result should be `1`.\n \n Since the element at `index 0` (i.e. 1) and the element at `index 1` (i.e. 3) form the only Perfect Pair.\n\n# Input/Output\n\n\n - `[input]` integer array `arr`\n\n  array of non-negative integers.\n\n\n - `[input]` integer `n`\n\n  positive integer\n\n\n - `[output]` integer\n\n  sum of indices and 0 if no Perfect Pair exists.\ndef pairwise(arr, n):\n\t\nUse Call-Based format\nANSWER:\n"}}