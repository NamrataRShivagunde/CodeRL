{"2968": {"code": ["\n\n\n\n\n\n\n\n\n\n\n~~~\n\n\n\n\n\t\n\n\n#Example:\n\n#Example:\n\t\n#Example:\n\t\n\n#Examples:\n\n\n\n\n\t\n\n\t\n\n\n\n\n\n\n\n\n#\n\nKata.getMiddle(s)\n\n\n~~~\n\n\n#Example:\n``", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n#Examples:\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n~~~if:bf\n```\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n```\n```\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Functions\n\n#Functions\n\ndef doBF(s):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n#Examples:\n~~~\n\n\n\n```\n\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n```\n\n\n\t\n\n\n\n\n```\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n```\n\n```\n\n```", "\n\n\n\n\n\n\n\n\n\n\n\n~~~\n\n\n\n\n\n\n\treturn s.upper()\n\n\n#Example:\n\nUse Call-Based format\n\n\n#Example:\n\n## Input\n\nA word\n\n\n\n\n\n\n\n\n\n\n#Notes:\n\n\n\n\n\n\n\n\n```\n\n```\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n\n\n\n\n\treturn s.getMiddle()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n###\n#Examples:\n\n#Examples:\n\n\n\n```\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n#Input\n\n\nA word (string)\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n#Examples:\n\n\n\n```\n\n```\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n#Examples:\n\n#Input\n\nA word of length `0 < str < 1000\n\nUse Call-Based format\n\n\n\t\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n#Input:\n", "\n\n\n\n\n\n\n\n\n\n\n\n~~~\n\n\n\n\n\n\n\t\n\n\n\n\n\n#Example:\n\n\n#Input\n\nA word of length `0 < str < 1000`\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n#Examples:\n\n```\n\n\n\n```", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn 'dd'\n\n\n\t\n\n\n\n\n\n\n\n#Examples:\n~~~if-not:bf\n```\n\n\n\n\n\n#Examples:\n~~~if:bf\n```\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\treturn s.upper()\n\n\n\n\n\n\n\treturn \"mm\"\n\n\n#Example:\n\n\n\nYou are going to return the middle character of the word.\nUse Call-Based format\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\treturn s\n\n\n#Example:\n\n\n#Use Call-Based format\ndef get_middle(s):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n\n\n```\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n#Examples:\n\n#Input\n\nThe word is in Call-Based format\n\n\n\n\t\n\n\n#Example:\n\n#Examples:\n\n\n\n\n\nYou are going to return the middle character of a word.\n\n\n\n\n\n\n\n\n#Output\n\n\n\n```", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n~~~\n\n\n\n\n\n\n\n\n#Examples:\n\n\n\n\n\n\n\n\n\nThe word is of a length `0 < str < 1000` (in javascript)\nUse Call-Based format\n\n\n\n#Examples:\n\n\n\n\n\n\n\n```\n```\n``", "\n\n\n\n\n\n#Help\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\treturn \"s\"\n\n\n#Examples:\n\n#Examples:\n\n\n\n\n\nUse Call-Based format\n\n```\n~~~\n\n\n\n```\n\n\n\n\n\n\n\n\n```\n\n```\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n    s\n\t\n```\n\n\n\t\n\n\n\n\nThe word is being given\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n\n\n```\n\n```\n~~~", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n~~~\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n#Example:\n\n#Input\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n#Example:\n\n\n\n\n#Example:\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\treturn s.get_middle(s)\n\n# Example:\n\n\n\n\n\n\n# Example:\n\n\n# Input\n\nThe word (string) of length `0 < str < 1000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> print(\"foo\")\n>>>", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nreturn s[0]\n\n\n\n\n\n\n#Examples:\n\n#Input\n\na word\n\nUse Call-Based format\n\n\n\n\n\n\n\n#Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples:\n\n```", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n#Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n# Example:\n\n# Input\n\n\nA word is a string.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n"], "prompt": "\nQUESTION:\nYou are going to be given a word. Your job is to return the middle character of the word. If the word's length is odd, return the middle character. If the word's length is even, return the middle 2 characters.\n\n#Examples:\n~~~if-not:bf\n```\nKata.getMiddle(\"test\") should return \"es\"\n\nKata.getMiddle(\"testing\") should return \"t\"\n\nKata.getMiddle(\"middle\") should return \"dd\"\n\nKata.getMiddle(\"A\") should return \"A\"\n\n```\n~~~\n~~~if:bf\n```\nrunBF(\"test\\0\") should return \"es\"\n\nrunBF(\"testing\\0\") should return \"t\"\n\nrunBF(\"middle\\0\") should return \"dd\"\n\nrunBF(\"A\\0\") should return \"A\"\n\n```\n~~~\n\n#Input\n\nA word (string) of length `0 < str < 1000` (In javascript you may get slightly more than 1000 in some test cases due to an error in the test cases). You do not need to test for this. This is only here to tell you that you do not need to worry about your solution timing out.\n\n\n#Output\n\nThe middle character(s) of the word represented as a string.\ndef get_middle(s):\n\t\nUse Call-Based format\nANSWER:\n"}}