{"3948": {"code": [":\n:\n\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\nReturns:\n\n\n``\n\n\tarr=array\t", "::\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\n\n\n:\n\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\"\"\"\n\n\t\n\t\n\t\n\t\n\t\n#", "::\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n:\n:\n\n\n`selReverse(arr, 0)`\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n\n\n`selReverse(arr,l)`\n\n:\n\n\n\n\n:\nGiven an array, return", "::\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\n\n\n\n:\n:\nUse Call-Based format\n\n`selReverse(arr,l)`\n\n\n\n\n:\nUse Call-Based format\n \n  `selReverse(arr,l)`\n\n\n\n\nExample:\n:\n\n\n\n\n:\n  Given an", "::\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n:\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n`selReverse(arr, l)\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n`selReverse(arr,l)`\n\n", "::\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n:\n\n\t\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\n* array - array to reverse\n", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n:\n\nUse Python format:\n\nUse Python-Based format\n\n`selReverse(array, 0)`\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n  This example would be", ":\n:\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n:\n:\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n`selReverse(arr,l)\n\n\nUse Call-Based format\n\n\n\n\n\n\n`selReverse(array", ":\n\nUse Call-Based format:\n\n\n:\n\n\n\n\n:\n\n\n\n:\n:\n\nUse Call-Based format\n\n \n\nUse Call-Based format\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n\n\ne:\n:\nGiven an array, return the reversed", "::\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n:\n  reverse all of the array\n\n  `selReverse(arr,l)`\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n````\n\n# `reverse(", "::\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n:\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n:\n\n- `selReverse(arr, l)`\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n  Given an array, return the reversed version of the array (", "::\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n:\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n`selReverse(arr,l)\n\nUse Call-Based format\n\n\n\n:\nGiven", "::\nUse Call-Based format\n\n\n:\n\n\n\n:\n\n\n\n:\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n`selReverse(arr,l)`\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n   `selReverse(array,", "::\nUse Call-Based format\n\n\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n:\n\n\n`selReverse(arr, length)``\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n`selReverse(arr,l)`\n\n:\n\n\n\n:\nGiven an", "::\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n:\nUse Call-Based format\n\n`selReverse(arr,length)`\n\n\n\n:\n- array: array to reverse\n- length: length of array to reverse\n\n\n\n\n\n:\n\n\n\n\n\n\n    `reverse(arr", "::\nUse Call-Based format\n\n\n:\n\n\n\nUse Call-Based format:\n\n\n\n\n:\n\n:\n\n\n`selReverse(arr, l)`\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n  If you are reversing", "::\n\n\n\n:\nUse Call-Based format\n\n\n\t\n\n\nUse Call-Based format:\n\n\n\n:\n\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n# ---------\n#\n# array: array to", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\t\n\n\n:\n\n\n\n:\n:\n\n\n`selReverse(arr,0)`\n\n\n\nUse Call-Based format\n:\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n# Example:\n:\nGiven an array, return the", "::\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\t\n:\n:\n\nUse Call-Based format\n\n`selReverse(arr,l)`\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n  array[l] = array", "::\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n:\n\nUse Call-Based format\n\n`selReverse(array, l)`\n\n\n\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n    >>> array = [1,2,"], "prompt": "\nQUESTION:\nGiven an array, return the reversed version of the array (a different kind of reverse though), you reverse portions of the array, you'll be given a length argument which represents the length of each portion you are to reverse.\n\nE.g\n  \n  if after reversing some portions of the array and the length of the remaining portion in the array is not up to the length argument, just reverse them.\n  \n\n`selReverse(array, length)`\n\n- array - array to reverse\n- length - length of each portion to reverse\n\nNote : if the length argument exceeds the array length, reverse all of them, if the length argument is zero do not reverse at all.\ndef sel_reverse(arr,l):\n\t\nUse Call-Based format\nANSWER:\n"}}