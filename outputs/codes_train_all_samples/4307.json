{"4307": {"code": ["\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\t\n\t\n\n\n\n\n\n\n\t\n\n\n\n\t\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\t\"\"\"\n\n\nif not args:\n\t\n\tprint(\"", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\t\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n # \"09\"\n\t\nUse Call-Based format\t\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nThis is a nice implementation of the \"unused_digits\" function.\n\n###", "\n\n\n\n\n\n\n\n\n# (1, 2, 3, 4, 5)\n\n\n\n\n\n\n\n\n\t\n\n\n # \"09\"\n\n\n\t\n\t\nUse Call-Based format\n\n\n # \"34\"\n\n\n\n\n\n\n# \"3479\"\n\n\t\n\n\nThis example shows that you need to print out the", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n```python\n\n\n\n\n\n\t\n\n\n\n\n\t\nUse Call-Based format\t\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nNOTE:\n\n- The test case will pass all arguments\n\n\n12", ":\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\t\n\n\n\n\n\n\n\t\n\n\n\n\n\t\n\n\n\n\t\nUse Call-Based format\n\n\n # \"11\"\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n-------\n\nNOTE:\n\n```python\n\nif args[0", ":\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\t\n\n\n\n\t\n\t\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n\n # \"09\"\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n[1]\n\n1:\n123\n2:\n123123\n2:\n123", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\t\n\n\n\n\n\t\t\n\t\n\n\n\n\n\n\t\t\n\n\n\nunused_digits(2015, 12, 34, 56, 78) # \"34\"\n\n\n\n\n:\n\n\n\n\t\n\n\n\n\n\n```python\n", "\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nNOTE:\n\n- The test case will not pass Integer with leading zero\n- The test case will pass Integer with leading zero\n\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n # \"09\"\n\n\n\n\n\n\n\n\t\n\n\n>>> unused_digits('12345', 4", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\t\n\n\n\n\n\t\n\n\n\n # \"4\"\nunused_digits(9) # \"9\"\n\t\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\nThe following example shows how to print out the digits that", "\n\n\n\n\n\nUse Call-Based format\n\n\n```\n\n\n\t\n\t\n\n\n\n\n\t\n\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n # \"9\"\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nExample:\n\n```python\nunused_digits()\n```", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Python format\n\n\t\n\n\n\n\n\n\n\t\n\t\n\t\n\n\n\t\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\nUse Function-Based format\n\nNOTE:\n\nUse Python format\n\n\nGiven few", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\t\n\t\n\n\n\t\n\n\n\n# \"09\"\n\n\t\n\t\n\n\n\n # \"09\"\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse Python-Based format\n\nNOTE:\n\n\n```python\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\t\t\n\n\n\n\n\t\n\t\n\n\n\n\n\n\t\nUse Call-Based format\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n```python\n\ntry:\n", ":\n\n\n\n\n\n\n\n\n\t\n\t\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-based format\n\n\n\n\t\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n```python\n# python -m\n# Example:\n\n```python\n# Example 2\n#", ":\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\t\nUse Call-Based format\n\nNOTE:\n\n\nGiven", ":\n  - Use Call-Based format\n\n\n\n  - Use Call-Based format\n\n\n\n\n\t\n\t\n\n\n\n\t\n\t\nUse Python format\n\n\n\n\t\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n1:\n123\n2:\n123\n3:\n3\n4:\n\n\t\n\n* The", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\t\n\n\t\nUse Call-Based format\n\n\n\n\t\n\t\n\n# \"4\"\n\n\t\nUse Call-Based format\n\t\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n```python\n\ntry:\n\n```python\n", "\n\n\n\n\n\n\n\n\n\n\t\n\t\n\n\n\n\t\nUse Python-Based format\n\t\n\t\n\n\n# \"4565\" # \"347\"\n\t\n\t\n\n\n# \"4\"\nunused_digits(11, 34, 56, 78) # \"3479\"\n\n\n\n\n:\n\n\n\n\t\n\n``", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\t\n\n\n\n\n\n\t\n\t\n\n\n\n\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\n\n # \"3479\"\n\n\n\n\n\n\n\n\n\n\t\n\n\nThe test case will print out the digits that are not being used. If", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n # \"0\"\nunused_digits(12) # \"09\"\n\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n-----\n\n\n\n\n```python\n\ntry:"], "prompt": "\nQUESTION:\nGiven few numbers, you need to print out the digits that are not being used.\n\nExample:\n\n```python\nunused_digits(12, 34, 56, 78) # \"09\"\nunused_digits(2015, 8, 26) # \"3479\"\n```\n\nNote:\n\n- Result string should be sorted\n- The test case won't pass Integer with leading zero\ndef unused_digits(*args):\n\t\nUse Call-Based format\nANSWER:\n"}}