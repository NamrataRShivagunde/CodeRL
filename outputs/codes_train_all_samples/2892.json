{"2892": {"code": ["```\n```\n\n### Definitions:\n\n\n\n### Definitions:\n\n\n### Definitions:\n\n```\n\n### Examples:\n\n### Task:\n\n\n\n\n\n\n### Definitions:\n\n\n\n\n\n\n://github.com/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://en.wikipedia.", "```\n```\n\n\n\ncase_id(hello)\n\n### Definitions:\ncase_id(hello)\n\n### Definitions:\n```\n\n\n\n\n\n\n://coffee.org\n\n\n\n\n\n://coffee.org\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://github.com/Kr", "\n```\n\n\ncase_id(helloWorld) #=> \u2014 \u2014 \u2014 \u2014\n\n\n### Definition:\n\n\n\n\n\n\n\n://en.wikipedia.org\n\n\n\n\n\n://en.wikipedia.org\n\n\n\n\n\n\n\n\n)\n\n\n\n://en.wikipedia.", "\n```\n\n\ncase_id(hello_world) #=> hello_world\n\n```\n\n\n\n### Definitions:\n\n\n\n\n\n\n\n\n\n### Definitions:\n\n\n\n\n\n\n://github.com/kraken/case)\n\n\n\n\n\n\n\n\n\n\n)\n\n\n\n://docs.python.org", "```\n```\n\ncase_id(id) #=> \u2014 \u2014 \u2014\n```\n\n### Definitions:\n\n\n\n\n\n\n://docs.python.org/dev/peps\n\n\n\n\n://docs.python.org/\n\n\n\n\n\n\n\n)\n\n\n\n://docs.python.org", "\n```\n\n### Definitions:\n \u2014\n\n```\n\n### Definitions:\n\n### Functions\n\n### Functions:\n\n### Functions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://en.wikipedia.org\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://github.com", "```\n\n\n\ncase_id(id) #=> id\n\n### Definitions:\nid(c_str) #=> id\n\n### Definitions:\n\n\n\n\n\n://api.github.io/case_id)\n\n\n\n\n):\n\n\n\n\n\n\n\n\n)\n\n### Example:\n\n\n\n://github.com/Under", "\n```\n\n\n\n\n### Example:\n\n### Example:\n\nThe function called `case_id` is the function that will return a string with the case the input is in.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://six.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://docs.python.org/2", "\n```\n\n\ncase_id(1) #=> 1\n\n```\n\n\n\n\n### Definition:\n\n\n\n\n\n\n### Definitions:\n\n\n\n\n\n### Example:\n\n://en.wikipedia.org/wiki/SplitWithoutLoss\n\n\n\n\n\n\n\n\n\n\n)\n\n\n\n://en.wikipedia.org", "```\n```\n\n`case_id`\n\n### Some definitions:\n\n### Some definitions:\n\n### Some definitions:\n\n### Examples:\n\n\n\n### Task:\n\n\n\n\n\n\n\n\n)\n\n\n\n\n\n\n://example.com)\n\n\n\n\n\n\n\n\n\n)\n\n\n\n\n://github.com/", "```\n\ncase_id(hello_world) #=> \u00a0none\u201d\n\n### Description:\n\n\n\n\n\n\n\n://en.wikipedia.org/wiki/Split_Without_Loss\n\n\n\n\n://en.wikipedia.org/wiki/Split\n\n\n\n\n\n\n\n\n)\n\n\n\n://en.wikipedia.", "```\n```\n\n### Example:\n\n\n\n### Example:\n\n\n\n\n### Other definitions:\n\n### Examples:\n\n###\n\n\n\n### Task:\n\n###\n\n\n\n### Example:\n\n\n\n\n\n\n\n://pythonhost).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Task:\n://github", "```\n\n### Definitions:\ncase_id(case_id)\n\n### Definitions:\n\n\n\n\n\n\n\n### Definitions:\n\n\n\n### Examples:\n\n\n\n\n\n\n://docs.python.org/3/library/strings.html)\n\n\n\n\n\n\n\n\n\n\n)\n\n\n\n://github.com/", "```\n```\n\n### Example:\nid(hello_world) #=> hello_world\n\n### Examples:\n\n### Example:\n\n\n\n\n\n\n\n\n\n://docs.python.org/2/library/strings.html\n\n\n\n\n\n).\n\n\n\n\n\n\n\n\n)\n\n\n\n\n### Example:\n\n://github", "\n```\n\n\ncase_id(hello) #=> hello\ncase_id(hello) #=> hello\ncase_id(hello) #=> hello\n\n\n\n\n\n\n\n\n://github.com/kraken/case\n\n\n\n\n://github.com)\n\n\n\n\n\n\n\n\n\n\n\n\n://docs.python.org/c", "```\n`\n\n### Definitions:\ncase_id(foo) #=> foo\n\n### Definitions:\n```\n\n### Definitions:\n\n\n\n\n\n\n://en.wikipedia.org/wiki/Split\n\n\n\n\n://en.wikipedia.org\n\n\n\n\n\n\n\n\n)\n\n\n\n://en.wikipedia.", "\n```\n\n\ncase_id(id) #=> none\u201d\ncase_id(id) #=> none\u201d\n\n\n\n\n\n\n\n\n\n\n### Definitions:\n\n\n\n\n\n\n://en.wikipedia.org/wiki/Split\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n://github", "\n```\n\n\n\n\n### Katas:\n\ncase_id(helloWorld)\n\n```\n\n\n\n\n\n://en.wikipedia.org/wiki/Split-Without-Loss\n\n### Definitions:\n\n\n\n\n\n://en.wikipedia.org\n\n\n\n\n\n\n\n\n\n\n\n\n\n://en.wikipedia.", "\n```\n\n\n\n\n### Example:\n\nExample:\n\nExample:\n\nExample:\n\nExample:\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n\n\n\n\n\n\n\n\n\n).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n://github.com/Ruby", "case_id(hello) #=> 'hello'\n```\n\n\n\n\n\ncase_id(hello) #=> 'hello'\n\n### Definition:\n\n\n\n\n://en.wikipedia.org/wiki/SplitWithoutLoss\n\n\n\n\n://en.wikipedia.org\n\n\n\n\n\n\n\n\n\n\n\n\n://en.wikipedia."], "prompt": "\nQUESTION:\nWe\u2019ve all seen katas that ask for conversion from snake-case to camel-case, from camel-case to snake-case, or from camel-case to kebab-case \u2014 the possibilities are endless.\n\nBut if we don\u2019t know the case our inputs are in, these are not very helpful.\n\n### Task:\n\nSo the task here is to implement a function (called `id` in Ruby/Crystal/JavaScript/CoffeeScript and `case_id` in Python/C) that takes a string, `c_str`, and returns a string with the case the input is in. The possible case types are \u201ckebab\u201d, \u201ccamel\u201d, and \u201dsnake\u201d. If none of the cases match with the input, or if there are no 'spaces' in the input (for example in snake case, spaces would be '_'s), return \u201cnone\u201d. Inputs will only have letters (no numbers or special characters).\n\n### Some definitions\n\nKebab case: `lowercase-words-separated-by-hyphens`\n\nCamel case: `lowercaseFirstWordFollowedByCapitalizedWords`\n\nSnake case: `lowercase_words_separated_by_underscores`\n\n### Examples:\n\n```python\ncase_id(\u201chello-world\u201d) #=> \u201ckebab\u201d\ncase_id(\u201chello-to-the-world\u201d) #=> \u201ckebab\u201d\ncase_id(\u201chelloWorld\u201d) #=> \u201ccamel\u201d\ncase_id(\u201chelloToTheWorld\u201d) #=> \u201ccamel\u201d\ncase_id(\u201chello_world\u201d) #=> \u201csnake\u201d\ncase_id(\u201chello_to_the_world\u201d) #=> \u201csnake\u201d\ncase_id(\u201chello__world\u201d) #=> \u201cnone\u201d\ncase_id(\u201chello_World\u201d) #=> \u201cnone\u201d\ncase_id(\u201chelloworld\u201d) #=> \u201cnone\u201d\ncase_id(\u201chello-World\u201d) #=> \u201cnone\u201d\n```\n\nAlso check out my other creations \u2014 [Split Without Loss](https://www.codewars.com/kata/split-without-loss), [Adding Fractions](https://www.codewars.com/kata/adding-fractions),\n[Random Integers](https://www.codewars.com/kata/random-integers), [Implement String#transpose](https://www.codewars.com/kata/implement-string-number-transpose), [Implement Array#transpose!](https://www.codewars.com/kata/implement-array-number-transpose), [Arrays and Procs #1](https://www.codewars.com/kata/arrays-and-procs-number-1), and [Arrays and Procs #2](https://www.codewars.com/kata/arrays-and-procs-number-2)\ndef case_id(c_str):\n\t\nUse Call-Based format\nANSWER:\n"}}