{"3387": {"code": ["\nUse Call-Based formatWhat's in a name?\n\n\n\n\n\n\n\n\n\n\n\nWhat's in a name?\n\n\n\n\n\n\nThe name of a given string is in the format\n\n\n\t\n\t\n\n\n\n\n\nWhich's in a name?\n\n\n      |\n    \n  \nA function passing two strings:\n ", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Python-Based format\n\n\n\n\n      \n\n\n\n\n\n       \n      \n\n\t\n\n\n\n                \n\n\n\nWhat's in a name?\n\n\n\n\n    nameInStr(\"chris\", \"chris\")\n\n   \n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nWhat's in a name?\n     \n\n    nameInStr(\"A lake\", \"chris\") --> false\n    \n   \n\n\n\n\n\n   \n\t\n\n\n\n       \n\nWhat's in a name?\n\nTask:\n\n\n\n\n\n\nThe function passing two strings as", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThe name in a string\n\nWhat's in a name?\n\n\n\n\n\n\nA function passing two strings.\n\t\n\n\n\n\n\t\n\n\n\n\tin_str(str, name)\n\n\nWhat's in a name?\n\n\n\n\nA function passing two strings.\n``", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n    name_in_str(\"A name\", \"chris\")\n    name_in_str(\"chris\", \"chris\")\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\nWhat's in a name?\n\n\n\n\n\nThe function passing two strings:\n\n    name", "\n\n\n\n\n\n\n\n\n\nThe name is in the string\n\n\n\nThe call-Based format\n\nUse Call-Based format\n\n\n\n                \n\n\n\n\nThe name is in the string\n\n   \n    \n\n\n\t\n\n\n\n\n\n\nWhat's in a name?\n\n\n\n\n\n\n``function name_in_str(", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n \n    Contains all of the letters in \"chris\"\n       ...\n           ...\n\n\n\n\n\n\n    name_in_str(str, name)\n   ...\n    \n\n\n\n\n\n\nWhat's in a name?\n\n\n\n\nThe function passing two strings:\n``function", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nWhat's in a name?\n\n\n    nameInStr(str, name):\n    \n    name_in_str(str, name)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    nameInStr(str, name)\n\n\n\n    One", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nTest whether or not the string contains all of the letters in the string.\n\n\n\n\n\n\n\n\n\n\n\n\t\tname_in_str(str, name)\n\t\t\n\n\n\n\n\n\n\n\n\nA function passing two strings.\n``function name_", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    name_in_str(str, name)\n    \n    nameInStr(str, name)\n\n\n\n\n\n\n\n\n\t\n\t\n\n\n\n\n\n\nWho's in a name?\n\n\n\n\n\n\n\n``function name_in_str(", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nA function passing two strings:\nA name, a name, and a name\na name, and a name.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's in a name?\n\nTask\n\n\n\n\n\n\nWhat's in a name?\n\nTask:\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nWhat's in a name?\n\nTask:\n\nWhat's in a name?\n\n\n\n\n\n\n\n\n   \n\t\n\n\n\n\n\n\nwhat's in a name?\n\n\n\n   InStr(\"chris\", \"chris\")\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nTest whether or not the string contains all of the letters in a name.\n\n\n\n\n\n\n\n\n\n   \n\t\n\n\n\n\n\n\nWhat's in a name?\n..Or rather\n\n\n\n\n\n\n\n    The format\n\n    nameInStr", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n       \n\n\t\n\n\nA function passing two strings.\n\n``function name_in_str(str, name):\n\t\n\n\n\n\n\n\n\n\n\nWhat's in a name?\n\n\n\n\n\n    name_in_str", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nThe name in a string\n\n\n\n\n\n\n\n\n\t\treturn True\n\t\t\"\"\"\n\n\n\n\t\tname_in_str(str, name)\n\n\n\n\n\n   InStr(\"chris\", name)\n\n\n\n   ", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThe string contains all of the letters in a name.\n\nTask\n\nTest name_in_str\n\nTest case-based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\nThe name is in a name\n\n\n\n\n\n\n\n    nameInStr(\"Across the", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    Name in str\n\n    name_in_str(str, name)\n\n    name_in_str(str, name)\n\n   \n\n   \n\n\n                \n\n\n\n\n\n\n\n\n\n\n\tname_in_str(str, name)\n\t\n   ", "\n\n\n\n\n\n\n\n\n\n\n\n\nA function passing two strings.\n``function name_in_str(str, name):\n\t``function name_in_str(str, name)``\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's in a name?\n\n\n\n   InStr(\"chris\")\n\n\n    Where's", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's in a name?\n\n\n\nname_in_str(str, name)\n\nTask:\n\n\n\n\n\t\n\n\n\n\n\n  ^  ^^  ^\n\n\nWhat's in a name?\n\n\n\n\nA function passing two strings, searching for one", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n \n\n\n\n\n\n\n\n\n    \n\n\t\n\n\n\n\n\nThe name is in the given string\n\nThe name is in the given string\n\n\n\n\n\n\n    This is"], "prompt": "\nQUESTION:\nWhat's in a name?\n..Or rather, what's a name in? For us, a particular string is where we are looking for a name.\n\nTask\n\nTest whether or not the string contains all of the letters which spell a given name, in order.\n\nThe format\nA function passing two strings, searching for one (the name) within the other.\n``function nameInStr(str, name){ return true || false }``\n\nExamples\n\n    nameInStr(\"Across the rivers\", \"chris\") --> true\n                ^      ^  ^^   ^\n                c      h  ri   s\n                \n    Contains all of the letters in \"chris\", in order.\n----------------------------------------------------------\n    nameInStr(\"Next to a lake\", \"chris\") --> false\n    \n    Contains none of the letters in \"chris\".\n--------------------------------------------------------------------\n    nameInStr(\"Under a sea\", \"chris\") --> false\n                   ^   ^\n                   r   s\n                   \n    Contains only some of the letters in \"chris\".\n--------------------------------------------------------------------\n    nameInStr(\"A crew that boards the ship\", \"chris\") --> false\n                 cr    h              s i\n                 cr                h  s i  \n                 c     h      r       s i\n                 ...\n                 \n    Contains all of the letters in \"chris\", but not in order.\n--------------------------------------------------------------------\n    nameInStr(\"A live son\", \"Allison\") --> false\n               ^ ^^   ^^^\n               A li   son\n                 \n    Contains all of the correct letters in \"Allison\", in order, \n    but not enough of all of them (missing an 'l').\n    \n\nNote: testing will _not_ be case-sensitive.\ndef name_in_str(str, name):\n\t\nUse Call-Based format\nANSWER:\n"}}