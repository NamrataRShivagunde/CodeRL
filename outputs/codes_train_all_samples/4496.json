{"4496": {"code": [":\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nThe hamming distance of two equal-length strings is a number of positions in the string\n\n\n:\n:\n\n\n\n:\n:\n\n\n:\n\n\n:\n\nThe function's output should be the hamming distance\n\n:\n\n\n\n\n   ", ":\nUse Call-Based format:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\t\n\n\n\n\n\n:\n\nUse Call-Based format\nThe hamming distance of two equal-length strings is a number of positions\n\n:\n:\n`\n\n\nThe h", ":\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nThe hamming distance of two strings is not a function.\n\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n:\n\n\n:\n\nThe hamming distance of two equal-length strings is 4.\n\n\n\n``", ":\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\nThe hamming distance of two two strings is a number of positions in the input string\n\n\n:\n\nUse Call-Based format:\n\n\n\n:\n:\n\n\n:\n\n\n:\n\n\n:\n\n\n\n\n\nThe hamming distance of two equal-", ":\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n:\n\n\n:\n\n\n\n\n\n\nThe hamming distance of two equal-length", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nThe hamming distance of two strings is used to calculate the hamming distance\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n:\n\n\n\n:\n\n\n\n\n\n\nThe hamming distance of", ":\n\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\t\n\n:\n\n\n\n\n:\n\n\n:\n\n\nThe hamming distance of two strings is a number of positions\n:\n\n\n\n\n    The", ":\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nThe hamming distance of two strings is the number of positions.\n\n\n\t\n:\n\n\n:\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n\nThe hamming distance of two", ":\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\t\n\n:\n\n\n:\n\n\n:\n\n\nThe hamming distance of two strings differs\n:\n\n\n\n\nThe hamming", ":\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n:\n\nThe hamming distance is not tested\n\n:\n\n\n\n\nThe h", ":\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nThe hamming distance of two equal-length strings is an integer\n\n\n\n\n:\n\n\n\n:\n\n\n\n:\n\nUse Call-Based format\n\n:\n\n\n:\n\n\n\n\n\nThe hamming distance of", ":\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n:\n\n\n:\n\n\n\n:\n\n\nThe hamming distance is calculated using the character substitutions.\n\n:\n\n\n\n\n   ", ":\n\n\n\n\n\nUse Call-Based format\nThe hamming distance of two strings is a hamming distance between two equal-length strings.\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n:\n\n\n\n:\n\n\n:\n\nThe hamming distance of two strings is a number of positions\n:\n\n\n\n\nThe h", ":\nUse Call-Based format:\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\n\n\n:\n\n\n:\nThe hamming distance of two strings is returned as an integer\n:\n\n\n\n\n\t", ":\nUse Call-Based format:\n\nUse Call-Based format\n\n\nUse Call-Based format:\n\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n\n\n:\n\n\n\n:\n\n\n\n:\n\nUse Call-Based format\n\nThe hamming distance is\n\n\n\n\nThe", ":\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\n\n\n:\n\nUse Call-Based format\n\n:\n\n\n:\n\n\n\n\n\nThe hamming distance", ":\nUse Call-Based format:\nUse Call-Based format\n\n:\n:\nUse Call-Based format\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:\n\n\n:\n\nThe hamming distance of two strings is the number of positions\n:\n\n\n\n", ":\n:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\nThis function is a function to calculate the hamming distance of two strings.:\n\n\n:\n\n\n:\n\n\n:\n\n\n\n\n\nThe ham", ":\n\nUse Call-Based format:\n\nUse Call-Based format\n\n:\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n:\n\n\n:\n\n\nThe hamming distance of two strings is 0\n\n:\n\n\n\n\n``", ":\nUse Call-Based format\n\n\n:\nUse Call-Based format\nthe hamming distance of two two strings is a number of positions, and the hamming distance of two two strings is a number of character substitutions\n\n\n\n:\n\n\n\n\t::\n\n\n:\n\n:\n\n:\n\n```python\n\n\n\nThe function's output should"], "prompt": "\nQUESTION:\nThe hamming distance of two equal-length strings is the number of positions, in which the two string differ. In other words, the number of character substitutions required to transform one string into the other. \n\nFor this first Kata, you will write a function ```hamming_distance(a, b)``` with two equal-length strings containing only 0s and 1s as parameters. There is no need to test the parameters for validity (but you can, if you want).The function's output should be the hamming distance of the two strings as an integer.\n\nExample:\n\n```python\nhamming_distance('100101', '101001') == 2\nhamming_distance('1010', '0101') == 4\n```\ndef hamming_distance(a, b):\n\t\nUse Call-Based format\nANSWER:\n"}}