{"4691": {"code": ["\n\n\n\n\n\n\n\n\n\n\ndef solve(s):\n\t\nUse Call-Based format\n\ndef solve(s):\n\t\nUse Python format\ndef\n\n\n\ndef(s)\n\ndef\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n```Haskell\n\n\nIn this Kata,", "\n\n\n\n\n\n\n\n\n\n\ndef\t\n\n\n\n\t\n(s):\t\n\t\nUse Call-Based format\n\ndef\t\n\n\nIn Kata, you will receive a string\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n* Kata:\nIn this Kata", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ndef\t\n\n\n\n(s)\n\ndef\t\n\n\nIn this Kata, you will return a list of ints\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\n\n\n```Haskell\nSolve('*'", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\ndef\n\t\n\n\n\n\ndef\n\t\n\n\n\n\n\n\n\n\n\n\n\n`\n\n\n\nHaskell:\nHaskell\nSolve(\"*'&ABCDabcde12345\") = [3]. \n\n\n", "\n\n\n\n\n\n\n\n\n\n\ndef solve(s):\n\t\nUse Call-Based format\n\ndef\n\n\n\n```\n\n(s)\n\ndef\n\t\n\n\n\n\n\n\n\n```Kata\n```\n\n```\n\n\n\n```Kata\n\n\n\n```\n\n\n```Kata\nIn", "\n\n\n\n\nUse Call-Based format\n\n\n\ndef solve(s):\n\t\n\ndef solve(s):\n\t\nUse Call-Based format\n\ndef\n\n\n\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nHaskell:\n\n--the order:\n\n\n\n\n```Kata\n", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\ndef\n\n\n\nExample:\n\ndef(s):\n\t\nUse Function-Based format\n\ndef\n\n\n\n\n\n\n\n\n\n```Kata`\n\n```\n\n\n\n\n\n\n```Kata\nIn this Kata,", "\n\n\n\n\n\n\n\n\n\ndef solve(s):\n\t\nUse Call-Based format\nfunction solve(s)\n\t\nUse Call-Based format\nfunction solve(s):\n\t\nUse Call-Based format\nfunction solve(s)\n\nfunction\t:\n(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\ndef\n\n\n\n\n\n\ndef\t\n\n\n\nUse Call-Based format\n\n\n\n\n--the count of uppercase letters, lowercase letters, numbers, and special characters,\n--the count of numbers, and special characters.\n\n\n\n\n\n\n\n\n\n\n\n```Hask", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\ndef\t\n\n\ns =\n\ndef\n\t\n\n\nIn this Kata, you will get a list of ints detailing the number of letters and numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaskell\n\n\nSolve:\ns\n\n\n\nThe Kata", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\ndef solve(s):\n\t\nUse Call-Based format\n\ndef\n\n\n\n\n\ndef\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n\n```Kata =", "\n\n\n\n\n\n\n\n\nfunction solve(s):\n\t\nUse Call-Based format\n\nfunction\n\t\n\n\n\n\nfunction\t\n\n\n\nIn this Kata, you will get a string from your Kata.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nHaskell\n\n\n\n```\nIn this Kata,", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\ndef\n\t\n\n\n\n#(s)\n\n# Use Python-Based format\ndef\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nIn this Kata, you can get you a list of all of the following:\n\n\nHaskell\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n   (s)\n\t\n\n\t\n\n\nIn this Kata, you will have to call a Kata task.\n\n\n\n\n\n\n\n\n\nHaskell\n\n\n\n* Haskell\nSolve(\"*'&ABCDabc", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\ndef\t\n\n\n   \n\n\n\ndef\t\n\n\n\nIn this Kata, you will be given a string to be solved\n\n\n\n\n\n\n\n\n\nThe Kata Kata is a Kata task.\n\n\n\n\n\n\n\n* This Kata is a Kata", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n```\n\n\n\ndef\n\n\n\n\n\ndef\n\t\n\n\n\n\n\n\n--the order is: uppercase letters, lowercase letters, numbers, special characters, and numbers,\n--the order is: uppercase letters, lowercase letters, numbers\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\ndef solve(s):\n\t\nUse Call-Based format\n\t\nTry to call the task\n\n\n\n\n\n\ndef\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\nSolve('*'&ABCD", "\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\ndef\n\n\n\nHaskell\n\n\n\ndef\n\n\nUse String format\n\n\nUse Call-Based format\n\n\n\n\n\n```\n\nHaskell\nHaskell\n\n```\n\n\n\n\n\n\n\nSolve:\n\n\n\nIn this K", "\n\n\n\n\n\n\n\n\n\n\n\n\ndef solve(s):\n\t\nUse Call-Based format\n\ndef\n\n\n\n\n\ndef\t\n\n\n\nIn this Kata, you will be given a string and your task will be called\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this Kata, you will be given a string in", "\n\n\n\n\n\n\n\n\n\n\n\t\nuse Call-Based format\n\ndef call(s):\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\ndef\t\n\n\n\n\ndef\t\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n\n\n```\n\n\n\n\n\n```\n\n"], "prompt": "\nQUESTION:\nIn this Kata, you will be given a string and your task will be to return a list of ints detailing the count of uppercase letters, lowercase, numbers and special characters, as follows.\n\n```Haskell\nSolve(\"*'&ABCDabcde12345\") = [4,5,5,3]. \n--the order is: uppercase letters, lowercase, numbers and special characters.\n```\n\nMore examples in the test cases. \n\nGood luck!\ndef solve(s):\n\t\nUse Call-Based format\nANSWER:\n"}}