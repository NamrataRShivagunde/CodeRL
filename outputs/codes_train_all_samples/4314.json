{"4314": {"code": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n# Example\n\n\n\n`\n\n\n![](https://codefightsuserpics.s3.amazonaws.com/tasks/chessLand)\n\n\n\n\n\n\n\n0", "\n Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u00b7 \u00b7\n  \u00b7 \u00b7 \u00b7 \u00b7 \u00b7 \u00b7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n![input]\n\n\n\n# Example\n\n0 \u2264 boardSize[", "\n\n\n![\n![\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2264 initDirection \u2264 [1, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n - `[output]` integer array `outputDirection`\n\n\n\n0] < boardSize[", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n![\n# Example\n\n![\n# Example\n\n\n ChessLand\n\n![\n\n# Example\n\n![\n# Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n1 \u2264 boardSize", "\n\n\n![]\n\n\n\n\n![\n# Example\n\n![\n\n\n\n\n0 \u2264 boardSize[0] < boardSize[1] - 1.\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n[input]\n\n[output]\n\ni] \u2264 boardSize[i", "\n\n\n\n\n\n\n\n[input]\n\n [output]\n\n\n\n\u00a7\n\n\n\n![\n1 \u2264 2 \u2264 3`\n\n![input]\n\n# Example:\n\n\n\n\n\n\n\n\n\n\n\ni]\n\n# Example:\n\n\n# Task\n\n\n![input]\n\n", "\n Example:\n\n\n\n\n\n\n# Description\n\n\n\n [input]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[input]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[output]\n\n# Example\n\n2 \u2264 2 \u2264 4 \u2264 2 \u2264 3 ", "\n\n\n![]\n![]\n![]\n![]\n![]\n![]\n![]\n![]\n![]\n![]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[input]\n\n# Example:\n\n\n\n\n\ni]`.\n\n# Example:", "\n\n Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \u2264 boardSize \u2264 2\n \u2264 initDirection \u2264 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n - `[input] integer array `boardSize`\n", "\n\n Example\n\n# Example\n\n[2, 2]\n\n[1, 1]\n\n# Example\n\n\n\n\n\n\n\n\n Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[input]\n\n# Example\n\n\n# Example\n\n\n\n\n\ni] < boardSize[j] - 1", "\n\n\n![\n![\n![\n![\n![\n\n# Example\n![\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n`\n\n\n\n\n[output]\n\n0 \u2264 boardSize[0] \ufffd", "\n\n![\n![\n\n\n\n\n\n\n\n\n\n\n\n\n\n![]\n\n\n k \u2264 3 \u2264 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 \u2264 initPosition[i] < boardSize[1] - 1, `initDirection", "\n\n\n\n![]\n\n![]\n\n![]\n\n![]\n\n![]\n\n![]\n\n![]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[input]\n\n[output]\n\n# Example\n\n0 \u2264 boardSize", "\n\n\n\n\n\n\n\n\n\n\n![chessBishopDream]\n\n# Example\n\n\n1 \u2264 n \u00d7 m \u00d7 k`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n0] \u2264 boardSize[0] - 1`", "\n\n\n\n\n\n\n\n [input]\n\n\n\n\n![]\n\n\n\n\n\n\n\n\n![](http://chessland.amazon.com/chess-land.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n2 \u2264 boardSize[0", "\n\n Example\n\n\n![\n\n![](\n# Example\n\n![\n# Hard-coded\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n# Task\n\n\n\n\n\n\n\ni]\n\n# Example\n\n\n\n - `[", "\n\n![](https://github.com/chessland/chessbishop)\n\n\n Example:\n\n\n\n\n\n\n Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[output]\n\n\n\n# Example\n\n\n0] \u2264 boardSize[0", "\n\n\n\n\n\n\n\n\n\n\n\n![(bishop)s]\n\n\n# Example\n\n\n\u2264 initPosition[i] < boardSize[i]\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n1 \u2264 boardSize[0] \u2264 10 \u2264", "\n\n Example:\n\n# Example\n\n -> 2\n\n\n\n\n\n\n\n\n [input]\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n![]\n\n\n\n\n![]\n\n[input]\n\n\n\n\n\n1] \u2264 boardSize[0] \u2264 3.\n\n# Example:\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\n# Example:\n\n [1, 2]\n\n# Example:\n\n[1, 2]\n\n# Example:\n\n\n\n\n\ni] \u2264 boardSize[i] "], "prompt": "\nQUESTION:\n# Task\n In ChessLand there is a small but proud chess bishop with a recurring dream. \n \n In the dream the bishop finds itself on an `n \u00d7 m` chessboard with mirrors along each edge, and it is not a bishop but a ray of light. This ray of light moves only along diagonals (the bishop can't imagine any other types of moves even in its dreams), it never stops, and once it reaches an edge or a corner of the chessboard it reflects from it and moves on.\n\n Given the initial position and the direction of the ray, find its position after `k` steps where a step means either moving from one cell to the neighboring one or reflecting from a corner of the board.\n\n# Example\n\n For `boardSize = [3, 7], initPosition = [1, 2], initDirection = [-1, 1] and k = 13,` the output should be `[0, 1]`.\n\n Here is the bishop's path:\n```\n[1, 2] -> [0, 3] -(reflection from the top edge)\n         -> [0, 4] -> [1, 5] -> [2, 6] -(reflection from the bottom right corner)\n         -> [2, 6] ->[1, 5] -> [0, 4] -(reflection from the top edge)\n         -> [0, 3] ->[1, 2] -> [2, 1] -(reflection from the bottom edge)\n         -> [2, 0] -(reflection from the left edge)\n         -> [1, 0] -> [0, 1]```\n\n ![](https://codefightsuserpics.s3.amazonaws.com/tasks/chessBishopDream/img/example.png?_tm=1472324389202)\n\n# Input/Output\n\n\n - `[input]` integer array `boardSize`\n\n    An array of two integers, the number of `rows` and `columns`, respectively. Rows are numbered by integers from `0 to boardSize[0] - 1`, columns are numbered by integers from `0 to boardSize[1] - 1` (both inclusive).\n\n    Constraints: `1 \u2264 boardSize[i] \u2264 20.`\n\n\n - `[input]` integer array `initPosition`\n\n    An array of two integers, indices of the `row` and the `column` where the bishop initially stands, respectively.\n\n    Constraints:  `0 \u2264 initPosition[i] < boardSize[i]`.\n\n\n - `[input]` integer array `initDirection`\n\n    An array of two integers representing the initial direction of the bishop. \n    \n    If it stands in `(a, b)`, the next cell he'll move to is `(a + initDirection[0], b + initDirection[1])` or whichever it'll reflect to in case it runs into a mirror immediately.\n\n    Constraints: `initDirection[i] \u2208 {-1, 1}`.\n\n\n - `[input]` integer `k`\n\n    Constraints: `1 \u2264 k \u2264 1000000000`.\n\n\n - `[output]` an integer array\n\n    The position of the bishop after `k` steps.\ndef chess_bishop_dream(board_size, init_position, init_direction, k):\n\t\nUse Call-Based format\nANSWER:\n"}}