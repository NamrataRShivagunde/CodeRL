{"3399": {"code": ["\nUse Call-Based format\n,P\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n\n,,Nnnnnnnnnnnnnn\n\n\n\n\n\n\n\n### Example of use:\n\n#", "\nUse Call-Based format\n,\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format,QQQQQQQQQQQQQQQQQQQ\n\n\n:\n\n\n:\n", "\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n:\n\n\n\n\n\n,,Nnnnnnnnnnnnnnn\n\n\n\n\n\n\n\n\n## Example\n:\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n,\"\n\n\n\n\n\n\n\n```python\n\n# Example:\n#", "\nUse Call-Based format\n,\n\n\nUse Call-Based format\n\n\n#\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n# Example\n:\n\nUse Call-Based format\n,L,N,R,Q,\n\n## Example\n\n\n,,N,N\n\n\n\n\n\n\n\n## Example\n\n```python\n", "\nUse Call-Based format\n,P,Q,P,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q,Q\n\n\n:\n\n\n\n\n:\n\n\n\n:\n:\n\n\n:\n,\"\n\n\n:\n\n\n\n\n## Example\n:\n\n##", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format,Pq,G,L,P,Q,R\n\n\n:,,P\n\n:\n\n\n\n## Example\n\n## Example\n:\n\n", "\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format,\n\n\n\n,Nnnnnnnnnnnnnn\n,Nnnnn\n\n\n\n\n\n\n\n#### Examples\n\n## Example", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Python-Based format\n\n\n## Example\n\n\n\n\n\n\n,N,N,N,N,N,N,N,N,N,N,N,N,N\nzzzzzzzzzzzz\n\n\n\n\n\n:\n", "\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n\n,,\n\n# Example\n\n# Example\n\n\n\n# Example\n#\nQUESTION", "\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n## Call-Based Example\n\nUse Call-Based format\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:\n,,n-1,n-2,n-3\"\n\n\n\n\n\n:\nIn this k", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format,E,G,L,Q,R,Q,Q,\n\n:\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:,H,Q,Q,R\"\n\n\n\n\n\n\n\n## Example\n:\n# Example", "\nUse Call-Based format\n,QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\n\n:\n\n\n\n\n:\n\n\n::\n\n\n\n,,\n\n", "\nUse Call-Based format\n,Nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n\n:\n\n\n\n\n:\n\n\n\n::\n\n\n:\nUse Call-Based format,\n\n\n\n\n\n\n## Example\n:\n", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Python format\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n,,\n\n## Example\n\n\n\n\n\n\n## Example:\n\n## Example 2", "\nUse Call-Based format\nlllllllllllll\n\n\n:\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n:\n,\n\n\n\nUse Call-Based format,,\n\n\n\n\n## Example\n## Example:\n\n:\n\n## Example", "\nUse Call-Based format\nrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\n\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n,Nnnnnnnnnnnnnnn\n,\n\n:\n\n\n\n## Example\n:\n\n#", "\nUse Call-Based format\nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n\n\n:\n\n\n\n\n:\n\n\n\n::\n\n\n\n,\n\n\n\n\n\n\n## Example\n:\n", "\nUse Call-Based format\n,Nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n\n\n\n\n\n\n\n:\n\n\n\n\t:\n:\n,\n\n:\n,\"\n:\n\n:\n\n\n\n:\n\n# Example:\n", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format,\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n- The string is a string of letters\n- The string will be sorted alphabetically.\n:\n\n\n\n,\",\n\n\n# Example\n\n\n\n\n\n# Example:\n\n#"], "prompt": "\nQUESTION:\nIn this kata you will be given a random string of letters and tasked with returning them as a string of comma-separated sequences sorted alphabetically, with each sequence starting with an uppercase character followed by `n-1` lowercase characters, where `n` is the letter's alphabet position `1-26`.\n\n## Example\n\n```python\nalpha_seq(\"ZpglnRxqenU\") -> \"Eeeee,Ggggggg,Llllllllllll,Nnnnnnnnnnnnnn,Nnnnnnnnnnnnnn,Pppppppppppppppp,Qqqqqqqqqqqqqqqqq,Rrrrrrrrrrrrrrrrrr,Uuuuuuuuuuuuuuuuuuuuu,Xxxxxxxxxxxxxxxxxxxxxxxx,Zzzzzzzzzzzzzzzzzzzzzzzzzz\"\n```\n\n## Technical Details\n\n- The string will include only letters.\n- The first letter of each sequence is uppercase followed by `n-1` lowercase.\n- Each sequence is separated with a comma.\n- Return value needs to be a string.\ndef alpha_seq(string):\n\t\nUse Call-Based format\nANSWER:\n"}}