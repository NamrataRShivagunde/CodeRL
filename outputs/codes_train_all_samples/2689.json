{"2689": {"code": ["\n```\nfind_employees_in_rails\n```\n\n\n\n\n\n\n\n\n\n\n_employees_in_rails\n\n\n\n\n\n$employees\n\n\n_role_in_rails\n\n\n\n\n\n\n\n\n\n\ndef get_role(employee):\n\nployee_by_first", "\nfind_employees\n\n```python\n\n\n\n\n\n\n\n\n\n_employee(employees):\n\n\nfind_employees\n\n_employee(employee)\n\n```\n\n\n\n\n\n\n\n\n\n\ndef role_to_employee(employee):\n\n\n\n\nployee(", "\nfind_employees()\n\n```python\n\n\n\n\n\n\n\n\n\nemployees():\n\nfind_employees()\n\n\n\n\n\n\n\n\n\n\n\n```python\nemployees = [ [ {first_name': \"Dipper\", last_name: \"Joe\"}]\n\n\n\n\n\n\nployee_", "\n```python\nfind_employee\n\n```python\n\n\n\n\n\n\n\n\n\n\n\nfind_employee\n\n\n\n\n_role(employees, firstName, lastName, role)\n\n```python\n\n\n\n\n\n\n\n\n\n\ndef role():\n$role\n\n\nployee(employee, firstName, lastName", "\n```\nfind_employees\n\n```\n\n\n\n\n\n\n\n\n\n\nemployees\n\n\n\n\n\n_role(employees)\n\n```\n\n\n\n\n\n\n\n```python\nemployees = [ [ {first_name: \"Dipper\", last_name: \"\n\n\n\n\n\nployees", "\n```\nfind_employees()\n\n\n\n\n\n\n\n\n\n\n\n\nemployees()\n\n\n$employees\n\n\n```\n\n\n\n_role(employee)\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n_role(employee)\n\"Does not work here!\"", "\n\n\n### Example\n\n Find a person with firstName and lastName and role\n\n### Example 1\n\nUser's role\n\n### Example 2\n\n\n\n\n\n\n\n\n_employee_role\n\n\n\n```\n\nee_role\n\n_role()\n\n\n\n\n\n\n\n\n\n\ndef get_role(name):\nployee_role", "\n\nfind_employees\n\n```python\n\nfind_employees\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfind_employees(\"John\")\n\n(employees)\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\nemployees(employees, firstName, lastName, role", "\n```python\n\nfind_employees()\n\n\n\n\n\n\n\n\n\n\n\nemployees()\n\n\n\nemployees():\n\n\n\n\n\n```python\n\n\n\n\nfind_employees():\nemployees = find_employees()\n\n```python\n\n\n\nployees(first_name, last_", "\n```\nfind_employee\n```\n\n\n\n\n\n\n\n\n\n_employee\n\n\nfind_employee\n\n```python\n\n\n_role(employees, firstName, lastName):\n\n\n\n\n\n\n```\n\n\n\n\n\n\ndef get_role():\n\n\n\n_role():\n    # This", "\n```\nfind_employees\n\n```\n\n\n\n\n\n\n\n\n\n_employees\n\n\n\nfind_employees\n\n```python\n\n_role(employee, firstName, lastName)\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nemployee(employees):\n    # This", "\n\n```python\n\n\n\n\n\n\n\n\n\n\n\nemployees()\nfind_employees('Dipper')\n\n```python\n\nBrown\n\n```python\n\n\nees():\n\n_role(self, name):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nployee(self, firstName, lastName, role", "\n```python\nfind_employees(employees)\n```\n\n\n\n\n\n\n```\n\n```\n\n\n\n_employees(employees)\n\n\n\n_employees(employees)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nemployee(employee, firstName, lastName, role", "\n\nfind_employees()\n\n```python\nimport os\n\n```\n\n\n\n\n\n\n\nemployees():\n$employees\n\n```python\n\n\n\n_employees():\n\n_role():\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nemployee(employees, firstName, lastName,", "\n```\n\nfind_employee\n\n```\n\n\n\n\n\n\n\n\nemployee(employees):\n\n\n\n\n\n```python\n\n_employee(employee)\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\nemployee(employee)\n\nreturn find", "\n```python\n\nfind_employee\n\n```python\n\n\n\n\n\n\n\n\n\nfind_employee\n\n\n\n\n_role(employee, firstName, lastName, role)\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n\nployee(employees, firstName, lastName, role):\n    #", "\n\nfind_employees_for_company()\n\n```python\n\n\n\n\n\n\n\n_employees_for_company()\n\n\nfind_employees_for_company()\n_employees_for_company()\n_roles()\n\n\n\n\n\n\n\n\n\n\n\nployees_for_company(company, firstName, lastName", "\n```\nfind_employees\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\nfind_employee\n\n\"\n\n\n\n\n\n\n\n\n```\n\n```\n\nEggman Movers:\n\n```python\nemployees = [\n ]\n```\n\n\n\nployee(firstName, lastName,", "\n\n```python\n\nimport os\n\n```\n\n\n\n\n\n\nfind_employees(employees)\n\n```\n\n\n\n\n```python\n\nees():\n\n\n\n\n\nees():\n\n_role():\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nployee_role(employee_id", "\nfind_employee\n\n### Example\n\n\n\n\nfind_employee\n\n### Example\n\n\n\n\n\nfind_employee\n\n```python\n\n\n```\n\n(employees, firstName, lastName):\n\n\n\n\n\n\n\n\ndef find_role(employees, firstName, lastName):\n\n\nployee(em"], "prompt": "\nQUESTION:\nYou get a new job working for Eggman Movers.  Your first task is to write a method that will allow the admin staff to enter a person\u2019s name and return what that person's role is in the company.\n\nYou will be given an array of object literals holding the current employees of the company.  You code must find the employee with the matching firstName and lastName and then return the role for that employee or if no employee is not found it should return \"Does not work here!\"\n\nThe array is preloaded and can be referenced using the variable `employees` (`$employees` in Ruby). It uses the following structure.\n\n```python\nemployees = [ {'first_name': \"Dipper\", 'last_name': \"Pines\", 'role': \"Boss\"}, ...... ]\n```\n\nThere are no duplicate names in the array and the name passed in will be a single string with a space between the first and last name i.e. Jane Doe or just a name.\nemployees = [{'first_name': 'Ollie', 'last_name': 'Hepburn', 'role': 'Boss'}, {'first_name': 'Morty', 'last_name': 'Smith', 'role': 'Truck Driver'}, {'first_name': 'Peter', 'last_name': 'Ross', 'role': 'Warehouse Manager'}, {'first_name': 'Cal', 'last_name': 'Neil', 'role': 'Sales Assistant'}, {'first_name': 'Jesse', 'last_name': 'Saunders', 'role': 'Admin'}, {'first_name': 'Anna', 'last_name': 'Jones', 'role': 'Sales Assistant'}, {'first_name': 'Carmel', 'last_name': 'Hamm', 'role': 'Admin'}, {'first_name': 'Tori', 'last_name': 'Sparks', 'role': 'Sales Manager'}, {'first_name': 'Peter', 'last_name': 'Jones', 'role': 'Warehouse Picker'}, {'first_name': 'Mort', 'last_name': 'Smith', 'role': 'Warehouse Picker'}, {'first_name': 'Anna', 'last_name': 'Bell', 'role': 'Admin'}, {'first_name': 'Jewel', 'last_name': 'Bell', 'role': 'Receptionist'}, {'first_name': 'Colin', 'last_name': 'Brown', 'role': 'Trainee'}]\n\ndef find_employees_role(name):\n\t\nUse Call-Based format\nANSWER:\n"}}