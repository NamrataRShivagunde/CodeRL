{"2749": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\"A\"\n\n```Kata\nif(arr[0] == \"A\"):\n\n\n\n\n\tif(is_numeric(arr", "\nUse Call-Based format\n\n\n\n\n\n\n\nHaskell:\n\nThe Kata task will find the correct answer\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Kata\nif arr is not sorted:\n\n```\nIf\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n```\n\nUse Call-Based format\n\nfunction solve(arr):\n\nfunction solve(arr):\n\n\n\n\n\n\nfunction solve(arr):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe Kata Kata task:\n\n\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n```Haskell\n\nUse Call-Based format\n\n\n\n\n\n\n\nHaskell\n\nIf you are using this Kata\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n# Todo\n#\n#\n# A. B. C.", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nA Kata\n\n\n\n\n\n\n\n\n\n```Haskell\n\n```Kata\n\n\n\n    Kata:\n   \n\n\n\n\n\n\n\n\t#####", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format\n\nExample:\n\nTest cases\n\nExample:\n\nTest cases\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Kata\n# Use", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThis task will return a answer.\n\n```\nHaskell\n\nUse Call-Based format\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n# Regression\nsolve([1,2,3,4,5])\n#\n\n# H", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\nKata:\n\n```Kata\nreturn\n```\n\n1", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nHow luck!\n\nThis Kata:\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKata:\n\n\n\n\nHaskell:\n\nIf you are", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\nKata:\n\n```Kata\n\n\n\n\n\n```Haskell\nif you are", "\n\nUse Call-Based format\n\n\n\n\n\n```\n\n\nUse Call-Based format\n\nEXAMPLE:\n\n    solve(arr)\n\n\nUse Call-Based format\n\nEXAMPLE:\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\nKata:\n\n\n\n\n\n\n\n```\n\nHaskell\nif", "\nUse Call-Based format\n\n\n\n\n\n\n```\n\nIn this Kata:\n\n```Haskell\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaskell\nsolve([1,2,3])\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\nThe Kata solve function will be called for every array in the list.\n\n\ndef\n\n\n\n\n\n\n\n\n\n```Kata\n\n\n\n\nHaskell:\n\n\n\n```Haskell\n#", "\nUse Call-Based format\n\n\n\n\n\n```\n\n\n\nUse Call-Based format\n```\n\nUse Call-Based format\nUse Call-Based format\n\nThe Kata task is used to solve the array\n\nfunction solve(arr):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Kata", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Kata task will decide whether an array is in ascending or descending order: `[1,2,3", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf the array is in ascending order, if the first rotated array is", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n```Haskell\n\nUse Call-Based format\n```Kata\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaskell:\n\nIf an array is not rotated,\n\n\n\n\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nHaskell\nUse Kata\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaskell\n\n\nThe Kata task will know if the array is in ascending or descending order:", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nThe Kata solve function will return the correct answer\n\n```Haskell\nif you have called solve, you will get an answer.\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nHaskell\n\n\nA:\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```Haskell\n\nUse Call-Based format\n\n\n\ndef\n\t\n\n\n\n\n\n\n\n\n\n\n\nHaskell\n\nKata:\n\n```Kata\nReturns:\n\n\n\n1"], "prompt": "\nQUESTION:\nIn this Kata, you will be given an array and your task will be to determine if an array is in ascending or descending order and if it is rotated or not. \n\nConsider the array `[1,2,3,4,5,7,12]`. This array is sorted in `Ascending` order. If we rotate this array once to the left, we get `[12,1,2,3,4,5,7]` and twice-rotated we get `[7,12,1,2,3,4,5]`. These two rotated arrays are in `Rotated Ascending` order.\n\nSimilarly, the array `[9,6,5,3,1]` is in `Descending` order, but we can rotate it to get an array in `Rotated Descending` order: `[1,9,6,5,3]` or `[3,1,9,6,5]` etc.\n\nArrays will never be unsorted, except for those that are rotated as shown above. Arrays will always have an answer, as shown in the examples below.\n\nMore examples:\n```Haskell\nsolve([1,2,3,4,5,7]) = \"A\" -- Ascending\nsolve([7,1,2,3,4,5]) = \"RA\" -- Rotated ascending\nsolve([4,5,6,1,2,3]) = \"RA\" -- Rotated ascending\nsolve([9,8,7,6]) = \"D\" -- Descending\nsolve([5,9,8,7,6]) = \"RD\" -- Rotated Descending\n```\nMore examples in the test cases. \n\nGood luck!\ndef solve(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}