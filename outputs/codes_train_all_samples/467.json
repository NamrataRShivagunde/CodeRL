{"467": {"code": ["\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        \n\u00a0\nUse Call-Based format\n\n\n   :\nExample 2:\n\nInput: nums = [21,4,7]\nOutput: 21\n\n\u00a0\u00a0\n\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\n21\n21\n21\n\u00a0\n\nGiven", "\nUse Call-Based format\n\n\n    pass\n\n\n21 has 4 divisors: 1, 2, 3, 7\n\u00a0\nExample 2:\n   \n        pass\n\n\n   :\n\n\u00a0\u00a0\n\n\u00a0\n\u00a0\nUse Call-Based format\n\u00a0\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\u00a0\nExample", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n\n\n\n   :\n\n\u00a0\nExample 2:\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\nExample 2:\nExample 3:\nInt:", "\nUse Call-Based format\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n        \nUse Call-Based format\n\n\n   :\n\n\u00a0\n\n\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\u00a0\n\n21, 4, 7\n\u00a0\n\nGiven", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n\n21, 4, 7, 21\n\u00a0\nExample 2:\n\n\n   :\n\u00a0\n\u00a0\u00a0\n\n\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n    Given an", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return self.sumFourDivisors(nums)\n        \nUse Call-Based format\n\n\n   :\n    pass\n\n\n\u00a0\n\u00a0\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\u00a0\n\u00a0\n\n21,\n21\n21,\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n\n\n\n   :\n    pass\n\n\n\u00a0\u00a0\n\u00a0\nExample 2:\n\nUse Call-Based format\n\u00a0\u00a0\n\n\n\u00a0\n\n\u00a021\n\u00a0\n\nGiven", "\nUse Call-Based format\n\n\u00a0\n\n\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n        \n\u00a0\nExample 2:\n\n\n   :\n    return sumFourDivisors(self, nums)\n\n\n\u00a0\u00a0\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\nInput:", "\nUse Call-Based format\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n       \n        \nUse Call-Based format\n\n\n   :\n\u00a0\n\n\u00a0\nExample 2:\u00a0\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\nReturns:\n    1", "\n\n\n\nUse Call-Based format\n\n21 has 4 divisors: 1, 2, 3, 7\n\n\n       \n\n\n\n   :\n\n\u00a0\n\u00a0\nExample 2:\n\u00a0\n\u00a0\n\u00a0\n\n\u00a0\n\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\n1\n\n\n\n\u00a0\nExample 2:", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return self.sumFourDivisors(nums)\n        \nUse Call-Based format\n\n\n   :\nUse Call-Based format\n\u00a0\nExample 2:\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\n21\n21\n\u00a0\n\nGiven an", "\n\n\n\nUse Call-Based format\n\n21\n\u00a0\nExample 2:\nInput: nums = [21,4,7]\nOutput: 7\n\n\n   \n        \n\n21 + 4 + 7\n\u00a0\n\n   :\n\n\u00a0\u00a0\n\n\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\n21\n\u00a0\n\nGiven an", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    return sumFourDivisors(self, nums)\n        \nUse Call-Based format\n21 has 4 divisors: 1, 2, 3, 7\n\n   :\n\n\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\nGiven an integer array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    return sumFourDivisors(self, nums)\n\nUse Call-Based format\n\n\n   :\n    pass\n\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\n\n21 has 3 divisors\n\nGiven an integer", "\nUse Call-Based format\n\n\n\n\n\n\n\n       \n        return sumFourDivisors(self, nums)\n\n\n\n   (self, nums: List[int]) -> int:\n        \nUse Call-Based format\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\n\u00a0\n\n\n\n\u00a0\nExample 2", "\n\n\n\n   ...\n\n\n\n\n   \n        pass\n\n\u00a0\n21 has 4 divisors: 1, 3, 2, 7\n7 has 2 divisors: 1, 2, 7\n\u00a0\nExample 2:\n\n   :\n        \n\n\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\n21\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n\n\n\n   :\n        pass\n\n\u00a0\n\n21 has 4 divisors: 1, 2, 3, 7\n\n\u00a0\nUse Call-Based format\n\u00a0\n\n\n\n\n\n21 has 4 divisors\nGiven", "\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\n          \n        return sumFourDivisors(self, nums)\n\n\n\n   :\n    \"\"\"\nUse Call-Based format\n\n\u00a0\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\n\u00a0\nExample 2", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n\n\n\n   :\n\nReturns:\n\n32Sum of four divisors of 20 and 22 only\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    # TODO: This is not an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        return sumFourDivisors(self, nums)\n\n\n\n   :\n        pass\n\n\u00a0\n\u00a0\n\nUse Call-Based format\n\u00a0\n, 1, 2, 3\n\u00a0\n\n\u00a0\u00a0\n\n21\n21\n\nGiven an"], "prompt": "\nQUESTION:\nGiven an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors.\nIf there is no such integer in the array, return 0.\n\u00a0\nExample 1:\nInput: nums = [21,4,7]\nOutput: 32\nExplanation:\n21 has 4 divisors: 1, 3, 7, 21\n4 has 3 divisors: 1, 2, 4\n7 has 2 divisors: 1, 7\nThe answer is the sum of divisors of 21 only.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10^4\n1 <= nums[i] <= 10^5\nclass Solution:\n    def sumFourDivisors(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}