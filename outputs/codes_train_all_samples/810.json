{"810": {"code": ["\n\n\n\n\n\n\n\nConstraints:-----\n- $0\\leq N \\leq N-1$\nThe third line contains an integer $A$ i.e. $a_{i}$,.... \n\n-----Constraints:-----\n\nInput format:-----\n\n\n\n\nOutput format:-----\n\n\n\n\n\n\n\n\n\n\n\nInput processing", "\nInput:\n $0$ $0$ $1$ $1$ $1$ $1$\n\n\n\n\n\n\nInput format:-----\nInput format:-----\nConstraints:-----\n- $0$ $A$ $B$-\nOutput format:-----\nInput format:-----\n\n\n\n\n\n\n\n\nInput format:-----\n\n\nOutput format:-----\n", "\n\n\n\n\n- \n\n\nInput format:-----\n- \nType 1:  $0$ $1$\nType 2:  $1$ $A$\n-\nInput format:-----\n-\nInput format:-----\nOutput format:-----\n\n\n\n\n\n\n\n\nOutput:-----\n\n\nConstraints:-----\n- \nLet Chef be travelled", "\n\n\n\n\n\n\nType 1:  $0$ $1$, $1$ $2$, $0$ $1$, $0$ $1$, $0$ $1$\n\nType 2:  $0$\n-\nConstraints:-----\n\n\n\n\nInput format:-----\n\n\n\n\n\n\n\n\n\n\n\nOutput:-----\n", " \n\n\n\n \n\n\nInput format:-----\n- \nThe first line contains an integer $N$ denoting the number of test cases,\n$T$\nInput format:-----\n\n\nInput format:-----\nInput format:-----\n\n\n\n\n\n\n$\n\nConstraints:-----\n\nConstraints:-----\n- $0\\leq T\n-Output format", "\n\n\n\n\n\n\n\nInput format:-----\n- \nThe first line contains an integer $T$, i.e. $a_{i}$.... \n\n-----Constraints:-----\nConstraints:-----\n-\n\nInput format:-----\nInput format:-----\n\n\n\n\n\n\n\nConstraints:-----\n\n\n\nInput format:-----\n- \n", "\nInput:\n \n  $N$ \n \n\n \n\n\n\n\n\n\n\nConstraints:-----\n- $1$ $A$ $B$.\n- $0$ $A$\n\n\nInput format:-----\nOutput:-----\n\n\n\n\n\n\n\n\nOutput:-----\n\nConstraints:-----\n- $0$ $N$\nConstraints:", "\n\n\n\n\n\n\n\nConstraints:-----\n- $0$ $A$ $A$, $0$ $A$, $0$ $A$, $0$ $A$, $0$ $A$.. \n\n-----Constraints:-----\n\nOutput:-----\n\n\n\n\nInput format:-----\n\n\n\n\n\n\n\n\n\n\n\nInput", "\n\n\n\n   \n \n\n\n\n\nInput format:-----\n- \nThe first line contains a number of test cases, then the second line contains a number of test cases, then the second line contains a number of test cases\n\nConstraints:-----\n\n\n\nInput:-----\nOutput format:-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n", "\n\nInput:\n \n $A$, $B$, $Q$, $N$, $Q$, $N$, $T$, $Q$, $A$, \n\n-----Constraints:\n\n\n\n\n\n\n\nInput format:-----\n\n\n\n\nOutput format:-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n", "\nInput format:-----\n\n\n\n \n\n\nInput format:-----\n\nConstraints:-----\n- \nThe first line of the array: \n\nInput format:-----\n-\n\nInput format:-----\n- \nConstraints:-----\n\n\n\n \n\n\n\n\n\nInput format:-----\n- $0\\leq T \\leq\nOutput format:", "\n\n\n\n\n\n\n\nInput format:-----\n- \nThe first line contains an integer $T$, i.e. the number of test cases\n- \nThe second line contains an integer $Q$, i.e. the number of test cases\n\nInput format:-----\n\n\n\n\nOutput format:\n\n\n\n\n\n\n\n\n\n\nTest format", "\n        START:\n\n\n\n\n\n\n\nInput format:-----\n- \nThe first line contains an integer $T$, which is the current time. \n\nConstraints:-----\nInput format:-----\n\nInput format:-----\n- \nOutput format:-----\n\n\n\n\n\n\n\n\nConstraints:-----\n\n\nReturns:-----\n\n- \nReturn:", "\n\n\n\n\n\n\n\nConstraints:-----\n- $0$ $A$ $B$.e. $a_{i}$......\n\n-----Constraints:-----\n- $0$ $Q$ $N$...\n\nOutput:-----\n\n\n\n\nInput format:-----\n\n\n\n\n\n\n\n\n\n\n\nTest cases:", "\n\n\n\n\n\n\n\nInput format:-----\n- $0$ $1$ $1$, $1$ $B$, $1$ $Q$, $1$ $T$, $1$ $Q$.\n\n-----Constraints:-----\n\nInput\n\n\nInputOutput format:-----\n\n\n\n\n\n\n\n\n\n\n\nInput processing:-----", "\n\n\n\n\n----- Example:\n \n\n\n\nConstraints:-----\n- $1$ $N$ \n$0$ $Q$ \n$1$\nConstraints:-----\nInput format:-----\n\nInput format:-----\nConstraints:-----\n\n\n\n\n\n\n\n\n-----Example:-----\n\n-\n\n\nExplanation:-----\n- $0\\", "\n\n-----Syntax:\n \n-----\n\n\n\n-----Notes:\n \n\n\n-----Example:\n\n\n\nConstraints:-----\n- $0$ $A$ \\leq T \\leq B \\leq N-1$\nConstraints:-----\n\n\n\n\nOutput format:-----\n\n\n\n\n\n\n\n\nInput format:-----\n\n\nInput format", "\n\n\nChef:\nChef is frustrative\nChef is frustrative\nChef is frustrative\nChef is frustrative\n\n\n\n\n\n\nInput format:-----\n\n\n\nInput format:-----\nInput constraints:-----\n\n\n\n\n\n\n\n\nOutput:-----\n\n\nOutput:-----\n- \n", "\n\nInput format:-----\n\n\n\n\n\n\n\nInput format:-----\n\nConstraints:-----\nInput format:-----\n\n\n-\nOutput format:-----\n\nInput format:-----\n\n\n $T$\n\n\n\n \n- $0$ $N$\n\n-----Output format:-----\n\nInput format:-----\n-\n\nOutput:-----\n- ", "\n\n\n\n\n\n\n\nInput format:-----\n\nConstraints:-----\n\nInput format:-----\n\nInput format:-----\n\n\n\nConstraints:-----\n- $0\\leq T \\leq 10^6$Output format:-----\n\nConstraints:-----\n\n\n\n\n\n\n\n\nConstraints:-----\n\n\nInput:-----\n- \nThe first line"], "prompt": "\nQUESTION:\nChef is frustrated in this lockown. So to overcome this he plans to travel various mountains.\nHe is very strange so he sets some conditions for $each$ Type 2 query(mentioned below) (i.e. $1$ $i$) : \n- Let Chef has travelled till $ith$ mountain from left to right.\n- He does not like to travel the mountain with the height ,of which he has travelled till now. More formally, \nLet the height of peak on which he is standing is $a_{i}$ then he can only go to the peak of height $a_{j}$ \nwhich is greater than $a_{i}$ and nearest to $ith$ mountain such that there should be no other peak of same height $a_{j}$ till $a_{i}$(height of $ith$ mountain) .\n\n-----Input format:-----\n- \nThe first line contains an integer $T$ denoting the number of test cases.\n- \nThe second line of  consist of a integer $N$ and $Q$ .\n- \nThe third line contains $N$ not necessarily distinct positive integers $a_{0},a_{1}, . . .,a_{n-1}$ denoting the height of \n$N$ mountains.\n- \nThen next $Q$ lines follows where each line consisting of $either$ of $2$ types of queries:\nType 1:  $0$ $A$ $B$ i.e. $a_{A} = B$ (where height of $Ath$ mountain will be updated to $B$) \nType 2:  $1$ $A$ i.e. you have to answer $a_k$ which is greater than $a_{A}$ and nearest to $Ath$ mountain such that there should be no other peak of same height $a_{k}$ till $a_{A}$(height of $Ath$ mountain) .\n\n-----Output format:-----\n- For every query of Type 2 there should be an integer $a_{k}$ on next  line for the updated array , If no such $a_{k}$ exists then $a_{k}$= $-1$ , as query of type 1 will have no output . \n\n-----Constraints:-----\n- $1\\leq T \\leq 10^2$\n- $1 \\leq N,Q \\leq 10^4$\n- $0\\leq a_{i} \\leq 10^6$\n- $0\\leq B \\leq 10^6$\n- $0\\leq A \\leq N-1$\n\n-----Subtasks-----\n- \n1 Point :   \n$1 \\leq T,N,Q \\leq 10^2$ \n$0\\leq B,a_{i} \\leq 10^2$\n- \n99 Points : Orginal   Constraints\n\n-----Example:-----\n\n-----Input:-----\n1\n10 5\n1 3 5 4 5 6 7 8  4 5\n1 7\n1 3\n1 1\n0 2 7\n1 3\n\n-----Output:-----\n-1\n6\n5\n5\nUse Standard Input format\nANSWER:\n"}}