{"4971": {"code": ["::\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\ndef __init__(self,\n:\n\nLinked Lists - Sorted Insert\n\nWrite a Node to a list\n\nWrite a node to a list\n\n:\n:\n\n\n:\n\nand\n\n\n\n\n\n\n\n\nLinked Lists - Call-Based\n", ":\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ndef __init__(self,\n:\n\n\nLinked Lists - Tree Insert\n\nWrite a Tree Insert\n\nWrite a Tree Insert\n\n\t\n:\n:\n\n\n:\n\n\n\nUse\n\n\n\n\n\n\n\nLinked Lists - Insert\n", ":\n:\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\ndef __init__(self,\n:\n\n\nLinked Lists - Sorted Insert\n\nWrite a\n\ndef\n:\n:\n\n\n:\n\n in the same function.\t\nLinked Lists:\n\n\n\n\nLinked Lists -", ":\n\t:\n\t\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\ndef __init__(self,\n:\n\nLinked Lists - Sorted Insert\n\n\n\ndef __init__(self,\n\t:\n:\n\n\n:\n\n to insert a node into a node list\n\n.\n\n\nLinked Lists - Call-Based", ":\n\nUse Call-Based format:\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n__init__(self, data):\n\t\n\t\nUse Call-Based format\n\ndef __init__(self,\n:\n\nLinked Lists -\ndef\n:\n:\n\n\t:\n\n\n   \t\n\n\n\n\nLinked Lists - Insert\n", ":\n\t\nUse Call-Based format:\n\t\nUse Call-Based format\n\n\n\n:\n\t\n\n\n__init__(self, data)\n:\n\t\nLinked Lists - Sorted Insert\n\nWrite a\n\ndef __init__(self,\n:\n:\n\n\n:\n\n\nUse\n\n\n\n\n\n\n\n\nLinked Lists - Call-", ":\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\ndef __init__(self, data):\n\t\ndef __init__(self,\n:\n\nLinked Lists -\n\n:\n:\n\n\n:\n\n\nUse\n\n\n\n\n\n\n\n\nLinked Lists - Push\n", ":\n\nUse Call-Based format:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\ndef __init__(self,\n:\n\n\nLinked Lists - Push\n\nWrite a Node to the linked list\n\nWrite a\n\ndef __init__(self,\n::\n\n\n:\n in\n\n\n\n\n\n\n\n\nLinked Lists - Insert", ":\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\ndef __init__(self,\n:\n\n\nLinked Lists - Push\n\nWrite a node into the correct location\n\nWrite a node into a new node\n\n\n\ndef\n:\n:\n\n\n:\n to the node\n\n\n.\n\n\n\n\nLinked Lists - Insert", "::\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\nBuild one-two-3\n\n\n\ndef __init__(self,\n:\n\nLinked Lists - Call-Based\nLinked Lists -\n\n:\n:\n\n\n:\n\n into a list\n\n\t\n\n\n\n\n\n\n\n\nLinked Lists -", ":\n\nUse Call-Based format:\n\n\n\n\n\n:\n\n\n\n\n\ndef __init__(self,\n:\n\nLinked Lists - Sorted Insert\n\nCreate a node\n\nWrite a node\n\nWrite a node\n\ndef\n\t:\n\n:\n\t\n:\n in the list.\n\n\t\n\n\n\n\n\nLinked Lists - Call-", ":\n\nUse Call-Based format:\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\ndef __init__(self,\n:\n\nLinked Lists\nNode\n\nNOTE:\n\n\n\ndef __init__(self,\n:\n:\n\n\n\n:\n in the list.\n\n\n\t\n\n\n\n\nLinked Lists - Insert\n", ":\n\nUse Call-Based format:\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ndef __init__(self,\n:\n\n\nLinked Lists - Sorted Insert\n\nWrite a Node\n\ndef __init__(self,\n:\n:\n\n\n:\n\n\n\n\n\n\n\n\n\nLinked Lists - Insert", ":\n\nUse Call-Based format:\n\n\n\n\n\n:\n\n\n\ndef __init__(self, data):\n\nData to be sent to the node\nData:\n\ndef __init__(self,\n:\n\n\n\ndef __init__(self,,::\n\n\n:\n\n\n\n\n\n\n\n\n\n\nLinked Lists - Insert", ":\n\nUse Call-Based format:\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\nclass Node(object):\n\t\ndef __init__(self,\n:\n\nLinked Lists - Sorted Insert\n\n\n\ndef __init__(self,\n:\n:\n\n\n:\n\n\n\n\n\n.\n\n\n\n\nLinked Lists -", ":\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\ndef __init__(self,\n\n:\n\nLinked Lists - Use Call-Based format\n\nLinked Lists - Sort Insert\n\nWrite a\n\ndef __init__(self,\n::\n\n\n:\n in a node.\n\n\n\n\n\n\n\nLinked Lists - Call-", "::\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n\ndef __init__(self,\n:\n\nLinked Lists - Call-Based\n\nLinked Lists - Build\n\nWrite a Node\n\n\t:\n:\n\n\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nLinked Lists - Insert\n", ":\n\t\nUse Call-Based format:\n\t\n\n\n\n\nUse Call-Based format\n:\n\t\n\n\n\n\ndef __init__(self,\n\n:\n\t\nLinked Lists - Sort Insert\nData:\n\ndef __init__(self,\n:\n:\n\n\n:\n to insert a node\n\n.\n\n\n\n\nLinked Lists -", ":\n\n:\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ndef __init__(self,\n:\n\nLinked Lists - Call-Based\n\nLinked Lists -\n\n:\n:\n\n\n\n:\n\n\nExample:\n\n\n\n\n\n\n\n\n\n\nLinked Lists - Insert", ":\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef __init__(self,\n:\n\nLinked Lists - Sorted Insert\n\nWrite a\n\ndef __init__(self,\n:\n:\n\n\n:\n\nUse Call-Based format\n as\n\n\n.\n\n\n\n\nLinked Lists - Insert\n"], "prompt": "\nQUESTION:\nLinked Lists - Sorted Insert\n\nWrite a SortedInsert() function which inserts a node into the correct location of a pre-sorted linked list which is sorted in ascending order. SortedInsert takes the head of a linked list and data used to create a node as arguments. SortedInsert() should also return the head of the list.\n\nThe push() and buildOneTwoThree() functions do not need to be redefined.\ndef __init__(self, data):\n\t\nUse Call-Based format\nANSWER:\n"}}