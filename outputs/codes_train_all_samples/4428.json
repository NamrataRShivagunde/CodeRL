{"4428": {"code": ["\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\ndef sortBybit(arr):\n\t\n\n:\n\nif-not:haskell\n\n\t\n:\n\n:\n\n\n\n:\n\n\n```if-not:haskell\n\n\n\n\n\n\n\n\t\n\n\n- 7 **(...", "\n:\nUse Call-Based format\n\n\n\n\n\n\n\nif-not:haskell\n\n\n\n\n\nUse Call-Based format\n\n\ndef sortBybit(arr):\n\t\n\n\t\n:\n:\n**\n\n\n:\n\n\n\n\n\n\nif-not:haskell\n\nif-not:haskell\n\n\n", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\t\n:\n\n:\n\n**0**1**\n\n- 7 has **3 on** bits  **2**\n\n\n:\n\n\n\n\n\n\n\n\n\nif the array is not a 32", "\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n:\n\n\nif-not:haskell\nNote: You should be in call-based format\n\n\n\t\n:\n:\n**0**111**\n\n\n\n:\n\n\n\n```if-not:haskell\n\n\n\n\n\n\n**If-not:hask", "\n:\n\n\n\n\n\n\n\n\ndef sort_bybit(arr):\n\t\nUse Call-Based format\n\n```if-not:haskell\nNote: You're using the same function as `sortBybit()`\n\n\n:\n\n\n\n\n:\n\n\n:\n\n\n\n\n\n\n\nif-not:haskell\n\n\n", "\n:\nUse Call-Based format\n\n\n\n:\n\nif-not:haskell\n\n\n# sort_by_bit\n\n\n:\n\n\n\n\t\nSort by bit\n:\n:\n2**1**\n\n\n\n:\n\n\n\n\n\n\n\n\n\nif-not:haskell\nNote:\n\n\n\n\n\n#", "\n:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\ndef sortBybit(arr):\n\t\n\n:\n\nif-not:haskell\nNote:\n\n\ndef\n\t\n:\n\n:\n\n\n\n:\n\n\n\n\n\n\nif-not:haskell\n\n\n\n\n- 7 **", "\n:\n\n\n\nUse Call-Based format\n:\n\n\nif-not:haskell\n\n\n\n\n:\n\nif-not:haskell\nNote: The function sortBybit() is not called\n```\n\n\n:\n\n:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n- 7 has **3 on** bits ", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\nUse Call-Based format\nNote: The function sortBybit() is called with the array `arr` as an argument.\n\n\n\n\n:\n\n\n\n:\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef sortBybit():\n\t\n\n\n\n\n```", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\nif-not:haskell\nNote: You should modify the input before using this kata\n```\ndef sort_bybit(arr):\n\t\n:\n:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "\n:\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nif-not:haskell\nNote: You should use `sortBybit()`\n\n\n\n\n:\n\n:\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nif-not:haskell\n\n\n\n\n``", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\ndef sort_bybit(arr):\n\t\n\n\n:\n\n\n\n:\n\n:\n\nUse Call-Based format\n-\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 6 has **3 on", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\n\ndef sort_bybit(arr):\n\t\n\nif-not:haskell\n\n:\n\nif-not:haskell\n\n\n:\n:\n**\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n- When you use `haskell", "\n:\n\n\n\nUse Call-Based format\n\n\n\ndef sortBybit(arr):\n\t\nUse Call-Based format\n\n:\n\nif-not:haskell\n\n\t\n:\n:\n\n\n\n:\n\n\n\n\n\n\n\n\nif-not:haskell\nNote:\n\n\n\n```if-not:h\n", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\n\n:\n\nif-not:haskell\n\n\t\nSort array\n\t\n:\n:\n**3 on** bits\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 4 on** bits **4**", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\ndef sort_bybit(arr):\n\t\nUse Call-Based format\n\nif-not:haskell\n\n:\n\n\ndef\n\n:\n:\n\n\n\n:\n\n\n\n\n```if-not:haskell\n\n\n\n\n\n- 7 has **3 on", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nif-not:haskell\nNote:\n\n\n\n\n:\n\n:\n\n- 8 has **on** bits\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n#\n# **", "\n:\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\nif-not:haskell\n\n\n\n:\n\n\n\n\t\n:\n\n:\n**\n\n:\n\n\n- 10 ** (10****)\n\n\n\n\n\n\n\n\n\n\n- 10 ** (3 **", "\nUse Call-Based format:\n\n\n\n\n\n\ndef sort_bybit(arr):\n\nif-not:haskell\n\n\n:\n\nif-not:haskell\n\n:\n:\n**\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nif-not:haskell\nNote:\n\n\n\n\n```", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n`if-not:haskell\nNote: This function is called from the user.\n```\n\n\ndef\n\n\n:\n\n\ndef\n:\n:\n\n\n:\n\n\n\n\n\n\n\n\n\nif-not:haskell\n\n\n\n\n\n"], "prompt": "\nQUESTION:\nIn this kata you're expected to sort an array of 32-bit integers in ascending order of the number of **on** bits they have.\n\nE.g Given the array **[7, 6, 15, 8]**\n\n- 7 has **3 on** bits  (000...0**111**)\n- 6 has **2 on** bits  (000...00**11**)\n- 15 has **4 on** bits (000...**1111**)\n- 8 has **1 on** bit   (000...**1**000)\n\nSo the array in sorted order would be **[8, 6, 7, 15]**.\n\nIn cases where two numbers have the same number of bits, compare their real values instead.\n\nE.g between 10 **(...1010)** and 12 **(...1100)**, they both have the same number of **on** bits '**2**' but the integer 10 is less than 12 so it comes first in sorted order.\n\nYour task is to write the function `sortBybit()` that takes an array of integers and sort them as described above.\n\n```if-not:haskell\nNote: Your function should modify the input rather than creating a new array.\n```\ndef sort_by_bit(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}