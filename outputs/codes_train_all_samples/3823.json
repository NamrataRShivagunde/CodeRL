{"3823": {"code": ["\n\n```if:javascript```\n\nThe input will always be an array.\n```if:ruby```\n```\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\n```if:ruby```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n an array.\n```", "\n\n\n\n\n\n\n```if:csharp\ndeepCount([\"x\", \"y\", [\"z\"]])\n//>>>>> 7\n```\n\n\n\n\n\n\n an array.\n\n\n\ndeepCount()\n\n an array.\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n\n an array.\n``", "\n\n\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\ndeepCount\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n an array.\n```if:", "\n```if:javascript\n```if:ruby\n```if:python\n```if:csharp\n```\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\ndeepCount\ndeepCount\ndeepCount\n\n an array.\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n an array.\n``", "\n```if:javascript\n`Array.prototype.length` will give you the number of top-level elements in an array.```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\n\n\n an array.\n\n\n```if:ruby\n\n\n\n\n\n\n\n\n\n\n\n\n\n an array.\n```", "\n\nif:javascript\ndeepCount\ndeepCount\n\nif:ruby\ndeepCount\ndeepCount\nif:python\ndeepCount\nif:csharp\ndeepCount\ndeepCount\n\nQUESTION:\n\n```if:ruby\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n an array.\n``", "```\n\nif:csharp\n```\n\nif:python\n```\n\nif:csharp\n```\n```if:python\n```\n```\n\n```\n\n\n an array.\n\n`\n\n\n an array.\n\n```\n\n\n\n\n\n\n```\n\n```\n```\n an array.", "```\n\nif:php\n\n```\n\nif:php\n\nif:ruby\n\nif:python\n\nif:csharp\n\nif:python\n\nif:ruby\n\nif:python\n\n` an array.\n\n`\n\n\n an array.\n\n\n\n\n```\n\n\n\n\n```\n\n\n an array.\n``", "\n```if:javascript\n`count()` will give you the number of top-level elements in an array.```\n\n\n\n\n\n\n\n\n\n\n `Array#length`\n deepCount([1, 2, 3]);\n`\n\n\n\n an array.\n\n\n\n\n```\n\n\n\n\n```\n\n```\n\n `array` with", "```\n\n\n\n\n\n\n\n```if:ruby\n`Array#slice` will give you the number of top-level elements in an array.```\n\n```if:python\n```\n\n```if:csharp\n```\n`\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n array.\n```", "```\n```\n\n```if:csharp\n`count()` will give you the number of top-level elements in an array.```\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\n\n```if:php\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n it's an array", "\n```if:php\n```if:ruby\n```if:python\n```if:php\n```if:ruby\n``````if:python\n```\n\n`if:php\n\n`if:python\n```\n\n\n an array.\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n an array.\n``", "\n\nif:php\n deepCount([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\n\n\n\n\n\n\n\n\n\n\n\ndeepCount(a, b, c)\n```\n\n\n.\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n `Array#splice`", "\n```if:javascript\n`count()` will give you the number of top-level elements in an array.```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeepCount(a)\n\n\n`\n\n```if:php\n\n\n:php\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n a list/array.\n", "\n```if:javascript\n`count()` will give you the number of top-level elements in an array.```\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n```if:php\n\n\n\n```if:ruby\n\n an array.\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n an array.\n", "\n```if:csharp\n```if:python\n```if:ruby\n```if:python\n```\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\ndeepCount\ndeepCount\ndeepCount\n\n an array.\n\n\n\n\n\n\n\n\n\n\n\n\n`\n\n\n an array.\n```if", "```\n\nif:javascript\n\nif:ruby\n\nif:python\n\nif:ruby\n\nif:python\n```\n\nif:ruby\n\nif:ruby\n```\n\n`if:php\n the input is an array.\n`\n```\n`\n```\n\n\n``\n\n\n\n```\n\n\n an array.\n```", "\n\n\n\n\n\n\n\n\n```\n\ndeepCount([1, 2, 3], [\"a\", \"b\", \"c\", \"d\", \"b\", \"c\"]).\n```\n a list/array.\n\n\n\n\n an array.\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n an array.\n```", "\n```if:php\ndeepCount```\n\nif:php\ndeepCount```\n\n```if:python\n```if:csharp\n\n```if:ruby\n\n```if:python\n\n```\n\n\n\n\n\n\n\n\n\n\n\n``\n\n\n\n\n\n```if:php\n\n that you are using the", "\n\nif:javascript\ndeepCount(a)\n\nif:ruby\ndeepCount(a)\n\n```if:python\ndeepCount(a)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n an array.\n\n\n\n\n an array.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the input is an array.\n``"], "prompt": "\nQUESTION:\n```if:javascript\n`Array.prototype.length` will give you the number of top-level elements in an array.\n```\n```if:ruby\n`Array#length` will give you the number of top-level elements in an array.\n```\n```if:csharp\nThe `Length` property of an array will give you the number of top-level elements in an array.\n```\n```if:php\n`count()` will give you the number of top-level elements in an array if exactly one argument `$a` is passed in which is the array.\n```\n```if:python\n`len(a)` will give you the number of top-level elements in the list/array named `a`.\n```\n\nYour task is to create a function ```deepCount``` that returns the number of ALL elements within an array, including any within inner-level arrays.\n\nFor example:\n\n```if:javascript\n    deepCount([1, 2, 3]);  \n    //>>>>> 3\n    deepCount([\"x\", \"y\", [\"z\"]]);  \n    //>>>>> 4\n    deepCount([1, 2, [3, 4, [5]]]);  \n    //>>>>> 7\n```\n```if:ruby\n    deepCount([1, 2, 3]);  \n    //>>>>> 3\n    deepCount([\"x\", \"y\", [\"z\"]]);  \n    //>>>>> 4\n    deepCount([1, 2, [3, 4, [5]]]);  \n    //>>>>> 7\n```\n```if:csharp\n    deepCount([1, 2, 3]);  \n    //>>>>> 3\n    deepCount([\"x\", \"y\", [\"z\"]]);  \n    //>>>>> 4\n    deepCount([1, 2, [3, 4, [5]]]);  \n    //>>>>> 7\n```\n```if:php\n    deep_c([1, 2, 3]);\n    //>>>>> 3\n    deep_c([\"x\", \"y\", [\"z\"]]);\n    //>>>>> 4\n    deep_c([1, 2, [3, 4, [5]]]);\n    //>>>>> 7\n```\n```if:python\n    deepCount([1, 2, 3]);  \n    //>>>>> 3\n    deepCount([\"x\", \"y\", [\"z\"]]);  \n    //>>>>> 4\n    deepCount([1, 2, [3, 4, [5]]]);  \n    //>>>>> 7\n```\n\nThe input will always be an array.\n\n```if:php\nIn PHP you may *not* assume that the array passed in will be non-associative.\n\nPlease note that `count()`, `eval()` and `COUNT_RECURSIVE` are disallowed - you should be able to implement the logic for `deep_c()` yourself ;)\n```\ndef deep_count(a):\n\t\nUse Call-Based format\nANSWER:\n"}}