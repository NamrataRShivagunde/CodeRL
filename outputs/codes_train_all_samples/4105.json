{"4105": {"code": ["\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm):\n\t\nUse Call-Based format\n\nAccurate coding:\n\n\n\n\n\npython\nsumDig_nthTerm()\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm\n\n\n\n\n\nsumDig_nthTerm", "\n\n\n\n\n\n\n\n\n\n\n\npython\ninitVal = [1]\npatternL = [2]\nterm1 = [3]\nterm2 = [2]\nterm3 = [3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm()\n\n\n\n\n\n\n\n```python\n\n", "\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm):\n\t\n\n\n\n\n\n\n\n\n\npython\ninitVal = [1, 2, 3]\npatternL = [1, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm\n\n\n\n\n\n\n\tSum of Dig =", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\ninitVal = [2, 1]\npatternL = [1, 2, 3]\nterm1 = [2, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n```python\n", "\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n```python\npatternL = [2, 1, 3]\n\n```\n\n\npython\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL)\n\npython\n\n\n\n```python", "\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL)\n\n\n\n\n\n\npython\ninitVal = [2, 1, 3]\npatternL = [3, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal)\n\n\n\n\n\n\n\n```python", "\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm):\n\n\n\n\n\n\npython\nsumDig_nthTerm(initVal, patternL, nthTerm)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm\n\n\n\n\n\n\n\n\n```python\ninit", "\n\n\nSum of Dig = 10\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n\n\n\n\npython\ninitVal = 10\npatternL = [2, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm()\n\npython\n\n\n\n\tsumDig_nth", "\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL)\n\n```python\nsumDig_nthTerm(initVal, patternL)```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm()\n\n\npython\n\n\n\n\tterm1 = initVal\n", "\n\n\n\n\n\n\n\n\n\n\n\npython\ninitVal = 10\npatternL = [1, 2, 3]\nterm1 = 10\nterm2 = 11\nterm3 = 15\nterm5 = 19\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm()\n\npython\n\n\n\n\n\tSum of 1-term", "\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n\n\n\npython\npatternL = [2, 1]\nterm1 = [2, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nterm1 = initVal\nterm1 = patternL\n\n\n\n``", "\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL)\n\n```python\nsumDig_nthTerm(initVal, patternL)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninitVal = 0\npatternL = [3]\n\n\n\n\n\n\nSum of the sequence up", "\n\n\n\n\n\n\n\nsumDig_nthTerm()\n\n```python\nsumDig_nthTerm()```\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm()\n\n\n\n\n\nsumDig_n", "```\n\n```\n\n\n\n\n\n\nSum\n\nCall-Based format\n\n\npython\ninitVal = [1, 2, 3, 4, 5, 6, 7, 9]\npatternL = [1, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\n\n\n\n\n\n```python\ninitVal", "\n\n\n\n\nSum Dig = 1 + 7 = 10\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n```python\ninitVal", "\n\n\n\n\n\nsumDig_nthTerm()\n\n\n\n\n\n\n\n\npython\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\npython\n\n\n\n\tSum of Dig = 1", "\n\n\nSum of Dig = 1 + 6 = 10\n\nSum of Dig = 1 + 6 = 10\n\nSum of Dig = 1 + 6 = 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm\n\n\nsumDig_nthTerm()\n\n\n\n\n\n```", "\n\n\n\n\n\n\nsumDig_nthTerm()\n\nNote:\n\n\n\n\n\n\npython\ninitVal = 10\npatternL = [1, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nterm1 = initVal\nterm2 = patternL\nterm3 = nthTerm\n\n\n\n```", "\n\n\n\n\n\n\n\nsumDig_nthTerm(initVal, patternL, nthTerm)\n\n\n\n\n\n\npython\ninitVal = 10\npatternL = [2, 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\nterm1 = initVal\nterm2 = patternL\nterm3 = nthTerm\n\n\n\n``", "\n\n\nSum of Dig = 1 + 7 = 10\n\nSum of Dig = 2 + 7 = 10\n\n\n\n\n\n\n\n\n\npython\n\nterm1 = initVal\nterm2 = patternL\nterm3 = nthTerm\n\n\n\n\n\n\n\n\n\n\n\n\n\nsumDig_nthTerm\n\n\n\n\n\n  sumDig_nth"], "prompt": "\nQUESTION:\nWe have the first value of a certain sequence, we will name it ```initVal```.\nWe define  pattern list, ```patternL```, an array that has the differences between contiguous terms of the sequence.\n``` E.g: patternL = [k1, k2, k3, k4]``` \n\nThe terms of the sequence will be such values that:\n```python\nterm1 = initVal\nterm2 - term1 = k1\nterm3 - term2 = k2\nterm4 - term3 = k3\nterm5 - term4 = k4\nterm6 - term5 = k1\nterm7 - term6 = k2\nterm8 - term7 = k3\nterm9 - term8 = k4\n....  - ..... = ...\n....  - ..... = ...\n ``` \nSo the values of the differences between contiguous terms are cyclical and are  repeated as the differences values of the pattern list stablishes.\n\nLet's see an example with numbers:\n```python\ninitVal = 10\npatternL = [2, 1, 3]\nterm1 = 10\nterm2 = 12\nterm3 = 13\nterm4 = 16\nterm5 = 18\nterm6 = 19\nterm7 = 22  # and so on...\n```\nWe can easily obtain the next terms of the sequence following the values in the pattern list.\nWe see that the sixth term of the sequence, ```19```, has the sum of its digits ```10```.\n\nMake a function ```sumDig_nthTerm()```, that receives three arguments in this order \n\n ```sumDig_nthTerm(initVal, patternL, nthTerm(ordinal number of the term in the sequence)) ```\n\nThis function will output the sum of the digits of the n-th term of the sequence.\n\nLet's see some cases for this function:\n```python\nsumDig_nthTerm(10, [2, 1, 3], 6) -----> 10 # because the sixth term is 19 sum of Dig = 1 + 9 = 10. The sequence up to the sixth-Term is: 10, 12, 13, 16, 18, 19\n\nsumDig_nthTerm(10, [1, 2, 3], 15) ----> 10 # 37 is the 15-th term, and 3 + 7 = 10\n```\nEnjoy it and happy coding!!\ndef sumDig_nthTerm(initVal, patternL, nthTerm):\n\t\nUse Call-Based format\nANSWER:\n"}}