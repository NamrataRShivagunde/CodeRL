{"3210": {"code": ["\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\"Chicago\"  -->  \"ch:*,g:*,k:*\"\n```\n\n\n:\n:\n\n\n:\n\n\n\n\n\"Banana\"\n\n\n\n\n\nA string that shows how many", "\n\nUse Call-Based format:\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\nUse Call-Based format\n\t:\n\nUse Call-Based format:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\"John\"      -->\n\"j\n\n\n", "\n:\nUse Call-Based format\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n\"Chicago\"  -->  \"ch:*,g:*\"\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n\n\n\"Chicago\"  -->  \"ch:*\"\n\n\n\n\n\n\n``", "\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n\t\n:\n\nUse Python format:\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\"Chicago\"\n\n\n\n\n\n\n```\n\"Ch", "\nUse Call-Based format:\n\n\n:\nUse Call-Based format\n\n\n\n\t\n:\n\n\"Chicago\"  -->  \"c:**,h:**,i:*\"\n```\n\n\ndef\n:\n:\n\n\nUse Call-Based format\n:\n\n\n\n\"Chicago\"\n\n\n\n\n\n```\n", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\n:\n\n\"Hanne\"  -->  \"h:*,g:*\"\n\n\n\n:\n:\n\n\n\n:\n\n\n\n\"Chicago\"  -->  \"ch:*\"\n\n\n\n\n\n\n\nYou receive the name", "\nUse Call-Based format:\n\n\n:\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\n:\n\nUse Call-Based format:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\"Las Vegas\"  -->  \"\n:\n", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format:\n\n\n:\n:\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\"Chicago\"\n\n\n\n\n\n\n\n\n```\n\"K", "\nUse Call-Based format:\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\t\n:\n\n\n\n\n:\n\n\t\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\"Chicago\"\n\n\n\n\n\n\n``", "\n:\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\t\nUse Call-Based format\n\n\"Las Vegas\"    -->  \"l:*\"\n\n\n:\n:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\"Chicago\"\n\n\n\n\n\n\n```\n\"J", "\n\nUse Call-Based format:\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\n:\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\"Chicago\"    -->  \"Chicago\"\n\n\n\n\n\n\n\n\n\nYou receive", "\nUse Call-Based format:\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n:\nUse Call-Based format\n\n\n\t\n:\n\nUse Call-Based format:\n\n\n:\n\n\n\n\n\"\"\")\n\n\"\"\"\n\n\n\"Chicago\"  -->  \"ch:**\"\n\"\"\"\n\n:\n", "\n\nUse Call-Based format:\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\t\n:\n\n\n\n\t\n:\n\n\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n\"Chicago\"  -->  \"chicago\"\n\"Las Vegas\"\n\n\n\n:\nYou", "\n\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n\n\n\n\n\n:\n\n\"Chicago\"    -->  \"ch:**,h:**,i:**,g:**,o:*\"\n\n\n:\n:\n\n::\n\n\n\n\"Chicago\"\n\n\n\n\t\n\n\nYou receive the", "\n\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\n\n\n\t\n:\n\n\tGet strings from a city:\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\"Las Chicago\"  -->  \"l:*\"\n\n\n\n\n\n```\n", "\nUse Call-Based format:\n\n\n\n:\n\n\"Bangkok\"  -->  \"b:**\"\n\"Las Vegas\"\n```\n\n\n\n\n:\n\n\n:\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\nYou receive the name of a", "\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n\n\n\n\n:\n\n\"Bangkok\"    -->  \"b:*,g:*,e:*,g:*\"\n\n\n:\n:\n\n\n\n:\n\n\n\n\n\n\"Chicago\"\n\n\n\n\n\n\n\n```\n\"", "\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n\n\n\n\t\n:\n\n\"Chicago\"  -->  \"ch:**,g:**,k:**,o:*\"\n\n\n:\n:\n\n\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n```\n\"Han", "\n:\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\"Cities\"     -->  \"c:*\"\n```\n\n\n\ndef\n\t:\n:\n\n\n:\n\n\n\n\n\"Chicago\"    -->  \"ch:*\"\n\n\n\n\n\n\n```", "\n:\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\t\n:\n\n\t\tThe name of a city is the name of a city.:\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\"Las Silk\"     -->  \"l:*\"\n\n:"], "prompt": "\nQUESTION:\nYou receive the name of a city as a string, and you need to return a string that shows how many times each letter shows up in the string by using an asterisk (`*`).\n\nFor example:\n\n```\n\"Chicago\"  -->  \"c:**,h:*,i:*,a:*,g:*,o:*\"\n```\n\nAs you can see, the letter `c` is shown only once, but with 2 asterisks.\n\nThe return string should include **only the letters** (not the dashes, spaces, apostrophes, etc). There should be no spaces in the output, and the different letters are separated by a comma (`,`) as seen in the example above.\n\nNote that the return string must list the letters in order of their first appearence in the original string.\n\nMore examples:\n```\n\"Bangkok\"    -->  \"b:*,a:*,n:*,g:*,k:**,o:*\"\n\"Las Vegas\"  -->  \"l:*,a:**,s:**,v:*,e:*,g:*\"\n```\n\nHave fun! ;)\ndef get_strings(city):\n\t\nUse Call-Based format\nANSWER:\n"}}