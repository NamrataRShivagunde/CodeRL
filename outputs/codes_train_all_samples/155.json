{"155": {"code": ["\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n    def maxJumps(self, arr: List[int], d: int):\n        return arr.length\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an array of\u00a0integers arr and", "\nUse Call-Based format\n\n\n\nOutput: 2\nExplanation:\n\n\n\n\n\n\n   \n    return 1\n\nExplanation:\n\nGiven an array of\u00a0integers arr and an integer d:\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of\u00a0integers arr and", "\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\nOutput: 3\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nOutput: 2\nExplanation:\n\n\n\nGiven an array of integers arr and an integer d:\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\nGiven an array", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n\nOutput: 1\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n i = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    arr = [7,8", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def maxJumps(self, arr: List[int], d: int):\n   \n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\nGiven an array of integers arr and an", "\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n   \n    maxJumps(self, arr, d)\n\nReturns:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 < x < arr.length < d < arr.length\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def minJumps(self, arr, d):\n        return arr[0]\n\nExplanation:\n\n0 <= d < arr.length\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n    maxJumps(self, arr, d)\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\nGiven an array of integers arr and an integer", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n    \n\n\n\nd = 1\n\n\n\u00a0\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n    return arr.index(d)\n\n\n\n\u00a0\n\n\n\nOutput: 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\nGiven an array of integers arr and", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nOutput: 7\n\nExplanation:\n\nGiven an array of\u00a0integers arr and an integer d:\n d <= arr[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\nGiven an array of integers arr and an integer d:\n\narr = [int, int, int, int]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\nGiven an array of integers", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n    return self.maxJumps(arr, d)\n\n\u00a0\n\n\nGiven an array of integers arr and an integer d:\n\ni = 0\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nd = 0\n\nExplanation:\n\nd = 0\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\nGiven an array of integers arr and", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n    return maxJumps(arr, d)\n\n\n\u00a0\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\nGiven an array of integers arr", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\ni + x < arr[i] < d\n\n\n\n\n    def maxJumps(self, arr, d):\n\n\n\n\n\n\n\n\n\n\n\nGiven an array arr and an integer d:\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def maxJumps(self, arr: List[int], d: int):\n\n   \n\n\n\n\n\n\n    def minJumps(self, arr, d):\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\nGiven an", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an array of\u00a0integers arr and an integer d:\n\nGiven an array of\u00a0integers arr and an integer d:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of\u00a0integers arr and an integer d:\n\n\n\n\nGiven an array of\ufffd", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n        return 1\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\n\n\n\n\n\nGiven an array of integers arr and an integer d:\n\n\n\n\nGiven an array of integers"], "prompt": "\nQUESTION:\nGiven an array of\u00a0integers arr and an integer d. In one step you can jump from index i to index:\n\ni + x where:\u00a0i + x < arr.length and  0 <\u00a0x <= d.\ni - x where:\u00a0i - x >= 0 and  0 <\u00a0x <= d.\n\nIn addition, you can only jump from index i to index j\u00a0if arr[i] > arr[j] and arr[i] > arr[k] for all indices k between i and j (More formally min(i,\u00a0j) < k < max(i, j)).\nYou can choose any index of the array and start jumping. Return the maximum number of indices\u00a0you can visit.\nNotice that you can not jump outside of the array at any time.\n\u00a0\nExample 1:\n\nInput: arr = [6,4,14,6,8,13,9,7,10,6,12], d = 2\nOutput: 4\nExplanation: You can start at index 10. You can jump 10 --> 8 --> 6 --> 7 as shown.\nNote that if you start at index 6 you can only jump to index 7. You cannot jump to index 5 because 13 > 9. You cannot jump to index 4 because index 5 is between index 4 and 6 and 13 > 9.\nSimilarly You cannot jump from index 3 to index 2 or index 1.\n\nExample 2:\nInput: arr = [3,3,3,3,3], d = 3\nOutput: 1\nExplanation: You can start at any index. You always cannot jump to any index.\n\nExample 3:\nInput: arr = [7,6,5,4,3,2,1], d = 1\nOutput: 7\nExplanation: Start at index 0. You can visit all the indicies. \n\nExample 4:\nInput: arr = [7,1,7,1,7,1], d = 2\nOutput: 2\n\nExample 5:\nInput: arr = [66], d = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 1000\n1 <= arr[i] <= 10^5\n1 <= d <= arr.length\nclass Solution:\n    def maxJumps(self, arr: List[int], d: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}