{"1867": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0\u00a0  1\n\u00a0\u00a0  1\nOutput: 2\n\n\nFollow up:\n\n\nUse Call-Based format\n\n\n\n\n\n\u00a0  2\n\n\n\n\n\n    kthSmallest(self, root, k)\n\n\n\n\n\n\n\nGiven a binary search", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\u00a0\u00a0  2\n\n\n\n\n\n\n\nGiven a binary search tree, write a function kthSmallest to find the kth smallest element in it.\n\n\n\n\n\n\n\n\nGiven a binary search tree, write a function\n\n\n\nGiven a binary search tree", "\nUse Call-Based format\n\n\n\n\n\n\n\u00a0  2\n\n\nUse Call-Based format\n\n \u00a0  1\n \u00a0  2\n\n\n\n\n\n\n\n\n    k = 1\n\n    k = 1\n       \n\n\n\n\n\n\n\n\n\n\n\n\u00a0  2\n\n\n\n    root = [5,", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\u00a0  2\nOutput: 3\n\n\nFollow up:\n\n\n\n\n\n\n\n\n\n\n\n\n    k = 1\n       \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n  root = [3,4]", "\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n      1   2\n\n\n    k = 1\n\n\nUse Call-Based format\n\nFollow up:\n\n\n\n\n\n\n\n\nGiven a binary search tree, write a", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\u00a0  1\n\n\n\u00a0  1\n\n\nUse Call-Based format\n\n\n\n\n        kthSmallest(root, k)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a binary search tree, write a function kthSmallest\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0  1\n\u00a0  2\n\n\n\nUse Call-Based format\n\n\u00a0\u00a0  2\n\n\n\n\n\n    1   3\n    2   4\n   \n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a binary search tree\n\n\n\nGiven a binary search", "\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\u00a0  1\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n kthSmallest(self, root, k):\n       \n\n\n\n        k = 1\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    1   2\n   \n\n\nGiven a binary", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\u00a0  2\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n    / \\\n    1   4\n    / \\\n    2   3\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a binary search tree,", "\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\u00a0  2\n\n\u00a0  3\n\n\nUse Call-Based format\n\n\n\n\n\n\n    1   2\n    3   4\n   \n\n        k = 0\n\n\n\n\n\n\n\nGiven a binary search tree, write a function kthSmallest\n\n\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\u00a0  2\nOutput: 3\n\n\nFollow up:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def kthSmallest(self, root, k):\n       \n\n\n\n\n\n\nGiven a binary search tree, write:\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\n\n\u00a0  2\n\n\n\nUse Call-Based format\n\n\n \u00a0  2\n \u00a0  1\n\n\n\n\n\n\u00a0  1\n\n\n        k = 1\n\n\n\n\n\n\nGiven a binary search tree, write a function kthSmallest\n\n\n\n\nGiven a binary", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n \u00a0  2\n\n\n\n\n        root.left\n        root.right\n        root.left\n        k\n\n\n\n\n\n\n\nGiven a binary search tree, write a function kthSmallest\n\n\n\n\nGiven a binary", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    1   3   4\n    / \\\n    2   3   4\n    / \\\n    1   2\nOutput: 3\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n1\n\n\nGiven a binary search tree, write", "\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0  2\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n   2\n    / \\\n    3   4\n   \n\n    kthSmallest(self, root, k)\n\n\n\n\n\n\n\n\n\nGiven a binary search tree, write", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n  k = 1\n\n\n\u00a0  2\nOutput: 2\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n        \n\n\n\n    root = [1,2,3,4,1]\n       \n\n\n\n\n\n\nGiven a binary search tree, write", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0  1   2\n  / \\\n\u00a0  2\n\n\n\n\n\n\n\n\n\n\n        1   2\n        3   4\n       \n        k = 1\n        \n\n\n\n\n\n\n\n\n   1   4\n\n\nGiven a binary search tree", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\u00a0  2\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\nkthSmallest(root, k)\n\n\n\n\u00a02\n\n\nGiven a binary", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    kthSmallest(self, root, k):\n        \n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n \u00a0  2\n\n\n\nGiven a binary", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n    kthSmallest(self, root, k)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    kthSmallest(self, root, k)\n\n\n\n\n\nGiven a binary search tree:\n\n\n\n\n\nGiven a binary search tree"], "prompt": "\nQUESTION:\nGiven a binary search tree, write a function kthSmallest to find the kth smallest element in it.\n\nNote: \nYou may assume k is always valid, 1 \u2264 k \u2264 BST's total elements.\n\nExample 1:\n\n\nInput: root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n\u00a0  2\nOutput: 1\n\nExample 2:\n\n\nInput: root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\nOutput: 3\n\n\nFollow up:\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def kthSmallest(self, root: TreeNode, k: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}