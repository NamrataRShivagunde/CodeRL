{"3968": {"code": ["\n:\n\n\n\n:\n\nUse Call-Based format\n\ndef\n\n\n## Examples\n\n\nUse Call-Based format\n:\n\n\n\n\n##\n:\n\n\n\n## Examples\n\n:\n\n\n\n\nYou'll return a list of two strings\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n## Examples\n\n\nYou'll", "\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\ndef\n```\ndef tail_swap(strings):\n\t\nUse Call-Based format\n#\n:\n\n\n\n\t\n\n:\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n:\n\n\n# Examples\n\n\n\n## Examples``", "\n:\n\n\n\nUse Call-Based format\n:\n\n\ndef\n   \n\nUse Call-Based format:\n\n\n## Examples\n\n\t\n:\n:\n\n\n\n\n## Examples\n\n\nUse Call-Based format:\n\n\n\n\n## Examples\n```\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\nYou'll", "\n:\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\n\n\n\t\n\n\n\n\n```\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n## Examples\n\n\nYou'll be", "\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\ndef\n\t\n\n:\n\n\n\n# Examples\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n## Examples\n## Examples\n\n\n\n", "\n:\n\n\n\nUse Call-Based format\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\n\n\n\t\n\n\n\n\n\n## Examples\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n- `strings`\n  <--  \"strings\"", "\n:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n## Examples\n\n\n\n\n\n\n\n## Examples\n\n\n\n\n\nYou'll return a list of two strings after each colon.\n\n\n\n## Example\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n## Examples\n```\n\n\nYou'll", "\n:\n\nUse Call-Based format\n\n\n:\n\n\nUse Call-Based format\n\ndef\n\t\nUse Call-Based format\n\n## Examples\n\n:\n\n\n\n\n:\n\n\n\n\n\n## Examples```\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n## Examples```\n\n\n# Examples``", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\n\ndef\n\t\n:\n\n\n## Examples\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n# Examples\n\n\nYou", "\n:\n\n\n\nUse Call-Based format\n\n\n:\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\n\n\n\n##\n\nUse Call-Based format:\n\n\n\n\n\n## Examples\n```\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\n\n# Examples\n```\ndef tail_swap(strings):\n\t\nUse Call-Based format\n#\n:\n\n\n\n\n:\n\n\n\n## Examples\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n\n", "\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n## Examples\n\n:\n\n\n\t\n:\n\n\n\n## Examples\n\n\nUse Call-Based format:\n\n\n\n## Examples\n\n\n:\n\n\n## Examples\n##\n\n\n\nYou", "\n:\n\n\n\n\nUse Call-Based format\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\n\n\n\t\n\n\n\n\n\n## Examples```\nif tail_swap(strings):\n\t\n\n\n\n:\n\n\n\n\n\n## Examples```\n\n:\n\n\n\n\n## Examples```", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\t\n:\n\n\n\n\n\t:\n:\n\n\n\n\n## Examples\n\n\nUse Call-Based format:\n\n\n\n\n\n\n:\n\n\n\n\n## Examples\n\n\nYou'll be", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\ndef tail_swap(strings):\n\t\n\n:\n\n\n\n\t\n:\n:\n\n\n\n```\n\n\n\n\n## Examples```:\n\nUse Call-Based format\n\n\n\n\n\n\n## Examples\n\n\n\n\n", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\n:\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n# Examples\ndef tail(strings):\n\t\n\n:\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n## Examples\n\n\nYou'll", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\n\n\n\t\n:\n\n\n##\n:\n\nUse Call-Based format\n\n\n\n\n## Examples```\n\n:\n\n\n\n\n\n##\n\nYou", "\n:\n\n\n\nUse Call-Based format\n:\n\n\n\n## Examples```\ndef tail_swap(strings):\n\t\nUse Call-Based format\n\n:\n\n\n\n:\n\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n\n## Examples\n```\nuse tail_swap\n\n\n:\n\n\n##\n\nYou", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\ndef\n\t\nUse Call-Based format\n\n:\n\n\ndef\n\t\n\n:\n\n\n\t\n:\n\nUse Call-Based format\n\n\n\n## Examples```\n\nUse Call-Based format\n\n:\n\n\n\n\n\n", "\n\nUse Call-Based format:\n\n\n\n:\n\nUse Call-Based format\n\ndef\n   \n:\n\n\n\t\n:\n\n:\n\n\n\n\n## Examples\n```\ndef tail_swap(strings):\n\t\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n## Examples\n\n\nYou'll be given a"], "prompt": "\nQUESTION:\nYou'll be given a list of two strings, and each will contain exactly one colon (`\":\"`) in the middle (but not at beginning or end). The length of the strings, before and after the colon, are random.\n\nYour job is to return a list of two strings (in the same order as the original list), but with the characters after each colon swapped.\n\n\n## Examples\n```\n[\"abc:123\", \"cde:456\"]  -->  [\"abc:456\", \"cde:123\"]\n[\"a:12345\", \"777:xyz\"]  -->  [\"a:xyz\", \"777:12345\"]\n```\ndef tail_swap(strings):\n\t\nUse Call-Based format\nANSWER:\n"}}