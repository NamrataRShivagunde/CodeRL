{"1761": {"code": ["\n\n\n\n\n\n\n\n\n### Regression\n\n\n\n\n\n\n\n# Run:\n\n# Task:\n\n_Yet easy kata!_\n\n\n# Task:\n\n\n\n \n\n\n\n\n\n \n\n\n\n,,\n\n# Task:\n\n\n\n\n\n\n_Yet easy kata!_\n", "\n\n\n# Task\n\n_Tip: you can solve this using Javascript!_\n# Task:\n\n_Tip: you can solve this using Javascript!_\n# Task:\n\n\n\n\n\n\n\n\n\n\n\n\n \n\t\n\n\n\n \n  \n\n,,,\n\n\n\n\n\n# Task:\n\n \n  \n  \n  \n\n_Y", "\n\n\n\n\n# Task:\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n\n \n \n\n\n\n \n\n\n\n\n# Task:\n\n,,\n\n\n\n\n\n\n\n_Yet another easy k", "\n\n\n\n\n\n\n\n\n\n_Yet easy kata!_\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n \n\n,,,\n\n\n\n\n\n\n# Task:\n  \n\n_Yet another easy", "\n\n# Run\n#\n\n\n\n\n\n\n\n\n_Yet easy kata!_\n\n# Task:\n#\n\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n \n  \n\n\n,,,\n\n# Task:\n\n\n\n\n\n\n\n_Yet another easy k", "\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n\n\n\n\n \n\n,,\n\n\n# Task:\n\n\n\n\n_Yet another easy kata!", "\n\n\n# Task:\n\n# Constraint :\n\n# Constraint :\n\n# Constraint :\n\n# Constraint:\n\n# Constraint :\n\n# Constraint :\n\n# Constraint:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n,,\n\n\n\n\n\n\n\n\n_Yet easy kata!_", "\n\n##### Run-Based format\n\n\n\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n\n\n\n\n\n\n\n\n\n\n,\n\n\n\n\n\n\n_Yet another", "\n\n# Another Kata!\n\n\n\n\n# The Kata!\n\n\n\n\n\n\n\n# Constraint:\n\n_Yet easy kata!_\n\n# Another Kata!\n\n\n\n\n\n\n\n \n\n\n\n \n\n\n,,\n\n\n\n\n\n# Task:\n\n\n_Yet easy kata!", "\n\n\n### # Task:\n\n#\n\n\n\n\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n\n\n\n\n\n\n \n\n\n\n,,,\n\n\n\n\n\n\n_Yet easy kata!_\n\n#", "\n\n# Task:\n\n\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n# Task:\n\n\n\n\n\n\n\n\n\n \n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n  \n  \n\n\n,,,\n\n\n\n# Task:\n\n\n\n\n_Yet another easy k", "\n\n# Task:\n\n\n\n\n\n\n_Yet easy kata!_\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n# Task:\n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\n# Task\n\n,,\n\n\n\n\n\n_Yet easy kata!_\n", "\n_Bet easy kata!_\n\n\n\n\n# Task:\n\n\n\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n \n\n\n\n \n  \n \n\n\n# Task:\n  \n  \n,,\n\n\n  \n  \n  \n  ### Result\n  \n \n\n_", "\n_Yet easy kata!_\n_Yet easy kata!_\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n\n\n \n\n\n_Yet easy kata!_\n\n\n\n \n\n\n\n,,,\n\n\n\n\n\n# Task:\n  \n \n\n\n_Yet easy", "\n\n\n\n# Task:\n\n# Task:\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n\n\n\n\n \n \n \n\n \n \n\n\n# Task:\n\n\n,,\n\n\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n# Task:\n", "\n\n\n\n\n# Task:\n\n_The easy kata!_\n\n\n\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n,,\n\n\n\n\n\n_Yet another easy kata", "\n\n### Example\n\n\n\n\n\n#\n\n_Yet easy kata!_\n\n\n\n\n\n# Result\n\n\n\n\n\n\n\n_Yet easy kata!_\n\n\n\n# Task:\n\n \n \n\n\n,,\n\n\n\n\n\n# Task:\n\n\n\n\n\n# Task:\n\n\n_", "\n\n\n\n\n# Task:\n\n#\n\n\n_Yet easy kata!_\n\n\n\n### Task:\n\n_Yet easy kata!_\n\n# Task:\n\n\n\n\n\n\n\n \n\n\n\n \n \n\n\n# Task:\n\n,,\n\n\n\n\n  \n\n_Yet easy kata!", "\n\n# Task:\n\n# Task:\n\n_Yet easy kata!_\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n\n\n# Task:\n\n# Task:\n\n\n\n      -\n\n\n\n \n \n\n\n,,\n\n\n\n# Task:\n\n# Task:\n\n\n\n\n_Yet another", "\n\n\n\n#\n\n\n\n\n\n#\n\n\n\n\n#\n\n\n\n_Yet easy kata!_\n\n#\n\n#\n\n\n\n\n\n\n\n   \n\n\n\n\n# Task:\n\n# Task:\n\n \n\n,,,\n\n\n\n\n# Task:\n\n\n\n\n\n_Yet another easy"], "prompt": "\nQUESTION:\n_Yet another easy kata!_\n\n\n# Task:\n  \n  \n  - Let's write a sequence starting with `seq = [0, 1, 2, 2]` in which\n      - 0 and 1 occurs 1 time\n      - 2 occurs 2 time\n  \n  \n  and sequence advances with adding next natural number `seq[natural number]` times so now, 3 appears \n  2 times and so on.\n  \n  ### Input\n   - You are given input `n`  and return nth(0-based) value of this list.\n  \n  \n  let;s take example:\n  \n  seq = [0, 1, 2, 2]\\\n  i = 3 and as seq[i]=2, seq = [0, 1, 2, 2, 3, 3]\\\n  i = 4 and as seq[i]=3, seq = [0, 1, 2, 2, 3, 3, 4, 4, 4]\\\n  i = 5 and as seq[i]=3, seq = [0, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5]\n  and so on.\n  \n  Some elements of list:\n  ```\n[0, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21]\n  ```\n  \n  \n  # Constraint :\n  \n  \n  * Python\n    - 0 <= n <= `$2^{41}$`\n  * Javascript\n    - 0 <= n <= `$2^{49}$`\n  \n  \n  \n\n##### Have fun!\n\n_tip: you can solve this using smart brute-force._\ndef find(n):\n\t\nUse Call-Based format\nANSWER:\n"}}