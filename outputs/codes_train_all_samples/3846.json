{"3846": {"code": ["\n:\n\n\n\n\n\n\nUse Call-Based format\n_\nUse Call-Based format\n\n\n\n\n\nk\n=\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nf(k, n)\n\n\n# Function\n\n\n\n\n\n\n\n\n\n\n_\n\n\n\n\n\n\n\n_This k", "\n:\n\n\n\n\n\n_\nUse Call-Based format\n:\n\n\n\nn\n=\n0\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n_This kata is based on the Euler Problem 546\n\n**Note:**\n\n\n\n\n\n\n\n\n\n\n\n_\n_This kata is", "\n\nUse Call-Based format\n\n\n\n_\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n_\n\n\n\ni\n=\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\nf(k, n):\n\n\n_\n\n\n\n_\n_\n\n\n\n\n\n_This kata", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\ni\n=\n0\n\n\n\u2211\n\nk\n=\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Note:** \n_This kata is based on the function `f`\n\n\n\n\n_\n\n\n\n\n\n\n\n_", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n=0\n\n_This kata is based on a recursive sequence\n\n# Example\n\n\n\n\n\n\n\n\n\nk\n= 0\n\n\n\n\n\n\n# Example\n\n_\n\n\n\n\n\n_\n\n\n\n\n\n\n_\n_", "\n:\n\n\n\nUse Call-Based format\n\n# Use Call-Based format\n\n\n\n\n\n\nk\n=\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nf(k, n) = 1\n\n\n\n# Example\n\n\n\t\n_\n\n\n\n\n_\n\n_\n\n\n\n\n\n_This kata", "\n\nUse Call-Based format\n\n\n\n_\n\nUse Call-Based format\n_\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nk\n=\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n_The kata is based on\n\n\n\n_\n_\n\n\n\n_\n_This", "\n:\n\n\n\n\n\n\n_\n\nUse Call-Based format\n\n# Example\n\ndef f(k, n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n_\n_\n\n\n\n_\n\n_\n\n\n\n\n\n_This kata", "\n\nUse Call-Based format\n# Example\ndef f(k, n):\n:\n\n\n:\n\n\n\n\n\nk\n\n\n\nn\n\n_\n\n\n\n\n\n\ni\n=\n0\n\n\n\n\n\n\n\n\n\n\n\n\n_\n\n\n\n\n\n\n\n_\n\n\n\n\n\n\n\n_This is", "\n_\nUse Call-Based format\n\n\n\n\n\n# Example\n\n\nf(k, n) = f(k, n)\n:\n\n\n\n\n\n\n\n\n\n\n\ni\n=\n0\n\n\ni\n=\n\n\n\n\n\n\n\n_\n_\n\n\t\n_\n\n_\n\n\n\n\n_\n_This", "\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nk\n=\n\n\n\n\n\t\n\n_This kata is based on the recursive sequence\n\n\n\nk\n=\nk\nn\n\n\n\n\n\n\t\n\n\n__\n\n\n\n_\n\n\n\n\n\n\n\n\n\n_This is based", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n_\n\nUse Call-Based format\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\nk\n=\n0\n\n\n\n\n\n\n\n\n\n\nfk(k) =\n\n\n\n\n\n\n_\n\n\n\n\n\n\n\n_This kata is based on the", "\nUse Call-Based format\n\n\n# Example\n\nf(k, n) = f(k, n)\n\n\n\n_\n:\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\t\n\n\n\n\n\n\n\n_\n\n_\n\n\n\n\n_This kata is based on", "\n:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\nk\n=\n\n\n\n\n\n\n\n\n\n\t\n\n# Example\n\nf(k, n) = f(k, n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_This kata is based\n\n\n\n\n\n\n\n_", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n_\n\n\n\n\n\n\n\nk\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n_\n_This function is based on the kata function\n_\nKata\n\n\n\n\n\n\n\n\n\n\n\n_\n_This k", "\nUse Call-Based format_\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\nk\n=\n0\n\nn\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n_\n\n_This kata is based on a function with multiple calls\n\n# Example\n\n\n\n\n\n_\n\n\n\n\n_\n_", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n=\nk\n\n\n\n\n\n\n\n\n\n\t\n_\n\n\n\n\n\n\n# Explanation\n\n\n\n_This kata is based on the Python standard library.\n\n# Example:\n\n\n\n\n\n\n\n\n\n\n\n_\n_This kata is", "\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nk\n=\n\n\n\n\n\n\n\n\n\ni\n=\n0\n\n\n\n\t\n\n\n# Kata\n\n\n\nk\n\n\t\n\n\n_\n\n\n\n\n\n\n# Example\n\n# Example\n\n_\n_\n\n\n\n_\n_", "\nUse Call-Based format_\nUse Call-Based format\n_This function is based on the recursive sequence\n\n\n:\n\n\n\n\n\n\nn\n=\n\n\n\nn\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_\n\n_\n\n\n\n\n\n_\n\n_\n\n\n\n\n\n_\n_This", "\nUse Call-Based format\t\n_\nUse Call-Based format\n\n# Example\n\nf(k, n) = f(k, n)\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n_\n\n\n\n\n\n\n\n_\nKata is based on this function\n\n\n\n\t\n_\n\n\n\n\n_\n"], "prompt": "\nQUESTION:\n_This kata is based on [Project Euler Problem 546](https://projecteuler.net/problem=546)_\n\n# Objective\n\nGiven the recursive sequence \n\nfk(n) =\n\n\n\u2211\n\ni\n=\n0\n\n\nn\n\n\n\nfk(floor(i / k)) where fk(0) = 1\n\nDefine a function `f` that takes arguments `k` and `n` and returns the nth term in the sequence fk\n\n## Examples\n\n`f(2, 3)` = f2(3) = 6\n\n`f(2, 200)` = f2(200) = 7389572\n\n`f(7, 500)` = f7(500) = 74845\n\n`f(1000, 0)` = f1000(0) = 1\n\n\n**Note:** \nNo error checking is needed, `k` ranges from 2 to 100 and `n` ranges between 0 and 500000 (mostly small and medium values with a few large ones)\n\n\nAs always any feedback would be much appreciated\ndef f(k, n):\n\t\nUse Call-Based format\nANSWER:\n"}}