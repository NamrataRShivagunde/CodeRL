{"2763": {"code": ["\n1\n\n\n\nUse Call-Based format\n:\n\nuse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n\n## Example:\n\n# [solEquaStr(n)]\n\n\n\n## Example:\n\n\n:\n\n\n\n\n\n## Examples:\n\n## Examples:", "\n\nuse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nION:\n\nUse Python call-based format\n\n\n\n\n\nION:\n\n```\n\n## Examples:\n\n\n```\n\n\n\n\n```\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nION:\n\n\n\n\n\n\n\n\n\n## Examples:\n\n## Examples:\n\n## Examples:\n\nION:\n\n\n\n\n## Examples:\n\n\n\n``", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n## Examples:\n\n**n**\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n**n**\n\n## Example", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\n# Run-Based format\n\n\n## Example\n\nuse Call-Based format\n\n\n\n\n\n:\n\n\n\n\nION:\n\n\n\n\n:\n\n## Examples:\n\n\n\n\n\n\n#### Examples:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n## Example\n\ndef sol_equaStr(n):\n\t\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\nION:\n\n\n\n:\n\n\n\n\n\n**The documentation**\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n## Example:\n\nsolEquaStr(90005)\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\nION:\n\n\n\n\n:\n\n\n\n\n## Examples:\n\n```\n\nx = 1\ny =", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n## Example:\n\n## Examples:\n\n## Examples:\n\n## Examples:\n\n\n\n## Examples:\n\n## Examples:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nION:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n## Examples:\n\n\n\n```\n\nx = 5", "\n\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\nReturns:\n\n\n:\n\n\n\n\n\n\t\nION:\n\n\n\n\n\n\n\n:\n\n\n\n\n## Examples:\n\n## Examples:\n\n:\n\n## Examples", "\nuse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n## Example:\n\n    solEquaStr(90005)\n\n:\n\n\n\n:\n\tfor n", "\n\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\nUse Call-Based format\n\n# Example:\n\nsolEquaStr(90005)\n\nUse Call-Based format\n\n\n\n:\n\n\n\n:\n*\n\nION:\n\n\n\n\n\n## Examples:\n\n## Examples:\n\n\n\n\n\n\n``", "\n\n\n\ndef sol_equa_str(n):\n\t\nUse Call-Based format\n\n\n:\n\n\n\n\n## Examples:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\t:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n# Examples:\n\n\n\n```\n\nx = [", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n# Testing\n\n\nION:\n\n# Use call-based format\n\n## Example:\n\n# Example:\n\n\n\n\n##", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\n## Examples:\n\n\n:\n\n\n\n\n\t\nION:\n\n\n\n\n## Examples:\n\n:\n\n\n\n\n\n\n\n## Example:\n\n", "\nuse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n## Example:\n\nsolEquaStr(n):\n\t\nUse Call-Based format\n\n\n\nION:\n\n\n\n\n:\n\n\n\n## Examples:\n\n:\n\n##", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n:\n\n\n\n## Example:\n\nsolEquaStr(90005)\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\nx,", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\nuse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\nION:\n\n\n\n## Examples:\n\n## Examples:\n\n\n\n:\n\n\n\n## Examples:\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\nION:\n\nUse Call-Based format\n\n\n\n\n\n# Example:\nsolEquaStr(90005)\n\nION:\n\n\n\n\n\n\n# Example:\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n## Example:\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n## Example:\n\n\n\nx = 2"], "prompt": "\nQUESTION:\nIn mathematics, a [Diophantine equation](https://en.wikipedia.org/wiki/Diophantine_equation) is a polynomial equation, usually with two or more unknowns, such that only the integer solutions are sought or studied.\n\nIn this kata we want to find all integers `x, y` (`x >= 0, y >= 0`) solutions of a diophantine equation of the form:\n#### x^(2) - 4 \\* y^(2) = n\n\n(where the unknowns are `x` and `y`, and `n` is a given positive number)\nin decreasing order of the positive xi. \n\nIf there is no solution return `[]` or `\"[]\" or \"\"`. (See \"RUN SAMPLE TESTS\" for examples of returns).\n\n\n## Examples:\n\n```\nsolEquaStr(90005) --> \"[[45003, 22501], [9003, 4499], [981, 467], [309, 37]]\"\nsolEquaStr(90002) --> \"[]\"\n```\n\n## Hint:\n\nx^(2) - 4 \\* y^(2) = (x - 2\\*y) \\* (x + 2\\*y)\ndef sol_equa(n):\n\t\nUse Call-Based format\nANSWER:\n"}}