{"740": {"code": ["\n\n-----Example Input-----\n10\n11\n\n\n\n\n-----Example Input-----\n20\n10\n\n-----Example Output-----\n20\n\n\n\n\n-\n1 1\n\n-----Example Input-----\n\n\n\n-----Example Input-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n1 4 2 3 4 4", "\n\n\n\n1\n\n4\n\n1\n\n1\n\n\n-----Explanation-----\n\n\n2\n4 3\n2 3\n3 3\n2\n2 1\n4 3\n3 3\n4 4\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n2 4\n\n\n\n2", "\n\n\n1\n3\n4 3\n2 4\n3 4\n4 3\n3 3\n4 4\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n-----Example Input-----\n2\n2\n1\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n4 2\n2 3 4", "\n-----Explanation-----\n\n\n0 0 1 0 0 1 0 0\n0 1 1 1 1 1\n1 1 1 1\n1 1 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n4 2 3 1\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n- $1 \\le N \\", "\n\n\n2\n1 1\n2 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\n-----Subtasks-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 4\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n4\n20\n3\n\n-----Explanation-----\n", "\n-----Input-----\n\n\n\n\n\n\n\n1\n2 1\n1 1\n2 1\n1 1\n1 1\n1\n1 1\n1\n1\n1\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n1\n\n\n\n1\n\n\n-----Explanation-----\n1\n2", "\n\n-----Example Input-----\n10\n20\n2\n\n-----Example Output-----\n\n\n\n\n-----Explanation-----\n\n\n\n1 4\n\n-----Explanation-----\n\n10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n4 2\n\n-----Explanation-----\n\n\n\n\n- N N^2", "\n\n-----Example Input-----\n20\n2\n2\n1\n\n-----Example Output-----\n\n\n\n\n\n\n\n4 4\n1 1\n\n-----Example Input-----\n20\n2\n4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4 1\n\n-----Explanation-----\n\n-----Input-----\n1\n\n\n-----Output-----\n20\n", "\n\n\n4 5 3\n5 5 6\n5 7\n9 4 2 5\n5 5\n\n-----Explanation-----\n\nExample case 1:\n\n\n\n\n\n\n\n\n\n\n\n1 1\n2 2 3\n1 2\n2\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n2 4 2 3 4", "\n\n\n0\n\n\n-----Explanation-----\n\nUsage:\n\n-----Input-----\n\n0\n\n-----Output-----\n\n0\n\n\n\n\n\n\n1\n2\n1\n2\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n20\n3\n\n-----Explanation-----\n\n\n\n- N \\", "\n\n\n\n0  1  0 1 1\n1 0  1 1 1\n\n\n\n\n\n-----Example Input-----\n20\n4\n\n-----Example Input-----\n20\n4\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n-----Explanation-----\n\n\n\n2 ", "\n\n\n1 1 1 2 3 3 4 4 4 4 4 4 4 1 1 1\n\n-----Explanation-----\n\n\n\n\n\n\n2 1 2 2 3 3 2 2\n1 1 1 1 1\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n20\n2\n1\n1\n\n-----Explanation-----\n\n\n\n\n\n- $1", "\n\n\n0 0 0 0 1 0 1 1 1\n\n-----Explanation-----\n\nExample case 0:\n\n-----Example Input-----\n10\n2 1 1\n\n-----Example Input-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n2\n\n-----Explanation-----\n\n\n\n\n2\n10\n", "\n\n\n\n-----Explanation-----\n\nExample case 1: The field has two columns:\n\n-----Example Input-----\n2 4 4 1\n2 4 4 1\n2 4 4 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n2\n4\n2\n20", "\n-----Explanation-----\nExample case 0:\n\n\n\n\n\n\n-----Subtasks-----\n- The field has two or more fields:\n- $1 \\le N \\le M$\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10\n3\n\n3\n10\n5\n\n\n-----Explanation-----\n2 1", "\n\n\n1\n\n-----Explanation-----\n\nExamples:\n\n-----Example Input-----\n20\n20\n\n-----Explanation-----\n\nExample case 1:\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example Input-----\n\n20\n10\n\n\n\n\n\n- N \\le N", "\n-----Explanation-----\n\n1 1\n2 1 1\n3 1 1\n5 1 1 1 1\n\n\n\n\n\n\n20\n20\n20\n20\n10\n\n\n1\n1 1 1\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n-\n1\n\n-----Explanation-----\n\n2 1", "\n\n\n1\n\n1\n\n\n\n1\n2\n3\n3\n1\n2\n2\n3\n5\n5\n5\n5\n5\n2\n\n\n1\n\n2\n\n\n\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n1\n\n-----Explanation-----\n\n\n\n\n- N \\", "\n\n\n\n\n\n\n1\n2\n3\n4 3\n4 1\n2\n3\n4 1\n\n-----Example Input-----\n2\n20\n1\n3\n\n\n1 4\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n-\n\n\n2\n4 1\n\n\n\n2", "\n\n-----Example Input-----\n10\n9\n\n\n\n\n\n\n1\n1\n1\n1\n1\n\n-----Example Input-----\n10\n7\n2\n1 1\n2\n4 1\n1\n\n-----Example Input-----\n20\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n2 3\n\n\n-"], "prompt": "\nQUESTION:\nThere is a field with plants \u2014 a grid with $N$ rows (numbered $1$ through $N$) and $M$ columns (numbered $1$ through $M$); out of its $NM$ cells, $K$ cells contain plants, while the rest contain weeds. Two cells are adjacent if they have a common side.\nYou want to build fences in the field in such a way that the following conditions hold for each cell that contains a plant:\n- it is possible to move from this cell to each adjacent cell containing a plant without crossing any fences\n- it is impossible to move from this cell to any cell containing weeds or to leave the grid without crossing any fences\nThe fences can only be built between cells or on the boundary of the grid, i.e. on the sides of cells. The total length of the built fences is the number of pairs of side-adjacent cells such that there is a fence built on their common side plus the number of sides of cells on the boundary of the grid which have fences built on them. Find the minimum required total length of fences that need to be built.\n\n-----Input-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains three space-separated integers $N$, $M$ and $K$.\n- $K$ lines follow. Each of these lines contains two space-separated integers $r$ and $c$ denoting that the cell in row $r$ and column $c$ contains a plant.\n\n-----Output-----\nFor each test case, print a single line containing one integer \u2014 the minimum required length of fences.\n\n-----Constraints-----\n- $1 \\le T \\le 10$\n- $1 \\le N, M \\le 10^9$\n- $1 \\le K \\le 10^5$\n- $1 \\le r \\le N$\n- $1 \\le c \\le M$\n- the cells containing plants are pairwise distinct\n\n-----Subtasks-----\nSubtask #1 (30 points): $1 \\le N, M \\le 1,000$\nSubtask #2 (70 points): original constraints\n\n-----Example Input-----\n2\n4 4 9\n1 4\n2 1 \n2 2\n2 3\n3 1\n3 3\n4 1\n4 2\n4 3\n4 4 1\n1 1\n\n-----Example Output-----\n20\n4\n\n-----Explanation-----\nExample case 1: The field looks like this ('x' denotes a cell containing a plant, '.' denotes a cell containing weeds):\n...x\nxxx.\nx.x.\nxxx.\n\nAn optimal solution is to build fences around the topmost plant (with length $4$), around the remaining eight plants (with length $12$) and around the hole between them (with length $4$). The total length is $4+12+4 = 20$.\nUse Standard Input format\nANSWER:\n"}}