{"1870": {"code": ["\n\n\u00a0\n\u00a0\nInput: count = [0,1,2,3,4,5,6,7,8,9,10,11]\n\n\u00a0\n\n\n\n\n\n\n\n\n\n:\n\u00a0\n\u00a0\nExample 2:\n\n\n,,0]\n,,]\n,\n\n\n\n\n,0,0,", "\n\n\u00a0\n\n\u00a0\n\nInput: count = [0,1,2,3,4]\n\n\u00a0\n\nInput: count = [0,1,2,3,4]\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\n:\n\n\n\n,],,\n\n\n\n\n\n\n\u00a0,0", "\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nExample 2:\nInput: count = [0,1,3,4]\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n\n\n:\n\u00a0\n\u00a0\n\n\u00a0\n]\n\u00a0]\n,,\n,0]\n\n\n\n\n\n\u00a0,", "\n\n\u00a0\n\u00a0\n\u00a0\nInput: count = [0,1,2,3,4]\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nExample 2:\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\u00a0\n\n\n\n:\n\n\n:]]\n,,\n,\n\n\n\u00a0\n\n,0,", "\n\n\n\u00a0\n\u00a0\nCount:\n\u00a0\n\u00a0\n\nInput: count = [0,1,3,4]\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\n:\n\n\n:,],,\n\n,", "\n\n\u00a0\n\u00a0\n\u00a0\nInput: count = [0,1,3,4]\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nExample 2:\n\n\n\n\n\u00a0\n\n\n\n\n\n\n:\n\n\n\n\n]\n]\n,,0,0\n\n,0\n\n\n\n\n\n,0,", "\n\n\u00a0\n\u00a0\n\n\u00a0\n\n\u00a0\n\u00a0\nCount:\n\u00a0\ncount = [0,1,2,3,4,5,6,7,8]\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n:\n\n\n\n]\n]\n,,\n,\n\n\n\n\n\n0,0,", "\u00a0\n\u00a0\nExample 2:\nInput: count = [1,2,3,4]\n\u00a0\n\n\u00a0\n\u00a0\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\n:\n\n\n\nExample 2:\n\n\u00a0]\n\nExample 2:\n,0]\n,,\n,0\n\n\n\n\n\n0,0,", "\n\u00a0\n\n\u00a0\n\u00a0\nInput: count = [0,1,2,3,4]\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\n\n\n\n:\n\n\n\n]]\n,,0]\n\n\n,0\n\n\n\u00a0\n\n\n0,0,0,0,0,0,0,0,0,0,,0,0,0,,0", "\n\u00a0\n\n\u00a0\nInput: count = [0,1,2,3,4,5,6,7,8,9,10,10,11,12,12,10,12,12,13,14,14,15,15,15,15,15,13]\n\n\n\n\n\n\n\n\n:\n\n\n\n]]\n,,\n\n\n\n\n\n,0,0,0,0,0,0,0,,0,,0,", "\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\u00a0\n\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n:\n\n\n:,]\n,,\n\n\n\n\n\n\n\n\u00a0,", "\u00a0\n\u00a0\nExample 2:\nInput: count = [0,1,3,4]\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\n\n\n\n\n\u00a0\n:\n\n\u00a0\n\n\n\u00a0\nInput:]\n,0]\n,,,\n,0\n\n\n\n\n\n,0,0", "\n\n\u00a0\n\nInput: count = [0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,16,18,18,19]\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\n:\n\n\n:]]\n,,\n\n\n\n\n\n\n\n\u00a0,", "\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nInput: count = [0,255,255,255,255,255,255,255,255,255,255]\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\n:\n\n:\n\n,]\n,,\n,0]\n\n\n\n\n\n,0,0", "\n\n\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nInput: count = [0,1,2,3,4]\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\u00a0\n\n\n\n:\n\n\n:,],,\n\n,,\n\n,0", "\n\u00a0\n\u00a0\n\n\u00a0\nInput: count = [0,1,3,4]\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nExample 2:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n]]\n,,\n\n\n\n\n\u00a0\n\n\n,0,", "\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nInput: count = [0,255,255,0,0,0,255,0,0,0,0,0]\n\u00a0\n\u00a0\n\n\n\n\n\n:\n\n\n\n,],,]\n,\n\n\n,0", "\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\u00a0\nInput: count\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\n:\n\n\n:,],,\n\n,", "\n\n\u00a0\nExample 2:\n\u00a0\n\n\u00a0\nInput: count = [0,1,2,3,4,5,6,7,8,9]\n\u00a0\n\u00a0\n\n\n\u00a0\n\n\n\n:\n\n\n\nInput:]\n]\n,,\n,0,0,0\n\n\n\n\n,0,0", "\n\n\n\n\u00a0\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\n:\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\n\n,,0,0,0]\n\n\u00a0,,0]\n\n\n\n\u00a0\n\n\n\n,0,"], "prompt": "\nQUESTION:\nWe sampled integers between 0 and 255, and stored the results in an array count:\u00a0 count[k] is the number of integers we sampled equal to k.\nReturn the minimum, maximum, mean, median, and mode of the sample respectively, as an array of floating point numbers.\u00a0 The mode is guaranteed to be unique.\n(Recall that the median of a sample is:\n\nThe middle element, if the elements of the sample were sorted and the number of elements is odd;\nThe average of the middle two elements, if the elements of the sample were sorted and the number of elements is even.)\n\n\u00a0\nExample 1:\nInput: count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nOutput: [1.00000,3.00000,2.37500,2.50000,3.00000]\nExample 2:\nInput: count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nOutput: [1.00000,4.00000,2.18182,2.00000,1.00000]\n\n\u00a0\nConstraints:\n\ncount.length == 256\n1 <= sum(count) <= 10^9\nThe mode of the sample that count represents is unique.\nAnswers within 10^-5 of the true value will be accepted as correct.\nclass Solution:\n    def sampleStats(self, count: List[int]) -> List[float]:\n        \nUse Call-Based format\nANSWER:\n"}}