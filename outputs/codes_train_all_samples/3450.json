{"3450": {"code": ["\nUse Call-Based format\n Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\nReturns:\nnull:\nA string\n\nReturns:\n\nA string\n\nReturns:\nnull:\n\n\n\n:\n\n =\n\n::\n\n::\n\n:\n\n\n:\n\n\n\n\nThis is spin off my", "\nUse Call-Based format\n Use Call-Based format\n\n:\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\n\n\t\n\n:\n\n:\n\n\t\n:\n:\n\n\n\n:\n:\n\nUse Call-Based format.\n\n:\n:\n\nA\n\n\n\n\nThis is a spin off my first [", "\n:\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\ndef null(string):\n\t\nreturn a null value\n\nUse Call-Based format\n\nA call-Based format:\n\n\n\n:\n\n:\n\n\t:\n:\n\n::\n\n:\nUse Function-Based format\n:\n\n\n\n\nThis is spin", "\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n:\ndef array(string):\n\t\nUse Call-Based format\n\nA call-Based format:\n\n\n\n:\n\t\n\n\n:\n\n:\n\n\nUse Function-Based format\n\n::.\n\n:\n\n:\n\n\n\n\nThis is a spin off my first", "\nUse Call-Based format\n Use Call-Based format\n\nUse Call-Based format\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\nReturns:\nA string containing a list of the string's items\n\nNOTE:\n\n\n\n:\n\n\n::\n\n::\n\n:\n:\n\n\n\nThis is a spin off my first", "\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\nINPUT:\n\n\n\n:\n\n = []\n\n\n\n:\n:\n\n\n::\n\nUse Call-Based format\n\n:\n\nThis is a spin off my second kata\n:\n\n\nThis", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\ndef null(string):\n\t\nUse Call-Based format\n\nSET:\n\n\n\n:\n\n\n\n:\n:\n\n::\nUse Call-Based format.\n\n:\nThis is a spin off my first kata.\n:\n\n\nThis", "\nUse Call-Based format\n Use Call-Based format\n\nUse Call-Based format\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\n\n\t\n\n\t\n:\n\n:\n\t\n\n\t:\nThis is a spin off my first kata:\n\n::\n\n:\nThis is a spin off\n:\n\n\n\n\t", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\n\n\t\n:\n\n\n\t\n\n\t\n:\n\nThis is a spin off of my first kata\n:\n\n:\n:\nUse Call-Based format\n\n:\n\n:\n\n\n\n\nThis is a spin off off my first [kata", "\nUse Call-Based format\n use Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\ndef array(string):\n\nUse Call-Based format\n\n\n\n:\n\n\n\n:\n:\n\n::\nUse Call-Based format\n\n:\nUse Call-Based format\n:\n\n\n\nThis is a spin off my", "\nUse Call-Based format\n Use Call-Based format\n\n\nUse Call-Based format\n:\n\ndef array(string):\n\t\nUse Call-Based format\nANSWER:\n\n\n\n\n:\n\t\n =\n\t:\n:\n\n\n::\n\n\n\n:\n\nThe function is called with\n\n:\n\n\n\n\n\nThis is a", "\nUse Call-Based format\n call-based format\n\n\nUse Call-Based format\n:\n\ndef null(string):\n\t\nUse Call-Based format\n\nAccurate:\n\n\n\t\n\n\n:\n\n =\n:\n:\n\n::\n\n\n:\n\nThis is a spin off of my first kata\n:\n\n\n\n\nThis", "\nUse Call-Based format\n\nUse Call-Based format\n\n:\n:\n\ndef array(string):\n\t\nUse Call-Based format\nAUD:\n\t\n\n\n\t\n\n:\n\n =\n:\n:\n\n\n\n:\n:\n\n\n\n\n:\n:\n\nThis is a spin off my first kata\n:\n\n\n\t", "\n\n\nUse Call-Based format\n\n\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\nPARAM:\nstring:\n\nUse Call-Based format\nPARAM:\n\n\n\n:\n\n:\n\t\n\n:\n:\n\n\n::\n.\n\n:\nUse Call-Based format\n:\n\n\n\n\nThe spin off", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\ndef null(string):\n\t\nUse Call-Based format\n\n\n\n:\n\n\n\t\n\n\t\n:\n:\n\n\n:\nUse Call-Based format:\n\n\n:\n\nNOTE:\n:\n\nRETURN:\n\n\nThis is a spin off my first [", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\ndef array(string):\n\t\nUse Call-Based format\nANALYSIS:\n\n\n\t\n\n:\n\n:\n\t\n\n:\nThis is a spin off of my first kata\n:\n\n:\n:\n\n:\nThis is a spin off\n:\n\n\n\n\tThis", "\nUse Call-Based format\n call-based format\n\n\nUse Call-Based format\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\nReturns:\nA string\n\nReturns:\nA string\n\nExample:\n\n\n\t\n\n:\n\n\n\n::\n\n::\n\n:\nThis is my:\n\n\n\nThis is", "\nUse Call-Based format\n use Call-Based format\n\n\nUse Call-Based format\n:\n\ndef null(string):\n\t\nReturn a null value\n\nAnswer:\n\n\n\n:\n\n\n\n\t:\nThis is a spin off off my first first kata:\n\n::\n\n:\n:\n\n\n\nThis is spin off my first [k", "\t\nUse Call-Based format\t\n first call-based format\n\n:\nUse Call-Based format:\nreturn function(string):\n\n\ndef array(string):\n\t\nUse Call-Based format\n\n\n\n:\n\n =\n:\n:\n\n::\n\n:\nUse Call-Based format\nRETURN:\n:\n\n\n\n\nThis is a spin", "\nUse Call-Based format\n use Call-Based format\n\nUse Call-Based format\n:\n\ndef array(string):\n\t\nUse Call-Based format\n\nA call-Based format:\n\n\n\n:\n\n\n\t:\n:\n\n:\nUse Call-Based format:\n\n:\n\n:\n\n\n\nThis is a spin off my first [k"], "prompt": "\nQUESTION:\nThis is a spin off of my first [kata](http://www.codewars.com/kata/56bc28ad5bdaeb48760009b0). You are given a list of character sequences as a comma separated string. Write a function which returns another string containing all the character sequences except the first and the last ones, separated by spaces. If the input string is empty, or the removal of the first and last items would cause the string to be empty, return a null value.\ndef array(string):\n\t\nUse Call-Based format\nANSWER:\n"}}