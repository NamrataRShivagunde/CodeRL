{"4144": {"code": ["\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n>>>\nabundant(h)\n\nUse Call-Based format\n\n>>>\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\nTips:\n----\n\nThe problem is a call-Based format\n\n\n``", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nCall-Based format\n----\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe data\n----\n\n    h         = [10, 20, 20, 20, 10, 20, 20, 30, 30]\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n    A function with a single argument\n\n    abundant(h):\n\t\n\t\n\n    A function with an array or list\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```formal", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\nUse Call-Based format\n\n\n\n\n\n\n\t\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nA number theory, an  **[abundant](https://en.wikipedia.org/wiki/Abundant_number)** number or an", "\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n------\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nJust a few examples:\n\n```\n\n\n## Abundant numbers\n\n\n---\n\n## Abundant numbers\n\n#", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nCall-Based format\n----\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n    This is a function call-based format\n\n    Abundant(h):    \n\n    \n\n\n\n\n\n\n\n\n\n    Abundant:\n    [12", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nabundant(h)\n\n\n\n\n    \n\n\n\n\n\n\n\n\ndef abundant(h):\n\t\nUse Call-Based format\n\n---\n\ndef excessive(h)\n\n---\n\nabundant(h)\n\n---\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n*\n\n\n* The input argument is not an array or list\n*\n\n* The input argument is an array or list\n\n* The input argument is an array\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Example\n\nabundant(h):\n\n\nUse Call-Based format\n\n### Abundant numbers\n\n###\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n# Abundant number\n#\nabundant(12) = [[12], [12]]    \n\n", "\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Abundant\n\n# Abundant\n\n\nA number theory\n\n## Abundant\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n---\n\n\n\n\n```\n\n\n```\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n  * This is a valid input\n  * It's a valid input\n  * It's an abundant number\n\n\n\n\n\n\n\n\n\n\t\nTips\n----\n\nThe problem is not call-Based format\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nA lot of examples:\n\n```\n\nA little number theory, a number theory, a number theory, a number theory\n\n```\n\n\n", "\n\n\n\n\n\n\n\n\n    Abundant number\n\n    Pre-Call-Based format\n\n    Call-Based format\n\n    Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>>\ndef abundant(h):\n\n>>>\n\n\n\n>>>\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nUse Call-Based format\n--------\n\nAbundant number with no calls\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\nh = [4096", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n----\nThe problem is call-based format\n\n\n\n\n\n\nUse Call-Based format\n----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n---\n\n\n\nA number theory\n--------\n\n\n\n```python", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nin number theory, an  **[abundant](https://en.wikipedia.org/wiki/Abundant_number)** number or an\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1. * A good luck!    \n2. * A good luck!\n3. * A good luck!    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n---\n\n\n## Abundant numbers", "\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Abundant\n\nabundant(15) = [[15], [10]]\nabundant(10) = [[10]]\n\n## Abundant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```h`\n\n# Abundant number in range", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nabundant(100) = [[100], [100]]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe problem is really much better than this example.\n\n\n\n\n\n\n\n\n```\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n--------\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n-----\n\n\nThe function abundant\n\n-----\n\ndef abundant(h):\n\t\n\n\t"], "prompt": "\nQUESTION:\nIn number theory, an  **[abundant](https://en.wikipedia.org/wiki/Abundant_number)** number or an **[excessive](https://en.wikipedia.org/wiki/Abundant_number)** number is one for which the sum of it's **[proper divisors](http://mathworld.wolfram.com/ProperDivisor.html)** is greater than the number itself.  The integer **12** is the first abundant number. Its proper divisors are 1, 2, 3, 4 and 6 for a total of **16**. The amount by which the sum exceeds the number is the **abundance**. The number **12** has an abundance of **4**, for example. Other initial abundant numbers are : 12, 18, 20, 24, 30, 36, 40, 42, 48, 54 etc . **Infinitely** many **odd** and **even** abundant numbers exist.    \nAs you should have guessed by now, in this kata your function will take a positive integer **h** as range input and return a nested array/list that will contain the following informations-    \n\n* Highest available **odd** or **even** abundant number in that range\n* It's **abundance**    \n\nExamples\n--------\nA few examples never hurt nobody, right???    \n\n```rust   \nabundant(15)  = [[12], [4]]\nabundant(19)  = [[18], [3]]\nabundant(100) = [[100], [17]]\nabundant(999) = [[996], [360]]\n```\n\nTips\n----\nThe problem involves some pretty big random numbers. So try to optimize your code for performance as far as you can. And yes, the input argument will always be positive integers. So no need to check there.\n\nGood luck!\ndef abundant(h):\n\t\nUse Call-Based format\nANSWER:\n"}}