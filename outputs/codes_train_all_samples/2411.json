{"2411": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nThe third maximum number in a list of integers is returned.\n\nUse Call-Based format\n\n\n\n\n                  \n\n   \n\n\n\n\nUse Call-Based format\n\nGiven a non-empty array of integers\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n   \n    \"\"\"\n\n\n\n\n\n\nGiven an empty array of integers, return the third maximum number in this array.\n\n\n\n\n\nGiven an empty array of integers\n\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nThe third maximum number is the third maximum number in this array.\n\n\n\n   \n\nUse Call-Based format\n\n\n\nExample 4:\n\n   \n\n\n\n\n   \n\n\n\n\n\n\nGiven an array of integers, return the third maximum number in this array\n\n\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nThe third maximum is 2\n\n\nExample 4:\n\nInput: [1, 2]\n\nOutput: 1\n\n\n\n\n\n\n         \n\n\n\n\n\n\n\n\n\nGiven an array of integers:\n\n\nGiven a non", "\nUse Call-Based format\n\n   \n    thirdMax(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a non-empty array of integers, return the third maximum number in this array\n      \n\n\n\n\n\n\nGiven a non-empty array of integers\n\nGiven", "\nUse Call-Based format\n\n       pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n           \n\n\n\n\n\n\nGiven an array of integers, return the third maximum number in this array\n\n\n\n\nGiven an array of integers\n\n\n\nGiven a non", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nThe third maximum is a distinct number.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\nGiven a non-empty array of integers, return the third maximum number in this array.\n       \n\n\n\n\n\n\n\n\nGiven a non-empty array of", "\nUse Call-Based format\n\nUse Call-Based format\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n    pass\n\nGiven an array of integers, return the third maximum number in this array.\nGiven an array of integers, return the third maximum number in this array.\n   \n\n\n\n\n\n\n\n\n\nGiven an empty array of integers, return", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a non-empty array of integers, return the third maximum number in this array\n\n   \n\n\n\n\nGiven a non-empty array of integers, return the third maximum number in this array\n\n\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    def thirdMax(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n        \n\n\n   \n        \n\n\n\n\n\nGiven an array of integers:\n\n\n\n\nGiven a non-", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nThe third maximum number is returned as the third maximum distinct number.\n\nUse Call-Based format\n\n\n\n\n       \n\n\n\n\nUse Call-Based format\n\n   \n\n\nGiven an array of integers:\n\nExample\nGiven a non", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nThe third maximum is 1.\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers, return the third maximum number\n\n\n\n\nGiven a non", "Use Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \"\"\"\n\nGiven an empty array of integers, return the third maximum number in this array.\n\n   \n\n\n\n\n\nGiven a non-empty array of integers:\n\n1\n\nExample 4:\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    def thirdMax(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n       \nUse Call-Based format\n\n   \n\n\n\n\n\n\nGiven an array of integers, return the third maximum number\n\n\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n   \n    pass\n    \nUse Call-Based format\nGiven an empty array of integers, return the third maximum number in this array\n   \n\n\n\n\n\n\n\n\n\nGiven a non-empty array ofGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe third maximum is 2.\n\nUse Call-Based format\n\n\nUse Python-Based format\n\n\n\nExample 4:\n\n   \n    pass\n\n\n\n\n\n\n\n\n\nGiven an array of integers, return the third maximum number in this array.\n\n\n\n\nGiven an array of integers", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \"\"\"\n\nUse Call-Based format\nGiven an array of integers, return the third maximum number in this array\n      \n\n\n\n\n\n\n\nGiven an array of integers,\n\n\n\nGiven a non", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \nUse Call-Based format\nGiven an array of integers, return the third maximum number in this array\n      \n\n\n\n\n\n\nGiven an empty array of integers:\n\n\n\nGiven a non-empty", "\nUse Call-Based format\n\nUse Call-Based format\n    pass\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nExample 4:\n\n   \n\nGiven a non-empty array of integers, return the third maximum number in this array\n         \n\n\n\n\n\n\n\n\nGiven an array of integers, return the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    thirdMax(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n           \nGiven an empty array of integers, return the third maximum number in this array\n                  \n\n\n\n\n\n\nGiven an array of integers, return the"], "prompt": "\nQUESTION:\nGiven a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).\n\nExample 1:\n\nInput: [3, 2, 1]\n\nOutput: 1\n\nExplanation: The third maximum is 1.\n\n\n\nExample 2:\n\nInput: [1, 2]\n\nOutput: 2\n\nExplanation: The third maximum does not exist, so the maximum (2) is returned instead.\n\n\n\nExample 3:\n\nInput: [2, 2, 3, 1]\n\nOutput: 1\n\nExplanation: Note that the third maximum here means the third maximum distinct number.\nBoth numbers with value 2 are both considered as second maximum.\nclass Solution:\n    def thirdMax(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}