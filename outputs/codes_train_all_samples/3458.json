{"3458": {"code": ["::\n\nUse Call-Based format\n:\n\n\n:\n:\n\n\n\n:\n\nCreate a function that accepts rows x columns as parameters\nUse Call-Based format:\n\nUse Call-Based format**\n\n\n\nUse Call-Based format\n:**\n\n\n\n\nUse Call-Based format\n:\n\n\n:\nCreate a function that accepts dimensions,", "::\nUse Call-Based format\n\n:\n:\nUse Call-Based format\n\n\n:\n:\n\n\n\n\n:\n\n\nUse Python 3 format:\n\nUse Python 2 format**\n\n1       2       3       \n2       4       6       \n\n::**\n\n:\n:\n\n\n:\nCreate a function that accepts dimensions, of Rows", "::\n\n\n:\n:\n\n\n\n\n\n:\n\n\n\n\n:\n\nCreate a function that accepts dimensions, of Rows x Columns as parameters\nUse Call-Based format:\n\nUse Call-Based format**\n\n\n\n\nUse Function-Based format:**\n\n\n\n\n:\n\n\n:\nCreate a function that accepts dimensions, of Rows x Columns", ":\nUse Call-Based format:\n\n\nUse Call-Based format:\n:\n\n\n\n:\n:\n\n\n\n:\n:\n\nUse Call-Based format**\n\nReturns:\n\nmultiplication_table(row,col)\n\n\n:\n:**\n\n\n\n\n\n:\n\n\n\n\n:\n\nCreate a function that accepts dimensions,", "::\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n:\n\n\n\n:\n\n\n:\n\n\nUse Call-Based format**\n\n-->[[1,2,3],[2,4,6],[3,6]]\n\n:\n:**\n\n:\n\n\n:\n\n\n:\n\n\t\nCreate a function", "::\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n:\n\n\n:\n**\n\n\n\n\nUse Function-Based format\n:\n\n**\n\nReturns:\nTable\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nCreate a function that accepts Rows x Columns\n\n\n\n\n:\n\nCreate", "::\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n:\n:\n\n       \n\n:\n:\n\n**\n\nThe number of columns must be Fixnums\n\n\n\nUse Call-Based format\n:\n**\n\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n:\nCreate a function that accepts dimensions,", "::\nUse Call-Based format\n\nUse Call-Based format::\n\n\n:\n:\n\n       \n\n:\n:\n\nUse Function-Based format**\n\n\nUse Call-Based format\nUse Call-Based format:**\n\n\n\n\nUse Call-Based format\nCreate a function that accepts rows x Columns as parameters\n:\n\n\n:\nCreate a", "::\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\nUse Python-based format:\n:\n\nUse Function-Based format**\n\n\nUse Call-Based format\n\nUse Call-Based format:**\n\n\n\nUse Call-Based format\nCreate a function that accepts Row x Columns\n:\n\n\n:\n", "::\nUse Call-Based format\n\nUse Call-Based format:\n:\n\n\n:\n:\n\n\n\n:\n:\n\nUse Function-Based format**\n\nif all parameters are Fixnums, all rows and columns must be Fixnums\n\n\n:\n**\n\n\n\n\n\nUse Function-Based format\n\n\n\n:\n\nCreate a function that accepts", ":\nUse Call-Based format:\n\n\n:\n:\nUse Call-Based format\n\n\n:\n:\n\n\n\n:\n:\n**\n\nrow,col:\n# Rows x Columns\ncol:\n# Rows x Rows\n\n\n::\n\nUse Call-Based format**\n\n\n\n:\n\n\n\n:\n\nCreate a function that accepts dimensions", "::\nUse Call-Based format\n\n:\n:\n\n\n\n:\n:\n\n\n\n\n\nUse Python3 format:\n:\n\n\nUse Python3 format**\n\n\n\nUse Call-Based format\n\nUse Function-Based format:**\n\n\n\n\n\n\nmultiplication_table(rows,columns)\n\n:\n\n\n:\n\nCreate", "::\nUse Call-Based format\n\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n:\n:\n\n\n**\n\n--> 1 2 3\n\n--> 2 4 6 9\n\n-->\n\n:**\n\n\n\nUse Call-Based format\n:\n\n\n\n:\nCreate a function that accepts dimensions, of Rows x Columns", "::\n\n\nUse Call-Based format\n:\n\n\n:\n:\n\n\n\n:\n\n\n\n\n:\n**\n\nRow x Column:\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format:**\n\n\n\n\n\n:\n\n\n:\nCreate a function that accepts dimensions, of Rows x Columns", "::\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n:\n:\n\n\n\n:\n:\n\n\nUse Call-Based format**\n\nexample:\n\ndef multiplication_table(row,col)\n\nUse Call-Based format\n\n\n:**\n\n\n\n\n\n:\n\n\n:\nCreate a function that accepts dimensions,", ":\n:\n\n\nUse Call-Based format:\n:\n\n\n\n:\n:\n\n\n\n:\n\n:\n\n\nUse Python-based format**\n\n\n\nUse Call-Based format\nUse Call-Based format:**\n\n\n\n\n\nCreate a function that accepts Rows x Columns x rows x columns as parameters\n:\n\n\n\n:\nCreate a", ":\n:\n\n\nUse Call-Based format:\n:\n\n\n:\n:\n\n\n\n\nUse Python format:\n\n:\n\nUse Python call-based format**\n\n\nUse Call-Based format\n\nUse Call-Based format:**\n\n\n\n\nUse Call-Based format\n:\n\n\n:\nCreate a function that accepts dimensions, of Rows x", "::\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n:\n\n:\n\n\nUse Function-Based format**\n\n\nUse Call-Based format\n\nUse Call-Based format:**\n\ndef multiplication_table(row,col):\n\t\nUse Call-Based format\n\n\n\n\n\n:\nCreate a function that accepts dimensions", ":\nUse Call-Based format:\n\n\n:\nUse Call-Based format\n\n\n:\n:\n\n\n\n:\n\n:\n**\n\n\n\nUse Call-Based format\n\nUse Call-Based format:\n\nUse Call-Based format**\n\n\nmultiplication_table(row,col)\n\n:\n\n:\n\n\n:\n\nCreate a", "::\n\nUse Call-Based format\n:\n\n\n\n:\n:\n\n\n\n\n:\n\n:\n\nUse Call-Based format**\n\nexample:\n\nfunction(rows,cols)\n\nUse Call-Based format\n\n\n\nUse Call-Based format:**\n\n\n\n\n:\n\n\n\n:\nCreate a function that accepts dimensions, of"], "prompt": "\nQUESTION:\nCreate a function that accepts dimensions, of Rows x Columns, as parameters in order to create a multiplication table sized according to the given dimensions.  **The return value of the function must be an array, and the numbers must be Fixnums, NOT strings.\n\nExample:\n\nmultiplication_table(3,3)\n\n1       2       3       \n2       4       6       \n3       6       9\n\n-->[[1,2,3],[2,4,6],[3,6,9]]\n\nEach value on the table should be equal to the value of multiplying the number in its first row times the number in its first column.\ndef multiplication_table(row,col):\n\t\nUse Call-Based format\nANSWER:\n"}}