{"3754": {"code": ["# Task\nUse Call-Based format# Task\n[task]` integer `n`\n\nUse Call-Based format\n\n# Task\n\n# Task\n\n\n\n\n# Task\n# Task\n\n\n\n\t\n# Task\n# Task\n\n\n\t\n\n\t\n\n# Task\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n# Task", "\n# Example\n\nuse Call-Based format\n# Task\n\n[task]` integer `n`\n\n\n# Task\n\n# Task\n\n\n# Output\n\n\n\n# Task\n# Task\n\n\n\t\n# Task\n# Task\n1\n\n\t\n\n\t\n\n\n\n\n\n# Example\n\n\n# Task\n\n# Task\n\n\n#", "\n# Example\n\n# Call-Based format\n\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\t\n# Task\n# Task\n\n\n\t\n\n\t\n\n# Task\n\n\n\n# Output\n\n# Output\n# Task\n# Task\n\n\n\n## Task\n", "\n# Task\nUse Call-Based format\n# Task\n\nOutput\n\n# Example\n\n# Task\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n\n\n\n\n# Task\n\n\n\n\t\n# Task\n# Task\n\n\t\n\n# Task\n\n\n\n# Task\n# Task\n\n\n# Task\n# Task\nWe", "# Example\n\nUse Call-Based format\n# Example\n\n\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n0 \u2264 n \u2264 100000\n\n\n\n\n# Task\n# Task\n\n\n\n\t\n# Task\n# Task\n\n\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n# Task\n", "\n# Use Call-Based format\n# Task\n[task]` integer `n`\n\nUse Call-Based format\n# Task\n# Task\n# Task\n\n\n\n\n\n\n# Task\n# Task\n\n\n\n\n# Task\n# Task\n\n\t\n\n\n# Task\n\n\n\n# Example\n\n\n# Task\n\n# Task\n\n\n\n#", "# Example\n\nUse Call-Based format\n# Task\n\n\n\n\n# Task\n\n# Task\nn\n\n# Example\n\n# Task\n\n\n\n\n\n\n# Task\n\t\n\n\n\n\t\n# Task\n\n# Task\n\t\n\n\n# Task\n\n\n\n\n\n# Task\n# Task\n\n\n\n# Task\n\n# Task\n", "\n# Task\n# Task\n# Task# Task\n# Task\n\n# Task\n# Task\n# Task\n\n\n\n\n\n\n# Output\n\n# Example\n\n\n\n\n\n\n\n# Task\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n# Task\n\n\n# Task\n\n", "\n\n# Example\n\n\nUse Call-Based format\n\n# Task\n# Task\nn = 1\n\n# Example\n\n\n\n\n# Example\n\n# Task\nn = 100\n\n# Example\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\n# Task\n\n\n\n# Example\n\n\n# Task\n\n\n# Task\n# Task", "\n# Task\n\t\n\n\n# Example\n\n# Task\n\n\t\n\n# Task\n\n\n# Task\nn\n\n# Example\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\n\n\n\n\n# Example\n\n\n# Task\n# Task\n\n\n\n#\n# Task", "\n# Example\n\n[output] = prime_product(n)\n\nUse Call-Based format\n\n\n\n\n# Task\n# Task\n\n\n# Output\n\n\n# Task\n# Task\n[output]\n\n\n\t\n# Task\n# Task\n\n\n\n\n# Task\n\n\n\n# Example\n\n# Task\n\n# Task\n\n\n# Task", "\n# Task\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n# Task\n\n# Task\nn\n\n# Example\n\n\n#\n\n\n\n# Task\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n\t\n\n\n\n\n\n# Example\n\n\n# Task\n# Task\n\n\n\n## Task", "\n# Example\n\n# Task\n\nUse Call-Based format\n\n\n\n\n# Task\n\n# Task\n\n# Example\n\nWe know that some numbers can not split into two primes\n\n\n\n\n\n\n# Task\n\n\n\n\n\t\n# Task\n\n\n\n\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n# Task\n", "\n# Example\n\nUse Call-Based format\nUse Call-Based format# Task\n[task]` integer `n`\n\n\n\n# Task\n\n\n# Task\n\n\n# Task\n# Task\n\n\n\t\n# Task\n# Task\n\n\n\t\n\n\t\n# Task\n\n\n\n# Example\n\n\n# Task\n\n#\n\n## Task", "# Task\n# Example\n\n# Call-Based format\n\n\n\n# Example\n# Task\n0 \u2264 n \u2264 100000\n\n# Example\n\n\n\n# Task\n# Task\n\n\n\n\n\t\n# Task\n# Task\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n# Task\n\n# Task\n\n\n# Task", "\n# Call-Based format# Task\n[task]` integer `n`\n\nUse Call-Based format\n\n\n# Task\n\n# Task\n\n\n\n\n\n\n\n# Task\n# Task\n\n\n\t\n# Task\n# Task\n\n\n\t\n\n\n\n\n\n\n\n\n# Task\n\n# Task\n# Task\n\n\n## Task\n", "# Use Call-Based format\n# Task\n\n[task]` integer `n`\n\n\n# Task\n# Task\n\n# Task\n\n[task]` integer `n`\n\n\n\n\n# Task\n\n\n\n\t\n# Task\n# Task\n\t\n\n\n# Task\n\n\n\n# Task\n# Task\n\n\n# Task\n# Task\nWe", "\n# Example\n\n# Task\n1 \u2264 n \u2264 100000\n# Task:\n# Task\n\n\n\n# Task\n\n\n\n# Output\n\n\n\n# Task\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\t\n\n\n# Task\n\n\n\n# Example\n\n\n# Task\n\n#\n\n#\n#", "# Example\n\nUse Call-Based format\n# Task\n[task]` integer `n`\n\nUse Call-Based format\n\n# Task\n# Task\n\n\n# Output\n\n\n\n# Task\n\n# Task\n\n\n# Task\n# Task\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n#", "\n# Example\n\nUse Call-Based format\n# Example\n\n\n\n\n\n\n# Task\n# Task\n\n\n\n\n\n\n\n# Task\n# Task\n\n\n\n\n\t\n# Task\n# Task\n5, 10\n# Task\n\n\n# Task\n\n# Task\n\n\n\n# Example\n\n# Task\n# Task\n\n\n## Task"], "prompt": "\nQUESTION:\n# Task\nWe know that some numbers can be split into two primes. ie. `5 = 2 + 3, 10 = 3 + 7`. But some numbers are not. ie. `17, 27, 35`, etc.. \n\nGiven a positive integer `n`. Determine whether it can be split into two primes. If yes, return the maximum product of two primes. If not, return `0` instead.\n\n# Input/Output\n\n`[input]` integer `n`\n\nA positive integer. \n\n`0 \u2264 n \u2264 100000`\n\n`[output]` an integer\n\nThe possible maximum product of two primes. or return `0` if it's impossible split into two primes.\n\n# Example\n\nFor `n = 1`, the output should be `0`.\n\n`1` can not split into two primes\n\nFor `n = 4`, the output should be `4`.\n\n`4` can split into two primes `2 and 2`. `2 x 2 = 4`\n\nFor `n = 20`, the output should be `91`.\n\n`20` can split into two primes `7 and 13` or `3 and 17`. The maximum product is `7 x 13 = 91`\ndef prime_product(n):\n\t\nUse Call-Based format\nANSWER:\n"}}