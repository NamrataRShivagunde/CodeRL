{"4611": {"code": ["\n#Name\n\n\n#Example\n\n#Task\n\n#Animal\n\n#Animal\n\n#Animal\n\n#Animal\n\n#Animal\n\n\n\n\n\n\n\n\n\n#Description\n\n\n\n\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Test\n\n#Test\n\n\n\n#Description\n\n", "\n#Name\n#Notes\n\n#Task\n\n\n\n\n\n\n#Task\n\n#Note\n\n\n\n#Description\n\n#Note\n\n\n\n#Notes\n\n#Description\n\n#Notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Description\n\n\n\n\n\n\n#Description\n\n#Notes\n\n##", "\n#Name\n\n#Example\n\n#Task\n\n#Example\n\n\n\n\n\n\n\n#Notes\n\n#Task\n\n\n\n\n#Notes\n\n#Description\n\n\n\n#Note\n\n\n\n#Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n\n\n\n\n#Example\n\n\n#Description\n\n##", "\n#Example\n\n\n\n#Task\n\n#Example\n\n#Notes\n\n#Task\n\n#Example\n\n#Example\n\n\n\n\n\n\n\n#Example\n#Description\n\n#Example\n\n`\n\n\n\n\n\n\n\n#Example\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n#Description\n\n##Animal\n", "\n#Title\n\n#Description\n\n#Task\n\n#Task\n\n\n\n\n\n\n\n\n#Task\n\n#Description\n\n#Task\n\n#Task\n\n\n\n#Description\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Description\n\n#Task\n\n\n\n\n#Description\n\n#Description\n\nIf you are", "\n#Task\n\n#Description\n\n#Task\n\n\n#Task\n\n\n\n#Task\n\n\n\n\n\n\n#Description\n\n#Task\n\n#Description\n\n\n#Description\n\n\n\n\n\n#Description\n\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Description\n\n\n#Description\n\n##Notes\n", "\n#Example\n\n#Data\n#Task\n\n#Example\n\n\n\n\n#Details\n\n\n\n\n\n\n#Task\n\n#Description\n\nNo examples of your animal\n\n#Examples\n\n\n#Description\n\n\n\n\n\n#Description\n\n\n\n\n\n\n\n\n#Example\n\n\n\n\n#Example\n\n#Description\n\n\n#", "\n#Name\n\n#Type\n\n#Type\n\n\n\n\n\n\n\n#Usage\n\n#Example\n\n#Type\n\n#Example\n\n#Example\n\n#Type\n\n\n\n\n\n\n\n\n\n\n#Details\n\n\n\n\n\n\n\n\n\n\n#Revenue\n\n\n\n\n\n\n#Answer\n\n\n#Description\n\n#", "\n#Task\n\n#Example\n\n#Task\n\n#Example\n\n\n\n\n\n\n\n\n\n\n#Example\n\n#Example\n\n#Example:\n\n#Example\n#Example\n\n\n\n\n\n#Summary\n\n\n#Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n\n\n#Description\n\n##", "\n#Task\n\nUse Call-Based format\n\n\n\n\n#Task\n\n\n\n\n\n\n#Description\n\n#Task\n\n#Task\n\n\n\n#Description\n\n\n\n\n\n\t\n#Task\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n\n\n\n#Example\n\n\n\n#Description\n\n", "\n#Title\n\n#Task\n\n#Example\n\n#Animal\n\n#Task\n\n#Example\n\n\n\n\n\n\n\n\n\n\n\n#Data\n\n#Description\n\n\n\n\n\n\n#Example\n\n#Example\n\n\n\n\n\n\n\n\n\n\n\n\n#Data\n\n\n\n\n\n\n#Task\n\n#Description\n\n", "\n#Name\n\n#Notes\n#Description\n\n\n#Task\n\n\n\n\n#Task\n\n#Notes\n\n#Parameters\n\n#Example\n\n#Animal\n\n#Notes\n\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n\n\n\n\n\n#Description\n\n#Example\n\n##Animal", "\n#Name\n\n#Notes\n\n#Usage\n\n\n\n\n#Example\n\n\n\n#Example\n\n#Task\n\n#Example\n\n#Notes\n\n\n\n\n#Example\n\n#Description\n\n\n\n#Example\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n\n\n\n#Examples\n\n\n\n\n#Description\n\n#", "\n#Usage\n\n#Task\n\n\n\n\n#Description\n\n\n#Task\n\n#Description\n\nUse Call-Based format\n\n\n\n#Description\n#Description\n\n#Task\n\n\n\n\n\n#Task\n\n#Description\n\n\n\n\n\n\n\n\n\n\n#Description\n\n#Description\n\n#Task\n\n#Description\n\n\n\n#", "\n#Name\n\n#Task\n\n#Notes\n\n#Usage\n\n\n\n\n\n\n\n\n\n\n\n#Notes\n\n#Note\n\n#Example\n\n#Description\n\n\n\n\n\n#Examples\n\n#Example\n\n#Notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Notes\n\n\n\n\n#Description\n\n##Data", "\n#Name\n\n#Type\n\n#Type\n\n#Description\n\n#Type\n\n#Type\n\n#Type\n\n#Type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n#Description\n\n\n\n#", "\n#Task\n\n#Test\n\n\n\n\n#Task\n\n#Test\n\n\n\n\n\n\n#Description\n\n#Test\n\n#Test\n\n#Example\n\n#Example\n\n#Examples\n\n#Examples\n\n#Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n#Description\n\n", "\n#Example\n\n#Task\n\n\n\n\n\n\n#Data\n\n#Note\n\n\n\n#Description\n\n#Data\n\n#Example\n\n#Note\n\n#Note\n\n\n#Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\n\n\n#Example\n\n#Description\n\n\n\n#Description\n\n", "\n#Name\n#Description\n\n#Task\n\n\n\n\n#Task\n\n\n\n#Task\n\n#Description\n\n#Task\n\n\n\n#Description\n\n#Description\n\n\n\n\n#Description\n\n#Description\n\n\n\n\n\n\n\n\n#Example\n\n#Example\n\n\n\n#Example\n\n\n\n\n\n\n\n#Description\n\n", "\n#Title\n\nA farm has a bug in the API.\n\n\n\n\n#Example\n\n#Description\n\n\n\n\n\n#Data\n\n#Task\n\n#Description\n\n\n#Description\n\n\n\n\n\n#Description\n\n\n\n\n\n\n\n\n\n#Description\n\n#Description\n\n\n\n\n#Data\n\n\n#Description\n\n"], "prompt": "\nQUESTION:\n#Description\n\nEverybody has probably heard of the animal heads and legs problem from the earlier years at school. It goes:\n\n```\u201cA farm contains chickens and cows. There are x heads and y legs. How many chickens and cows are there?\u201d ```\n\nWhere x <= 1000 and y <=1000\n\n#Task\n\nAssuming there are no other types of animals, work out how many of each animal are there. \n\n```Return a tuple in Python - (chickens, cows) and an array list - [chickens, cows]/{chickens, cows} in all other languages```\n\nIf either the heads & legs is negative, the result of your calculation is negative or the calculation is a float return \"No solutions\" (no valid cases).\n\nIn the form:\n```python\n(Heads, Legs) = (72, 200)\n\nVALID - (72, 200) =>             (44 , 28) \n                             (Chickens, Cows)\n\nINVALID - (72, 201) => \"No solutions\"\n```\n\nHowever, ```if 0 heads and 0 legs are given always return [0, 0]``` since zero heads must give zero animals.\n\nThere are many different ways to solve this, but they all give the same answer.\n\nYou will only be given integers types - however negative values (edge cases) will be given. \n\nHappy coding!\ndef animals(heads, legs):\n\t\nUse Call-Based format\nANSWER:\n"}}