{"2686": {"code": ["\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\t\n\t\nUse Call-Based format:\n:\n\n\n\n:\n\n\n\n\n```\n\nUse Call-Based format\n```\n\nExample:\n\n:\n\n\n\n:\n\n**QUESTION:", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n\t\n:\n:\n\n\n\n:\n\n\n\nUse Call-Based format\n1. removes every letter with every letter following it in alphabet, and replaces every letter with every letter following it in alphabet\n2.:\n\n:", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n:\n:\n\n\n\n:\nUse Call-Based format\n\n\n\n\n1. creates a function that takes a string as parameter\n2. creates a function that takes a string\n\n\n:", "\n:\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n:\n\n\n\n:\n:\n\n\n\n:\nUse Function-Based format\n\n\n\nUse Call-Based format\n\n1. replaces every letter with every letter following it in alphabet\n2.:\n\n\n:\n\n", "\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\t\n:\n\n\n\n\n\n\t\n:\n:\n\n\n\n\n:\n\n\n\t\nUse Call-Based format\n\n1. replaces every letter with every letter following it in alphabet\n2. makes every consonants uppercase\n", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\nUse Call-Based format\n\nENTER:\n\n:\n\n\n\n\t\n:\n:\n\n\n\n:\n\n\n\n\n\n1. creates a new function that takes a string as parameter\n\n2.\n\n\n:\n", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\nCreate a function that takes a string as", "\nUse Call-Based format:\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n1. takes every letter in the string, and returns the string\n:\n\n\n:\n", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n\n\n:\n\n\n\n\t\nUse Call-Based format\n\nSTRING:\n\n:\n\n\n\n\t\n:\n:\n\n\nUse Call-Based format\n\n:\n\n\n\n\nThe string can be any string\n\nION:\n\nION:\n\n\tCreate", "\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\t\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n    Changer:\n    changer(string)\n\nION:\n\n\n:\n\n", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n\t\n:\n\n\n\n\t\n:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n1. returns the new string\n2. returns the string\n\nION:\n\n:\n\n", "\nUse Call-Based format:\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\t\n\n:\n\n\n\n\t\n:\n:\n\n\n\n:\n\nUse Call-Based format\nstring\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n---------------------------------------------------------------------------\n\n1. creates", "\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\nENTER:\n\t\nUse Call-Based format\nENTER:\n\n:\n\n\n\n\t:\n:\n\n\n\n\nUse Function-Based format:\n\n\n\n\n:\n\n\n\n:\nCreate a function that takes a string as", "\nUse Call-Based format:\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\n\n:\n\n\n\t\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\nUse Call-Based format\n:\n\n\n:\nCreate a function that takes a string", "\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\t:\n:\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n:\n\n\n:\n\n    Use a function that takes a string as parameter, and returns", "\nUse Call-Based format:\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\n:\n:\n\n\n\n\n:\n\n\n\n\n\nIf the string is not a string, it is an error to use Call-Based format\nION:\n\n\nION:\n\n\n**QUEST", "\nUse Call-Based format:\n\n\n:\nUse Call-Based format\n\n**Note:**\n\n\n\t\n\n\t\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n:\n\n\n\n\nUse Call-Based format\n\n1. replaces every letter with every letter following it\n:\n\n:\n\n", "Use Call-Based format:\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\n\t\n\tCreate a function", "\nUse Call-Based format:\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\n\t\n\t\n:\n\n\n\n\n:\n\n:\n\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n\n**NOTE:** The string should be in lower case.\nION:\n\n\n:\n\n", "\n:\nUse Call-Based format\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\t\n:\n\n:\n\n\n\n:\nUse Call-Based format\n\n\nUse Call-Based format\n1. replaces every letter with every letter following it in alphabet\n2. makes every consonants capital case\n:\n\t:"], "prompt": "\nQUESTION:\nCreate a function that takes a string as a parameter and does the following, in this order:\n\n1. replaces every letter with the letter following it in the alphabet (see note below)\n2. makes any vowels capital\n3. makes any consonants lower case\n\n**Note:** the alphabet should wrap around, so `Z` becomes `A`\n\nSo, for example the string `\"Cat30\"` would return `\"dbU30\"` (`Cat30 --> Dbu30 --> dbU30`)\ndef changer(string):\n\t\nUse Call-Based format\nANSWER:\n"}}