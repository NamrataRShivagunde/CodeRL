{"3440": {"code": ["# Syntax\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n# Use Call-Based format\n# Description\n\n\n# Example\n\n# Description\n\n# Example\n\n\n\n\n# Description\n\n\n\n\n\n# Description\n\n\n\n\n:\n# Example\n\n\n\n# Example\n\n:\n\n## Description\n\nGiven a number `", "# Example\n\n# Use Call-Based format\n\n# Use Call-Based format\n#\n# Example\n\n# Example\n\n# Description\n# Example\n\n#\n# Description\n:# Description\n\n#\n\n## Description\n\n# Examples\n:\n\n\n\n#\n\n\n\n\n# Example\n\n:\n# Example\n\n#\n# Description\n\nGiven", "# Example\n\n# Example\n\n# Function\n\n# Function\n# Function\n# Function\n# Function\n# Function\n\n\n\n\n:\n\n# Question\n\n\n\n\n#:\n\n# Description\n\nReturns\n\n\n\n\n:\n\n\n\n:\n\n\n\n# Example\n\n:\n# Example\n\n# Description\n\n\n#\n\n# Example", "# Type\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n# Type\n\n# Description\n\nUse Call-Based format\n# Description\n\n# Description\n\n# Description\n\n\n# Description\nION:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n# Description\n\n\n\n\n# Description\n\n\n# Description", "# Example\n\n# Number.powers(n)\n\nUse Call-Based format# Example\n\n\n\n\n# Example\n\n# Description\n\nUse Call-Based format\n# Example\n\n# Example\n:\n# Description\n\n\n\n\n:\n# Example\n\n\n\n\n\n\n\n\n# Example\n\n\n\n# Description\n\n# Description\n\nGiven a", "# Example\n\nUse Call-Based format\n# Use Call-Based format\n# Example\n\n# Example\n\n\n\n# Criteria\n\n# Description\n\n\n# Description\n\n# Example\n\n# Description\n:\n# Description\n\n\n\n# Description\n:\n\n\n\n:\n\n\n# Description\n\n:\n# Description\n# Description\n\n#\n# Description\n", "# Example\n\n# Example 1\n\n# Example 2\n# Example 3\n# Example 2\n# Example 4\n# Example 5\n# Example 5\n#\n\n\n\n:\n\n#\n\n\n:\n\n\n\n\n# Description\n:\n# Example 1\n\n\n\n\n\n\n\n\n\n# Description\n\n\n\n# Description\n# Description\n\nGiven a number", "# Example\n\nUse Call-Based format\n# Example\n\n# Criteria\n\n# Criteria\n\n\n\n\nUse Call-Based format\n\n# Description\n\n\n# Description\n\n# Example\n\n# Description\n\n# Description\n\n\n\n# Description\n:\n\n\n\n\n\n\n\n# Example\n\n\n# Example\n\n\n# Description\n\n\n# Description\n", "# Example\n\n# Example\n\n# Example\n\n# Example\n\n# Example\n#\n#\n#\n#\n#\n\n\nUse Call-Based format\n\n:\n\n# Description\n\n\n#\n:\n\n# Description\n\n\n\n# Description\n:\n\n\n\n\n\n\n\n\n# Example\n\nION:\n\n\n## Description\n\nGiven", "\n# Type\n\n# Type[number]\n# Type[number]\n# Type[number]\n# Example\n\n\n\n\n:\n# Answer\n\nUse Call-Based format\n# Description\n\n# Example\nION:\n# Description\n\n\n\n\n:\n\n\n\n:\n\n\n\n# Example\n\n:\n# Description\n\n\n# Description\n\n#", "# Example\n\n# Example:\n# Example: 1\n# Example: 2\n# Example: 2^4\n# Example: 1^2\n# Example: 3\n\n\n\n:\n\n\n\n\n\n:\n# Description\n\n\n\n#:\n# Type\n\n\n\n# Example\n\n\n\n\n\n:\n\n# Example\n\n\n# Example\n\n#", "# Effect\n\nUse Call-Based format\nUse Call-Based format\n\n#\n\nUse Call-Based format\n\n# Example\n\n\n# Example\n\n# Description\n\n\n# Example\n\n# Description\n\n# Example\n:\n\n\n\n# Description\n:\n\n\n\n\n\n\n# Example\n\n:\n# Example\n\n\n# Description\n\n\n#", "# Example\n\nUse Call-Based format# Example\n\n# Criteria\n\n# Criteria\n\n\n# Criteria\n\n\n# Description\n\n\n# Description\n\n# Criteria\n\n# Description\n\n# Example\n:\n# Description\n\n\n\n\t\n:\n# Description\n\n\n\n:\n\n\n\n# Example\n\n:\n# Example\n\n\n\n\n# Description", "# Input\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n# Parameters\n\n# Criteria\n\n# Criteria\n\n# Example\n\n#\n# Description\n:\n# Description\n\n#\n\n#:\n\n\n\n\n\n\n# Example\n\n# Description\n\nION:\n# Description\n\n\n# Description\n\nGiven a", "\n# Use Call-Based format\n# Use Call-Based format# Use Call-Based format\n#\n# Use Call-Based format\n#\n# Description\n\n# Description\n\n# Description\n\n# Use Call-Based format:\n# Description\n\n\n\n\n:\n\n\n\n\n\n\n\n\n# Description\n\nION:\n# Description\n\n\n# Description\n\n", "# Example\n\n# Use Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n# Example\n# Description\n\n#\n# Description\n\n# Description\nION:\n# Description\n\n\n\n# Description\n:\n# Example\n\n\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n\n# Description\n\n\n#", "# Format\n\nUse Call-Based format\n\nUse Call-Based format\n\n# Criteria\n\nUse Call-Based format\n# Description\n\n\n# Description\n\nUse JavaScript format\n# Criteria\n# Description\n\n# Description\n\n\n\n\n\t\n:\n\n\n\n\n\n\n\n\n\n\n# Description\n\n\n\n# Description\n\n# Description\n\nGiven a", "# Example\n\n# Use Call-Based format\n\nUse Call-Based format\n\n\n# Use Call-Based format\n\n# Example\n# Description\n\n# Example\n\n# Description\n\n\n# Description\nION:\n# Description\n\n\n\n# Example\n:\n\n\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n# Description\n\n\n# Description", "# Definition\n\nUse Call-Based format\n# Description\n\nUse Call-Based format\n\n# Example\n\n\n# Example\n\n# Description\n\n#\n# Description\n\n# Example\n\nUse Call-Based format\n:\n# Description\n\n\n\n\n:\n\n\n\n\n\n\n\n# Example\n# Description\n\n\n\n# Example\n# Description\n\nGiven", "\n# Example\n\n# Example\n\n# Example 2\nUse Call-Based format\n# Description\n\n\n\nUse Call-Based format\n\n# Example 3\n\n\n# Description\n\n# Example\n\n:\n# Description\n\n\n\n\n\n:\n\n\n\n\n\n\n\n# Example 4\n\n# Example 5\n\n\n\n# Description\n\n# Description\n\n"], "prompt": "\nQUESTION:\n# Description\n\nGiven a number `n`, you should find a set of numbers for which the sum equals `n`. This set must consist exclusively of values that are a power of `2` (eg: `2^0 => 1, 2^1 => 2, 2^2 => 4, ...`).\n\nThe function `powers` takes a single parameter, the number `n`, and should return an array of unique numbers.\n\n## Criteria\n\nThe function will always receive a valid input: any positive integer between `1` and the max integer value for your language (eg: for JavaScript this would be `9007199254740991` otherwise known as `Number.MAX_SAFE_INTEGER`).\n\nThe function should return an array of numbers that are a **power of 2** (`2^x = y`).\n\nEach member of the returned array should be **unique**. (eg: the valid answer for `powers(2)` is `[2]`, not `[1, 1]`)\n\nMembers should be sorted in **ascending order** (small -> large). (eg: the valid answer for `powers(6)` is `[2, 4]`, not `[4, 2]`)\ndef powers(n):\n\t\nUse Call-Based format\nANSWER:\n"}}