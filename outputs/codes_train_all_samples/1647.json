{"1647": {"code": [":\n\t\nUse Call-Based format\n\t\n\nUse Call-Based format\n\n\n:\n\t\n\n\n\n\n\t\n:\n\t\n\n\t\n\n\n9 ==> 9\n111 ==> 111\n\n\n\n\n\n\n:\n\n in Swift).\n\nThe negative number can't be rearranged.\n:\n:\n\n\n\n\n```", ":\n\t\t\n\n\n\n:\n\t -1\n\nUse Call-Based format\n`\n\n\t\n\n:\n\n\t\n\nReturn `-1` if the number is negative.\n\n\n\n\t:\n\t\nUse Call-Based format\n\n:\n:\n\n in Swift)\n\n\n\n:\n\n\n\n\n\n\t\n[1]\n", ":\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n```\n\n9 ==> 9\n11 ==> 11\n\n\n```\n\n\n\n\n\n\n\n\n -1\n\n)\n\nSee `next_bigger()`\n\nNOTE:\n\n\n:\n\n\n\n\n\n```\n#``", ":\n\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\n\t\n\n\n\n\n\n\n12 ==> 21\n513 ==> 531\n\n\n\n\n\n\nUse Call-Based format\n2071 ==> 2072\n\n in Swift).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n", ":\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\n\n\t\n:\n\n\n\n```\n\n\n\n```\n21 ==> 20\n\n\n\n:\n\nUse Python-Based format\n\n\n:\n20 ==> 20\n in\n\n\n\n\n\n\n\n\n\nCreate a function that takes a positive integer and returns the", ":\n\t\n\t\n\n\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n\n\t\n:\n\t\n\n\t\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n20 ==> 20\n521 ==> 533\n in\n\n\n\n\n\n\n\n\n\n\n```\n\n12 ==>", ":\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\t\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n20 ==> 20\n2071 ==> 20\n20 ==> -1\n\n in\n\n\n\n\n\n\n\n\n\n```\n", ":\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\n\n:\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n2071 ==> 2071\n2071 ==> 2071\n in\n\n\n\n\n\n\n\nCreate a function that takes a positive integer", ":\n\t\t\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\t\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n207 ==> 2075\n2071 ==> 2074\n\n in\n\nUse Call-Based format\n\n\n\n\n\n\n\n\tReturns the next", ":\n\n\n\n\nUse Call-Based format\n\n\n\n\n```\n)\n\n\n:\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n2071 ==> 2071\n\n in\n\n\n\n\n\n2071 ==> 2072\n\n\n\n\n\n```\n", ":\n\n\n\n\n\n\n\n\n\n\n\t\n:\n\n\n\n\n511 ==> 521\n521 ==> 531\n523 ==> 531\n2014 ==> 513\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\n in\n\nUse Call-Based format\n:\n\n\n\nCreate a function that takes a positive", ":\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format 20\n2023 ==> 205\n\n in\n\n\n\n\n\n\n\n\n\n\n```\n#\n12 ==>", ":\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\nFROM:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2071 ==> 2069\n2069 ==> 2068\n2071 ==> -1\n in\n\n\n\n\n\n\n\n\n\n\n```\n#", ":\n\n\n\nUse Call-Based format\n\n\n\n\n```\n\n\t\nUse Call-Based format\n```\n\n\t\nUse Python-Based format:\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n:\n)\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n```\n12 ==", ":\n\n\n\n\nUse Call-Based format\n:\n\n\n\n)\n\n\n:\n\n\n\nreturn -1\n\n\n\n\n\n\n\n6 ==> 612\n9 ==> 9\n111 ==> 111\n\n\n\nUse Call-Based format:\n in\n\n:\n\n\n\n\nCreate a function that takes a positive integer and returns the next bigger", ":\n\t\nUse Call-Based format\n\t\n\n\n\n:\n\t\n\n\n\n\t\n:\n\t\n\n\t\n\n\n\n\t\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n -1\n\n in Swift)\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n```\n#> 2^63", ":\n\t\nUse Call-Based format\n\t\n\n\n\n:\n\t\n`\n\n)\n\n\n:\n\t\n\n\t\n\n\n9 ==> 9\n111 ==> 111\n\n\n:\n\n\n\n\n\n21 ==> 21\n513 ==> 531\n2071 ==> 2071\n in\n\n:\n\n\n\n\n```\n", ":\n\t\nUse Call-Based format\n\t\n\n\n\n:\n\t -1\n\nUse Call-Based format\n`\n\n\n\t\n\n\t:\n\t\n\t\n\n\n\n\t:\n\t\n\n\n:\n2021 ==> 2070\n2071 ==> 2071\n in\n\n\n:\n\n\n\n\n```\n12 ==> 2", ":\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n10 ==> 11\n1121 ==> 1033\n1131 ==> 111\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\n in Swift)\n\n\n\nUse Call-Based format\n\n\n\n\n\nCreate a function that takes a positive", ":\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n`\n\n\n\t\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n513 ==> 531\n2017 ==> 2071\n in\n\n\n\n\n\n\nCreate a function that"], "prompt": "\nQUESTION:\nCreate a function that takes a positive integer and returns the next bigger number that can be formed by rearranging its digits. For example:\n\n```\n12 ==> 21\n513 ==> 531\n2017 ==> 2071\n```\n\nIf the digits can't be rearranged to form a bigger number, return `-1` (or `nil` in Swift):\n\n```\n9 ==> -1\n111 ==> -1\n531 ==> -1\n```\ndef next_bigger(n):\n\t\nUse Call-Based format\nANSWER:\n"}}