{"1878": {"code": ["\nUse Call-Based format\n\n    def kthGrammar(self, N: int, K: int) -> int:\n\n\n\n\n\n\n   \n\n\n:\n       pass\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nOn the first row, we write a 10\n\n\n\nOn", "\nUse Call-Based format\n\n\n    def kthGrammar(self, N, K) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n:\n          \n\nUse Call-Based format\n\n\n\n\n\nrow 1: 1\nrow 2: 10\nrow 3: 11\n\n\n\n\n\n\n\nOn the first row", "\nUse Call-Based format\n\n    def kthGrammar(self, N: int, K: int) -> int:\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n:\n          \n\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nOn the first row, we", "\nUse Call-Based format\n\n    def kthGrammar(self, N, K):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n    def       \n\n\nUse Call-Based formatOn the first row, we write a 10.\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\nOn the first row, we write", "\n\n\n    def kthGrammar(self, N: int, K: int):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n          \n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nrow 1: 01\nrow 2: 10\nrow 3: 10\n\n\n\n\n\n\n\nOn the first row,", "\nUse Call-Based format\nUse Call-Based format\n    def kthGrammar(self, N: int, K: int):\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n          \n\nUse Python-Based format\n\nWrite a 0\n\nWrite a 0\n\n\n\n\n\n\n\n\n\nOn the first row, we write a 0.", "\nUse Call-Based format\n\n\n    def kthGrammar(self, N: int, K: int) -> int:\n        \n\n\n\n\n\n   \n\n\n\n   \n    pass\n\n\n\nOn the first row, we write a 1.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nOn the first row, we write a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n          \n\n\n\n    def       \n\nUse Call-Based format\nUse Python-based format\nNote:\n    Use Call-Based format\n\n\n\n\n\nOn the second row, we write a 10.\n\n\n\nUse Call-Based format\n\n\n\n\nOn the first row, we write", "\nUse Call-Based format\nUse Call-Based format\n    def kthGrammar(self, N, K):\n    pass\n\n\n\n\n\n\n       pass\n\n\n\n          \n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nOn the first row, we write", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n:\n       pass\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nOn the first row, we write a", "\nUse Call-Based format\nUse Call-Based format\n    def kthGrammar(self, N, K: int):\n\nUse Call-Based format\n\n\n\n\n   \n\n\n:\n           \n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nOn the first row, we write a 1", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\n\n\n\n          \n\nUse C-Based format\n\n\nOn the first row, we write a 1.\nOn the second row, we write a 10.\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nOn the first row, we write a 0.\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n    def kthSymbol(self, N: int, K: int):\n        return 0\n\n          \n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nOn the first row, we write a", "\nUse Call-Based format\n\n    def kthGrammar(self, N, K: int):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n    def    \n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nOn the first row, we", "\nUse Call-Based format\n\n    def kthGrammar(self, N, K):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n           \n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nN = 1, K = 1\n\n\n\nOn the first", "\nUse Call-Based format\n\n    pass\n\n\n\n\n\n\n   \n        return self.kthGrammar(N, K)\n\n\n:\n   \n\n\n\nOn the first row, we write a 1.\n\n\n\n\n\n\n\n\n\n\nOn the first row, we write a 0.\n\n\n\n\nOn the first row, we write a", "\nUse Call-Based format\n\n    def kthGrammar(self, N, K):\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n    def    \n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nOn the first row, we write a", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n -> int:\n\n          \n\nUse Call-Based format\nOn the first row, we write a 1.\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nOn the first row, we write a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n    def\n\n\n\n    def       \n\n\nUse Call-Based format\nOn the first row, we write a 1.\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nOn the first row, we write a 1.\n", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        \"\"\"\n\n\nOn the first row, we write a 1.\nOn the second row, we write a 10.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nOn the first row, we write a"], "prompt": "\nQUESTION:\nOn the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.\n\nGiven row N and index K, return the K-th indexed symbol in row N. (The values of K are 1-indexed.) (1 indexed).\n\n\nExamples:\nInput: N = 1, K = 1\nOutput: 0\n\nInput: N = 2, K = 1\nOutput: 0\n\nInput: N = 2, K = 2\nOutput: 1\n\nInput: N = 4, K = 5\nOutput: 1\n\nExplanation:\nrow 1: 0\nrow 2: 01\nrow 3: 0110\nrow 4: 01101001\n\n\nNote:\n\n\n       N will be an integer in the range [1, 30].\n       K will be an integer in the range [1, 2^(N-1)].\nclass Solution:\n    def kthGrammar(self, N: int, K: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}