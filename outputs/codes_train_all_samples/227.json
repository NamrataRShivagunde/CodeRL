{"227": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def longestOnes(self, A: List[int], K: int):\n        return K\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n,\n, K = 1\n\n,\n\n\n\n\n\n\n\n\nGiven an array A of 0s and 1", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def longestOnes(self, A, K):\n        return len(A[i])\n\n\u00a0\n\n\n\n\n\n\nUse Call-Based format\n,\n,\n,,1,1]\n\n\n\n\n\n\nGiven an array A of 0s and 1", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n        return self.longestOnes(A[i], K)\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n,\n\n\n,\n\n\n\n\n\n\n\nGiven an array A of 0s and 1s", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def longestOnes(self, A, K: int):\n        return len(A)\n\n\nUse Call-Based format\n\n\n\n\n   \n        pass\n\n\n,\n,\n,,1,1,1,1,1\n\n\n\n\n\n\nGiven an array A of 0s", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n        pass\n\n\n\n       \n        pass\n\n\n\n\n\n    pass\n\n\n1,1,1,1,1,1,1,1,1,1,1,1\n\n,\n,\n\n\n\n\n\n\n\n\n    A: [0,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n        #...\n\n\n\n\n\n    def longestOnes(self, A: List[int], K: int):\n        #...\n\n\n,\n,1,,,1,1,1,1,1\n\n\n\n\n\nGiven an array A of 0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def longestOnes(self, A, K: int):\n        return A[i]\n\n\n\n\n\u00a0\n\n\n\n\n   \n\n\n,\n, K = 2\n,\n\n\n\n\n\n\n\n\nGiven an array A of 0s and 1s", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n        pass\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\u00a0\n\nUse Call-Based format\n\n\n\n\n   \n\n\n,\n,\n,,1,1\n\n\n\n\n\n\nGiven an array A of 0s and 1", "\nUse Call-Based format\n\n\n    def longestOnes(self, A, K: int):\n        return A[K]\n\n\n\n\n\n\n   \n        pass\n        \n\n\n\n    pass\n\n\n1,\n,\n,,0,0,0,1,1,1,1]\n\n\n\n\n\n\nA\u00a00\ufffd", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n        return self.longestOnes(A, K)\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\n   \n\n\n1,\n, K = 2\n,,0,0\n\n\n\n\n\n\n\n\nGiven an array A of 0s and 1s", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n        def longestOnes(self, A: List[int], K: int):\n            return self.length\n\n\n\u00a0\n\n\n\n\n   \n        \n\n,\n, K = 2\n\n,\n\n\n\n\n\n\n\nGiven an array A of 0s and", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n        return 1\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n   \n    return self.longestOnes(A, K)\n\n\n,\n,\n,,\n\n\u00a0\n\n\n\n\n\u00a0\n\nGiven an array A of 0s and", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n    def longestOnes(self, A, K: int):\n        return self.longestOnes(A, K)\n\n\u00a0\n\n\n\n\n   \n\n\n,\n, K\n,\n\n\n\n\n\n\n\n\nGiven an array A of 0s and 1", "\nUse Call-Based format\n\n\n    K = 3\n\n\n\n\n\n        A[i] is 0 or 1\n\n   \n        return len(A)\n\n\n\n\n    return self.longestOnes(A, K)\n\n\n,\n,\n,\n\n\n\n\n\n\n\u00a0\n\n\nGiven an array A of 0s and 1", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n1 <= K <= A.length\n1 <= K <= A.length\n1 <= K <= A.length\n\n\n\n   \n\n\n\n   \n       \n\n\n,\n,1,,\n\n\n\u00a0\n\n\n\n\n\nGiven an array A of 0s and 1s, we", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n        return self.longestOnes(A, K)\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n,\n,1,1,1,1,1\n,\n\n\n\n\n\n\n\nGiven an array A of 0s and", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n        return A[i]\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\u00a0\n\n\n\n\n   \n        pass\n\n\n,\n,1,0,0,1,1,\n\n\n\n\n\n\nGiven an array A of 0s and 1", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def longestOnes(self, A, K):\n        return A[i]\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n,\n,\n,\n\n\n\u00a0\n\n\n\nK = 2\n\nReturns:\n\n\nGiven an array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.longestOnes(A, K)\n\n\n\n\n\n\n\nUse Call-Based format,\n,1,1,0,1,1,1,0,1,1,1,1,1\n,\n\n\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n        pass\n\n\n\u00a0\n\n\nFunction:\n   \n\n\n\n   \n    pass\n\n\n,\n,\n,,1,1,1,1,1,1,1,1,1,0,0,1\n\n\n\n\n\nGiven an array A of"], "prompt": "\nQUESTION:\nGiven an array A\u00a0of 0s and 1s, we may change up to K\u00a0values from 0 to 1.\nReturn the length of the longest (contiguous) subarray that contains only 1s.\u00a0\n\u00a0\n\nExample 1:\nInput: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2\nOutput: 6\nExplanation: \n[1,1,1,0,0,1,1,1,1,1,1]\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\n\nExample 2:\nInput: A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\nOutput: 10\nExplanation: \n[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\n\n\u00a0\nNote:\n\n1 <= A.length <= 20000\n0 <= K <= A.length\nA[i] is 0 or 1\nclass Solution:\n    def longestOnes(self, A: List[int], K: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}