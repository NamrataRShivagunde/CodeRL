{"452": {"code": ["\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return self.minDifficulty()\n\n\n\n\n\n\n\n\n\n\nYou want to finish a list of jobs in d days.\n\n\n\n\n\n\nReturns:\n\n1 <=", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nYou want to schedule a list of jobs in d days.\n\n\n\n   \n\n\n\n    def difficulty(self, jobDifficulty: List[int], d: int):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou want to add a job to the schedule in", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nOutput:\n\nmaxDifficulty(self, jobDifficulty, d)\n\nExplanation:\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\nYou want to finish a list of jobs in d days.\n\n\n\n\n\nJob has the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n    def maxDifficulty(self, jobDifficulty, d: int):\n        return 7\n\n\n\n\n\n\n\n\n\n\n\nYou have a schedule of d jobs.\n\n\n\n\n\n\n    JobDifficulty", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\njobDifficulty = [5,6,4,5]\n\nExample:\n\n    jobDifficulty = [3]\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tjobDifficulty = [7", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\nJob difficulty\n\nExample 6:\n\n    jobDifficulty = [1,2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    JobDifficulty:", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nYou want to schedule a list of jobs in d days.\n\nExplanation:\n\n\n\n\n   \n\n\n\n   \n    def maxDifficulty(self):\n        return 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\nYou have a schedule in d days.\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n   \n    def minDifficulty(self, jobDifficulty: List[int], d: int):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    jobDifficulty = [", "\n\nUse Call-Based format\n\n\n\n\nYou want to schedule a list of jobs in d days.\n\n\n\n   \n\nYou want to schedule a list of jobs in d days.\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        JobDifficulty\n\n\n        JobDifficulty", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nUsage:\n\n\n\n\n\n\nExplanation:\n\nTotal difficulty of a job schedule = d\n\nExample 3:\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou want to schedule a list of jobs in", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    maxDifficulty(self, jobDifficulty, d)\n\n\n\nYou want to get the minimum difficulty of a schedule in d days\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can find a schedule for a list of jobs in d days.\n\nJobDifficulty", "\nUse Call-Based format\n\n\n\n\n\n\njobDifficulty = [1,2,3,4,3,3,3,1,3]\n\nExplanation:\n\n\n   \n\n\n\n   \n    return 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    JobDifficulty:\n        JobDifficulty = [", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nYou are using Call-Based format\n\n\n\n   \n\n\nYou are using Call-Based format\n\n\n   \n    def maxDifficulty(self, jobDifficulty, d):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    JobDifficulty:\n\n    job", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nminDifficulty(self, jobDifficulty, d):\n    return 0\n\n\u00a0\n\n\n\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\nYou want to finish a list of jobs in d days.\n\n\n\n\n\n\njobDifficulty = [", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\nJob has no scheduled jobs.\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\nYou can finish a list of jobs in d days.\n\n\n\n\n\nThe schedule is a list of jobs", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\nYou want to schedule a list of jobs in d days.\n\nExample 4:\n\n    jobDifficulty = [3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      JobDifficulty = d\n      Job", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    def minDifficulty(self, jobDifficulty, d):\n        return d + 1\n\nUse Call-Based format\n\nExample 6:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n\nMinDifficulty", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\njobDifficulty:\nArray of integers jobDifficulty, d = 2\n\n\n\n\n\n\n\n\n\n    def difficulty(self, jobDifficulty, d: int):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    JobDifficulty:\n\n   ", "\nUse Call-Based format\n\n\n\n\nYour schedule is executed for a list of jobs in d days.\n\nUse Call-Based format\n\n\n\n   \n\n\nYou want to finish a list of jobs in d days.\n\n\n   \n\n\n\n\n\n\n\n\n\n\nyou want to finish a schedule in d days\n\n\n\n\nJob has finished and no", "\n\n\n\nUse Call-Based format\n\nYou want to schedule a list of jobs in d days.\n\n\n\n    def maxDifficulty(self, jobDifficulty: int) -> int:\n        return 6\n\n\n\nExample 3:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput: jobDifficulty"], "prompt": "\nQUESTION:\nYou want to schedule a list of jobs in d days. Jobs are dependent (i.e To work on the i-th job, you have to finish all the jobs j where 0 <= j < i).\nYou have to finish at least one task every day. The difficulty of a job schedule is the sum of difficulties of each day of the d days. The difficulty of a day is the maximum difficulty of a job done in that day.\nGiven an array of integers jobDifficulty and an integer d. The difficulty of the i-th\u00a0job is\u00a0jobDifficulty[i].\nReturn the minimum difficulty of a job schedule. If you cannot find a schedule for the jobs return -1.\n\u00a0\nExample 1:\n\nInput: jobDifficulty = [6,5,4,3,2,1], d = 2\nOutput: 7\nExplanation: First day you can finish the first 5 jobs, total difficulty = 6.\nSecond day you can finish the last job, total difficulty = 1.\nThe difficulty of the schedule = 6 + 1 = 7 \n\nExample 2:\nInput: jobDifficulty = [9,9,9], d = 4\nOutput: -1\nExplanation: If you finish a job per day you will still have a free day. you cannot find a schedule for the given jobs.\n\nExample 3:\nInput: jobDifficulty = [1,1,1], d = 3\nOutput: 3\nExplanation: The schedule is one job per day. total difficulty will be 3.\n\nExample 4:\nInput: jobDifficulty = [7,1,7,1,7,1], d = 3\nOutput: 15\n\nExample 5:\nInput: jobDifficulty = [11,111,22,222,33,333,44,444], d = 6\nOutput: 843\n\n\u00a0\nConstraints:\n\n1 <= jobDifficulty.length <= 300\n0 <=\u00a0jobDifficulty[i] <= 1000\n1 <= d <= 10\nclass Solution:\n    def minDifficulty(self, jobDifficulty: List[int], d: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}