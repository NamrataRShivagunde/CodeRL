{"2679": {"code": ["\n\n\n# Proof \n\nA\n\n\n# Hamsters \n\n\n\n | a b c d e r \n\n# Hamsters \n\n\n | |\n\n# Hamsters \n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n# Hamsters\n\n\n\n\n |\n\n\n |\n 10  |\n", "\n\n\n\n# Hamsters \n\nHamstersMe('hamster', 'helpme')    => helpme\n\n\n\n\n\n\n\n\n\n\n\n |\n\n\n\n | a\n | b\n\n```\n\n\n\n\n\n# French \n\n\n\n\n\n | kh\n\n\n | a\n 10  | b\n 11 ", "\n\n\n\n# Example \n\n# Introduction \n\n# Introduction \n\n# Introduction \n\n# Introduction \n\n# Introduction \n\n\n\n\n\n\n |\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n |    b\n 10  |         c\n", "\n\n\n\n\n\n\n\n\n\n# Longer \n\n |     h1     h1     h1     h1     1\n\n# Demonstration \n\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\na1h1m1s1t1r1\nc1h1\n | a", "\n\n\n# Hamsters \n\nhamsterMe('hamster', 'hmster')\n\n# HamstersMe('helpme')\n\n\n\n\n\n\n\n\n\n | |\n\n\n\n |\n |\n\n\n\n\n\n\n\n# Breed \n\n\n\n\n\n | h a m s t e r\n\n\n | a h", "\n\n\n# Troduction\n\n\n# Spend \n\n# Hamsters \n\n\n\n\n\n\n\n# Regression \n\n | | | |\n\n\n | |\n\n\n\n |\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n\n |\n\n```\n\n# Third part \n\nhmster |     a", "\n\n\n# Troduction \n\nHamsters are a few other functions.\n\nhamstersMe('hamster', 'hamster')    \n\n\n\n\n\n\n\n\n\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n# Message \n\nh1a1m1s1t1\n\n |", "\n\n\n\n\n# Breed \n\n# Irish \n\n# Jes\n\n# Times \n\n# Mes\n\n# Says \n\n\n\n\n\n\n\n\n\n\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n | ha | hm | h\n\n```\n\n\n\n |        ", "\n\n\n\n\n# Simplification \n\n\n\n\n\n\n\n\n\n\n\n | | r\n\n```\n | h\n\n```\n | | a\n 10  | a\n 11  | b\n 12  | c\n |\n\n```\n\n\n\n\n\n\n\n\n\n\n |\n\n```\n\n | a\n 10  | b", "\n\n\n# Hamsters \n\nHamstersMe('hamster', 'hamster')\n\n```\n\n\n\n\n\n\n\n\n\n\n |\n\n\n\n |\n |\n |\n\n\n\n\n\n\n\n# Cricetinae \n\nA hamster is a subfamily.\n\n\n\n |\n\n\n | b | c", "\n\n# Note \n\n | |\n\n```\n\n\n# Breed \n\nhmsterMe('hmster', 'hmster')    \n\n```\n\n\n\n\n# Example\n\n\n\n\n | |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# End of task\n\n\n# Test \n\n\n10", "\n\n\n# Aimedance \n\n# Induction \n\na1 a2 b2 c1 d1 e2 r2\nb1 d2\n\n# Aimedance \n\n\n\n\n\n\n\n\n\n\n\n\n\n | |\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n\n | a\n 10  | b\n 11", "\n\n\n# Induction \n\n# Hamsters \n\n# Hamsters \n\n# Hamsters \n\n# Hamsters \n\n\n\n\n\n\n\n\n\n\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n# Task \n\n\n\n\n\n |     h\n\n\n | a\n 10  | b\n 11", "\n\n Explanation \n\n# Hamsters \n\nHamsterMe('hamster', 'hamster')\n\n\n\n\n\n\n\n# Hamsters \n\n\n\n\n\n\n\n | | r\n\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Hamsters \n\nh1a1m\n", "\n\n\n\n# Conduction \n\n# Federal \n\n# Conduction \n\n# Conduction \n\n# Conduction \n\n |\n\n# Breeze \n\n |\n\n |\n\n | |\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n#\n10  |", "\n\n# Troduction\n\n# Age \n\n | a1 b1 c 1 d 1 e 1 f 1 d 1 e 1 d1\n\n\n\n\n\n\n\n\n\n\n\n\n | |\n\n\n |         a\n 10  |         b\n 11  | |\n\n\n\n\n\n\n\n\n |\n | a\n 10  | b\n 11", "\n\n\n# Breed \n\nCricetinae => Cricetinae\n\n# Singularity \n\nCricetinae => Cricetinae\n\n\n\n\n\n\n\n\n\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n# Test \n\n# Testing \n\nh1a1m\n", "\n\n\n\n\n\n# Community \n\nA number of hamsters is the number of hamsters.\n\n\n\n\n\n\n\n\n\n\n | | c\n 5  | | d\n 6  | |         z\n\n\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n |\n | a\n 10  | b\n 11  |", "\n\n\n\n\n\n\n# Breeze \n\nHamsters are a bit of a function that encodes letters\n\n\n |\n\n\n\n\n\n | | h m s r | i j o | k d p | q\n\n\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n |     i\n 10  |     j\n 11  |", "\n\n\n# Example :\n\n# Hamsters \n\n\n\n\n\n# Example :\n\n# Hamsters \n\n | h1a1m1s1t1e1\n\n#\n\n\n\n\n | |\n\n\n\n |\n\n\n\n\n\n\n\n\n\n\n\n\n\n | h\n\n |      b\n 10  |        "], "prompt": "\nQUESTION:\n# Introduction \n\nHamsters are rodents belonging to the subfamily Cricetinae. The subfamily contains about 25 species, classified in six or seven genera. They have become established as popular small house pets, and, partly because they are easy to breed in captivity, hamsters are often used as laboratory animals.\n\n\n# Task \n\nWrite a function that accepts two inputs: `code` and `message` and returns an encrypted string from `message` using the `code`.   \nThe `code` is a string that generates the key in the way shown below:\n\n```\n 1  | h a m s t e r\n 2  | i b n   u f\n 3  | j c o   v g\n 4  | k d p   w\n 5  | l   q   x\n 6  |         y\n 7  |         z\n\n```\n\nAll letters from `code` get number `1`. All letters which directly follow letters from `code` get number `2` (unless they already have a smaller number assigned), etc. It's difficult to describe but it should be easy to understand from the example below:\n\n```\n 1  | a e h m r s t\n 2  | b f i n     u\n 3  | c g j o     v\n 4  | d   k p     w\n 5  |     l q     x\n 6  |             y\n 7  |             z\n\n```\n\nHow does the encoding work using the `hamster` code?    \n\n```\na => a1\nb => a2\nc => a3\nd => a4\ne => e1\nf => e2\n...\n```\n\nAnd applying it to strings :\n\n```\nhamsterMe('hamster', 'hamster')   => h1a1m1s1t1e1r1\nhamsterMe('hamster', 'helpme')    => h1e1h5m4m1e1\n\n```\n\nAnd you probably started wondering what will happen if there is no `a` in the `code`.  \nJust add these letters after the last available letter (in alphabetic order) in the `code`.\n\nThe key for code `hmster` is:\n```\n 1  | e h m r s t\n 2  | f i n     u\n 3  | g j o     v\n 4  |   k p     w\n 5  |   l q     x\n 6  |           y\n 7  |           z\n 8  |           a\n 9  |           b\n10  |           c\n11  |           d\n```\n\n# Additional notes\n\nThe `code` will have at least 1 letter.   \nDuplication of letters in `code` is possible and should be handled.    \nThe `code` and `message` consist of only lowercase letters.\ndef hamster_me(code, message):\n\t\nUse Call-Based format\nANSWER:\n"}}