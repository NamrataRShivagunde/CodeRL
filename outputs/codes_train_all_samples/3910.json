{"3910": {"code": ["\n\n\n\n\n\n\n\n\n\n\n## Example\n\nUse Call-Based format\n\nUse Call-Based format\n\n## Examples\n\nUse Call-Based format\n\n\n\n\n\t\n## Example\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n## Examples:\n\n```", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n### Example\n\n## Example\n\nUse Call-Based format\n\nUse Call-Based format\n\n### Example\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n## Examples\n\n\n  1  -->", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n## Example\n\n\n\nUse Call-Based format\n\n## Example\n\n# Example:\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n# Example\n\n### Example:\n\nThe expression is formed by numerical order\n\n\n\n\n\n\n\n\n### Examples\n", "\n\n## Syntax\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n## Example\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n## Example:\n\nA function that evaluates an expression which returns `3`\n\n\n\n\n### Example\n## Example:\n\n\n\n\n## Examples\n\n``", "\n# Example\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\treturn eval(n)\n\n## Examples\n\nUse Call-Based format\n# Example\n\n## Examples\n\n\n\n\n\n\n## Example\n\n\n #  no solution possible\n\n\n\n## Example\n\n\n\n\n\n## Example\n\n\n## Example", "\n\n\n\n\n# Example\ndef operator_insertor(n):\n\t\nUse Call-Based format\n\n\n\n\n\n## Example\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n## Example:\n\n\n #  no solution possible\n\n## Examples:\n\n\n\n\n\n\n\n## Examples:\n\nA\n\n`eval :: String", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n### Example\n\n## Example\n\ndef operator_insertor(n):\n\treturn n\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n #  no solution possible\n\n### Example\n\n## Examples\n\nA convenience method\n\n\n\n\n\n\n## Examples\n\n```", "\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n## Example:\n\nUse Call-Based format\n\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n### Example\n\n### Example:\n\nA simple expression\n###\n\n\n\n# Example 1", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based expression\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\t\n## Example\n\n## Example\n\ndef operator_insertor(n):\n\t\n\n\n\n\n\n\n## Example\n\n\n\n\n\n## Example\n\n\n\n\n\n\n## Example\n\n## Examples\n\n", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\treturn (n - 1) + (n + 1) + (n - 1)\n\n\n\n\n\n\n\n\n\n## Example:\n\n# Example:\n\n\n\n\n# Example:\n#\n1 - 2 - 3 - 2 - 3 - 2 - 3\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n```\n\n\n\n\n\n\n~\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n## Example:\n\n    # Example 2\n\n   ", "\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\t\n# Example:\n\t\n# Example:\n\t\n# Example:\n\t\n\n\n\n\n\n\n\n## Example:\n\n## Examples\n\n## Examples:\n\nUse Call-Based format\n #\n\n\n\n\n\n\n\n\n## Examples\n\n##\n", "\n\n## Example\n\n\n\n\n\n\n\n\n\n\neval :: String -> Int\n\teval :: Number -> Float\n\n\n## Example\n\n\n\n\n\t\n\n\n\n\n\n\n\n        The code for this example is:\n\n```\n\n #  no solution possible\n```\n\n\n\n\n\n\n\n## Example\n\n\n# Example 5:", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Example\n\nUse Call-Based format\n\n## Examples\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n## Example\n\n## Example:\n\n\n\n\n\n## Example\n\n\nA valid expression is", "\n\n\n\n\n## Example\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\teval(n)\n\n### Example\n\n## Examples\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n## Example:\n\n\n\n\n\n## Example\n\n## Examples\n\n``", "\n\n## Description\n\n\n\n\n\n\n\n\n\n\n\n\nuse Call-Based format\n\nUse Call-Based format\n\n## Example\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n #  no solution possible\n```\n\n## Example\n\n\n\n\n\n## Example\n\n## Example\n\n## Example:\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n### Example\n\nUse Call-Based format\n\n## Example:\n\nUse Call-Based format\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''')\n''')\n\n## Evaluation\n#\n#\n#", "\n\n## Example\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nreturn 1 + 2 - 2 + 3 - 3\n\n## Example\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n## Examples\n\nA random number between 1 and 9.\nA number between 1 and 2.\n\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n## Example\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t#\n\n\n\n\n## Example\n\n### Example\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n## Example:\n\nA string.\n\n##\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Example\n\n### Example\n\n\n\n\n\t\n## Example\n\n\n\n## Examples\n\n\n\n\n\n\n #  no solution possible\n\n### Example\n\n\n\n\n### Example\n\n## Example:\n\n\n\n\n## Example\n\n\n\n"], "prompt": "\nQUESTION:\nAn expression is formed by taking the digits 1 to 9 in numerical order and then inserting into each gap between the numbers either a plus sign or a minus sign or neither.\n\nYour task is to write a method which takes one parameter and returns the **smallest possible number** of plus and minus signs necessary to form such an expression which equals the input.\n\n**Note:** All digits from 1-9 must be used exactly once.\n\nIf there is no possible expression that evaluates to the input, then return `null/nil/None`.\n\n~~~if:haskell\n`eval :: String -> Int` is available in `Preloaded` for your convenience.\n~~~\n\nThere are 50 random tests with upper bound of the input = 1000.\n\n\n## Examples\n\nWhen the input is 100, you need to return `3`, since that is the minimum number of signs required, because: 123 - 45 - 67 + 89 = 100 (3 operators in total).\n\nMore examples:\n```\n 11  -->  5  #  1 + 2 + 34 + 56 + 7 - 89 = 11\n100  -->  3  #  123 - 45 - 67 + 89 = 100\n766  -->  4  #  1 - 2 + 34 - 56 + 789 = 766\n160  -->  -  #  no solution possible\n```\n\nInspired by a [puzzle on BBC Radio 4](https://www.bbc.co.uk/programmes/p057wxwl) (which is unfortunately not available anymore)\ndef operator_insertor(n):\n\t\nUse Call-Based format\nANSWER:\n"}}