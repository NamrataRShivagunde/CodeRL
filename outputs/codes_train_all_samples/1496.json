{"1496": {"code": ["\nUse Standard Output format\n\n\n\n\n-----Explanation-----\nUse Standard Input format\nANSWER:\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n \\\n \\\n\n\n\n\n\n\n\nlrl\nrlr\nl\n\n\n\n\n\n-----Explanation-----\n\nIf you would", "\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChef has a nice complete binary tree in his garden\n\n \\\n \\\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nThe first line is the root node.\n\n-----Constraints-----\n- 1 \u2264 1\n\n1", "\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n\nrrl\nlll\nrlr\n\n\n-----Constraints-----\n- 1 \u2264 1 \u2264 2\n\n\n\n\n\n\n\n \\\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\nThe first line contains a string number\n\nT\n", "\nUse Standard Output format\nANSWER:\n\nUse Standard Input format\n\n\n\n-----Constraints-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n-----Constraints-----\n\n1\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n \\\n  \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n- 1 \u2264", "\nUse Standard Output format\nANSWER:\n\nUse Standard Input format\n\n\n\n-----Example-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n-----Example-----\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n-----Example-----\n\nThe first", "\nUse Standard Output format\nANSWER:\n\n\n\n\n-----Constraints-----\n- 1 \u2264 5 \u2264 2\n\n\n\n\n\n\n\n\n\n\n\n\nChef has a nice binary tree in his garden.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nHow many inputs you have:\n1", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n1\n2\n3\n\n\n\n\n0 \u2264 4 \u2264 6 \u2264 5 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n* The 'T' level is the number of the", "\n\n\n\n\n\n-----Constraints-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n- 1 \u2264 3 \u2264 6 \u2264 9\n- 1 \u2264 10\n\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\nChef has a nice complete binary", "\nUse Standard Input format\n\n\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\n\n\n\n\n1 \u2264 2   3 \u2264 3\n\n\n-----Constraints-----\n- 1 \u2264 3\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\nA good example:\n1", "\nUse Standard Input format\n\n\n\n-----Constraints-----\n- 1 \u2264 1 \u2264 1 \u2264 1\n\n\n\n\n\n\n\n\n\n\n1\n\nChef has a nice complete binary tree in his garden.\n\n \\ \\\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nThe following example:\n\n2 ", "\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n3\n5\n6\n7\n\n\n\n \\ \\ \\\n\n\n- Let's call the tree with the correct number of nodes and root\n-\n\n\n\n\n\nChef has a nice complete binary tree in his garden\n\nChef has", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n- 1 \u2264 |T| \u2264 1 \u2264 2\n\n\n\n\n\n\n \\\n \\\n\n\n\n\n\n\n\n\n\n\n\n\nChef has a nice complete binary tree. The current set of nodes\n\n-----Constraints-----\n1", "\nUse Standard Input format\nANSWER:\n\nUse Standard Output format\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    6 \u2264 7  6  7  0  0   7  0  0  0  0\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n-", "\nUse Standard Output format\nANSWER:\n\n\n\n\n-----Constraints-----\n- 1 \u2264 10^4\n- 1 \u2264 10^3\n\n\n\n\n\n\n\n\n\n\n\n\n \\\n \n\n\n\n\n\n\n1 \u2264 2 \u2264 3\n\n\n\n\n-----Constraints-----\n- 1 \ufffd", "\n\n\n\n-----Example-----\n\nUse Standard Output format\nAnswer:\n\nA simple example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA simple example\n\n-----Constraints-----\n- 1 \u2264 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\nA simple example:\n1", "\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlrl\nrlr\n\n\n\n\n\n \\\n /  \\\n /  \\\n \\\n\n\n\n\n\n1\n2\n3\n4\n5\n9\n\n\n-1\n\n\n\n\n    1. The first line contains two numbers of the", "\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\nChef has a nice complete binary tree in his garden.\nUse Standard Output format\n\n-----Constraints-----\n-\n\n\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n\nChef has a nice complete binary tree in his garden. Use Standard Input format\nQUESTION:\n", "\nUse Standard Input format\nANSWER:\nUse Standard Output format\n\n\n\n\n\n\n\n\n1\n2\n3\n\n5\n6\n9\n\n\n\n\n10\n14\n15\n\n\n \\\n  \\\n\n\n\n\n\n- 1 \u2264 0 \u2264 0  0\n\n\n\n\n\n\nChef has a nice", "\n\n\n\n\n-----Example-----\nUse Standard Input format\nANSWER:\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \\\n \\\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nA nice complete binary tree with a nice garden\n\nChef has a nice", "\n\n\n\n\n-----Explanation-----\nUse Standard Output format\nANSWER:\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n \\\n/   \\\n \\\n /   \\\n \\\n \n\n\n\n\n\n\n\n\n- Let's call the root to the root\n-\n\n\n\n\nChef has a nice complete binary tree"], "prompt": "\nQUESTION:\nChef has a nice complete binary tree in his garden. Complete means that each node has exactly two sons, so the tree is infinite. Yesterday he had enumerated the nodes of the tree in such a way: \n- Let's call the nodes' level a number of nodes that occur on the way to this node from the root, including this node. This way, only the root has the level equal to 1, while only its two sons has the level equal to 2.\n- Then, let's take all the nodes with the odd level and enumerate them with consecutive odd numbers, starting from the smallest levels and the leftmost nodes, going to the rightmost nodes and the highest levels.\n- Then, let's take all the nodes with the even level and enumerate them with consecutive even numbers, starting from the smallest levels and the leftmost nodes, going to the rightmost nodes and the highest levels.\n- For the better understanding there is an example: \n1\n/           \\\n2                   4\n/   \\                /       \\\n3       5           7        9\n/ \\      /  \\          /  \\       /  \\\n6  8 10 12      14 16   18 20 \n\nHere you can see the visualization of the process. For example, in odd levels, the root was enumerated first, then, there were enumerated roots' left sons' sons and roots' right sons' sons.\nYou are given the string of symbols, let's call it S. Each symbol is either l or r. Naturally, this sequence denotes some path from the root, where l means going to the left son and r means going to the right son.\nPlease, help Chef to determine the number of the last node in this path.\n\n-----Input-----\nThe first line contains single integer T number of test cases.\nEach of next T lines contain a string S consisting only of the symbols l and r.\n\n-----Output-----\nPer each line output the number of the last node in the path, described by S, modulo 109+7.\n\n-----Constraints-----\n- 1 \u2264 |T| \u2264 5\n- 1 \u2264 |S| \u2264 10^5\n- Remember that the tree is infinite, so each path described by appropriate S is a correct one.\n\n-----Example-----\nInput:\n4\nlrl\nrll\nr\nlllr\nOutput:\n10\n14\n4\n13\n\n-----Explanation-----\nSee the example in the statement for better understanding the samples.\nUse Standard Input format\nANSWER:\n"}}