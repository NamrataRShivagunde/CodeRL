{"725": {"code": ["\nExample-----\nK\n\n-----Constraints-----\n\n- 1 \u2264 M \u2264 N \u2264 K\n\n\n\n\n\n\n\n\n\n 2 1 1\n5 3 3 1 2 1\n5 3 3 3\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 2 1 1\n5 3 3\n7", "\nExample-----\n\nK\n\nExample-----\n\n\n\n\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 M \u2264 7\n- 1 \u2264 7 7 7 7 7 7 7 7 7 7 7 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 2\n4 3 1\n", "\n-----Notes-----\n\n\n\n-----Notes-----\n\n\n\n\n-----Example-----\n\n- 1 \u2264 T \u2264 N \u2264 K \u2264 N-1\n- 1 \u2264 M \u2264 N\n\n\n\n\n 1\n\n\n\n\n\n\n\n\n\n\n\n\n 2\n2 3 1 1\n5", "\nExample-----\n\n-----Example-----\n\nA test case is for a few test cases:\n K\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n-----Example-----\n\n\n\n1 3 1 1 1\n1 3 1 1\n2 3 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 1 1 1 1\n5 3 3\n\n 1", "\nExample-----\n\n-----Example-----\n\n\n\n\n\n\n\n- 1 \u2264 T \u2264 K \u2264 N \u2264 K \u2264 M \u2264 N\n\n\n\n\n\n 1 1 1\n 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n 2 1\n5 3", "\nExample-----\n\n\n\n\n\n\n\nN - K - M\n1 - M - K - 1\n\n-----Example-----\n\nThe Little Elephant\n\n- 1 \u2264 T \u2264 T\n\n\n\n\n\n 1 1 2 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n 2 1 2 1\n4 3 1 2", "\nExample-----\n\n\n\n-----Notes-----\n\nThe Little Elephant is the law of the Zoo.\n\n\n\n\n\n\n\n5 3 2\n1 3 2 2\n5 3 3\n5 3 2\n 1\n 1\n 7 7 7 7\n\n\n\n\n\n\n\n\n\n\n- 1\n1\n5 3 2\n\n 1 2 1", "\nExample-----\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n- 1 \u2264 T \u2264 K \u2264 N \u2264 K \u2264 M \u2264 11\n\n\n\n\n 2 1\n\n\n\n\n\n\n\n\nExample-----\n\n\n\n\n\n 1 2 1\n5 3 2\n7 7", "\nExample-----\n\n-----Example-----\n\nThe Little Elephant and his friends from Zoo were returning from Lviv.\n\n\n\n\n\n\n\n\n\n\n 2 1 1\n\n2 3 1 1 1\n 1 3 1 1\n\n 1 2 3\n\n\n\n\n\n\n\n\n\n3 3 1 2 2\n1 3 2 2\n 1 2", "\nExample-----\n\n-----Example-----\n\nTreathalyzer:\nK\n\n\n-----Constraints-----\n\n\n\n\n\n\n 1 2 1\n5 3 3\n 3 1 2 1\n5 3 3 3\n 1\n 2 2 1\n 1 2 1\n 1\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n1 3 1 2 1\n1 3 1 2 1", "\nExample-----\n\n-----Constraints-----\nK -1\n\n-----Example-----\n\nThe Little Elephant:\n\n\n-----Constraints-----\n\n\n\n- 1 \u2264 N\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n 1 2 1\n\n\n\n\n\n\n\n\n\n\n\n\n5 3 2\n 1 2 1\n5 3 2", "\nExample-----\n\nExample:\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n\n\n\n-----Example-----\n\n\n\n- 1 \u2264 T \u2264 11\n\n\n\n\n\n\n\n 1 2 1\n 2 1\n\n\n\n\n\n\n\n\n\n\n1 3 1 1\n1 3 1 1\n 1 1", "\nExample-----\n\n-----Input-----\n\nK\n\n\n-----Example-----\n\nExample:\n\n-----Input-----\n\nExample:\n\n-----Constraints-----\n\n0 \u2264 0\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n 1 2 1\n5", "\nExample-----\nK = 0\n\n-----Example-----\n\nExample:\n\n-----Input-----\n\n1 3 1 2 3 1\n5 3 3\n1 3 1 1 1\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n 2\n 2\n\n\n\n\n\n\n\n\n1 3 1 1 2 1\n\n\n\n5 3 2\n5 3 2", "\n\n-----Notes-----\n\n\n\n\n\n\n\n\n\n1 1 1 1\n\n-----Constraints-----\n\n0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n\n 3 1 2 1\n1 3 1 1 1\n\n 1\n\n\n\n\n\n\n\n\n\n\n\n\n1 3 1 1 2\n5 3 1 2\n 1 2", "\nExample-----\n\n--- Examples-----\n\n-----Example-----\n\n- 1 3 1 1 2 1 1\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n 1 2 1 1\n5 3 1 1 1 1\n5 3 1 1 1 1\n 1 1 1\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n 1 2 1\n5 3", "\nExample-----\n\n\n\n\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 K \u2264 N \u2264 K \u2264 K\n\n\n\n\n\n\n 2 2 2\n 1 2 1\n\n\n\n\n\n\n\n\n\n\n-----Notes-----\n\n\n\n\n 2 1\n5 3 3 7 7", "\nExample-----\n\n\n\n\n\n\n\n- 1 \u2264 K \u2264 N \u2264 N\n- 1 \u2264 N \u2264 K\n- 1 \u2264 N \u2264 K\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5 3 3\n1 3 1 2 1\n 1", "\nExample-----\n\n-----Constraints-----\nK\n- 1 \u2264 M \u2264 N\n\n-----Example-----\n\n\n\n\n\n\n\n\n 2 2 1\n5 3 3\n1 3 1 1\n5 3 3\n7 7 7 7 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 1 2 1\n5 3 3\n7 7", "\n\n-----Notes-----\n\n\n\n\n\n\n\n\n\n\n-----Notes-----\n\n1 3 2\n5 3 1\n1 3 2\n3 3 1\n\n 1 2\n5 3 1 2\n1 3 1 1\n1 3 1 1\n\n 2\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n1 3 1\n1 3 1 1 2"], "prompt": "\nQUESTION:\nThe Little Elephant and his friends from the Zoo of Lviv were returning from the party. But suddenly they were stopped by the policeman Big Hippo, who wanted to make an alcohol test for elephants.\nThere were N elephants ordered from the left to the right in a row and numbered from 0 to N-1. Let R[i] to be the result of breathalyzer test of i-th elephant.\nConsidering current laws in the Zoo, elephants would be arrested if there exists K consecutive elephants among them for which at least M of these K elephants have the maximal test result among these K elephants.\nUsing poor math notations we can alternatively define this as follows. The elephants would be arrested if there exists i from 0 to N-K, inclusive, such that for at least M different values of j from i to i+K-1, inclusive, we have R[j] = max{R[i], R[i+1], ..., R[i+K-1]}.\n\nThe Big Hippo is very old and the Little Elephant can change some of the results. In a single operation he can add 1 to the result of any elephant. But for each of the elephants he can apply this operation at most once.\nWhat is the minimum number of operations that the Little Elephant needs to apply, such that the sequence of results, after all operations will be applied, let elephants to avoid the arrest? If it is impossible to avoid the arrest applying any number of operations, output -1.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains three space-separated integers N, K, M. The second line contains N space-separated integers  R[0], R[1], ..., R[N-1] denoting the test results of the elephants.\n\n-----Output-----\nFor each test case, output a single line containing the minimum number of operations needed to avoid the arrest.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- 1 \u2264 M \u2264 K \u2264 N \u2264 17\n- 1 \u2264 R[i] \u2264 17\n\n-----Example-----\nInput:\n4\n5 3 2\n1 3 1 2 1\n5 3 3\n7 7 7 7 7\n5 3 3\n7 7 7 8 8\n4 3 1\n1 3 1 2\n\nOutput:\n0\n1\n1\n-1\n\n-----Explanation-----\nExample case 1. Let's follow the poor math definition of arrest. We will consider all values of i from 0 to N-K = 2, inclusive, and should count the number of values of j described in the definition. If it less than M = 2 then this value of i does not cause the arrest, otherwise causes.i{R[i],...,R[i+K-1]}max{R[i],...,R[i+K-1]}For which j = i, ..., i+K-1\nwe have R[j] = maxConclusioni=0{1, 3, 1}max = 3R[j] = 3 for j = 1does not cause the arresti=1{3, 1, 2}max = 3R[j] = 3 for j = 1does not cause the arresti=2{1, 2, 1}max = 2R[j] = 2 for j = 3does not cause the arrest\nSo we see that initial test results of the elephants do not cause their arrest. Hence the Little Elephant does not need to apply any operations. Therefore, the answer is 0.\nExample case 2.We have N = 5, K = 3, M = 3. Let's construct similar table as in example case 1. Here the value of i will cause the arrest if we have at least 3 values of j described in the definition.i{R[i],...,R[i+K-1]}max{R[i],...,R[i+K-1]}For which j = i, ..., i+K-1\nwe have R[j] = maxConclusioni=0{7, 7, 7}max = 7R[j] = 7 for j = 0, 1, 2causes the arresti=1{7, 7, 7}max = 7R[j] = 7 for j = 1, 2, 3causes the arresti=2{7, 7, 7}max = 7R[j] = 7 for j = 2, 3, 4causes the arrest\nSo we see that for initial test results of the elephants each value of i causes their arrest. Hence the Little Elephant needs to apply some operations in order to avoid the arrest. He could achieve his goal by adding 1 to the result R[2]. Then results will be {R[0], R[1], R[2], R[3], R[4]} = {7, 7, 8, 7, 7}. Let's check that now elephants will be not arrested.i{R[i],...,R[i+K-1]}max{R[i],...,R[i+K-1]}For which j = i, ..., i+K-1\nwe have R[j] = maxConclusioni=0{7, 7, 8}max = 8R[j] = 8 for j = 2does not cause the arresti=1{7, 8, 7}max = 8R[j] = 8 for j = 2does not cause the arresti=2{8, 7, 7}max = 8R[j] = 8 for j = 2does not cause the arrest\nSo we see that now test results of the elephants do not cause their arrest. Thus we see that using 0 operations we can't avoid the arrest but using 1 operation can. Hence the answer is 1.\nExample case 3.We have N = 5, K = 3, M = 3. Let's construct similar table as in example case 1. Here the value of i will cause the arrest if we have at least 3 values of j described in the definition.i{R[i],...,R[i+K-1]}max{R[i],...,R[i+K-1]}For which j = i, ..., i+K-1\nwe have R[j] = maxConclusioni=0{7, 7, 7}max = 7R[j] = 7 for j = 0, 1, 2causes the arresti=1{7, 7, 8}max = 8R[j] = 8 for j = 3does not cause the arresti=2{7, 8, 8}max = 8R[j] = 8 for j = 3, 4does not cause the arrest\nSo we see that for initial test results of the elephants the value of i = 0 causes their arrest. Hence the Little Elephant needs to apply some operations in order to avoid the arrest. He could achieve his goal by adding 1 to the result R[1]. Then results will be {R[0], R[1], R[2], R[3], R[4]} = {7, 8, 7, 8, 8}. Let's check that now elephants will be not arrested.i{R[i],...,R[i+K-1]}max{R[i],...,R[i+K-1]}For which j = i, ..., i+K-1\nwe have R[j] = maxConclusioni=0{7, 8, 7}max = 8R[j] = 8 for j = 1does not cause the arresti=1{8, 7, 8}max = 8R[j] = 8 for j = 1, 3does not cause the arresti=2{7, 8, 8}max = 8R[j] = 8 for j = 3, 4does not cause the arrest\nSo we see that now test results of the elephants do not cause their arrest. Thus we see that using 0 operations we can't avoid the arrest but using 1 operation can. Hence the answer is 1. Note that if we increase by 1 the result R[2] instead of R[1] then the value i = 2 will cause the arrest since {R[2], R[3], R[4]} will be {8, 8, 8} after this operation and we will have 3 values of j from 2 to 4, inclusive, for which R[j] = max{R[2], R[3], R[4]}, namely, j = 2, 3, 4.\nExample case 4. When M = 1 the Little Elephant can't reach the goal since for each value of i from 0 to N-K we have at least one value of j for which R[j] = max{R[i], R[i+1], ..., R[i+K-1]}.\nUse Standard Input format\nANSWER:\n"}}