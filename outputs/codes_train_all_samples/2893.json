{"2893": {"code": ["\n\nUse Call-Based format\n# Task\n\n \n\nUse Call-Based format\n\nUse Call-Based format\n# Example\n\nUse Call-Based format\n\n\n# Task\n\n# Task\n# Task\n\n\n\t\n# Task\n\n# Task\n\n\t\n\n \n \n\n\n\n# Task\n# Example\n\n\n\n# Task\n# Task\n L", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n# Task\n\n\n\n# Example\n\n\n# Input/Output\n\n# Task\n# Task\n\n\n\t\n# Task\n\n# Task\n\n\t\n\n\n\n\n\n\t\n\n# Task\n\n# Task\n\n\t\n# Task\n# Task\n Loner", "\nUse Call-Based format\n# Task\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n# Task\n\nUse Call-Based format\n\n\n# Task\n\n# Task\n\n\n\n\n# Task\n# Task\n# Example\n\n\n\t\n\n\n\n\n\n# Task\n# Task\n\n\n# Task\n\n# Task\n Loner", "\t\nUse Call-Based format# Task\n\n\n\nUse Call-Based format\n\n\n\n# Task\n\n\n# Task\n\n# Task\n# Input/Output\n\n\n\n\t\n# Task\n# Task\n\n# Task\n\n\n\t\n\n\n\n\n\n\n\n# Task\n# Task\n\n# Example\n\n\n\n\n# Task\n Lonerz", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n# Task\n\n\n# Input/Output\n\n\n\n# Task\n\n# Input/Output\n\n# Task\n# Input\n\n\n\n\n# Task\n\n# Task\n\n\t\n\n\n\n\n# Task\n \n\n# Task\n\n\n\n# Task\n# Task\n Lonerz", "\nUse Call-Based format\nUse Call-Based format\n# Example\n\n hopes to grow\n\n\n\n\n Use Call-Based format\n\n# Input/Output\n\n\n# Task\n\n# Task\n\n\n\n\t# Task\n\n\n# Task\n\n\t\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Task\n\n\n# Task\n L", "\nUse Call-Based format\n\n\n\n# Task\n\n Use Call-Based format\n\n# Example\n\n\n# Input/Output\n\n\n\n# Task\n\t\n\n\n\t\n# Task\n\n# Task\n# Task\n# Example\n\n\n\n\n\n\n\n\n\n# Task\n# Task\n\n# Example\n\n# Input/Output\n# Task\n#", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Task\n\n\n\n\t\n\n# Task\n\n\n# Task\n \n\n\t\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n# Task\n Loner", "\nUse Call-Based format# Example\n\n [input]\n\t\n\nUse Call-Based format\n\n# Task\n\n\n\n# Task\n\n# Task\n# Task\n\n\n\t# Task\n# Task\n# Input/Output\n\n\t\n\n\n\n\n# Example\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n# Example\n# Task\n", "\nUse Call-Based format\n\nUse Call-Based format\n\n needs to grow to plant\n\nUse Call-Based format\n\n\n# Task\n\n\n# Example\n\n\n\n\n# Task\n# Example\n\n\n\n\t\n\n\n# Task\n\n\n\t\n\n\n\n# Example\n\n\n# Task\n# Example\n\n\n\t\n# Task\n L", "\n\n\nUse Call-Based format\n\n\n\n# Task\n\n\n\n# Input/Output\n\n\n# Task\n\n# Task\n\n# Input/Output\n\n\n\n\t\n\n# Task\n\n# Task\n\n\t\n\n# Task\n gets the minimum number of plants\n\n\n\n# Task\n# Task\n\n# Input/Output\n\n\n\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n# Task\n\n\n\n# Input/Output\n\n\n\n# Task\n# Task\n add `n`\n \n\n\n\t# Task\n\n# Task\n\n\n\n\n# Task\n add `n`\n \n\n# Task\n# Example\n\n# Task\n\n# Task\n Lonerz got some", "\n# Use Call-Based format\n\n\n\nUse Call-Based format\n\n\n# Task\n\n\n# Input/Output\n\n\n# Task\n# Task\n# Input/Output\n\n\n\t\n# Task\n\n# Task\n\n\t\t\n\n\n\n\n\n# Example\n\n\n# Task\n# Example\n\n# Task\n\n\t\n#\n# Task\n", "\nUse Call-Based format\n# Task\n\n\n\n\nUse Call-Based format\n\n\n\n# Example\n\n\n\n# Input/Output\n\n\n# Task\n# Task\n\n\n\t\n# Task\n\n# Task\n\n\n\n\t\n\n\n\n\n\n\n\n# Task\n\n#\n\n# Input/Output\n\n\n\n# Task\n Loner", "\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n# Task\n\n\n\n# Output\n\n\n# Task\n# Task\n\n\n\n\t\n\n# Task\n\n# Task\n# Example\n\n\n\n\n\n\n# Example\n\n\n\n# Example\n\n\n\n# Task\n# Example\n\n\n# Task\n Lonerz got", "\nUse Call-Based format\n# Task\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n# Input/Output\n\n\n\n# Task\n\n# Task\n# Input/Output\n\n\n\n\n# Task\n# Example\n\n\n\n\n\n\n\n# Task\n\n#\n\n# Task\n\n\n# Task\n\n# Task\n", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n Use Call-Based format\n\n# Example\n\n\n\n# Task\n\n\n# Task\n Add 2 plants\n \n \n\n\n\t\n\n\n# Task\n\n\t\n\t\n\n\n\n\n# Task\n# Task\n\n# Example\n\n\n# Task\n# Task\n L", "\t\nUse Call-Based format# Example\n\ngrow\n\n# Example\n\n\n\n\n\n\n# Input/Output\n\n\n# Function\n\n\n\n\n# Task\n\n\n\n\n# Task\n# Task\n# Example\n\n\n\t\t\n\n\n\n\n# Example\n\n\n# Task\n# Task\n\n\n#\n# Task\n Lonerz got", "\nUse Call-Based format\n# Task\n\n\n\n\n\n# Task\n\n\n\n# Input/Output\n\n\n#\n# Task\n\n# Input\n\n\n\n\t\n\n# Task\n# Task\n\n# Input/Output\n\n\n\t\n\n\n\n# Example\n\n\n\n# Task\n# Task\n\n# Example\n\n\n## Task\n L", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n# Task\nUse Call-Based format\n\n\n# Task\n\n# Task\n# Input/Output\n\n\n\n\t\n\n# Task\n# Task\n# Input/Output\n\n\n\n\n\n\n\n\n# Task\n\n# Task\n\n# Example\n\n# Task\n# Task\n\n# Task"], "prompt": "\nQUESTION:\n# Task\n Lonerz got some crazy growing plants and he wants to grow them nice and well.\n \n Initially, the garden is completely barren. \n \n Each morning, Lonerz can put any number of plants into the garden to grow. \n \n And at night, each plant mutates into two plants. \n \n Lonerz really hopes to see `n` plants in his garden.\n\n Your task is to find the minimum number of plants Lonerz has to plant to get `n` plants one day.\n\n# Example\n\n For `n = 5`, the output should be `2`.\n \n Lonerz hopes to see `5` plants. He adds `1` plant on the first morning and on the third morning there would be `4` plants in the garden. He then adds `1` more and sees `5` plants. \n \n So, Lonerz only needs to add 2 plants to his garden.\n \n For `n = 8,` the output should be `1`.\n \n Lonerz hopes to see `8` plants. Thus, he just needs to add `1` plant in the beginning and wait for it to double till 8.\n \n# Input/Output\n\n The number of plant lonerz hopes to see in his garden.\n \n \n - `[input]` integer `n`\n \n   `1 <= n <= 10^7`\n\n\n - `[output]` an integer\n\n The number of plants Lonerz needs to plant.\ndef plant_doubling(n):\n\t\nUse Call-Based format\nANSWER:\n"}}