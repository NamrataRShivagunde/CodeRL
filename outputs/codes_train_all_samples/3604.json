{"3604": {"code": ["\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# An example:\n\n* `n = 300000`\n\n*\n\n___\n\n\n\n\n# The test", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# The test suite:\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n\n___\n\n\n\n\n\n# Performance tests:\n\n>>> performant_numbers(1)\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n# An example:\n\n# Use Call-Based format\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n# Tests:\n\n# Tests:\n\n## Tests\n\n\n\n\n\n\n\n\n\n\n\n## Tests", "\n\n## Example usage\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThis kata is based on a *variation* of *Happy Numbers* by TySlothrop\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n# Tests\n\n\n\n\n\n\n\n\n\n___\n\n#", "\n\n\n\nHappy numbers:\n\n\n\n\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Representing a function:\n\n___\n\n\n\n\n\n\n\n# Representing a function:\n\n___", "\n\n\n\n# Happy numbers:\n\nHappy numbers are the same number of all\n\nHappy numbers are the same number of the reference solution.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n\n\n\n# Tests:\n\n\n\n\n\n\n\n# The testing suite:\n", "\n\n# The task:\n\n## Performant numbers\n\n## Performance numbers\n\n## Performance numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n\n\n\n\n\n# Tests:\n\n\n\n\n\n\n\n\n\n\n\n## Tests:\n\n## Performant", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThis kata is based on a [variation](https://kata.codewars.com/kata/variation-5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Tests:\n\n* `", "\n\n\n# The task:\n\n# This is a task:\n\n#\n\n\n\n\n\n\n\n\n\n# Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n# A test suite:\n\n\n\n\n# A test suite:\n\n______\n\n\n\n\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nThis kata is based on a call-based format\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n# The task:\n\n## Tests\n\n# Use Call-Based format\n\n\n\n\n\n\n\n# Represents", "\n\n# Tests:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nCall-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n\n\n\n\n\n# The final result:\n\n\n\n\n\n\n\n\n\n\n# The final result:\n\n", "\n\n# The task:\n\n# Performant numbers:\n\n#\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Performance:\n\n# This is a very short test suite:\n\n# The code:\n\n\n\n___\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__,__", "\n\n# Example:\n\n# The function `performant_numbers` takes a number `n`.\n\n# Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n___\n\n\n\n\n# Tests:\n\n\n\n\n\n\n\n# The code:\n\n## The", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThis kata is based on a *variation* of *Happy Numbers* by TySlothrop...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Information:\n\n\n\n___\n\nHappy", "\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n# This code:\n\n# Tests:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n# The task:\n\n\n\n\n\n\n\n# Test suite:\n\n\n\n# The task:\n\n", "\n\n# Use Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n___\n\n\n\n\n___\n\n\n\n\n___\n\n\n\n# Run a function:\n\n# The function\n\n___\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The test suite:\n\n* `5000` tests with number `n` being an integer\n\n___\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__  __  __  __ ", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThis kata is based on a call-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Performance:\n\n# Performance tests\n\n___\n\n\n\n\n\n\n\n\n\n___\n\n# The use of the `", "\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n___\n\nUse Call-Based format\n\nTRAILING:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n___\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A few tests\n\n", "\n\n\n\n# The task:\n\n## Performance:\n\n# This kata is based on a call-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The task:\n\n\n\n\n\n## Tests\n\n## This kata is based on a variation\n\n\n\n"], "prompt": "\nQUESTION:\nThis kata is based on a [variation](https://www.codewars.com/kata/happy-numbers-5) of *Happy Numbers* by TySlothrop. It is advisable to complete it first to grasp the idea and then move on to this one.\n\n___\n\nHello, my dear friend, and welcome to another *Happy Numbers* kata! What? You're not interested in them anymore? They are all the same? But what if I say that this one is a *performance version*...  \n\n___\n\n# Your task:\n\nWrite a function `performant_numbers` which takes a number `n` as an argument and returns a list of all *happy numbers* from `1` to `n` inclusive. For example:\n\n```\nperformant_numbers(10)   =>  [1, 7, 10]\nperformant_numbers(50)   =>  [1, 7, 10, 13, 19, 23, 28, 31, 32, 44, 49]\nperformant_numbers(100)  =>  [1, 7, 10, 13, 19, 23, 28, 31, 32, 44, 49, 68, 70, 79, 82, 86, 91, 94, 97, 100]\n```\n\n# Test suite:\n\n* `5000` tests with number `n` being up to `300000`\n* The reference solution takes around `4.9` seconds to calculate the result\n* you are not allowed to hardcode the sequence: you'll have to compute it (max length of the code: 1700 characters)\n\n___\n\nWill you take up the challenge?\ndef performant_numbers(n, happy_list=sorted(happy_set)):\n\t\nUse Call-Based format\nANSWER:\n"}}