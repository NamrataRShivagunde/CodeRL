{"4822": {"code": ["\n\n Proceeding\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Validation\n\n\n```python\nimport mastermind\n\nimport numpy\nimport numpy.array\n\n\n\n\n\n\n \n \n \n \n \n \n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n the", "\n\n# Effect\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\nThe Mastermind method will create a method with the following parameters:\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n \n \n \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n the wrong index. Elements are", "\n\n An example\n\n\n# Experimental\n\n\n# Bows\n\n\nThe Mastermind will return an array of 4 colours\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n \n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Rule\n\n\n```python\n", "\n\n Testing\n\n\n# Example\n\n\n# Example\n\n\n\n# Testing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmastermind(game)\n\n```\n\n\n\n\n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct index. Element `3", "\n\n\n\n\n# Definition\n\n\n\n# Conference\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n  game = Mastermind(game)\n  answer = game.check()\n\n\n\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n the", "\n\n# Example\n\n\n\n\n\n# Validation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck your method to see if the mastermind is correct\n\n```python\nMastermind\n\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n# Testing\n\n\n# the correct", "\n\n Functional\n\n\n# Example\n\n\n# Inventling\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n# Effects\n\n\n```python\n\nMastermind\n\n\nNote\n\n\n\n\n\n\n the correct", "\n\n\n\n# Test\n\n\n# Test\n\n\n\n# Test\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n# Definition\n\n\n\n\n\n\n\n\n\n\n\n\n the correct index you have passed so", "\n\n Another\n\n\n# Validation\n\n\n\n# Rejection\n\n\n\nThe Mastermind is a pencil test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct index. Element", "\n\n\n\n# Test\n\n\n\n\n\n\n# Rules\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return answer\n```\n\n\n# Example:\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n\n# Test\n\n\n the correct position", "\n\n Repetition\n\n\n# Validation\n\n\n\nThe Mastermind is a game object\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Mastermind is a game object\n\n\n\n\n\n \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct position.", "\n\n\n# Description\n\n\n\n# Suggestions\n\n\n\n# Hard-coded\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncheck([\"Red\", \"Green\", \"Red\", \"Blue\", \"Purple\"]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct index", "\n\n Asterisk\n\n\n# Languages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Tests\n\n\nThe first example is\n\n\n# Example\n\n\n\n\n\n\n \n\n\n\n\n \n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n  return answer\n", "\n\n Example:\n\n# Better\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Testing\n\n\n\n\n\n\n\n\n```python\n\n\nThe Mastermind is a game\n\n```\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct", "\n\n Task\n\n\n# Test\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n```python\n\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n```python\n\nmastermind(game)\n\n```\n\n\n\n\n", "\n\n Representation\n\n\n# Experimental\n\n\n\n# Problems\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck the array\n\n```python\nmastermind(game)\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n the correct index. \n\n", "\n\n\n# Definition\n\n\n# Example\n\n\n# Description\n\n\n\n# Example\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct index. \n\n```", "\n\n# Traction\n\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n# Run\n\n\n\n# Test\n\n\nThe Mastermind is a test\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n the correct index. Element", "\n\n Example\n\n\n# Example\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n \n\n```\n\n\n\n\n\n\n\n\n\n\n\n# Definition\n\n\n# Definition\n\n\n\n\n\n\n\n\n\n\n the correct index", "\n\n Practice\n\n\n# Safety\n\n\n\n\n\n\n\n# Literature\n\n\n\n\n\n\n\n\n\n\n# Tests\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n# Effects\n\n\n# Effects\n\n\n# Effects\n\n\n\n\n\n\n\n\n\n\n the"], "prompt": "\nQUESTION:\n# Introduction\n\n\nMastermind or Master Mind is a code-breaking game for two players. The modern game with pegs was invented in 1970 by Mordecai Meirowitz, an Israeli postmaster and telecommunications expert. It resembles an earlier pencil and paper game called Bulls and Cows that may date back a century or more. (Source Wikipedia)\n\n\n\n# Rules\n\n\n1. The Mastermind (computer) will select 4 colours. The colours are randomly selected from [\"Red\", \"Blue\", \"Green\", \"Orange\", \"Purple\", \"Yellow\"]. Colours can be duplicated but there will always be exactly 4.\n\n2. The Mastermind will return an array back to you. For every correctly positioned colour in the array an element of \u201cBlack\u201d is returned. For every correct colour but in the wrong position an element of \u201cWhite\u201d will be returned.\n\n3. Passing the correct array will pass the Kata test and return \"WON!\".\n\n4. Passing an invalid colour will fail the test with the error \"Error: you have given an invalid colour!\"\n\n5. Passing an invalid array length will fail the test with the error \"Error: you must pass 4 colours!\"\n\n6. Guessing more than 60 times will fail the test with the error \"Error: you have had more than 60 tries!\"\n\n7. All colours are capitalised\n\n8. The return array will be shuffled!\n\n\n# Task\n\n\nYour task is to create a method called mastermind() that will take an object called  game. The object has already been preloaded so you do not need to worry about it.\n\nWithin your method you must pass an array into the game object method .check(). This will evoke the object to check your array to see if it is correct.\n\n\n# Example\n\nIf the Mastermind selected the following colours\n\nThen the array you are trying to solve is `[\"Red\", \"Blue\", \"Green\", \"Yellow\"]`\nSo you guess with \n\n`[\"Red\", \"Orange\", \"Yellow\", \"Orange\"]`\n\nYour method would look like this.\n```python\ndef mastermind(game):\n  answer = game.check([\"Red\", \"Orange\", \"Yellow\", \"Orange\"])\n```\nThe element `0 => Red` is at the correct index so `Black` is added to the return array. Element `2 => Yellow` is in the array but at the wrong index possition so `White` is added to the return array.\n\nThe Mastermind would then return `[\"Black\", \"White\"]` (But not necessarily in that order as the return array is shuffled my the Mastermind).\n\nKeep guessing until you pass the correct solution which will pass the Kata.\n\n# Check result\nTo check the Masterminds return value\n```python\n  answer = game.check([\"Red\", \"Orange\", \"Yellow\", \"Orange\"])\n  print (answer)\n```\n\nGood luck and enjoy!\n\n# Kata Series\nIf you enjoyed this, then please try one of my other Katas. Any feedback, translations and grading of beta Katas are greatly appreciated. Thank you.\n\n\u00a0Maze Runner\n\u00a0Scooby Doo Puzzle\n\u00a0Driving License\n\u00a0Connect 4\n\u00a0Vending Machine\n\u00a0Snakes and Ladders\n\u00a0Mastermind\n\u00a0Guess Who?\n\u00a0Am I safe to drive?\n\u00a0Mexican Wave\n\u00a0Pigs in a Pen\n\u00a0Hungry Hippos\n\u00a0Plenty of Fish in the Pond\n\u00a0Fruit Machine\n\u00a0Car Park Escape\ndef mastermind(game):\n\t\nUse Call-Based format\nANSWER:\n"}}