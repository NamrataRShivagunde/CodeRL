{"2604": {"code": ["\n=====Function Descriptions=====\nitertools.permutations(iterable, 2)\nUse Standard Input format\n\n\n\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable, r)\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n=====Function", "\n=\n1\n2\n3\n\n\n:\n=====Function Descriptions=====\nitertools.permutations\nitertools.permutations\n\n\n\n=====Standard Input format\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n=====Function D", "=====Standard Input format\nUse Standard Input format\n\n\n\n:\n=====Function Descriptions=====\nitertools.permutations\nUse Standard Input format\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n=====", "\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable[, r])\n\nUse Standard Input format\n\n\n=====Function Descriptions=====\nitertools.permutations()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Output Format Description=====\n\n\n\n=====Function Descriptions=====\n=====", "=====Standard Input formatUse Standard Input format\n\n=====Function Descriptions=====\nitertools.permutations(iterable[, r])\nUse Standard Input format\n\n\n:\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable)\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=========", "\n=====Function Descriptions=====\nitertools.permutations(iterable)\nUse Standard Input format\n\n\n\n\n\n\n\n=====Question Line Format=====\nitertools.permutations(iterable)\n\n\n=====Question Line Format=====\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n=====Function Descriptions====", "=====Function Descriptions=====\nitertools.permutations(iterable,3)\nUse Standard Input format\n\n\n\n:\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable,10)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n=====Function Descriptions====", "=====Example Statement=====\nitertools.permutations()\nUse Standard Input format\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\nitertools.permutations\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools\n\n\n\n=====", "=====Standard Input formatUse Standard Input format\n\n=====Function Descriptions=====\nitertools.permutations(iterable, 2, 3)\n\n\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n=====Function Descriptions=====\n", "=====Function Descriptions=====\nitertools.permutations(iterable[, r])\nUse Standard Input format\n\n\n\n:\n\n\n\n=====Function Descriptions=====\nitertools.permutations()\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n=====Function Descriptions=====", "\n=====Function Descriptions=====\nitertools.permutations(iterable, rlength=2)\nUse Standard Input format\n\n\n\n:\n\n\n\n\n\n=Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n=====Function", "=====Standard Input format\nUse Standard Input format\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable[, r])\n\nUse Standard Input format\n\n=====Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n=====Function", "=====Standard Input formatUse Standard Input format\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable, rlength=2)\nUse Standard Input format\n\n\n=====Function Descriptions=====\n\n=\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n=====", "\n=====Function Descriptions=====\nitertools.permutations(iterable, rlength=None)\nUse Standard Input format\n\n\n\n:\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n=====", "=====Standard Input format\nUse Standard Input format\n\n\nUse Standard Input format\n\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable[,r])\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n====", "\n=====Function Descriptions=====\nitertools.permutations()\nUse Standard Input format\n\n\n\n\n\n\n\n=====Question Line Format=====\nprint a list of permutations of elements in an iterable\n\n=\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n=====Problem Statement=========", "\n=====Function Descriptions=====\nitertools.permutations\nUse Standard Input format\n\n\n\n:\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\n\n\n\n=====Function Descriptions=====", "\n=====Function Descriptions=====\nitertools.permutations(iterable, rlength)\nUse Standard Input format\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations\nitertools.permutations()\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n=====Function Descriptions", "=====Question Statement=====\nitertools.permutations(iterable)\nUse Standard Input format\n\n\nUse Standard Input format\n\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable)\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====\n=====", "\n=====Function Descriptions=====\nitertools.permutations(iterable)\nUse Standard Input format\n\n\n\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.permutations(iterable)\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n=====Function D"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nitertools.permutations(iterable[, r])\n\nThis tool returns successive rlength permutations of elements in an iterable.\nIf r is not specified or is None, then r defaults to the length of the iterable, and all possible full length permutations are generated.\nPermutations are printed in a lexicographic sorted order. So, if the input iterable is sorted, the permutation tuples will be produced in a sorted order.\n\nSample Code\n>>> from itertools import permutations\n>>> print permutations(['1','2','3'])\n<itertools.permutations object at 0x02A45210>\n>>> \n>>> print list(permutations(['1','2','3']))\n[('1', '2', '3'), ('1', '3', '2'), ('2', '1', '3'), ('2', '3', '1'), ('3', '1', '2'), ('3', '2', '1')]\n>>> \n>>> print list(permutations(['1','2','3'],2))\n[('1', '2'), ('1', '3'), ('2', '1'), ('2', '3'), ('3', '1'), ('3', '2')]\n>>>\n>>> print list(permutations('abc',3))\n[('a', 'b', 'c'), ('a', 'c', 'b'), ('b', 'a', 'c'), ('b', 'c', 'a'), ('c', 'a', 'b'), ('c', 'b', 'a')]\n\n=====Problem Statement=====\nYou are given a string S.\nYour task is to print all possible permutations of size k of the string in lexicographic sorted order.\n\n=====Input Format=====\nA single line containing the space separated string S and the integer value k.\n\n=====Output Format=====\nPrint the permutations of the string S on separate lines.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}