{"3171": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\ncrashing_weights(weights):\n\nUse Call-Based format\n\nUse Call-Based format\n\necho\n\n\n\n\n\necho\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n## Usage\n\n\ncrashing_weights(weights)\n\n## Example\n\n\n[", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nYou are stacking a box containing gold weights on top.\n\n\n\n\n## Create function\n\n\n\n\n\n\n\n## Wikipedia\n\n\n\n\n## Example\n\n## Examples\n\n## Examples\n\nUse Call-Based format\n\n\n\n\n## Examples\n\n[", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ncrashing_weights(boxes)\n\n#\n\n\n\n## Examples\n\n# Usage\n\n\n\n\n\t\n#\n\n\n\n\n\n\n\n\n\n## Examples\n\n# Usage-Based format\n\n\n\ncrashing_weights([[2]]\n\n\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\ncrashing_weights(weights)\n\n# Example\ncrashing_weights(weights)\n\n# Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Warning:\n\n\n\n\n\n## Usage\n\n\n\n\n\n# You are stacking a box containing gold weights", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\ncrashing_weights(weights)\n\n## Examples\n\nUsage-Based format\n\n\n\n\n\n\n\n## Examples\n\n\n\n\n\n\n\n\ncrashing_weights(weights)\n\n## More details\n\n\n\n\n\n\n## Extra Examples\n\nyou are stack", "\nUse Call-Based format\n\n\n\n\n\n\n\n\ncrashing_weights(weights)\n\n## Examples\n\nUse Call-Based format\n\n# Use Call-Based format\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Usage\n\n\n\n\n\n## Examples\n\n## Use Call-Based format\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n## Usage\n\n\n# Use Call-Based format\n\n\n\n\n## Usage\n\nUse Call-Based format\n\n\n\n## Examples\n\n## Usage\n\n\n\n\n\n## Examples\n\n\n\n\n\n[1] --> [1] --> [2", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ncrashing_weights(weights)\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Printing\n\n\n\ncrashing_weights([[1, 2, 3],  --> [3])\n\n\nYou are stack", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\ncrashing_weights(weights)\n\n# This function is called in a Call-Based format\n\n\n\n\n\n\n\n\n## Usage-Based format\n\n\n\n\n\n\n\n\n\n\n\ncrashing_weights(weights)\n\n## This function\n\n\n\nYou are stack", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ncrashing_weights(weights)\n\n# Use Call-Based format\n\n\n\n\n## Examples\n\n\n\n\n\t\n## Usage\n\n\n\n\n\n## Examples\n\n## Examples\n\n\n\n\n\n\n## Usage\n\n\n\n\n\n\n# Use Call-Based format", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n## Examples\n\n# ------------\n\nUse Call-Based format\n\n## Examples\n\n## Examples\n\n# --------\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n[3", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n## Crashing effects\n\n\n\n\n\n## Crashing effect\n\n\n\n\n\n\n\n## Note\n\n\n\n\n\n\n## Examples\n\n## Usage\n\nUse Call-Based format\n\n\n## Example\n\n\n\n\n\n\n\n[3]", "\n\n\ncrashing_weights(weights)\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n## The default format\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Stacking\n\n[3]\n[2]\n[1] --> [2]\n\n\n\n\n\n\n```\n\nfor row in", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ncrashing_weights(weights):\n\nUse Call-Based format\n\nUse Call-Based format\n\n## Basic format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncrashing_weights(weights)\n\n## Examples\n\n\n\n\n\n\n[3", "\nUse Call-Based format\n\n\n\n\n\n\n\ncrashing_weights(weights)\n\n# Example:\n#\n\n# Use Call-Based format\n\n\n\n\t\n## Usage\n\n\n\n\n\n\n\n\ncrashing_weights([[3, 2, 3],  -->  [2, 3,  ],\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ncrashing_weights(weights)\n\nReturns:\n\n1 --> [3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncrashing_weights([[1, ,  ]])\n```\n\n\n\n\n\n\n\n\n\nYou are stacking some", "\n\n\ncrashing_weights(boxes)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Stacking\n\ncrashing_weights(boxes)\n\nUse Call-Based format\n## Use Call-Based format\n\n\n\n\n\n\n\n\n[2]      [3]      [4]", "\nUse Call-Based format\n\n\n\n\n\n\n\ncrashing_weights([[1, 2, 3], [1, ,  ]])\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Stacking\n\n\n\n## Stacking\n\n\n[1] --> [3] --> [9]\n\n\n[", "\n\n\n\n\n\n\ncrashing_weights(boxes)\n\n# Use Call-Based format\n\n\n\n\n# Use Call-Based format\n\n\n\n\n\n\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n# Returns\n\n# Weights\n\n## Notes\n\n\nUse Call-Based format\n\n\n\n\n\n\n[3", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\ncrashing_weights(boxes):\n\nUse Call-Based format\n\n\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n# Stacking\ncrashing_weights([[1, 2, 3]])\n#\n\n\n\n\n\n\nYou are stacking"], "prompt": "\nQUESTION:\nYou are stacking some boxes containing gold weights on top of each other. If a box contains more weight than the box below it, it will crash downwards and combine their weights. e.g. If we stack [2] on top of [1], it will crash downwards and become a single box of weight [3]\n```\n[2]\n[1] --> [3]\n```\nGiven an array of arrays, return the bottom row (i.e. the last array) after all crashings are complete.\n```\ncrashing_weights([[1, 2, 3],  --> [[1, 2,  ],      [[1,  ,  ]],\n                  [2, 3, 1],  -->  [2, 3, 4],  -->  [2, 2,  ],\n                  [3, 1, 2]])      [3, 1, 2]]  -->  [3, 4, 6]]\n\ntherefore return [3, 4, 6]\n```\n\n## More details\n\nboxes can be stacked to any height, and the crashing effect can snowball:\n```\n[3]\n[2]     [5]\n[4] --> [4] --> [9]\n```\nCrashing should always start from as high up as possible -- this can alter the outcome! e.g.\n```\n[3]                      [3]\n[2]     [5]              [2]     [3]\n[1] --> [1] --> [6], not [1] --> [3] \n```\nWeights will always be integers. The matrix (array of arrays) may have any height or width > 1, and may not be square, but it will always be \"nice\" (all rows will have the same number of columns, etc).\ndef crashing_weights(weights):\n\t\nUse Call-Based format\nANSWER:\n"}}