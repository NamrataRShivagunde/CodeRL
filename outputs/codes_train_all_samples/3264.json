{"3264": {"code": ["\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\nIn this Kata, you will implement a function `factorial` that takes an integer and returns a number of digits. \n\n\n\n\n\n\n\n\n\n\nKata,\n\n\n\n\n\nIn this Kata, you", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Function-Based format\n\n\nUse Function-Based format\n\nUse Function-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n - `factorial(n) =", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\t\n\n\t\n\n\n\n\t\n\n\n\n\n\n\nUse Function-Based format\n\nUse Python-Based format\n\nUse Python-Based format\n\n\nN is `10`\n\nN is `11`\n\n\n\n\n\n\n\n\n\nIn this Kata", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Function-Based format\n\n\n\n\n\nIn this Kata, you will implement a function `factorial`  \n\n\n\n\t\n\n\nIn this", "\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n`factorial(n)` has `factorial(n)` digits.  \n\nThis function is not publicly available. \n\n\n\n\n\n\n\n\n\nIn this Kata,", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\nUse Python-Based format\n\n\nUse Function-Based format\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\t\nUse Python-Based format\n\nIn this Kata", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nExample:\n\n\t\n\n\n\n\n\n\n\nUse Python-Based format\n\n\nUse Python-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n#### Examples:\n\n* count", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\nUse Call-Based format\n\n\n\n\t\n\t\n\n\n\nUse Python-Based format\n\n\nUse Python-based format\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\t\n\n\n\nIn this Kata, you will implement", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n`factorial(n)` has `3` digits. \n\nThis Kata is a Kata\n\n\n\n\n\n\n\n\n\tKata:\n\n* This", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\t\n\n\n\n\n\nIn this Kata, you will implement a function `factorial(n) = factorial(n)`.  \n\n\n\n\nUse Function-Based format\n\n\n\n\n\nKata:\n\n\n\n\n\n\t\nUse Function-Based format\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nUse Function-Based format\n\n\nUse Function-Based format\n\n\nUse Function-Based format\n\n\n\n\nIn this Kata, you will implement a function `factorial`\n\n\n\n\n\nIn this Kata,", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\t\n\n\t\n\n\n\n\nUse Call-Based format\n\n\nUse Function-Based format\n\nUse Function-Based format\n\n\n  \n\n\n\nUse Function-Based format\n\nIn this Kata, you will implement a function\n\n\n\n\nIn", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\nThis function is used for counting the number of digits in `factorial(n)`.\n\n\n\n\n\n\n\n\nUse Function-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n - The Kata", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\n\t\n\n\n\n\n\nUse Function-Based format\nIn this Kata, you will implement a function `factorial` that takes an integer.\n\n\n\n\nUse Function-Based format\n\n\n\n\nKata\n\n\n\n\n\n\n\nIn Kata, you will be", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\t\nUse Python-Based format\n\n\n\t\nUse Python-\n\n\n\n\n\n\n\n\n\n\n3 digits\n\n3 digits\n\n\n\n\n\n\n\t\nUse Python-Based format\n\n\n\n\n\n\nBetter", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nIn this Kata, you will implement a function `factorial(n) = 2` for the number of digits in `factorial(n)`. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this Kata, you", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\nUse Call-Based format\n\n\nKata:\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nI am an Kata, you could implement a function `factorial`. \n\n\n\n\n\n\n\n\n\n\nIn this Kata", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this Kata, you will implement a function `factorial(n)`\nIn this Kata\t\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nIn this Kata, you", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\n\t\n\n\t\n\n\n\n\n\nUse Function-Based format\n\n\nUse Function-Based format\n\nUse Function-Based format\n\n\n\n\n\n\n\n\n\n  \n\n\n\nIn this Kata, you will implement a function `factor", "\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\nThis Kata is a Kata implementation of the count function\n\n\n\nUse Python-Based format\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nIn this Kata, you will"], "prompt": "\nQUESTION:\nIn this Kata, you will implement a function `count` that takes an integer and returns the number of digits in `factorial(n)`. \n\nFor example, `count(5) = 3`, because `5! = 120`, and `120` has `3` digits.  \n\nMore examples in the test cases. \n\nBrute force is not possible. A little research will go a long way, as this is a well known series.\n\nGood luck!\n\nPlease also try:\ndef count(n):\n\t\nUse Call-Based format\nANSWER:\n"}}