{"2656": {"code": ["\n\n\n\n\n\nUse Call-Based format\n\n\n\n## Example\n\nuse Call-Based format\n\n\n\n\n\n\n# Example:\n\n\n\n* If the name is made up as two words:\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples:\n\n## Examples:\n\n## Examples:\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n* The function should be called with an array of strings of birds. \n\n* The function should return an array of strings\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n## Examples:\n\n\n## Examples:\n\n\n\n## Examples:\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n## Example\n\nUse Call-Based format\n\n* If the names are made up of one word:\n\n* The first letter from the first word*\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n## Examples:\n\n## Example:\n\n\n\n\n\n\n\n## Example:\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n# Example:\n\n\n## Example:\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n## Examples:\n\n*\n\n*\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n## Example:\n\n\n\n\n## Example:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n# Example\n\nuse Call-Based format\n\n* The code takes the first two letters from the first two words*\n\n\n\n## Examples\n\n\n\n:\n\n\n\n:\n\n\n\n\n## Example\n\n\n\n## Example\n\n\n\n\n## Example:\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n*\n\n\n\n\nUse Call-Based format\n\n## Example:\n\nUse Call-Based format\n\n*\n\n*\n\n## Example:\n\n\n\n*\n\n\n\n\n\n\n\n## Examples:\n\n\n\n\n\n\n\n\n\n\n\n## Examples:\n\n* The world's", "\n\n\n\n\nUse Call-Based format\n\n\n* The function should return an array of four-letter codes\n\n* The function should return an array of four-letter codes\n* The function should return an array of four-letter codes\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples:\n\n*", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Example\n\n\n\nuse Call-Based format\n\n\n\n* If the name is made up of one word, then the code takes the first letter from the first word\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example:", "\nUse Call-Based format\n\n\n\n\n\n\n\n# Example:\n\n## Example\n\nA function that takes an array of strings that are in uppercase-case\n\n\n## Example:\n\n\n\n## Example:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n## Examples:\n\n## Example:\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n\nThe function can be called with two or three arguments:\n\n* The function is called with three or three arguments\n* The function should return an array of codes\n* The function should return an array of strings\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nThe function can be called using the call-based format\n\n## Example:\n\n## Example\n\n\n## Example:\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n## Example:\n\n#\n\n\n\n\n## Example:\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n*\n* If the name has a single character, it takes the first letter from the first word*\n\n*\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n## Example\n\n\n\n# Example:\n#\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n## Example:\n\nUse Call-Based format\n\n\n\n\n\n\n## Example:\n\n\n\n*\n\n\n\n\n\n\n\n\n## Example:\n\n* Use Call-Based format\n\n\n\n\n\n\n## Example:\n\n\n\n\n## Example:\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n* If the name is made up as two words long, the code creates the first two letters from the first word*\n\n*\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n## Example:\n\n* If the world", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n## Example:\n\nUse Call-Based format\n\n*\n*\n\t\nUse Call-Based format\n\n\n\n*\n\n## Examples:\n\n\n\n\n\n## Example:\n\n\n\n## Example:\n\n# TODO:\n\n\n\n# Example:\n\n", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n## Example\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n## Example:\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n## Example:\n\n\n\n\n\n## Examples:\n\n##", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Example:\n\n## Example\n\n# Bird codes\n\n## Example\n\n\n\n\n\n\n## Examples:\n\n*\n*\n\n\n\n\n\n:\n\n\n\n## Examples:\n\n\n\n\n\n\n\n## Example:\n\n# Example:\n", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nThe function should return an array of four-letter codes\n\n## Example:\n\n\n\n\n\n## Examples:\n\n\n\n## Example:\n\n\n\n\n\n\n:\n\n\n\n## Example\n\n\n:\n\n## Examples:\n\n##\n\n\n\n##", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n## Example:\n\n\nUse Call-Based format\n\n\n\n\n*\n* If the name is made up of one word, it is separated by a space*\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Author:\n# The Bird", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nuse Call-Based format\n\n# Example:\n\n\n# Example:\n\n\t\n\n\n\n\n\n\n\n\n*\n\n## Examples\n\n\n\n\n\n\n\n## Examples\n\n## Examples\n\n\n\n\n\n## Example\n\n\n\n\n## Example\n"], "prompt": "\nQUESTION:\nIn the world of birding there are four-letter codes for the common names of birds. These codes are created by some simple rules:\n\n* If the bird's name has only one word, the code takes the first four letters of that word. \n* If the name is made up of two words, the code takes the first two letters of each word.\n* If the name is made up of three words, the code is created by taking the first letter from the first two words and the first two letters from the third word.\n* If the name is four words long, the code uses the first letter from all the words.\n\n*(There are other ways that codes are created, but this Kata will only use the four rules listed above)*\n\nComplete the function that takes an array of strings of common bird names from North America, and create the codes for those names based on the rules above. The function should return an array of the codes in the same order in which the input names were presented.\n\nAdditional considertations:\n\n* The four-letter codes  in the returned array should be in UPPER CASE.\n* If a common name has a hyphen/dash, it should be considered a space. \n\n## Example\n\nIf the input array is: `[\"Black-Capped Chickadee\", \"Common Tern\"]`\n\nThe return array would be: `[\"BCCH\", \"COTE\"]`\ndef bird_code(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}