{"2957": {"code": ["\n\nUse Call-Based format:\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nCall-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n:\nWrite", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\"Bike\"\n\n\n\u00a0\"School\"\u00a0\n\n\n\u00a0\"Beer\"\n\n\n\n\n\n\n:\n\n\n\n:\n\n\n\n:\n\n\n:\nWrite a", "\nUse Call-Based format:\n\n\n\n\n\n\n:\n\n\"Tom\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n", "\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:", "\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n\n\n\n\n:\n\n\n:\nWrite", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n:\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\nWrite", "\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\n\"Bike Gang\"\n\n\n\u00a0\"Cup\"\n\n\n\u00a0\"Beer\"\n\n\n\n\n\n\n\n\n:\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n:\n\nWrite a", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n:\n\n\n\n\n:\nWrite a function `getDrinkByProfession()` to get a function that takes a string parameter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\nWrite", "\n\nUse Call-Based format\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n\"Hipster Counsel\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\t\n\n\n\t", "\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format:\n\n\n\n\n\nCall-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nWrite", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\t\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n\tWrite", "\nUse Call-Based format:\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n:\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n", "\n\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n:\n", "\n: Use Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n: Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\t\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\nWrite a function"], "prompt": "\nQUESTION:\nWrite a function `getDrinkByProfession`/`get_drink_by_profession()` that receives as input parameter a string, and produces outputs according to the following table:\n\n\n\n\nInput\nOutput\n\n\n\"Jabroni\"\n\"Patron Tequila\"\n\n\n\"School Counselor\"\n\"Anything with Alcohol\"\n\n\n\u00a0\"Programmer\"\n\u00a0\"Hipster Craft Beer\"\n\n\n\u00a0\"Bike Gang Member\"\n\"Moonshine\"\u00a0\n\n\n\u00a0\"Politician\"\n\"Your tax dollars\"\u00a0\n\n\n\u00a0\"Rapper\"\n\"Cristal\"\u00a0\n\n\n\u00a0*anything else* \n\"Beer\"\u00a0\n\n\n\n\n\nNote: *anything else* is the default case: if the input to the function is not any of the values in the table, then the return value should be \"Beer.\"\n\nMake sure you cover the cases where certain words do not show up with correct capitalization. For example, getDrinkByProfession(\"pOLitiCIaN\") should still return \"Your tax dollars\".\ndef get_drink_by_profession(param):\n\t\nUse Call-Based format\nANSWER:\n"}}