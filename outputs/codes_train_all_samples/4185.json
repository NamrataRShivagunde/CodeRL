{"4185": {"code": ["\n`\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n```\n\nThis is the simple version of the shortest code series\n\n### Example2:\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n### Example 7:\n\n\n3,0)=0    \n", "```\n\n\n\n\n## Example:\n\n## Example2:\n\n\n\n\n\n## Example3:\n\nI will give you three parameters:\n\n```width```\n\n\n\n\n\n```gaps```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3,0)=0", "```\n\n`\n\n```\n\n\n\n## Example:\n\n\n\n### Challenge:\n\n\n\n## Challenge version\n\nExample2:\n\n\n\n\n\n\n\n\n\n`\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example 4:\n\n\n\n    \nExample5:\n   \n\n\n3,", "```\n```\n\n```\n\n## Challenges\n\n## Test:\n\n## Challenges\n\n## Example:\n\n### Examples:\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n   \n    \n3,7)=", "```\n\n## Example:\n```\n\n\n\n\n## Challenges:\n\n```width```\n\n```length```\n\n```gaps```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3,3)=", "\n`challenge```\n\n\n\n\n### Example:\n\n\n\n\n### Challenges:\n\n\n\n## Challenges:\n\n```width```\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n### Scenario:\n\n### Test:\n\n\n3,0)=0    \n", "\n```\n\n\n\n## Example:\n\n\n```\n\n\n\n\n```gaps```\n\n```width```\n\n```length```\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n    \n\n\n\n    \n\n   \n    \n3,3,0)=0     \n", "```\n`gaps```\n\n```\n\n\n\n\n\n\n\n\n\n```width```\n\n```length```\n\n\n\n\n\n\n\n```gaps```\n\n```width```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n## Continuation:\n\n   3,", "\n```\n\n```width```\n\n```length```\n\n```gaps```\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3,3)=7             ", "\n\n\n\n\n\n\n\n\n\n\n\n\n```gaps```\n\n```width```\n\n```length```\n\n```width```\n\n\n\n\n\n\n\n\n\n\n\n   \n    \n\n\n\n\n\n\n### Challenges:\n\n\n\n\n## Challenges:\n\n\n\n3,3)", "```\n```\n\n## Examples:\n\n### Example:\n\n - o - o - o - o\n\n## Examples:\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3,10)\n        o - o -", "```\n\n\n\n### Example:\n\n### Test:\n\nTest for Challenge version\n\n### Example:\n\n## Description:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n## Example 4:\n\n\n\n\n\n\n3,3)=10\n", "\n`\n\n\n\n\n\n## Examples:\n\n```\n\n\n\n\n\n\n```gaps```\n\n```width```\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Challenges:\n\n\n\n\n### Goal:\n\n### Examples:\n\n\n\n###3,3", "\n`gaps```\n\n```gaps```\n\n### Example: \n\n### Example 1:\n\n\n\n`gaps```\n\n`gaps```\n\n\n\n\n\n\n\n`gaps```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3,0)=0\n    we can", "```\n\n### Example:\n```\n\n```\n\n```\n\n```\n\n`\n\n## Challenges:\n\n\n\n## Challenges:\n\n\n\n`\n\n`\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n3,0)=", "```\n\n\n\n\n\n\n## Description:\n\n\n\n\n### Example:\n\n\n```width```\n\n```length```\n\n```gaps```\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n   \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n3,3)=10\n   ", "```\n`gaps```\n\n```gaps```\n\n### Example:\n\n### Example:\n\n## Description:\n\n\n\n\n\n\n\n\n`gaps```\n\n\n\n\n```width```\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n3,3", "```\n```\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n```height```\n\n`width```\n\n```length```\n\n\n\n\n`\n\n\n   \n\n\n\n - o - o - o - o\n\n## Example 4:\n\n\n\n\n\n\n\n\n\n\n3,0)=0", "\n```\n\n\n\n\n\n\n\n\n\n### Description:\n\n\n\n```width```\n\n```length```\n\n```gaps```\n\n\n\n\n\n\n```gaps```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n3,3)=7              ", "```\n`gaps```\n\n```gaps```\n\n### Example:\n\n## Example 1:\n\n\n\n\n\n\n\n\n\n`gaps```\n\n\n\n\n\n\n\n    - o - o - o\n\n\n\n\n\n\n\n\n\n\n\n    \n\n   \n    \n```width```\n\n3,"], "prompt": "\nQUESTION:\nThis is the simple version of Shortest Code series. If you need some challenges, please try the [challenge version](http://www.codewars.com/kata/570f45fab29c705d330004e3)\n\n## Task:\n\nThere is a rectangular land and we need to plant trees on the edges of that land.\n\nI will give you three parameters:\n\n```width``` and ```length```, two integers > 1 that represents the land's width and length;\n\n```gaps```, an integer >= 0, that is the distance between two trees.\n\nReturn how many trees have to be planted, if you can't achieve a symmetrical layout(see Example 3) then return 0. \n    \n### Example: \n\n```\n    \n    Example1:\n    width=3, length=3, gaps=1       o - o\n    we can plant 4 trees            -   -\n    sc(3,3,1)=4                     o - o\n    \n    Example2:\n    width=3, length=3, gaps=3       o - -\n    we can plant 2 trees            -   -\n    sc(3,3,3)=2                     - - o\n    \n    Example3:\n    width=3, length=3, gaps=2       o - -\n    if we plant 2 trees, some       x   o\n    gaps of two trees will >2       x x x\n                                    \n    if we plant 3 trees, some       o - -\n    gaps of two trees will <2       x   o\n    so we can not finish it         o - -\n    sc(3,3,2)=0                         \n    \n    Example4:\n    width=7, length=7, gaps=3       o - - - o - -\n    we can plant 6 trees            -           -\n    sc(3,3,3)=6                     -           o\n                                    -           -\n                                    o           -\n                                    -           -\n                                    - - o - - - o\n    \n    some corner case:\n    \n    Example5:\n    width=3, length=3, gaps=0       o o o\n    we can plant 8 trees            o   o\n    sc(3,3,0)=8                     o o o\n    \n    Example6:\n    width=3, length=3, gaps=10      o 1 2\n    in this case, the max gaps      1   3\n    of two trees is 3               2 3 o\n    gaps=10 can not finished\n    so sc(3,3,10)=0\n                                    \n```\n    \n### Series:\n - [Bug in Apple](http://www.codewars.com/kata/56fe97b3cc08ca00e4000dc9)\n - [Father and Son](http://www.codewars.com/kata/56fe9a0c11086cd842000008)\n - [Jumping Dutch act](http://www.codewars.com/kata/570bcd9715944a2c8e000009)\n - [Planting Trees](http://www.codewars.com/kata/5710443187a36a9cee0005a1)\n - [Give me the equation](http://www.codewars.com/kata/56fe9b65cc08cafbc5000de3)\n - [Find the murderer](http://www.codewars.com/kata/570f3fc5b29c702c5500043e)\n - [Reading a Book](http://www.codewars.com/kata/570ca6a520c69f39dd0016d4)\n - [Eat watermelon](http://www.codewars.com/kata/570df12ce6e9282a7d000947)\n - [Special factor](http://www.codewars.com/kata/570e5d0b93214b1a950015b1)\n - [Guess the Hat](http://www.codewars.com/kata/570ef7a834e61306da00035b)\n - [Symmetric Sort](http://www.codewars.com/kata/5705aeb041e5befba20010ba)\n - [Are they symmetrical?](http://www.codewars.com/kata/5705cc3161944b10fd0004ba)\n - [Max Value](http://www.codewars.com/kata/570771871df89cf59b000742)\n - [Trypophobia](http://www.codewars.com/kata/56fe9ffbc25bf33fff000f7c)\n - [Virus in Apple](http://www.codewars.com/kata/5700af83d1acef83fd000048)\n - [Balance Attraction](http://www.codewars.com/kata/57033601e55d30d3e0000633)\n - [Remove screws I](http://www.codewars.com/kata/5710a50d336aed828100055a)\n - [Remove screws II](http://www.codewars.com/kata/5710a8fd336aed00d9000594)\n - [Regular expression compression](http://www.codewars.com/kata/570bae4b0237999e940016e9)\n - [Collatz Array(Split or merge)](http://www.codewars.com/kata/56fe9d579b7bb6b027000001)\n - [Tidy up the room](http://www.codewars.com/kata/5703ace6e55d30d3e0001029)\n - [Waiting for a Bus](http://www.codewars.com/kata/57070eff924f343280000015)\ndef sc(width,length,gaps):\n\t\nUse Call-Based format\nANSWER:\n"}}