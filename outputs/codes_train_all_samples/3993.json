{"3993": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nA string is an input to solve.\n\n\nsolve(a)\n\n\nUse Call-Based format\n\nReturns:\n\n```\n\nsolve(a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of even", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nRETURN:\nreturn 0\n\n\n\n\n\treturn 0\n\n\n\n\n\n\n\n\n```\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n```\n\n[Beta]\n", "Use Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Word-Based format\n\n\nGiven an array, return the difference between the count of even numbers and the count of odd numbers.\n\n```\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nGiven an array, return the difference between the count", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\n\t\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\nGiven an array, return the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\ndef solve(a):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nGiven an array, return the difference between the", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of even and odd numbers and the count of odd numbers. \n\n\nGiven an array, return the difference between the count of even and odd numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\ta = a.split()\n\t\n\n\n\ta = a.split()\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an array, return the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nDEF:\ndef solve(a):\n\t\nUse Call-Based format\n\nDEF:\ndef solve(b):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of even numbers and the count of odd numbers. \n\n\n\t\n\nGiven an array, return the difference between the count of even numbers and the count of odd numbers \n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array,", "\nUse Call-Based format\n\nsolve([a]):\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of odd numbers and the count of even numbers\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\ndef solve(a):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na\n\n```\n\n\nGiven an array, return the difference between", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an array, return the difference between the count of even and odd numbers\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsolve(\"a\"):\n\n\n\n\n\n```\na = [", "\nUse Call-Based format\n\nsolve([a])\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\treturn a - b\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThis function returns the difference between the count of odd numbers and the count of even numbers.\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an array, return the difference between the", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an array, return the difference between the count of even numbers and the count of odd numbers. \n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse C++ format\n\n\n\n```\n\nGiven an array, return the difference between the count of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nIf you don't use Call-Based format:\n\n```\n\n```\n\n```\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array, return the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nINPUT:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array, return the", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an array, return the difference between the count of odd numbers and the count of even numbers. \n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven an array, return the difference between the count of odd numbers and the count of even numbers.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsolve([0,1,2,3])\n\n\nGiven an array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nFIND DATA:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array, return the difference between the count of even numbers and odd numbers. \n\n\n\n\n\n"], "prompt": "\nQUESTION:\nGiven an array, return the difference between the count of even numbers and the count of odd numbers. `0` will be considered an even number. \n\n```\nFor example:\nsolve([0,1,2,3]) = 0 because there are two even numbers and two odd numbers. Even - Odd = 2 - 2 = 0.  \n```\n\nLet's now add two letters to the last example: \n```\nsolve([0,1,2,3,'a','b']) = 0. Again, Even - Odd = 2 - 2 = 0. Ignore letters. \n```\n\nThe input will be an array of lowercase letters and numbers only. \n\nIn some languages (Haskell, C++, and others), input will be an array of strings:\n\n```\nsolve [\"0\",\"1\",\"2\",\"3\",\"a\",\"b\"] = 0 \n```\n\nGood luck!\n\nIf you like this Kata, please try: \n\n[Longest vowel chain](https://www.codewars.com/kata/59c5f4e9d751df43cf000035)\n\n[Word values](https://www.codewars.com/kata/598d91785d4ce3ec4f000018)\ndef solve(a):\n\t\nUse Call-Based format\nANSWER:\n"}}