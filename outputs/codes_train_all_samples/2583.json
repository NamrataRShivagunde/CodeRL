{"2583": {"code": ["\nUse Standard Input format\n\n\nUse Standard Input format\n:\n\n\n\n\n\n=Function Descriptions=====\nitertools.combinations(iterable, 2)\n\n\n\n\n\n=====Function Descriptions=====\ncombinations(iterable, 3)\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.com\n", "\nUse Standard Input format\n\n\nUse Standard Input format\n:\n=====Name Descriptions=====\nitertools.combinations(iterable, k)\nUse Standard Input format\n\n=\n\n\n\n\n\n\n\n\n\n=====Question Line Description=====\n\n\n\n\n=====Question Line Description=====\n\n\n\n\n=====Function Descriptions=====\niter", "\nUse Standard Input formatUse Standard Input format\n\n\nUse Standard Input format\n:\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, 4)\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations\n\n\n\n\n=====Function Descriptions=====\n", "\nUse Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format:\n# Use Standard Input format\n\n\n# Use Standard Input format#=====Function Descriptions=====\nitertools.combinations(iterable, r)\n\n#\n\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations\n\n\n\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format:\n=====Function Descriptions=====\nitertools.combinations\nUse Standard Input format\n\n=Function Descriptions=====\ncombinations\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations\n\n\n", "=====Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, r)\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations(iterable, r)\n\n\n\n\n=====Function D", "\nUse Standard Input formatUse Standard Input format\n\n\nUse Standard Input format\n:\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, r)\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, 3)\n\n\n\n\n=====Function", "\nUse Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format\nUse Standard Input format\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, r)\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations(iterable, r)\n\n\n\n\n=====Function D", "\nUse Standard Input format\n\n\nUse Standard Input format\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, 2)\n\nUse Standard Input format\n=Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations\n\n\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format:\n\n\n\n\nUse Standard Input format\n=Function Descriptions=====\nitertools.combinations(iterable, 3)\n\n\n\n\n \n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations(iterable, r)\n\n\n\n\n\n=====Function D", "\nUse Standard Input formatUse Standard Input format\n\n\nUse Standard Input format\n:\n=====Function Descriptions=====\nitertools.combinations(iterable, r)\nUse Standard Input format\n\n=Function Descriptions=====\ncombinations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n=====", "=====Standard Input format\nUse Standard Input format\n\n\nUse Standard Input format\n:\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, 2)\nUse Standard Input format\n\n\n\n\n=====Standard Input format\n>>>\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations\n====", "=====Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format:\n\n\n=====Function Descriptions=====\nitertools.combinations(iterable, 3)\nUse Standard Input format\n=Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n=====Function Descriptions=====\nitertools.combin\n", "\nUse Standard Input format\n\n\nUse Standard Input format\n:\n=====Function Descriptions=====\nitertools.combinations()\nUse Standard Input format\n\n=Function Descriptions=====\nitertools.combinations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.com\n", "\nUse Standard Input format\n\n\nUse Standard Input format\n:\n=====Usage Descriptions=====\nitertools.combinations()\nUse Standard Input format\n\n======Usage Descriptions=====\nitertools.combinations()\n\n\n\n\n\n\n>>>\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n=====Usage Descriptions========", "\nUse Standard Input format\n\n\nUse Standard Input format\n:\n=====Function Descriptions=====\nitertools.combinations()\nUse Standard Input format\n\n=Function Descriptions=====\ncombinations(iterable, k)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations\n\n\n====", "\nUse Standard Input format\n\n\nUse Standard Input format\n:\n=====Code Format=====\nUse Standard Input format\n\n\n=====Code Format=====\nitertools.combinations(iterable, r)\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools.combinations\n\n\n\n\n====", "=====Standard Input formatUse Standard Input format\n1,2,3,4,5,5,5\nUse Standard Input format\n\nUse Standard Input format\n:\n\n\n\n\n=Function Descriptions\n\n\n\n\n\n1\n1,2,3,5,4,5\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nitertools", "\nUse Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format:\n=====Program Description=====\nUse Standard Input format\n\n\n\n=====Program Description=====\nitertools.combinations()\n\n=\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations\n\n\n\n\n\n=====Function Descriptions", "\nUse Standard Input formatUse Standard Input format\n\n\nUse Standard Input format\nUse Standard Input format:\n\n\n\n\n=Function Descriptions=====\nitertools.combinations(iterable, r)\n\n\n\n\n\n\n1\n2\n3\n5\n\n\n\n\n\n\n=====Function Descriptions=====\ncombinations\n\n\n\n\n=====Function"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nitertools.combinations(iterable, r)\nThis tool returns the r length subsequences of elements from the input iterable.\n\nCombinations are emitted in lexicographic sorted order. So, if the input iterable is sorted, the combination tuples will be produced in sorted order.\n\nSample Code\n\n>>> from itertools import combinations\n>>> \n>>> print list(combinations('12345',2))\n[('1', '2'), ('1', '3'), ('1', '4'), ('1', '5'), ('2', '3'), ('2', '4'), ('2', '5'), ('3', '4'), ('3', '5'), ('4', '5')]\n>>> \n>>> A = [1,1,3,3,3]\n>>> print list(combinations(A,4))\n[(1, 1, 3, 3), (1, 1, 3, 3), (1, 1, 3, 3), (1, 3, 3, 3), (1, 3, 3, 3)]\n\n=====Problem Statement=====\nYou are given a string S.\nYour task is to print all possible combinations, up to size k, of the string in lexicographic sorted order.\n\n=====Constraints=====\n0<k\u2264len(S)\n\n=====Input Format=====\nA single line containing the string S and integer value k separated by a space.\n\n=====Output Format=====\nPrint the different combinations of string S on separate lines.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}