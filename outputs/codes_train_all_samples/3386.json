{"3386": {"code": ["\n\n#Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe task is really sap.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n#Hint\nI have a difference between the two sets of letters:\n>>> getColumnTitle(\"123\")\n>>> getColumnTitle(\"B\")\n>>> getColumnTitle(\"B\")\n>>> getColumnTitle(\"", "\n\n\n\n\n\n\n\n\n\"A\"\n\"B\"\n\n\n\n\n\n\nThe task is really sap, the task is really sap.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Hint\nThe task is really sap, the task is really sap.\n\nQuestion:\nHi there! \n\nThe task is really sap.\n", "```\n\n\n\n\n\n\n\n\n\"A\"\n\"B\"\n\"C\"\n\n\n\n\n\n\n\nIndexError: \n\n>>> getColumnTitle(\"a\")\n\"b\"\n>>> getColumnTitle(\"c\")\n>>> getColumnTitle(\"d\")\n>>>\n\n\n\n\n\n\n\n\n\n\n>>> get_column_title(0)\n>>> getColumnTitle", "```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\"A\"(123)\"(432778)\n\"Z\"(52)\"(632778)\n\"`\"`\n\n#Explanation\n\n\n#Notes\n\n\n\n\n```\n\n\n\n#More examples\n#\n\n### \n", "\n\n\n\n\n\n\n\n\n\"A\"\n\"B\"\n\"C\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#How\nString getColumnTitle(int num) // syntax depends on programming language:\n#Hint\nString getColumnTitle(int num) // syntax depends on programming language:\n#Hint\n\n>>> getColumn", "\n\n\n\n\n#Note:\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\"B\"\n\"Z\"\n\n#Hint\nThe description of your function is a nice example:\n\nString get_column_title(int num)\n```\n\n\n\n\n\n\n\n#Hint\nThe description of your function is a", "\n```\n\n#Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"A\"\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Hint\nThe task is really sap\n\n``` \n\nHi there!\n\nHi there! \n\nHi there! \nHi there! \n\n#Hint\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"A\"\n\"B\"\n```\n\n#Demo\n\n\n\n\n\n\n\n\nTypeError:\n\n\n\n\n\n\n\n#Hint\nThe same, MS Excel lines are numbers of the numbered letters:\n\n#Input\nget_column_title(int num)\n>>> getColumnTitle(0)", "\n\n\n\n\n#Notes\n\nThis function is designed for the Excel columns.\n\n#Notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Example\n\nPlease implement the \n\nString get_column_title(int num) // [function]\n\n\n>>> getColumnTitle(\"123\")", "\n```\n\n#Note\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n>>> get_column_title(\"A\")\n>>> get_column_title(\"B\")\n>>> get_column_title(\"Z\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngetColumnTitle(\"A\")\n>>> getColumnTitle(\"B\")\n>>>", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"A\" is a valid column name.\n\n\"B\" is a valid column name.\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Info\n\n>>> get_column_title()\nTypeError:\n>>> get_column_title()\n\n\n\n\n\n>>> get_column_title(23)", "\n\n\n\n\n\n\n\n\n\"ABK\"\n\"ZZ\"\n\n\n\n\n\n\"B\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Examples\n\nHow there are two numbers, the numbered system: \n\n>>> getColumn_title(0)\n>>> getColumn_title(2)\n>>> getColumn_title(\"B\")", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nGet column title.\n\n#Exceptions\nThe exception is thrown.\n\n\n\n\n\n\n\n\n#Usage\n\n\nTypeError:\n\n#Exceptions\nThe exception is thrown when the function is not implemented.\n\n\n\n\n\n\n\n#Notes\nThe exception is thrown when the function is not implemented.\n\n\n", "```\n\n\n\n\n\n\n\n\n\n\n\"A\"\n\"B\"\n\"Z\"\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Info\nThe function is really sap\n\n>>> get_column_title(\"B\")\n>>> getColumnTitle(\"B\")\n>>> getColumnTitle(\"B\")\n>>> getColumnTitle(\"", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\nget_column_title(0)\n\"A\"\n>>> getColumnTitle(\"0\")\n\"A\"\n>>> getColumnTitle(\"0\")\n>>> getColumnTitle(\"0\")\n>>>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> getColumnTitle(\"123\")\n>>> getColumnTitle(\"123\")\n>>>", "\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n#Notes\nIt is a great idea to implement the \n\nString get_column_title(int num)\n```\n\n\n\n\n\n\n\n\n\n\n#Notes\nIt is a great idea to implement the \n\n\n>>>", "\n\n#Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> getColumnTitle(0)\n>>> getColumnTitle(0)\n>>> getColumnTitle(0)\n>>> getColumnTitle(0)\n>>> getColumnTitle(0)\n>>> getColumnTitle(0)\n```\n\n\n\n\n\n\n\n\n\n\n>>> get_", "\n\n\n\n\n\n\n\n\n\n\n\n\n\"A\"\n>>> get_column_title(\"A\")\n>>> get_column_title(\"B\")\n>>> getColumn_title(\"Z\")\n>>> getColumn_title(\"Z\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Hint\nThe option is to implement the programming language. It works only", "```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"A\"\n\n\n\n#Notes\nThis function is a very simple way to get a title of an Excel column.\n\n#Notes\nThe task is really sap\n\n\n\n\n\n\n\n\n\n\n#Notes\nHi there!\n\nHi there! \n\nMore examples\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\"B\" \n\n\"A\"\n\n\"Z\"\n\n\n\n\n\n\n\n\n\n#Documentation\n\n\nTypeError:\n>>> get_column_title(5)\nTypeError:\n>>> get_column_title(5)\n\n\n\n\n\n\n\n\n#Hint\n\n> Haskell. There"], "prompt": "\nQUESTION:\nHi there! \nYou have to implement the \n\n`String get_column_title(int num) // syntax depends on programming language`\n\nfunction that takes an integer number (index of the Excel column) and returns the string represents the title of this column.\n\n#Intro\nIn the MS Excel lines are numbered by decimals, columns - by sets of letters.\n\nFor example, the first column has the title \"A\", second column - \"B\", 26th - \"Z\", 27th - \"AA\". \n\n\"BA\"(53) comes after \"AZ\"(52), \"AAA\" comes after \"ZZ\".\n\n\n\n\nExcel? Columns? More details [here](https://en.wikipedia.org/wiki/Microsoft_Excel)\n\n#Input\nIt takes only one argument - column decimal index number.\nArgument `num` is a natural number.\n\n#Output\nOutput is the upper-case string represents the title of column. It contains the English letters: A..Z\n\n#Errors\nFor cases `num < 1` your function should throw/raise `IndexError`. In case of non-integer argument you should throw/raise `TypeError`.\n\nIn Java, you should throw `Exceptions`.\n\nNothing should be returned in Haskell.\n\n#Examples\nPython, Ruby:\n```\n>>> get_column_title(52)\n\"AZ\"\n>>> get_column_title(1337)\n\"AYK\"\n>>> get_column_title(432778)\n\"XPEH\"\n>>> get_column_title()\nTypeError:\n>>> get_column_title(\"123\")\nTypeError:\n>>> get_column_title(0)\nIndexError:\n```\nJS, Java:\n```\n>>> getColumnTitle(52)\n\"AZ\"\n>>> getColumnTitle(1337)\n\"AYK\"\n>>> getColumnTitle(432778)\n\"XPEH\"\n>>> getColumnTitle()\nTypeError:\n>>> getColumnTitle(\"123\")\nTypeError:\n>>> getColumnTitle(0)\nIndexError:\n```\n\n#Hint\nThe difference between the 26-digits notation and Excel columns numeration that in the first system, after \"Z\" there are \"BA\", \"BB\", ..., while in the Excel columns scale there is a range of 26 elements: AA, AB, ... , AZ between Z and BA. \n\nIt is as if in the decimal notation was the following order: 0, 1, 2, .., 9, 00, 01, 02, .., 09, 10, 11, .., 19, 20..29..99, 000, 001 and so on.\n\n#Also\nThe task is really sapid and hard. If you're stuck - write to the discussion board, there are many smart people willing to help.\ndef get_column_title(num):\n\t\nUse Call-Based format\nANSWER:\n"}}