{"2550": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n\u00a0\n\n\n   \n        pass\n\n\n\u00a0\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n$5\n$10\n$20\n\n\n\n\n\n\n$5\n$10\n$", "\nUse Call-Based format\n\n\n    return self.lemonadeChange(bills)\n    \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n$5\u00a0$10\u00a0$20\u00a0\n\n\n$5\u00a0$10\n\n\n\n\n$5\u00a0", "\nUse Call-Based format\n\n\n    return self.lemonadeChange(bills)\n\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n   \n        return True\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n$5 = $10\n$5 = $20\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def lemonadeChange(self, bills: List[int]) -> bool:\n       \n\n\n\n   \n\n\nA correct change of $5 was received from every customer.\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n$5 = $10\n$", "\nUse Call-Based format\n\n\n\n\n\n\n   \n    lemonadeChange(self, bills: List[int]) -> bool\n\n\nExample 5:\n    lemonadeChange(self, bills) -> bool\n\n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$5\n$10\n$15\n", "\nUse Call-Based format\n\n\n    $0\n    $1\n\n\n\n\n\n\n   \n        return self.lemonadeChange(bills)\n\n\n\n\n\n   \n        return self.lemonadeChange(bills)\n\n\n\n\n\n\n\n\n\n\n$1\n\n\n\n\n\n$10\n$5\n$15\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n$10 = 5\u00a010\n$15 = 20\n\n\n   \n        pass\n        \n\n\n\n\n\n\n\n\n\n$5 = $10\n$15 = $20\n\n\n\n\n\n\n$5 =", "\nUse Call-Based format\n\n\n    self = self\n    \n\n\n\n\n\n   \n    pass\n\n\n\u00a0\nUse Call-Based format\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n$5\n$10\n$15\n$5\n$15\n$15\n\n\n\n\n\n$5\n$10\n$", "\nUse Call-Based format\n\n\n    lemonadeChange(self, bills) -> bool:\n    return true\n\n\n\n\n   \n        return true\n        \n\n\n   \n        pass\n        \n\n\u00a0\n\n\n\n\n\n\n\u00a0\n$5 = 10\n\u00a0\n$10 = 20\n\n\n\n\n\n\n$5 = 0", "\nUse Call-Based format\n\n\n    self.lemonadeChange(bills)\n    \n\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n$5\n$10\n$15\n\n\n\n\n\n\n\n$5\n$10\n$20", "\nUse Call-Based format\n\n\n\n\nA trade in order to get a correct change of the lemonade.\n\n\n\n   \n        pass\n\n\n\n\n   \n       ...\n        \n\n\n\u00a0\n\n\n\n\n\n\n\n$5 = $10 - $15\n$5 = $20 - $15\n\n\n\n\n\n$5 = $", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n   \n       \n$5 = 0\n\n\u00a0\n\n\n\n$5 = $10\n\n\n\n\n$15 = $5\n\n\n\n\n\n\n$5 = $10\n$15 =", "\nUse Call-Based format\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n   \n    pass\n\n\n\n\u00a0\n\n   \n\n$10 = $15\n\n\n\n\n\n\n$5\n\n$15\n\n\n\n\n$5\u00a0\n\n\n\n$10\n\n\n\n$5\n$10\n$15\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n$0\n\n$10\n$15\n\n\n\n   \n        return self.lemonadeChange(bills)\n\n\n\n   \n        pass\n\n\n\u00a0\n\n\n\n\n\n\n$5\u00a0\u00a0\n\n$5\u00a0\n\n\n\n$5\u00a0\n", "\nUse Call-Based format\n\n\n    return self.lemonadeChange(bills)\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n$5 = $10 = $20 = $15\n\n$5 = $15\n\n\n\n$5 =", "\nUse Call-Based format\n\n\n    return True\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n\n   \n        return self.lemonadeChange(bills)\n        \n\n\n\n\n\n\n\n\n\n\u00a0\n\n$5\n\u00a0\n\n\n\n\n\n\n$5\n$10\n", "\nUse Call-Based format\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n\n   \n        return self.lemonadeChange(bills)\n\n\n\n   \n\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\n\n\n$5 = $10\n$5 = $20\n\n\n\n\n\n$5 = $5 *", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n\n   \n        pass\n\n\nA valid answer is true if all customers are correct change.\n\n\n\n\n\n\n\n$5\n$10\n$15\n\n\n\n\n\n$5\n$10\n", "\nUse Call-Based format\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n   \n        return self.lemonadeChange(bills)\n\n\n\n   \n        return self.lemonadeChange(bills)\n\n\n\n\n\n\n\n\n\n\n$5\n\n$10\n\n\n\n\n\n$5\n$10\n", "\n\n\n\n    lemonadeChange(self, bills: List[int]) -> bool\n\n\n\n\n\n\n   \n    return self.lemonadeChange(bills)\n\n\n\n   \n        pass\n        \n\n\n\n\n\n\n\n\n\n$5\n\n\u00a0\n\n\n\n\n\n\n$5\n$10\n$20\n$"], "prompt": "\nQUESTION:\nAt a lemonade stand, each lemonade costs $5.\u00a0\nCustomers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).\nEach customer will only buy one lemonade and\u00a0pay with either a $5, $10, or $20 bill.\u00a0 You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.\nNote that you don't have any change\u00a0in hand at first.\nReturn true\u00a0if and only if you can provide every customer with correct change.\n\u00a0\n\nExample 1:\nInput: [5,5,5,10,20]\nOutput: true\nExplanation: \nFrom the first 3 customers, we collect three $5 bills in order.\nFrom the fourth customer, we collect a $10 bill and give back a $5.\nFrom the fifth customer, we give a $10 bill and a $5 bill.\nSince all customers got correct change, we output true.\n\n\nExample 2:\nInput: [5,5,10]\nOutput: true\n\n\nExample 3:\nInput: [10,10]\nOutput: false\n\n\nExample 4:\nInput: [5,5,10,10,20]\nOutput: false\nExplanation: \nFrom the first two customers in order, we collect two $5 bills.\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\nFor the last customer, we can't give change of $15 back because we only have two $10 bills.\nSince not every customer received correct change, the answer is false.\n\n\u00a0\nNote:\n\n0 <= bills.length <= 10000\nbills[i]\u00a0will be either\u00a05, 10, or 20.\nclass Solution:\n    def lemonadeChange(self, bills: List[int]) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}