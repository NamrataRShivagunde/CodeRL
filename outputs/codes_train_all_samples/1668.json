{"1668": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\treturn -1\n\n\n\n\n\nreturn -1\n\n```python\nnext_smaller(13) == -1\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnext_smaller(21) == 1\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nWrite a function that takes a positive integer and returns the next smaller positive integer containing the same digits.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnext_smaller(9)\n\t\n\n\n\n\n\n\n```python \nnext_", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nExample:\n\tnext_smaller(1) == 1\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nUse Call-Based format\n\n```ruby \n\n```\n\n\n\n\t\n\n\n```ruby ", "\n\n\n\nUse Call-Based format\n\nRETURN:\n\tReturn a next smaller positive integer\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnext_smaller(11) == -1\n\n```ruby \n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python \n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\tReturn next smaller number with the same digits.\n\nReturn -1:\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n```ruby \n\n\n\n\n\n```ruby \n\n\n\n\n\n\n\n\t\n\tNext bigger number with", ":\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\treturn -1\n\n\n\n\n == -1\n\nnext_smaller(n)\n\n\n\n\n\n\nnext_smaller(9) == -1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tnext_smaller(n)\n\n\n\n\n```", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\treturn -1\n\n\n\n\n\n\nnext_smaller(n)\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnext_smaller\n\n\n\n\n\n*Use Python:\n\n", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\treturn -1\n\n\n\n\n\n\n\n\n\treturn -1\n\n\n\n\n\n\n\n\n\nnext_smaller(9) == 9\nnext_smaller(13) == 9\n\n\n\n\n\n\n\n\n\n\n```ruby \npython", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\tnext_smaller(1) == 1\n\t\n\n\n\n\n\n\n\n\treturn -1\n\t\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nnext_smaller(2) == -2\n\n\n\n\n\n\n\n\n```ruby \nnext_", "\nUse Call-Based format\n\n\n\n\n\n\n```python \nnext_smaller(n) == -1\nnext_smaller(21) == -1\n```\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n == -1\n\n\n\n\n\n\n\n\n\n\t\n\n\t\n`python \n#!/", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n\n == -1\n\n```python\nnext_smaller(5) == -1\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tnext_smaller(3) == 3\n\t\n\n\n", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n*Use Call-Based format\n\n\n\n\treturn -1\n\n\n\n\n\n\n\treturn -1\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nnext_smaller(0) == 0\n\n\n\n```python", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\treturn -1\n\n\n\nUse Call-Based format\n\n\n\n\n\n\treturn -1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python \nnext_smaller(5) == -1\n```\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\n\t\n\n\n\n\nnext_smaller(n)\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nnext_smaller(2) == 3\n\n\n\n\n\n\n\n\t\n\n\n```python \nnext_", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\treturn next_smaller(n)\n\n\n\n\n\n\n\n\n\n\n\nnext_smaller(21) == -1\nnext_smaller(21) == -1\n\n\n\n\n\n\n\n\n\n\n\n\n\treturn -1 if there is", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\n\nWrite a function that takes a positive integer and returns the next smaller positive integer.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnext_smaller(10)\n\n\n\n\n\n\n\n```python ", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\treturn -1\n\n\n\nnext_smaller(n)\n\n\n\n\t\treturn -1\n\n\n\n\n\n\n\n\n\n\n```python \nnext_smaller(9) == -1\n\n\n\n\n\n\n\t\n\n\n```ruby", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nWrite a function that takes a positive integer and returns the next smaller positive integer.\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nnext_smaller(5) == 5\n\n\n\n\n\n", ":\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\nReturns:\n\t\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn -1\n\n\n\n\n\n\n\nnext_smaller(15) == -1\n\n\n\n\n\n```ruby \n", ":\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\n```python\nnext_smaller(10) == 10\nnext_smaller(21) == 10\n```\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\t\n\n\n```ruby \n"], "prompt": "\nQUESTION:\nWrite a function that takes a positive integer and returns the next smaller positive integer containing the same digits.\n\nFor example:\n\n```python\nnext_smaller(21) == 12\nnext_smaller(531) == 513\nnext_smaller(2071) == 2017\n```\n\nReturn -1 (for `Haskell`: return `Nothing`, for `Rust`: return `None`), when there is no smaller number that contains the same digits. Also return -1 when the next smaller number with the same digits would require the leading digit to be zero.\n\n```python \nnext_smaller(9) == -1\nnext_smaller(135) == -1\nnext_smaller(1027) == -1  # 0721 is out since we don't write numbers with leading zeros\n```\n```ruby \nnext_smaller(9) == -1\nnext_smaller(135) == -1\nnext_smaller(1027) == -1  # 0721 is out since we don't write numbers with leading zeros\n```\n\n * some tests will include very large numbers.\n * test data only employs positive integers.\n\n*The function you write for this challenge is the inverse of this kata: \"[Next bigger number with the same digits](http://www.codewars.com/kata/next-bigger-number-with-the-same-digits).\"*\ndef next_smaller(n):\n\t\nUse Call-Based format\nANSWER:\n"}}