{"1852": {"code": ["\nUse Call-Based format\n      2      3\n\n# Definition for a binary tree node\n\n\n\n,null,null,2,null,3\n\n\nUse Call-Based format\n\n\n   \n\n\n      \\      \\      \\      \\      \\\n \\\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an integer n, generate all struct", "\nUse Call-Based format\n     2      3     1     2      2      3     2      3     1\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \n    # Definition for a binary tree node\n\n      2      1      3     2\n    \\\n\n\n\n\n\n\nGiven an integer n,\n\n\nGiven an integer n,", "\n\n 2      3\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\nUse Call-Based format\n      2      3      1      2      3\n    \\     \n# Definition for a binary tree node\n\n\n\n\n\n\n\n\n\n\nGiven an integer n,", "\n\nUse Call-Based format\n        \n\n\nUse Call-Based format\n\n\n\n,3,2,1,2,3,2,2\n\n\n\n\u00a05\n\n\n\n\n      / \\      \\      \\\n    \\      \\      \\\n\n\n\n\n\nGenerate all bst's\n\n\n\n\n\nGiven an integer n, generate all", "\n\n\n\n\n\nUse Call-Based format\n\n\n,3,1,2\n\n\n\n\n\n\u00a0[2,1,3,null,2,3]\n\n\n\n\n     \\      \\\n\n\n\n 3  2 1 3 2\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n        Given an integer n, generate all struct", "\nUse Call-Based format\n      2      3      1      2      3\n\n\nUse Call-Based format\n\n\n\n,2,3,1,2,3,3,2\n\n\nUse Call-Based format\n\n\n   \n\n\n     \\\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an integer n, generate all", "\nUse Call-Based format\n     2    1      2\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree node.\nUse Call-Based format\n\nGiven an integer n, generate all of the above trees\n \\     \n\n\n\n    2     1\n\n\n\n\n\n\nGiven an integer n, generate all structur", "\nUse Call-Based format\n      2      1\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n,\n\n\nUse Call-Based format\n\n\n   \n    # Definition for a binary tree node\n\n      \\      /\n    # Definition for a binary tree node.\n\n\n\n\n\n\n\n\n\n\nReturns:\n[\n\u00a0[", "\nUse Call-Based format\n\n\n\n\n\n\n,3,1,2,3,2\n\n\nUse Call-Based format\n\n\n  \n\n\nUse Call-Based format\n      1      2      3      2      2\n    \\\n    def __init__(self):\n        \n\n\n\n\n\n\n\n\n\n    Given an integer n, generate", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n,\n\n\n\n\n   \n\n\nUse Call-Based format\nGiven an integer n, generate all structurally unique BST's that store values 1...\u00a0n.      \n\n        \n\n\n\n\n\n\n\n\nGiven an integer n, generate all struct", "\n\n 1    2    3    3\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n    \\      \\      \\      \\     \\      \\\n      / \\      \\\n\n\n\n\n\n\n\n\n\n\n\n    Given an integer n, generate all", "\nUse Call-Based format\n      2      3  3\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n    # Definition for a binary tree node.\n\n      /\n    / \\      \\      \\\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\nGiven a integer n, generate all", "\n\nUse Call-Based format\n      2      3\n      1\n\n\nUse Call-Based format\n\n\n,2,1,3,2,1,3,1,2,3\n\n\n\n\n   \n\n\n      \\      \\      \\\n      \\      \\      \\\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer n, generate all", "\nUse Call-Based format\n        \n\n\nUse Call-Based format\n\n\n\n\n,3,2,1,3,2\n\n\n\n\n  \n\n\n\n      \\      \\      \\      \\      \\      \\      \\      \\      \\\n     \n\n\n\n\nUse Call-Based format\n\nGiven an integer n,\n\n\nGiven an integer n", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n,null,null,2,3,1,2\n\n\nUse Call-Based format\n\n\n   \n# Definition for a binary tree node.\n\n     \\     \n# Definition for a binary tree node.\n     \n\n\n\n\n\n\nGiven a number n, generate all structur", "\nUse Call-Based format\n 2        3\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\nGiven a number n, generate trees with values 1... \u00a0n.\n     \\      \\      \\\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an integer n,", "\nUse Call-Based format\n 2\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n  \n\n\n\n\n      1      2      3      2      3      2\n    \\      \\      \\      \\      \\\n\n\nUse Call-Based format\n       2\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an integer n, generate", "\nUse Call-Based format\n        \n\n\nUse Call-Based format\n\n\n\n,3,2,3,1,2,2\n\n\nUse Call-Based format\n\n\n   \n\n\n      2      3      1\n    \\      \\      / \\      \\      \\\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree node.\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n,1,2,3,2\n\n\n\n\n\u00a05\n\n\n\n\n    \\      \\      \\      \\\n        \\      \\\n\n# Definition for a binary tree node.\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an integer n, generate", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n,2,3,1,2,3\n\n\n\n\n\n   \n    # Definition for a binary tree node.\n\n      1      2      3      2\n    \\      \\      \\\n\n\n\n\n\n\n\n\n\u00a0\n\n\nGiven an integer n, generate all struct"], "prompt": "\nQUESTION:\nGiven an integer n, generate all structurally unique BST's (binary search trees) that store values 1 ...\u00a0n.\n\nExample:\n\n\nInput: 3\nOutput:\n[\n\u00a0 [1,null,3,2],\n\u00a0 [3,2,null,1],\n\u00a0 [3,1,null,null,2],\n\u00a0 [2,1,3],\n\u00a0 [1,null,2,null,3]\n]\nExplanation:\nThe above output corresponds to the 5 unique BST's shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def generateTrees(self, n: int) -> List[TreeNode]:\n        \nUse Call-Based format\nANSWER:\n"}}