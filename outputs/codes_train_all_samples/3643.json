{"3643": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nbob.distribute(1, 1)\nbob.distribute(1, 1)\nbob.distribute(2, 1)\n\nOutput\n-----\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nnodes > 0\nworkload > 0\n\n\n\n[0", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nCall-Based format\n-------\n\n\n\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\n\n\n\n\n\nnodes - 1\nnodes - 2\nnodes - 1\nnodes - 2\nnodes - 1\nnodes - 2\nworkload - 2\nworkload\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nBob has a farm crunching number. \nHe has a farm crunching number. \n\nExample\n-------\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnodes:\n\nnodes:\nnodes:\nnodes:\n\nworkload:\n\n[", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n-----\n\nHis company has an invalid format\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe work comes as the number `workload`\n\n```\n\nnodes\n\n```\n\nnodes > 0\n\nworkload >", "\n\n\n\n\n\n\ndistribute(nodes, workload):\n\nDo you want to distribute a work onto the nodes/workload?\n\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nOutput\n-----\n\ndistribute(nodes, workload)\n\n[0", "\n\nUse Call-Based format\n-------\n\n\n\n\n\nBob has no farm crunching numbers.\nHis company has no farm crunching numbers\n\nExample\n-------\n\ndistribute(nodes, workload)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[0] is an array of", "\n\n\n\n\n\n\n\n\n\n\n\n\nnodes, workload\n\nReturns\n-----\n\ndistributions\n\nReturns\n-----\n\narray\n\n\n\n\n\nUse Function-Based format\n--------\n\n\n\n\n\n\n\n\n\n\n\ndistribute(4, 5)\n\nExample\n-------\n\nBob has a different format\n\n\n[0]", "\n\nBob has a number of servers and the number of jobs\n\nA number of servers and the number of jobs\n\nA number of jobs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n-----\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample\n-----\n\ndistribute(nodes, nodes):\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nBob has a number of nodes and a number of workload\n\n\n\n\t\nUse Call-Based format\n-----\n\n\n\n\n\nBob has a number of nodes and a number of workload. \n\n\n\n\n\n\n\n\n\n\n[0, 1, 2, 3]]\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n-------\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\nbob.nodes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,", "\nUse Call-Based format\n\n\n\n\n\ndistribute(nodes, workload):\n\nUse Call-Based format\n-------\n\nUse Call-Based format\nANSWER:\n\ndistribute(nodes, workload)\n\nExample\n-----\n\nBob has a lot of numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\ndistribute(nodes, workload):\n\nUse Call-Based format\n-------\n\nBob has a number of servers\n\ndistribute(nodes, workload):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbob.distribute(4, 4)", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n-------\n\nnodes, workload\n\nUse Call-Based format\n\n\nUse Call-Based format\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndistribute(nodes, workload):", "\n\n\ndistribute(nodes, workload):\n\nUse Call-Based format\n-------\n\nUse Call-Based format\nQUESTION:\n\ndistribute(nodes, workload):\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nnodes > 5\nnodes > 2\nnodes > 3\nworkload > 5\n\n\n", "\n\nUse Call-Based format\n-------\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\t\nOutput format\n-----\n\n\n\n\n\n\n\n\n\n\n\n\ndistribute(3, 10) # => [[0], [1], [2]]\n\nExample\n-------\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n-----\n\nuse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n-----\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\ndistribute(0, 0)\n\nExample\n-----\n\nBob has 4 servers and 4 jobs.\n\n\n```", "\n\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\n\n\nUse Call-Based format\n-----\n\nThe work comes as numbers\n\nExample\n-----\n\nDistribute:\n\ndistribute(nodes, workload)\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\ndistribute\n-----\n\n\n\n[0, 1,", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nBob has a number of nodes and a number of workload\n\n\n\t\nUse Call-Based format\n-------\n\ndistribute(nodes, workload)\n\n\n\n\n\n\n\n\n\n\n\nbob.distribute(4, 3)\n\n\n\n\n# Job 0 is a cool", "\n\n\n\n\n\nUse Call-Based format\n-------\n\n\n\n\n\n\n\nUse Call-Based format\n-----\n\nBob has a number of nodes and workload\n\n\n\n\n\n\t\nUse Call-Based format\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample\n-------\n\ndistribute(nodes, workload):\n", "\n\n\n\n\nCall-Based format\n-----\n\n\n\n\n\n\n\n\nCall-Based format\n-----\n\n\n\n\n\n\t\nUse Call-Based format\n-------\n\n\nUse Call-Based format\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndistribute(nodes, workload):\n\n\n# Bob has a server farm"], "prompt": "\nQUESTION:\nBob has a server farm crunching numbers. He has `nodes` servers in his farm. His company has a lot of work to do. \n\nThe work comes as a number `workload` which indicates how many jobs there are. Bob wants his servers to get an equal number of jobs each. If that is impossible, he wants the first servers to receive more jobs. He also wants the jobs sorted, so that the first server receives the first jobs.\n\nThe way this works, Bob wants an array indicating which jobs are going to which servers.\n\nCan you help him distribute all this work as evenly as possible onto his servers?\n\nExample\n-------\n\nBob has `2` servers and `4` jobs. The first server should receive job 0 and 1 while the second should receive 2 and 3.\n\n```\ndistribute(2, 4) # => [[0, 1], [2, 3]]\n```\n\nOn a different occasion Bob has `3` servers and `3` jobs. Each should get just one.\n\n```\ndistribute(3, 3) # => [[0], [1], [2]]\n```\n\nA couple of days go by and Bob sees a spike in jobs. Now there are `10`, but he hasn't got more than `4` servers available. He boots all of them. This time the first and second should get a job more than the third and fourth.\n\n```\ndistribute(4, 10) # => [[0, 1, 2], [3, 4, 5], [6, 7], [8, 9]]\n```\n\nInput\n-----\n\nDon't worry about invalid inputs. That is, `nodes > 0` and `workload > 0` and both will always be integers.\ndef distribute(nodes, workload):\n\t\nUse Call-Based format\nANSWER:\n"}}