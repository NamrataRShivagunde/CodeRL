{"1770": {"code": ["\n## Call-Based format\n## Example\n\n-       [#1: is this valid?](https://www.codewars.com/kata/kata/)\n\n\n\n\n\n\n\n\n:\n\n\n\n\n## Task\n\n## Example\n\n\n\n2\n\n## Task\n\n## Task\n\n.\n## Task\n\n\n\n\n#", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n## Task\n\nWe are in the C++ code\n\n## Call-Based format\n\n\n\n\n\n## Task\n\n## Task\n\n\n\n## Task\n\n## Task\n\n\n\n\n\n\n-      00\n\n## Task\n\n\n\n-      \n## Task\n\n\n## Task", "\nUse Call-Based format\n\nC++**/**C++**/**Java**\n\n# Task\n\n\n\t\nUse Call-Based format\n## Task\n\n\n\n## Task\n\n\n\n## Task\n\n\n\n## Task\n\n## Task\n\n-\n\n\n\n-       [#6: good path]\n\n\n1\n\n## Task\n\n\n##", "\n\n\n\nUse Call-Based format\n\n## Path Finder\n\n-       # The path finder\n\n-       # The path finder\n\n-       # The path finder\n\n\n\n\n\n\n\n\n:\n## Task\n\n\n\n\n\t\n\n## Task\n\n\n\n\n**C\n\n\n\n\n\n## Task\n\n\n## Task\n\n\n##", "\n## Path Finder\n\n\n\n\n## Task\n\nUse Call-Based format\n\n## Task\n\nUse Call-Based format\n\n## Task\n\nYou are at position `[0, 0]`\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n-       [#6: for now]\n\n\n\n.\n\n\n\n\n## Path Finder", "\nUse Call-Based format\n\n\n\n\n## Task\n\nUse Call-Based format\n\n## Path Finder\n\n## Task\n\nYou can move the maze from the start position to the exit position `[N, N]`.\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n\n\n## Task\n\n\n##", "\n## Run\n\ndef run(maze):\n\t\nUse Call-Based format\n\n\n\n\n## Path Finder\n\n## Example\n\n\n\n\n\n## Example\n\n## Test\n\n:## Test\n\n\n\n\n\n## Task\n\n\n\n**C++**/**C++**\n\n\n\n\n\n-      \n## Task\n\n\n## Task", "\n\n\n# Task\n\n-       [#1: can you reach the exit?](https://www.codewars.com/kata/kata**/**Java**.\n#5)\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n-       [#6:\n\n\n\n\n\n## Task\n\n\n\n## Task", "\n## Test-Based format\n\n\n\n-       [#1: can you reach the exit?](https://www.codewars.com/kata/kata/kata)\n\n\n\n\n\n\n\n:\n\n\n\n## Task\n\n\n\n\n-       [#6: the path]\n\n\n\n2\n2\n\n\n\n\n## Example", "\n## Example\n\n\n\n\nUse Call-Based format\n## Call\n\nNote:\n\n## Path Finder\n\n\n\n## Path Finder\n\n## Call\n\n## Call\n\n## Run\n\n## Run\n\n\n\n\n## Run\n\n\n\n\n-       [#6: are you?]\n\n\n\n\n.\n\n\n\n\n## Task\n\n", "\n\n## Call-Based format:\n\n-       return True\n**C++**/**C++**/**Java**.\n\n\n\n## Test\n\n\n\n\n\n## Path Finder\n\n## Task\n:\n## Task\n\n\n\n## Task\n**\n\n\n\n-       [#6:\n\n\n\n\n\n\n#\n## Task\n\n\n## Task", "\n## Test-Based format\n\n# Test-Based format\nC++**/**C#**/**Java**.\n\n# Test-Based format\n\n\n## Path Finder\n\n\n\n\n\n\n## Test\n## Test\n\n\n\n\t\n\n\n\n\n\n\n-       [#6: all other tasks]\n\n\n\n2\n## Task\n\n\n## Task", "\n## Test\n\n\n\nUse Call-Based format\n\n## Test-Based format\n\n## Path Finder\n\n## Task\n\n\n## Task\n\n## Task\n\nYou are at position `[0, 0]`\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n-      \n\n## Task\n\n\n-      \n\n## Task\n\nYou", "\n## Test\n\nUse Call-Based format\n\nC++**/**C#**/**Java**.\n\n## Path Finder\n\n\n## Task\n\n\n\n\n## Path Finder\n\n## Path Finder\n:\n## Task\n\n\n\n\n\n\n\n\n\t\n\n\n\n-      00036\n\n## Task\n\n5\n## Task\n\n\n## Task\n", "\n## Task format:\n\n-       [#1: Use Call-Based format](https://www.codewars.com/kata)\n\n\n\n\n\n\n\n\n\n## Path Finder\n## Task\n\n\n\n\n\n## Task\n\n\n\n\n\n\n\n\n## Path Finder Series:\n\n-\n\n\n4\n\n\n## Task\n\n\n", "\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n## Task\n\n\n## Task\n\n\n\n## Task\n\nYou are at position `[0, 0]`\n\n## Task\n\n\n\n\n\n## Task\n\n\n\n\n\n\n-       [#6:\n-      \n\n5\n\n##\n\n\n\n## Task", "\n\n\n\nUse Call-Based format\n\n## Main\n\n-       return `true`.\n\n## Main\n\n-       return `false`.\n\n\n\n## Task\n\n\n\n-      \n\n\n\n2\n\n\n\n## Task\n\n## Task\n\n-      \n\n\n/\n\n## Task\n\n\n## Task\n\n\n## Task\n\nYou", "\n## Simple\n\n#1\n\nUse Call-Based format\nC++**/**C#**/**Java**.\n\n#2\n\n\n## Task\n\n\n\n\n## Task\n\n## Task\n\n:\n\n\n## Task\n\n#1\n#2\n\n\n\n\n5\n\n## Task\n\n#2\n\n1\n## Task\n\n\n#", "\nUse Call-Based format\n\nC++**/**C#**/**Java**\n\n\n## Task\n\nUse Call-Based format\n## Task\n\n## Task\n\n\n## Task\n\n## Task\n\n## Task\n\n\n\n\t\n\n## Task\n\n\n\n\n**\n\n## Path Finder\n\n\n\n\n\n\n\n## Task\n\nYou are at", "\n## Test\n## Call-Based format\n\n#\n\n\n## Path Finder\n\n\n## Test-Based format\n\n#\n\n## Path Finder\n\n## Call\n\n## Test-Based\n## Task\n\n\n\t\n\n## Task\n\n\n\n## Task\n\n\n**C++**\n\n\n\n\n\n\n## Task\n\n\n# Task\n\n-"], "prompt": "\nQUESTION:\n## Task\n\nYou are at position `[0, 0]` in maze NxN and you can **only** move in one of the four cardinal directions (i.e. North, East, South, West). Return the minimal number of steps to exit position `[N-1, N-1]` *if* it is possible to reach the exit from the starting position.  Otherwise, return `false` in **JavaScript**/**Python** and `-1` in **C++**/**C#**/**Java**.\n\nEmpty positions are marked `.`.  Walls are marked `W`.  Start and exit positions are guaranteed to be empty in all test cases.\n\n## Path Finder Series:\n\n-       [#1: can you reach the exit?](https://www.codewars.com/kata/5765870e190b1472ec0022a2)\n-       [#2: shortest path](https://www.codewars.com/kata/57658bfa28ed87ecfa00058a)\n-       [#3: the Alpinist](https://www.codewars.com/kata/576986639772456f6f00030c)\n-       [#4: where are you?](https://www.codewars.com/kata/5a0573c446d8435b8e00009f)\n-       [#5: there's someone here](https://www.codewars.com/kata/5a05969cba2a14e541000129)\ndef path_finder(maze):\n\t\nUse Call-Based format\nANSWER:\n"}}