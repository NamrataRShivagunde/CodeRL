{"4507": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n       ******\n    \n\t\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n         ******\n    0         2         ******\n   \n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n         1         2         *         *         2         3      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    0         0         0         0         0         1         1        \n\n\n\n\n\n\n\n    A function that accepts", "\nUse Call-Based format\n\n\nUse Call-Based format\nCreate a function that accepts 3 inputs, a string, a starting location, and a length.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\nendless_string(string, start, length)\n\n\n\n\n\n\n\n\n\n    The function should be", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\nUse Function-Based format\n\n    -9\n        -9\n        -9\n       \n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n    A function that accepts 3 inputs,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n         ******\n\n\nUse Call-Based format\n\n      \n\t\nUse Call-Based format\n\n\nUse Function-Based format\n\n\n\n\n       \n    ******\n   \n    *****\n\n\n\n\n\n\n\n\n    This function will create a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n      \n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nendless_string(string, 0, -1)\n\n\n\n\n\n    If the function", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n           ******\n    ******\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n         *****\n       \n\n\n\nendless_string(string, start, length)\n\n\n\n\n\n\nendless_string =", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n******\n\n******\n\nUse Call-Based format\n\n\n    ******\n    ******\n   \n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\n\n\n    3       1       2       3       4       3      \n\n\n\n\n    This function will", "\n\n\n\nUse Call-Based format\nCreate a function that accepts 3 inputs, a string, a starting location, and a length.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n    1         2         *         *         *         *\n       \n\n\n\n\n\n\n    This function will be", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nCreate a function that accepts 3 inputs and returns a string.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    0         1         2         *         *         *         *         *      \n\n\n\n\n\n\n\n    -1          3         4", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n    3         2         1         *         *         *         *         3\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n    This function is a function that", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n         ******\n    -23 for a length of 6 == 'xyzx'\n\n\t\n\n\n\n\n\n\n\n\n\n   \n\nUse Call-Based format\n\n\n       -23       -2      \n\n\n    This function", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n    endless_string = endless_string\n   \n\n   \n\n\n    endless_string =", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n*\n\n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nendless_string('xyz', -1, -2)\n\n\n\n\n\n\n\n    function(string,", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n      ******\n         ******\n         ******\n         ******\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n    -1\n    -1\n       \n\n\n\n\n\n\n\n\n    -1\n    0        1         2       \n\n\n\n\n    This", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n        ******\n\n           ******\n    -23 for a length of 6 == 'zxyz'\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    1         2         3         *         *         *         1\n\n\n\n\n\n    To", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n         *****\n    ******\n    0       1        2      \n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    1         2         *         *         *         1\n\n\n\n\n\n    This", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n           ******\n          \n           ******\n         ******\n         ******\n      \n\n\n\n\n    # Do something\n\n\n\n\n\n\n\n\n\n\n\n\n    -23 for a length of 3 == 'xyzx'\n    -23 for a length of 6\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n       ******\n    \n\n\n\n\n\n\n\nThis function uses Call-Based format.  Use Call-Based format\n\n\n   \n\n\n\n\n\n    1         2         1         *\n   \n   \n\n   ", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n       ******\n   \n\n\nUse Call-Based format\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Function-Based format\n\n      \n\n\n\n\n       \n   \n\n\n\n    To create a function that accepts"], "prompt": "\nQUESTION:\nCreate a function that accepts 3 inputs, a string, a starting location, and a length.  The function needs to simulate the string endlessly repeating in both directions and return a substring beginning at the starting location and continues for length.\n\nExample:\n```python\nendless_string('xyz', -23, 6) == 'yzxyzx'\n```\nTo visualize:\n\n           Negative                               Positive\n    3         2         1         *         1         2         3      \n    0987654321098765432109876543210123456789012345678901234567890\n    xyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzxyzx\n           ******\n         -23 for a length of 6 == 'yzxyzx'\n       \nSome more examples:\n```python\nendless_string('xyz', 0, 4) == 'xyzx'\nendless_string('xyz', 19, 2) == 'yz'\nendless_string('xyz', -4, -4) == 'zxyz'\n```\n\nA negative length needs to include the starting postion and return the characters to the left of the starting position.\ndef endless_string(string, start, length):\n\t\nUse Call-Based format\nANSWER:\n"}}