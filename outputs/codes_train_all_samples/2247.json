{"2247": {"code": ["\nUse Standard Input format\n\n\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n1 2\n\n5\n1 2\n\n5\n\n\n\n\n\n\n1 2\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n-----Note-----\n\n\n1.5\n\n\n\n\nMomiji has got", "\nUse Standard Input format\n\n\n1 1 2\n2 1 1 1\n2 1 1 1 1 1 1 1 1 1 1\n1 1 1\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n1 2\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n1 1 1 2\n\n\n\n2 2 3\n\n1 2", "\n\nUse Standard Input format\n\n\n1 1 2\n2 1 3\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n1 1 2 1 1\n\n-----Note-----\n\n\n\n\n1 2 2\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.5\n\n\n\n\n1.5\n\n\n\n2.", "\nUse Standard Input format\n\n\n1 1 2\n1 1 1\n1 1 1\n1 1 2\n1 1 2\n1 1 2\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.5\n\n\n\n\n\n1.5\n\n\n\n\n1 2\n\n\n\n\n1.5\n\n\n2.5\n", "\nUse Standard Input format\n\n\n\n\n\n\n1\n2\n3\n5\n\n\n\n1 0\n2 1 1\n1 1 1 1 1\n\n-----Note-----\n\nUse Standard Input format\n1\n2 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.5\n\n2.5\n\n2\n\n\n\n1.5", "\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n\n\n1\n\n\n\n1.5\n\n2\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n1 2\n\n-----Note-----\n\n\n\n\n1 2\n\n\n-----Note", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nUse Standard Output format\n1 1 2 1 1\n\n-----Note-----\n\n\n1 1 2 1 1 1\n\n\n\n1 2 2 1\n\n\n\n\n\n\n\n\n\n\n\n2\n\n-----Note-----\n\nThe second sample:\n\n\n\n\n\n2.", "\nUse Standard Input format\n\n\n\nUse Standard Output format\n\n\n1.5\n2\n3\n\n1.5\n1\n\n\n-----Note-----\n\nUse Standard Input format\n1\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMomiji has got a rooted tree\n\n\n\n\n\n1 ", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nUse Standard Input format\n1 2\n\n-----Note-----\n\nThe first sample contains an integer n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n1 2 3\n\n-----Note-----\n\n\n\n\n1 2 3\n\n\n\n1 2.5\n\nThe first", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n1.5\n1.5\n\n\n-----Note-----\n\nUse Standard Input format\n1 2\n2\n3\n\n\n\n\n\n\n\n\n\n1 2\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n\n\n1 2\n\n\n\n1 2.5\n\n\n2", "\nUse Standard Input format\n\n\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n1 1 2 3\n\n\n1 1 1 2\n\n\n\n\n\n\n\n\n\n\n1 1\n\n\n\n\n1 1 2\n\n\nMomiji", "\nUse Standard Input format\n\n\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n\n\n1\n2\n2\n3\n\n-----Note-----\n\n\n1.5\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\nMomiji has got a rooted tree", "\n\n\n1 1 2 1\n1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1\n1 1 1 2 2 1 1 1 1 1\n\n\n\n\n\n\n\n\n\n\n1 2 2\n\n\n\n\n\n\n\n\n-----Note-----\n\nUse Standard Output format\n\n\n\n\n\n\n\n1.5\n\n\n2.5", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n1\n1\n2\n3\n2\n1\n3\n1\n\n-----Note-----\n\n\n\n1.5\n1.5\n\n\n\n\n\n\n\n1.5\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n1.5\n\n1.5\n\n2\n2", "\nUse Standard Input format\n\n\n\n\n\n\n1\n\n\n1 2\n\n1.5\n1\n1\n\n1.5\n\n1.5\n1.5\n\n1\n\n\n\n\n\n\n\n\n\n\n\n1 1 2 3\n\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n1 2 3\n\n2 3", "\nUse Standard Input format\n\n\n1 2\n\n1 2\n\n1 2\n\n1 2\n\n1 2\n\n1 2\n\n1 2\n\n1 2\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.5\n\n1 2\n\n2\n\n-----Note-----\n\n\n\n\n1", "\n\n\n\nUse Standard Input format\n\n\n\n1\n1\n1\n2\n\n1\n2\n\n1\n1\n2\n\n1\n1\n\n1\n\n1\n2\n\n1\n\n1\n\n1\n\n2\n\n2\n\n1.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Standard Input format\n\n1 1 2 3\n\n\n\n\n\n\n1 2 2\n1 1 2\n\n1 1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 2\n\n\n\n1 2\n\n\n\n2.5", "\n\nUse Standard Input format\n\n\n1 1 2 1 1.5 2 1.5\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n1 1 2 2 2\n\nNote-----\n\n\n\n\n\n\n\n\n\n\n1 1 2 3 3\n\n-----Note-----\n\n\n\n\nMomiji\n\n\n1.5\n\n\n2.", "\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n\n\n-----Note-----\n\n\n1 2\n\n\n2.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 \u2264 n \u2264 10^5\n\n\n\n\n\nMomiji"], "prompt": "\nQUESTION:\nMomiji has got a rooted tree, consisting of n nodes. The tree nodes are numbered by integers from 1 to n. The root has number 1. Momiji decided to play a game on this tree.\n\nThe game consists of several steps. On each step, Momiji chooses one of the remaining tree nodes (let's denote it by v) and removes all the subtree nodes with the root in node v from the tree. Node v gets deleted as well. The game finishes when the tree has no nodes left. In other words, the game finishes after the step that chooses the node number 1.\n\nEach time Momiji chooses a new node uniformly among all the remaining nodes. Your task is to find the expectation of the number of steps in the described game.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of nodes in the tree. The next n - 1 lines contain the tree edges. The i-th line contains integers a_{i}, b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n;\u00a0a_{i} \u2260 b_{i}) \u2014 the numbers of the nodes that are connected by the i-th edge.\n\nIt is guaranteed that the given graph is a tree.\n\n\n-----Output-----\n\nPrint a single real number \u2014 the expectation of the number of steps in the described game.\n\nThe answer will be considered correct if the absolute or relative error doesn't exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n2\n1 2\n\nOutput\n1.50000000000000000000\n\nInput\n3\n1 2\n1 3\n\nOutput\n2.00000000000000000000\n\n\n\n-----Note-----\n\nIn the first sample, there are two cases. One is directly remove the root and another is remove the root after one step. Thus the expected steps are: 1 \u00d7 (1 / 2) + 2 \u00d7 (1 / 2) = 1.5\n\nIn the second sample, things get more complex. There are two cases that reduce to the first sample, and one case cleaned at once. Thus the expected steps are: 1 \u00d7 (1 / 3) + (1 + 1.5) \u00d7 (2 / 3) = (1 / 3) + (5 / 3) = 2\nUse Standard Input format\nANSWER:\n"}}