{"3277": {"code": ["\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\t\n\n\t\nUse Call-Based format\n\nUse Call-Based format \"multiplication\"\n`division`\n`subtraction`\n\n\n\n\n\n\n\n\n\n```\n\nreturn 1\n```", "\nUse Call-Based format:\n\n\n\n:\n\n\n\n\n\n\"\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n```\n\t\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n```\na = 2  b = res", "\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\n\n\n\n\n\n```\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format \"division\"\n```\n\n\n\n\n\n\n\n\n\n    a = 1\n    b = 2\n    res = 3", "\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n```\n\n\n\n\n\n\n\n\n\n\n\n\ncalcType(a, b, res) --> \"addition\"\n\n\n\n\n```\na = 1", "\n:\n\nUse Call-Based format\n\n\n:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n```\n\n\n\n \"multiplication\"\n```\n\n\n   \n\n\n\n\naddition\n\"multiplication\"\n```\n\n## Example:\n\n\n\n```\na = 2 *", "\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\nreturn res\n\n\nUse Call-Based format\n\nUse Call-Based format \"division\"\n\n## Examples:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n```\na = 1\nb =", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\na + b + res\n\nUse Call-Based format\n\n\n\n\n\nsubtraction\nsubtraction\nmultiplication\n\n\n\n```\nadd", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n```\n\n\n\t\nUse Call-Based format\n\n  1? 2 = 3\n \n```\n\n\n\n\n\n\n\n\n\n\n```\na = 1? b = res =", "\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format\n`\n\n\n\n:\n\n\n\n\n\n\n*\n```\n\n\nUse Call-Based format\n\n## Examples\n\nUse Call-Based format\n\n\n\n\n\n## Examples\n\n## Examples\n\n## Example\n\n\n\n\n##\n\n```\nif a is", "\nUse Call-Based format:\n\n\n\n:\n\n\n\n:\n\nUse Call-Based format\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format \"multiplication\"\n`division`\n`subtraction`\n`subtraction`\n\n\n\n\n\n\n\n\n```\n# `result = a + b", "\nUse Call-Based format:\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\"`\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n1 = 2 = 3 = 3 = 1 = 2 = 2\n\n\n\n\n\n\"multiplication\"\n\n\n\n\n```\n#", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\t\n\nUse Call-Based format\nYou have to create a function which receives 3 arguments: 2 numbers\n\n\n\n\n ", "\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n```\n\n\n\nUse Call-Based format \"division\"\n```\n\n\t\n\n\nUse Call-Based format\nYou have to create a function which receives 3 arguments: 2 numbers\n\n\n\n\n", "\nUse Call-Based format:\nUse Call-Based format\n\n\n:\n```\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\"division\"\n```\n\n\n\n\n```\na = 1", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n## Examples:\n*\n\n###\n\nUse Call-Based format\n\nUse Call-Based format \"multiplication\"\n\n## Examples:\n\n\n\n\n\n\n\n\n\n\n## Examples:\n* You have to create a", "\nUse Call-Based format:\n\n\n\n:\n\n\n\n:\n\n```\n\n\t\n\n\n\nUse Call-Based format\n* \"multiplication\"\n* \"division\"\n\n\n\t\nUse Call-Based format\n\n\n \n\n\n\n\n\n\n```\n\n\n```\n\n\n```\n#!/usr/bin", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n*\n\t\n\n\t\nUse Call-Based format\n \"addition\"\n* \"subtraction\"\n* \"multiplication\"\n\n\n\n\n\n\n\n\n\n\n```\na = 2 +", "\nUse Call-Based format:\n\n\nUse Call-Based format\n:\n```\n\n\n:\n\n\n\n\t\n\n\n\n\n\n```\n\n\n\t\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\nReturn a string of the type of the operation performed on a value.\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n  1 = 2\n  2 = 3\n  3 = 4\n\n\n\n\n\n\n\n\n\n\n\n```\na = 2\nb =", "\n:\nUse Call-Based format\n\n\n:\n\n\n\n:\n\n\n\n\n\t\n\n\n\n\n*\n```\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format \"multiplication\"\n* \"multiplication\"\n\ndef calcType(a, b, res):\n\t\n\n\n\n\n\n\n\n```\n#"], "prompt": "\nQUESTION:\nYou have to create a function which receives 3 arguments: 2 numbers, and the result of an unknown operation performed on them (also a number).\n\nBased on those 3 values you have to return a string, that describes which operation was used to get the given result.\n\nThe possible return strings are:\n  `\"addition\"`,\n  `\"subtraction\"`,\n  `\"multiplication\"`,\n  `\"division\"`.\n\n## Example:\n```\ncalcType(1, 2, 3) -->   1 ? 2 = 3   --> \"addition\"\n```\n\n## Notes\n* In case of division you should expect that the result of the operation is obtained by using `/` operator on the input values - no manual data type conversion or rounding should be performed.\n* Cases with just one possible answers are generated.\n* Only valid arguments will be passed to the function.\ndef calc_type(a, b, res):\n\t\nUse Call-Based format\nANSWER:\n"}}