{"1652": {"code": ["\n\n\nUse Call-Based format\n\n### Proper rules\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n### Detailed rules\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Tots\n\nformat_duration(seconds):\n\n#", "\n\n\n\n\n\n\nUse Call-Based format\n\n### Example rules\n\n\n\n\nformat_duration(seconds)\n\nUse Call-Based format\n\n### Example rules\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n# Example\n\n# Description\n\nA function which formats a duration\n\n###\n\n\n\n\n", "\n\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n# Some functions\n\n# Example:\n#\n\n\n### Detailed rules\n\n\n\n\n\n\n\n\n### Example:\n\n\n\n\n\n\n\n\n### Example:\n\n# Example 1:", "\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n\n\n\n\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n### Detailed rules\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Functions\n\n\nformat_duration(seconds):\n\n\n\n\n\n### Other rules\n\n\n\n\n\n```", "\n\n\n\n\n\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n### Example rules\n\n### Detailed rules\n\nThe function is used in Call-Based format\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Description\n#\n\n\n#\n\n#\n#\n\n# The function is called", "\n\n### Simple rules\n\n\n\n\n\n\nformat_duration(seconds)\n\n### Simple rules\n\nFormat-Based format\n\n### Detailed rules\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n# Human-friendly rules\n\n### Other rules\n\n\n\n\n\n# Example\n\n# [1]\n", "\n\n\n\n\n\n\n\n\nformat_duration\n\nuse Call-Based format\n\n### Simple rules\n\nformat_duration\n\nUse Call-Based format\n\n### Time-Based format\n\n# Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Detailed rules\n\n# Fortran:\n\n#", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nformat_duration(seconds)\n\n### General rules\n\nThe function must be called with a function which is called by the function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Description\n\nThe function format_duration function\n###\n\n\n\n\n# ### Description\n\n#", "\n\n\nuse Call-Based format\n\n### Precondition-Based rules\n\n# Input format\n\nformat_duration(seconds):\n\nReturn a string\n\n### Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nformat_duration(seconds):\n\n\n\n\n#!/bin/python", "\n\n\n\n\n\n\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n### Example rules\n\n# Example-Based format\n\n### Multiple rules\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Detailed rules\n\n\n\n\n\n### Detailed rules\n\n### Detailed", "\n\n\n\n### Functions\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example\n\nformat_duration (62)\n\n\n\n\n\n\n# Example\n\nformat_duration(62)\n\n### Example\n\n\n\n\n\n\n\n\n# Example\n#\n# K", "\n\n\nUse Call-Based format\n\n### Extra rules\n\n# Examples:\n\n### Detailed rules\n\nformat_duration(seconds):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Examples\n\n## Description\n\nformat_duration\n\n\n\n\n\n\n\n\n# Examples:\n\n###", "\n\n\nuse Call-Based format\n\n### Default rules\n\nFormat a duration in the call-based format\n\n### Example\n\nformat_duration(seconds):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nformat_duration(seconds):\n\t\n\n\n\n\n\n\n\n\n\nformat_duration(60)\n", "\n\n\nformat_duration(seconds)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n## Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n### More rules\n\nformat_duration(seconds)\n\n# More rules\n\n\n\n\n\n\nformat_duration(seconds)\n\n\n\n# Formatting\n#", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n### Example rules\n\n### Example rules\n\n\nformat_duration(seconds)\n\nUse Call-Based format\n\n### Example rules\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Description\n\n### Description\n\n\n\n\n\n# Example:\n#\n# Kata", "\n\n\n\n\n\n\n\nformat_duration(seconds)\n\n### Detailed rules\n\nFormat the function in the call-Based format\n\n### Fortran\n\nThe function must be used as a function\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Repeated rules\n\n\n\n### Repeated rules\n\n\n\n###", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n### Example rules\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n### Description\n\nThe function is written in Call-Based format\n\n### Examples\n\n### Examples\n\n\n\n\n\n\n\n\n\n# Author:\n", "\n\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n\n\n\n\n\nformat_duration(seconds)\n\n### Function-Based format\n\nuse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Default rules\n\n### Human-friendly format\n\n\n\n\n\n\n\n\n\n# Formatting\n#\n", "\n\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n\n\n\n\n\nformat_duration(seconds)\n\n# Custom rules\n\nformat_duration(60):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Time formatting\n\n# Description\n\n### Time formatting\n\n\n\n\n\n\n\n\n\n\n# The `hours`", "\n\n\nformat_duration(seconds)\n\n### Pre-Based format\n\nformat_duration(seconds):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nformat_duration(1)\n\n### Simple rules\n\n### Custom rules\n\n\n\n\n\n\n\n\n\n# Todo:\n#\n# K"], "prompt": "\nQUESTION:\nYour task in order to complete this Kata is to write a function which formats a duration, given as a number of seconds, in a human-friendly way.\n\nThe function must accept a non-negative integer. If it is zero, it just returns `\"now\"`. Otherwise,  the duration is expressed as a combination of `years`, `days`, `hours`, `minutes` and `seconds`.\n\nIt is much easier to understand with an example:\n\n```Fortran\nformatDuration (62)    // returns \"1 minute and 2 seconds\"\nformatDuration (3662)  // returns \"1 hour, 1 minute and 2 seconds\"\n```\n```python\nformat_duration(62)    # returns \"1 minute and 2 seconds\"\nformat_duration(3662)  # returns \"1 hour, 1 minute and 2 seconds\"\n```\n\n**For the purpose of this Kata, a year is 365 days and a day is 24 hours.**\n\nNote that spaces are important.\n\n### Detailed rules\n\nThe resulting expression is made of components like `4 seconds`, `1 year`, etc.  In general, a positive integer and one of the valid units of time, separated by a space. The unit of time is used in plural if the integer is greater than 1.\n\nThe components are separated by a comma and a space (`\", \"`). Except the last component, which is separated by `\" and \"`, just like it would be written in English. \n\nA more significant units of time will occur before than a least significant one. Therefore, `1 second and 1 year` is not correct, but `1 year and 1 second` is.\n\nDifferent components have different unit of times. So there is not repeated units like in `5 seconds and 1 second`.\n\nA component will not appear at all if its value happens to be zero.  Hence, `1 minute and 0 seconds` is not valid, but it should be just `1 minute`.\n\n A unit of time must be used \"as much as possible\". It means that the function should not return `61 seconds`, but `1 minute and 1 second` instead.  Formally, the duration specified by  of a component must not be greater than any valid more significant unit of time.\ndef format_duration(seconds):\n\t\nUse Call-Based format\nANSWER:\n"}}