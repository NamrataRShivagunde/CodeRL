{"2406": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n > arr[i]\n\n\n\n\n\n\n   \n\n\n\n\n\n\nLet's call an array arr a mountain if the following properties hold:\n\narr.length >= 3\n\n\n\n\n\n\nLet's call an array arr", "\nUse Call-Based format\n\n\n    arr = [0,1,2,3]\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet's call an array arr a mountain if the following", "\nUse Call-Based format\n\n\n    arr = [0]\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n    Let's call an array arr a mountain.\n\n\n\n\nLet's", "\nUse Call-Based format\n\n    arr = [0,1,2,3]\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\nLet's call an array arr a mountain if the following properties hold:\n\n\n\n\n\n\n\n\n\n\n\n\n[i]\n\n\n\nLet's call an array", "\nUse Call-Based format\n\n\n    self.peakIndexInMountainArray(arr)\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nLet's call an array arr a mountain\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n > 0\n\n\n\nLet's call an array arr a", "\nUse Call-Based format\nUse Call-Based format\n\n\n    arr.length >= 3\n\nUse Call-Based format\n\n\n\n\n\n\nLet's call an array arr a mountain\n\n\n\n    def\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n[i]\n\n\n\nLet's call an array", "\n    def peakIndexInMountainArray(self, arr: List[int]) -> int:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\nUse Python-Based format\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n\n\n\nLet's call an array arr a mountain if the", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n < arr.length\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n[i]\n\n\n\nLet's call an array", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based formatarr.length >= 3\n\n\n\n\n\n\n\n   \n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\u00a0\n\n\n\n\nLet's call an array arr a mountain if", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based formatarr.length >= 3\n\n\n\n\nLet's call an array arr a mountain\n\n\n\n   \n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n[i]\n\n\n\nLet's call an array arr a", "\nUse Call-Based format\nUse Call-Based format\narr.length >= 3\n\n\n\nUse Call-Based format\n\n > arr.length - 1\n\n\u00a0\n\n\n\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\u00a0\n\n\n\n\n\n\nLet's call an array arr a mountain\n\n\nLet's call", "\nUse Call-Based format\nUse Call-Based format\n\n\n    arr = [0,1,2,3]\n\n\n\n\n\n\n\nUse Call-Based format\nLet's call an array arr a mountain\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet's call an array arr a mount", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n\nLet's call an array arr a mountain if the following properties hold:\n\n\n\n\n\n\n\n\n\n\n\n\ni = 1\n\n\n\nLet's call an array arr", "\n    def peakIndexInMountainArray(self, arr: List[int]) -> int:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n\n\n    This function call an array arr a mountain.\n\n\n\n\n\n\n\n\n\n\n\n\nLet's call an array arr a mountain.\n\n\nLet's call", "\nUse Call-Based format\n\n\n    peakIndexInMountainArray(arr) -> int\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\nUse Call-Based format\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\narr is a mountain\n\n\n\n\n\n\nLet's call an array arr", "\nUse Call-Based format\nUse Call-Based format\n\n\n    arr = [0]\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nLet's call an array arr a mountain if the following properties hold:\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n[i]\n\n\n\nLet's call", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n > arr[i]\n\n\u00a0\n\n\n\n\n\n   \n\n\n\n\n\n   \nUse Call-Based format\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n\n\nLet's call an array arr a mount", "\nUse Call-Based format\n\n\n\n\n\n\n\n > arr[i] > arr[i+1] >... > arr[arr.length - 1] >... > arr[arr.length - 1]\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\narr.length >= 3\n\n\nIf the following properties hold:\n", "\nUse Call-Based format\narr = [0,1,2,3,4,5,6,7]\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n:\n   \n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\u00a0\n\n[i]\n\n\nLet's call", "\nUse Call-Based format\nUse Call-Based format\n\n\n    arr: List[int]\n\nUse Call-Based format\n\n\n\n\n\n\nLet's call an array arr a mountain if the following properties hold:\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet's call an array arr a mount"], "prompt": "\nQUESTION:\nLet's call an array arr a mountain\u00a0if the following properties hold:\n\narr.length >= 3\nThere exists some i with\u00a00 < i\u00a0< arr.length - 1\u00a0such that:\n        \narr[0] < arr[1] < ... arr[i-1] < arr[i] \narr[i] > arr[i+1] > ... > arr[arr.length - 1]\n\n\n\nGiven an integer array arr that is guaranteed to be\u00a0a mountain, return any\u00a0i\u00a0such that\u00a0arr[0] < arr[1] < ... arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].\n\u00a0\nExample 1:\nInput: arr = [0,1,0]\nOutput: 1\nExample 2:\nInput: arr = [0,2,1,0]\nOutput: 1\nExample 3:\nInput: arr = [0,10,5,2]\nOutput: 1\nExample 4:\nInput: arr = [3,4,5,1]\nOutput: 2\nExample 5:\nInput: arr = [24,69,100,99,79,78,67,36,26,19]\nOutput: 2\n\n\u00a0\nConstraints:\n\n3 <= arr.length <= 104\n0 <= arr[i] <= 106\narr is guaranteed to be a mountain array.\nclass Solution:\n    def peakIndexInMountainArray(self, arr: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}