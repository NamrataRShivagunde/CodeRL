{"2404": {"code": ["\nUse Call-Based format\n\n\n    findKthPositive(self, arr, k: int)\n\n\n\n\n\n:\n       :\n\nGiven an array arr, and an integer k:\n\n          \n\n\nUse Python-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an array arr of positive integers sorted", "\nUse Call-Based format\n\n\n    def findKthPositive(self, arr: List[int], k: int):\n       ...\n\n\n\n\n\n       ...\n\n\n\n   ):\n       ...\n        \n\n\n   \n\nUse Python-based format        \n\n\n\n\n\n\n\n\nAnother solution is required\n\n\nFor an array arr of positive", "\nUse Call-Based format\n\n    findKthPositive(self, arr, k) -> int:\n\n\n\n\n\n       ):\n        return 0\n\n\n\n\n   \n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array arr of positive integers sorted in ascending order\n\n", "\nUse Call-Based format\n\n\n    def findKthPositive(self, arr, k: int) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n        pass\n\n\n\n   \n\nUse Python-based format\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\nk = 2\n\n\n\n\nGiven an array arr", "\nUse Call-Based format\n\n\n    arr = [1,2,3]\n       \n\n\n\n\n:\n        return 0\n\nUse Method-Based format\n\nUse Method-Based format\n):\n        pass\n\n\n   \n\n\nUse Python format\n\n\n\n\n\n\n\nUse Python-based format\n\n2\n\n\nExample 1:\nGiven an", "\nUse Call-Based format\n\n\n    def findKthPositive(self, arr: List[int], k: int):\n        return k\n\n\n\n\n\n   :\n       ...\n\n\nGiven an array arr of positive integers, k:\n\n      ...                \n\n\n\n\n\n\n\n\n\nGiven an array arr, k:\n\n\nGiven an", "\nUse Call-Based format\n\n\n    findKthPositive(self, arr, k) -> int:\n        \nUse Call-Based format\n\n\n\n\n   :\n\nGiven an array arr, k = 5\n   \n\n\nUse Python format\n\n\nUse Python-based format\n\n\n\n\n\n\u00a0\n\n2\n\n\nGiven an array arr\u00a0", "\nUse Call-Based format\n\n\n    return findKthPositive(arr, k)\n\nUse Call-Based format\n\n\n\n\n       :\n       ...\n\n\nUse Call-Based format\n\n    def       \nUse Python-based format\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array arr\u00a0of positive", "\nUse Call-Based format\n\n\n    pass\n\nUse Call-Based format\n\n1 <= k <= arr[j]\n\n\n       :\n        return self.findKthPositive(arr, k)\n\n\n\n           \n\n\n\nUse Python-Based format\n\n\n\n\n\nUse Python-Based format\n\n\n\nGiven an array arr\u00a0of positive", "\nUse Call-Based format\n\n\n    def findKthPositive(self, arr: List[int], k: int) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n        \n\n   \n\n\nUse Python-Based format\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\nGiven an array arr of positive integers sorted in", "\nUse Call-Based format\n\n\n    def findKthPositive(self, arr: List[int], k: int):\n       ...\n\n\n\n\n   :\n\nUse Python 2\n\n   \n   ...\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nExample 1:\nGiven an array arr:\n\n\n\nGiven an", "\n\n\n\n    pass\n\n\n1 <= k <= arr.length\n1 <= k <= arr.length\n1 <= k <= arr.length\n\n\u00a0\nExample:\n\nUse Call-Based format\n\n\n       :\n        \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= k <= arr.length\n\n\narr[k", "\nUse Call-Based format\n\n\n    findKthPositive(self, arr, k) -> int:\n\n\n\n\n\n        return arr[k]\n\n\nUse Call-Based format\n\nUse Simple format\n:\n\n\n\n   \n\n\nUse Python 3\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array arr of positive integers sorted in", "\nUse Call-Based format\n\n\n    findKthPositive(self, arr: List[int], k: int) -> int:\n       \nUse Call-Based format\n\n\n\n\n   ) -> int:\n        return 0\n\n\n\n           \n\n\n\n\n\n\n\n\n\n\nExample 1:\n\nInput: arr = 5\n\n\n\n    Given", "\nUse Call-Based format\n\n\n    def findKthPositive(self, arr, k):\n        return k\n\n\n\n\n\n   :\n        return k\n\n\n\n\n   \n   ...\n\n\nUse Python-Based format\n\nUse Python-Like format\n\nUse Python-Based format\n\n\n\n\n3\n\n\n\nGiven an array arr of positive", "\nUse Call-Based format\n\n\n    arr = [1, 2, 3]\n\nUse Call-Based format\n\n\n\n:\n       \n        return self.findKthPositive(arr, k)\n\n\n   \n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\u00a0\n\n\nGiven an array arr of positive integers sorted in ascending\nGiven", "\nUse Call-Based format\n\n\n    arr = [1,2,3]\n\n\n\n\n\n       :\n\n\nGiven an array arr of positive integers sorted in a strictly increasing order and an integer k:\n\nUse Call-Based format\n           \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA solution is returned.\n\narr = [", "\nUse Call-Based format\n\n\n    findKthPositive(self, arr, k)\n\nUse Call-Based format\n\n\n\n\n   ) -> int:\n        return -1\n\n\n\n\n   \n    pass\nUse Python-based format\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\nGiven an array arr of positive integers\n\n\nExample 1", "\nUse Call-Based format\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n        return k\n\n\n\n\nUse Method-Based format\n\n        pass\n\n\n\n\n    def\n\nUse Python 3.3 format\n\nUse Python 2.7 format\n\n\n\n\n\n\n\n\n\n\n1 <= k <= 3\n\n\n    Given an", "\nUse Call-Based format\nUse Call-Based format\n\n    return findKthPositive(self, arr, k)\n\n\n\n\n\n   ):\n       ...\n        \n\n\nGiven an array arr, k is missing from this array\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array arr of positive integers sorted"], "prompt": "\nQUESTION:\nGiven an array arr\u00a0of positive integers\u00a0sorted in a strictly increasing order, and an integer k.\nFind the kth\u00a0positive integer that is missing from this array.\n\u00a0\nExample 1:\nInput: arr = [2,3,4,7,11], k = 5\nOutput: 9\nExplanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th\u00a0missing positive integer is 9.\n\nExample 2:\nInput: arr = [1,2,3,4], k = 2\nOutput: 6\nExplanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 1000\n1 <= arr[i] <= 1000\n1 <= k <= 1000\narr[i] < arr[j] for 1 <= i < j <= arr.length\nclass Solution:\n    def findKthPositive(self, arr: List[int], k: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}