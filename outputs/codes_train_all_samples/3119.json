{"3119": {"code": ["\n## Example:\n\n### Pattern\n## Examples\n\n### KATA\n##\n\n\n\n### Function\n\n### Pattern\n\n\n\n\n\n\n\n\n\n         2   2 \n            1     1      \n           3     3   \n       \n\n\n\n\n\n\n\n\n\n\n## Output:\n\n## Example:\n\n\n            \n           4       4     \n", "\n## Formulas:\n\n\n\n\n\n\n\n       \n       \n       \n        1     1     1     1     1    \n        1     1     1    \n        1     1    \n\n        1\n\n\n\n        1     1      \n\n\n\n\n\n\n\n\n\n        1     1       1       1     \n        1    \n\n               8  ", "\n## Example:\n\n\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n# Rule:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n           4       3      \n           5       3     \n\n\n               8", "\n\n\n# Rule:\n\n## Example:\n\n## Examples\n\n## Examples:\n\n## Rule:\n\n## Examples:\n\n### KATA\n\n\n\n\n\n\n\n\n\n\n\n\n       \n        1     1\n        1     1\n\n\n\n\n\n\n\n\n\n\n\n               4   2 \n         0   2     \n\n               8", "\n## Note:\n\n\n# Note:\n#\n## Notes:\n#\n\n\n\n\n        1     1     1     1     1    \n\n       \n\n##### pattern(5,3):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Syntax:\n\n## Syntax:\n\n## Syntax\n\n\n\n\n\n\n\n               8  ", "\n## Example:\n\n## Basic Pattern\n## Example:\n\n## Example\n\n## Note:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n               1    1    1    1    1    1    1    1    \n\n\n\n\n\n\n\n\n\n\n\n\n              5           4  \n           5       3  \n\n\n\n\n               8  ", "\n## Note:\n\n## Effects:\n\n## Effects:\n#\n\n\n\n## Note:\n\n## Function:\n\n\n\n\n\n\n\n       \n         1     1      \n             2   2 \n             3\n\n\n\n\n\n\n## Example:\n\n\n\n\n\n\n\n           4     \n            5      3  \n                 \n               8", "\n\n## Rule:\n\n## Examples:\n\n###\n\n\n\n### Example:\n\n#### Examples\n\n###\n\n\n\n\n\n\n          \n                \n        1     1      \n        3     \n        1     1      \n       \n\n\n\n \n\n\n\n\n\n\n\n            \n           4         4      \n           5         5     \n        \n              ", "\n\n\n## Example:\n\n## General\n\n\n\n\n\n\n## Note:\n\n## Examples:\n\n## Task:\n\n## Examples:\n\n## Parameters:\n\n##\n\n\n\n\n\n\n\n\n\n\n 1     \n\n\n\n\n\n\n        1     1       1     \n          1     \n       \n\n\n\n               8   8       ", "\n## Example:\n\n## The \"Basic Pattern\"\n\n\n\n\n\n\n## Example (5):\n\n## Basic Pattern\n\n# Example (1):\n\n## The \"Basic Pattern\"\n\n## Example (2):\n\n##\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              \n   \n\n\n               8   8       \n", "\n\n## Example:\n\n## Basic Pattern\n\n\n\n\n## Example:\n\n\n\n\n\n\n## Example:\n\n## Function:\n\n## Simple Function\n\n## Function:\n\n## Basic Pattern\n\n##\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n       \n       \n       \n               8   8       \n", "\n\n\n\n\n\n\n# Pattern\n\n## Example:\n\n## Pattern\n\n## Basic Pattern\n\n# Basic Pattern\n# Basic Pattern\n\n## Basic Pattern\n\n## Basic Pattern\n\n## Examples\n\n## Examples\n\n## Example\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n               8   8", "\n\n\n\n\n\n\n## Functions:\n\n# Pattern(2,2):\n\n# Pattern(2,2):\n#\n# Pattern(2,2):\n#\n#\n\n\n\n\n\n\n\n\n 1\n\n\n\n## Example:\n\n## Example:\n\n\n\n\n\n\n 1     1      \n\n## Examples:\n\n\n\n              ", "\n\n\n\n\n## Syntax:\n\n### Basic Pattern\n\n### Number of Rows\n### Number of Columns\n\n### Number of Columns\n\n\n\n\n\n       \n\n\n\n\n        1     1     1     1    \n\n\n\n        1     1    \n\n\n\n\n\n\n\n## Example:\n\n\n\n              \n              \n               4   2     \n", "\n\n\n# Rule:\n\n### Rule:\n### Rule\n## Rule:\n### Rule\n### Rule:\n# Rule:\n### Rule\n## Rule:\n### Rule\n### Rule\n### Rule:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n       \n       \n               8   8       \n                9 9        ", "\n## Definition:\n\n## Examples:\n\n## Rule:\n##\n\n## Rule:\n\n## Note:\n\n\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        1     1     1    \n\n\n\n\n        1     1    \n\n\n\n\n\n        1     1    \n\n\n               2", "\n\n\n\n\n## Examples:\n\n## Basic pattern\n## Basic pattern\n# Basic pattern\n# Basic pattern\n# Basic pattern\n# Basic pattern\n# Basic pattern\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Rule:\n\n## Description:\n\n## Printing:\n\n##\n\n\n\n               8   8       ", "\n## Example:\nKATA:\n\n## Example:\n\n    pattern(n,y):\n\n## Examples:\n\n## Task:\n\n## Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n        1     1      \n\n\n 3         3   \n\n\n\n\n\n\n\n\n 1                 1    \n       \n       \n               2   2 \n          ", "\n\n\n\n\n## Examples:\n\n## Simple:\n\n### Basic\n\n## Punctuation\n\n\n\n# Example:\n\n# Basic\n\n## Punctuation:\n\n#\n\n\n\n\n\n\n\n\n\n\n 3  \n\n\n\n\n\n\n\n           1     1      \n           1       1      \n      \n       \n\n               8   8       \n", "\n## Rule:\n\n\n\n## Examples:\n\n## Examples:\n\n## Rule:\n\n## Rule:\n\n\n\n\n# Rule:\n\n## Example:\n\n## Examples:\n\n## Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n              \n       \n       \n               8   8       \n                "], "prompt": "\nQUESTION:\n< PREVIOUS KATA\nNEXT KATA >\n\n## Task:\n\nYou have to write a function `pattern` which returns the following Pattern(See Examples) upto desired number of rows. \n\n* Note:`Returning` the pattern is not the same as `Printing` the pattern.\n\n## Parameters:\n    \n    pattern(        n        ,        y        );\n                    ^                 ^         \n                    |                 |         \n             Term upto which   Number of times  \n              Basic Pattern     Basic Pattern   \n                should be         should be     \n                 created          repeated      \n                                 vertically    \n    \n* Note: `Basic Pattern` means what we created in Complete The Pattern #12 i.e. a `simple X`.\n\n## Rules/Note:\n\n* The pattern should be created using only unit digits.\n* If `n < 1` then it should return \"\" i.e. empty string.\n* If `y <= 1` then the basic pattern should not be repeated vertically.\n* `The length of each line is same`, and is equal to the length of longest line in the pattern.\n* Range of Parameters (for the sake of CW Compiler) :\n  + `n \u2208 (-\u221e,50]`\n  + `y \u2208 (-\u221e,25]`\n* If only one argument is passed then the function `pattern` should run as if `y <= 1`.\n* The function `pattern` should work when extra arguments are passed, by ignoring the extra arguments.\n   \n   \n## Examples:\n\n#### Having Two Arguments:\n\n##### pattern(4,3):\n\n        1     1\n         2   2 \n          3 3  \n           4   \n          3 3  \n         2   2 \n        1     1\n         2   2 \n          3 3  \n           4   \n          3 3  \n         2   2 \n        1     1\n         2   2 \n          3 3  \n           4   \n          3 3  \n         2   2 \n        1     1\n       \n##### pattern(10,2):\n\n        1                 1\n         2               2 \n          3             3  \n           4           4   \n            5         5    \n             6       6     \n              7     7      \n               8   8       \n                9 9        \n                 0         \n                9 9        \n               8   8       \n              7     7      \n             6       6     \n            5         5    \n           4           4   \n          3             3  \n         2               2 \n        1                 1\n         2               2 \n          3             3  \n           4           4   \n            5         5    \n             6       6     \n              7     7      \n               8   8       \n                9 9        \n                 0         \n                9 9        \n               8   8       \n              7     7      \n             6       6     \n            5         5    \n           4           4   \n          3             3  \n         2               2 \n        1                 1\n\n\n\n#### Having Only One Argument:\n\n##### pattern(25):\n\n        1                                               1\n         2                                             2 \n          3                                           3  \n           4                                         4   \n            5                                       5    \n             6                                     6     \n              7                                   7      \n               8                                 8       \n                9                               9        \n                 0                             0         \n                  1                           1          \n                   2                         2           \n                    3                       3            \n                     4                     4             \n                      5                   5              \n                       6                 6               \n                        7               7                \n                         8             8                 \n                          9           9                  \n                           0         0                   \n                            1       1                    \n                             2     2                     \n                              3   3                      \n                               4 4                       \n                                5                        \n                               4 4                       \n                              3   3                      \n                             2     2                     \n                            1       1                    \n                           0         0                   \n                          9           9                  \n                         8             8                 \n                        7               7                \n                       6                 6               \n                      5                   5              \n                     4                     4             \n                    3                       3            \n                   2                         2           \n                  1                           1          \n                 0                             0         \n                9                               9        \n               8                                 8       \n              7                                   7      \n             6                                     6     \n            5                                       5    \n           4                                         4   \n          3                                           3  \n         2                                             2 \n        1                                               1\n        \n        \n>>>LIST OF ALL MY KATAS<<<\ndef pattern(n, y=1, *_):\n\t\nUse Call-Based format\nANSWER:\n"}}