{"3191": {"code": ["\n\n\n\n# Testing\n\n\n\n\n# Example\n\n# Introduction\n\n# Testing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Input / output\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n)\n\n\n# Task\n\n\n3e9f4b5b8", "\n\n\n\n# Test\n\n[9]\n\n# Test\n\ndecode([5, 7, 9, 1, 9],1939);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\n\n\n\n\n\n043b964\n\n\n5c0b9c3", "\n\n\n# Run\n\ndecode([14, 1, 2, 3, 4, 5, 6, 7, 9, 9],1939)\n\n# Example\n\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n\n\na3\n\n\n# Example\n\n\n318c2cb3b", "\n\n\n# Verification\n\n# Output\n\n# Decode\n\n# Output\n\n# Output\n\n# Output\n\n# Output\n\n# Verification\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Step 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n8b9e\n\n\n6b9b4b9c", "\n\n# Note\n\n\n# Example\n\n- [0 0 1 0 1 0 2]\n- [0 0 1 0 1 0 2]\n\n# Example\n\n\n\n\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n88b1\n\n\n3b9c3b3", "\n\n\n\n# Step 1\n\n# Introduction\n\n- [prime]\n- [prime]\n- [prime]\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3b9a3c3\n\n\n\n4d4c2b", "\n\n\n# Sign\n\n# Decrypt\n\n- [1940]\n\n- [1940]\n\n- [1940]\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n\n\n\n# Test\n\n033b9c", "\n\n# Decryption\n\n\n\n# Task\n\n# Input / Output\n\n# Input / Output\n\n# Input / Output\n\n# Output\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n964)\n\n\n\n1a4b8", "\n\n\n\n\n# Note\n\nDecode a number from an array of integers.\n\n# Example\n\ndecode([ 20, 20, 20, 20])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n-\n\n\n\n8e4\n\n\n\n\n6b7c8", "\n\n\n# Chapter 7\n\n# Chapter 8\n\n# Chapter 7\n\n# Chapter 9\n\n# Chapter 8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n8b9\n\n\n\n\n# Example\n\n\n\n", "\n\n\n# Function\n\n# Data\n\n# The code\n\n- [1 1 2 2 3]\n- [2 1 1 2 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n# Function\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n# Task\n\n40f9b", "\n\n# Test\n\n# Test\n\n\n\n\n\n\n# Example:\n\n# Test\n\n\n- [7883,8883,9]\n- [5]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Key\n\n- [1939]\n\n\n\n3b4c5b8", "\n\n\n\n# Test\n\n# Example\n\ndecode([20, 30, 21, 20, 30, 20, 30, 1, 1, 1])\n\n# Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n00c4)\n\n\n\n\n# Task\n\n3b9", "\n\n\n\n# Brazil\n\nDecode a word using the function.\n\nReturns:\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n# Encryption\n\n-\n\n\n# Validation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Step 1\n\n\n\n\n4)\n-\n\n8b9", "\n\n\n\n# Induction \n\n# Message\n\n# Input / Output\n\n\n\n\n# Induction\n\n# Outduction\n\n\n\n\n\n\n\n\n\n# Step 2\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n# Test\n\n-\n\n\n0a1\n\n\n\n# Test\n\n4b3c", "\n\n\n# Init\n\n# Note\n\n\n\n\n# Example\n\n# Introduction\n\n# Decryption\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Test\n\n\n812b5c2", "\n\n\n# Infinite loop\n\n- [1]\n\n\n# Task\n\n\n\n\n\n\n\n# Example\n\n# Introduction\n\n# Infinite loop\n\n# Output\n\n\n\n\n\n\n\n\n\n\n\n\n# Run\n\n\n\n\n\n\n\n\n\n\n\n\n# Infinite loop\n\n\n\n\n8b9", "\n\n# Bold\n\n# Infinite\n\n# Compensation\n\n# Compensation\n\n# Convinction\n\n# Chance\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n\n8b\n\n\n60d2b9b", "\n\n\n# Run\n\n\n\n# Example\n\n# Run\n\n# Example\n\n\n# Run\n\n\n\n\n\n\n\n\n\n# Example\n\n\n\n\n\n\n# Example\n\n# Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n043b99868686\n\n\n\n3b5b9b8", "\n\n# Example\n\n# Challenge\n\n# Decryption\n\n# Hint\n\n# The encryption key\n\n\n\n# The encryption code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Note\n\n\n\n\n\n\n\n\n\n\n\n\n4b9)\n\n\n\n2e4f8b"], "prompt": "\nQUESTION:\n# Introduction \n\nDigital Cypher assigns to each letter of the alphabet unique number. For example:\n\n```\n a  b  c  d  e  f  g  h  i  j  k  l  m\n 1  2  3  4  5  6  7  8  9 10 11 12 13\n n  o  p  q  r  s  t  u  v  w  x  y  z\n14 15 16 17 18 19 20 21 22 23 24 25 26\n```\n\nInstead of letters in encrypted word we write the corresponding number, eg. The word scout:\n\n```\n s  c  o  u  t\n19  3 15 21 20\n```\nThen we add to each obtained digit consecutive digits from the key. For example. In case of key equal to `1939` :\n\n```\n   s  c  o  u  t\n  19  3 15 21 20\n + 1  9  3  9  1\n ---------------\n  20 12 18 30 21\n  \n   m  a  s  t  e  r  p  i  e  c  e\n  13  1 19 20  5 18 16  9  5  3  5\n+  1  9  3  9  1  9  3  9  1  9  3\n  --------------------------------\n  14 10 22 29  6 27 19 18  6  12 8\n```\n\n# Task\n\nWrite a function that accepts an array of integers `code` and a `key` number. As the result, it should return string containg a decoded message from the `code`.\n\n# Input / Output\n\nThe `code` is a array of positive integers.\nThe `key` input is a positive integer.\n\n# Example\n\n``` javascript\ndecode([ 20, 12, 18, 30, 21],1939);  ==> \"scout\"\ndecode([ 14, 10, 22, 29, 6, 27, 19, 18, 6, 12, 8],1939);  ==>  \"masterpiece\"\n```\n\n# Digital cypher series\n- [Digital cypher vol 1](https://www.codewars.com/kata/592e830e043b99888600002d)\n- [Digital cypher vol 2](https://www.codewars.com/kata/592edfda5be407b9640000b2)\n- [Digital cypher vol 3 - missing key](https://www.codewars.com/kata/5930d8a4b8c2d9e11500002a)\ndef decode(code, key):\n\t\nUse Call-Based format\nANSWER:\n"}}