{"3069": {"code": ["\n\n### The Authority\n\n```\n\n\n\n### The Language\n\n\n\n\n\n\n\n```\n\n: \"Welcome\"\n```\n\n\n\n\n\n\n\n\n### The Start-up\n\n\n\n\n```\n\n### The API\n\n``` python\n'english': \"Welcome\"\n\n\n\nip_ADDRESS_", "\n```\n\n\n\n\n\n```\n\n### The Language\n\n'english': \"Welcome\"\n\n### The Task\n\n'czech': \"Welcome\",\n\n### The Task\n\n'lutish': \"Welcome\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The", "\n### The Basic\nWelcome\n### The API\n\n\n\n\n\n\n\n\n\n```\n: \"Welcome\"\n```\n\n\n\n### The Language\n\n```\n\n\n\n\n### The Task\n\n\n\n```\n\n\n\n\n\n\n```\n\n### The API\n\n\n\n\n### The Language\n\n\n'hung", "```\n\n\n\n\n\n\n\n\n\n\n``` python\n'czech': \"Vitjte\",\n'lutanian': \"Vitjte\",\n': \"Vitjte\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The Language\n\n```python\n\n\n\n\n\n### The Event\n\n```", "\n\n### The Language\n\n'english': \"Welcome\",\n'welcome': \"Welcome\",\n\n\n\n\n\n\n\n\n\n### The API\n\n\n: \"Velkomen\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The Language\n\n'english': \"Welcome\"\n\n\n\n### The Task", "\n\n\n\n\n\n\n### The Language\n\n'english': \"Welcome\",\n'czanian': \"Vitejes\",\n'zanish': \"Vitjes\",\n\n### The API\n\n'english': \"Welcome\",\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n``", "\n\n\n\n\n\n\n\n```\n\n'english': \"Welcome\",\n'czech': \"Welcome\",\n'lithuanian': \"Welcome\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The API\n\n``` python\n'english': \"Welcome\"\n\nip_ADDRESS", "\n\n\n\n\n\n```\n\n: \"Welcome\"\n```\n\n\n``` java\nenglish: \"Welcome\",\n'czech: \"Welcome\",\n'lutish: \"Welcome\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~~\n'english': \"Welcome\",\n'czech': \"", "\n\n\n\n\n\n\n\n\n'english': \"Welcome\",\n'dutonian': \"Welcome\",\n'welsh': \"Welcome\",\n\n### The API\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n### The API\n\n\n\n\n\n\n\n\n\n\n\n\n### The Susan\n\n```java", "\n### The Ba\n\n\n\n\n\n\n\n\n\n\n\n: \"Welcome\"\n```\n\n\n\n\n- The main language\n'english': \"Welcome\"\n```\n\n### The API\n\n'english': \"Welcome\"\n\n\n\n\n\n\n\n\n\n\n\n\n### The Ba\n\n```python\n'", "\n### The System\nWelcome to Scandinavia\n### The API\n\n## The Language\n\n\n\n\n\n\n\n\n\n\n\n```\n: \"Croeso\"\n\n\n\n\n\n\n\n### The Server\n\n\n\n\n\n\n\n### The API\n\n'english': \"Welcome\"\n\n\n### The Task\n\n```", "\n\n\n\n\n\n\n### The API\n\n\n: \"Velkomom\",\n'welsh': \"Croeso\",\n\n### The Language\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n### The Language\n\n``` python\n'english': \"Welcome\"\n\n\n\"\n", "\n\n\n\n```\n\n\n\n'english': \"Welcome\",\n'czech': \"Welcome\",\n'lithuanian': \"Welcome\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The API\n\n\n\n### The Task\n\n\n\n\n\n\n~~~~\n'english': \"Welcome\",\n'c", "\n\n\n\n\n\n\n\n\n'english': \"Welcome\",\n'dutonish': \"Welcome\",\n'french': \"Welcome\",\n\n### The API\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n### The API\n\n``` python\n'english': \"Welcome\",\n\n'", "\n\n\n\n\n### The User\n\nWelcome to the start-up's BA.\n\n:\n\n### The Language\n\n'english': \"English\"\n\n### The Task\n\n'language': \"English\"\n\n### The API\n\n'welcome': \"Welcome to the\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n'sanish': \"Sankan\"\n'holish': \"Holkan\"\n\n### The Language\n\n\n\n\n: \"Welcome\"\n\n\n\n\n\n\n\n\n\n\n\n```\n\n### The API\n\n``` python\n'english': \"Welcome\"\n\n\n'h", "\n\n\n\n\n\n\n\n\n'british': \"Britite\",\n'fish': \"Britite\"\n'cish': \"Britite\"\n\n### The API\n\n```\n\n\n\n\n\n\n\n\n\n\n### The API\n\n\n\n\n\n\n\n\n\n\n### The Task\n\n\n### The Task Task\n\n", "\n### The User\n\n\n\n\n\n\n\n\n'czech': \"Welcome\",\n'fzech': \"Welcome\",\n'lithuanish': \"Welcome\",\n'swedish': \"Welcome\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The API\n\n\n\n\n\n\n# Teses", "\n\n\n\n\n\n\n\n\n\n\n```\n': \"Vituoman\",\n'stish: \"Wituoman\"\n\n### The API\n\n``` java\n\n\n\n\n\n```\n\n\n\n### The API\n\n\n\n\n\n\n\n\nIP_ADDRESS_INVALID - not a valid ip\n```\n\n### The", "\n\n\n\n\n\n\n\n\n'english': \"Welcome\",\n'czech': \"Welcome\",\n'lithuanian': \"Welcome\",\n\n### The API\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n### The Language\n\n```\n\n'english': \""], "prompt": "\nQUESTION:\nYour start-up's BA has told marketing that your website has a large audience in Scandinavia and surrounding countries. Marketing thinks it would be great to welcome visitors to the site in their own language. Luckily you already use an API that detects the user's location, so this is an easy win. \n\n### The Task\n- Think of a way to store the languages as a database (eg an object). The languages are listed below so you can copy and paste!\n- Write a 'welcome' function that takes a parameter 'language' (always a string), and returns a greeting - if you have it in your database. It should default to English if the language is not in the database, or in the event of an invalid input.\n\n### The Database\n\n```python\n'english': 'Welcome',\n'czech': 'Vitejte',\n'danish': 'Velkomst',\n'dutch': 'Welkom',\n'estonian': 'Tere tulemast',\n'finnish': 'Tervetuloa',\n'flemish': 'Welgekomen',\n'french': 'Bienvenue',\n'german': 'Willkommen',\n'irish': 'Failte',\n'italian': 'Benvenuto',\n'latvian': 'Gaidits',\n'lithuanian': 'Laukiamas',\n'polish': 'Witamy',\n'spanish': 'Bienvenido',\n'swedish': 'Valkommen',\n'welsh': 'Croeso'\n```\n``` java\nenglish: \"Welcome\",\nczech: \"Vitejte\",\ndanish: \"Velkomst\",\ndutch: \"Welkom\",\nestonian: \"Tere tulemast\",\nfinnish: \"Tervetuloa\",\nflemish: \"Welgekomen\",\nfrench: \"Bienvenue\",\ngerman: \"Willkommen\",\nirish: \"Failte\",\nitalian: \"Benvenuto\",\nlatvian: \"Gaidits\",\nlithuanian: \"Laukiamas\",\npolish: \"Witamy\",\nspanish: \"Bienvenido\",\nswedish: \"Valkommen\",\nwelsh: \"Croeso\"\n```\n\nPossible invalid inputs include:\n~~~~\nIP_ADDRESS_INVALID - not a valid ipv4 or ipv6 ip address\nIP_ADDRESS_NOT_FOUND - ip address not in the database\nIP_ADDRESS_REQUIRED - no ip address was supplied\n~~~~\ndef greet(language):\n\t\nUse Call-Based format\nANSWER:\n"}}