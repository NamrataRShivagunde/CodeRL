{"1884": {"code": ["\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list, find the shortest transformation sequence from beginWord to endWord\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\nGiven two words (beginWord and endWord) and a dictionary's word list, find all shortest transformation sequence(s)\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven two words (beginWord and end", "\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def findLadders(self, beginWord: str, endWord: str, wordList: List[str]):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nGiven two words (beginWord and endWord) and a dictionary's word list:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord),\n\n\n\nGiven two words (beginWord", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nGiven two words (beginWord and endWord) and a dictionary's word list, find all shortest transformation sequence(s)\n\n\n\n\nUse Python-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nGiven two words (beginWord and endWord) and a dictionary's word list, find all shortest transformation sequence(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list\n\n\n\nGiven two words", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven two words (beginWord and endWord) and a dictionary's word list, find all shortest transformation sequence(s):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven two words (beginWord", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nGiven two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequences\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nGiven two words (beginWord and endWord) and a dictionary's word list, find all shortest transformation sequences from beginWord to endWord\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord)\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord):\n\n\nGiven two", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nGiven two words (beginWord and endWord, and a dictionary's word list):\n\nUse Call-Based format\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (begin", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nGiven two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nGiven two words (beginWord and endWord):\n\n\n\nGiven two words (", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord),\n\n\nGiven two words (", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nGiven two words (beginWord and endWord) and a dictionary's word list, find all shortest transformation sequences from beginWord to endWord\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two words (beginWord and endWord"], "prompt": "\nQUESTION:\nGiven two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord, such that:\n\n\n       Only one letter can be changed at a time\n       Each transformed word must exist in the word list. Note that beginWord is not a transformed word.\n\n\nNote:\n\n\n       Return an empty list if there is no such transformation sequence.\n       All words have the same length.\n       All words contain only lowercase alphabetic characters.\n       You may assume no duplicates in the word list.\n       You may assume beginWord and endWord are non-empty and are not the same.\n\n\nExample 1:\n\n\nInput:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n\u00a0 [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]\n\n\nExample 2:\n\n\nInput:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation:\u00a0The endWord \"cog\" is not in wordList, therefore no possible\u00a0transformation.\nclass Solution:\n    def findLadders(self, beginWord: str, endWord: str, wordList: List[str]) -> List[List[str]]:\n        \nUse Call-Based format\nANSWER:\n"}}