{"1846": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nOutput: [1,1,1,1,1]\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree\n\n\n\n# Definition for a binary tree\n# Definition for a binary tree\n\n,\n\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given the head node root of a binary tree.\n\n\n\n\n\n\nWe are given the", "\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nWe are given the head node root of a binary tree.\n\nNote:\n\n\n\n\n\n\nWe are given the head node", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\n\n\n## Example 1:\n\n# Definition for a", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n    \nUse Call-Based format\n\n\n\n\n\nWe are given the head node root of a binary tree.\n\n\n\n\n\nWe are", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n# Definition for a binary tree node.\n\n\n\n\n# Definition for a binary tree node.\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThe node is the left node of the tree.\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nWe are given the head node root\u00a0of a binary tree.\n\n\n\n\n\n\nWe are given the head node root\ufffd", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Definition for a binary tree\nWe are given the head node root of a binary tree\n\n\n\n\nWe are given", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nWe are given the head node root of a binary tree.\n\n\n\n\nWe are given the head node root\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n    def __init__(self, root):\n        self.root = root\n\n\n\n\n\nWe are given a head node root of a binary tree.\n\n\n\n\nWe are given the", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree node\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    \nUse Call-Based format\n\n\n\n# Definition for a binary tree node.\nWe are given the head node root of a binary tree.\n\n\n\n\nWe are", "\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nWe are given the head node root of a binary tree.\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\nInput: \n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    Use Call-Based format\n\nUse Call-Based format\n\n\n\n    def pruneTree(self, root: TreeNode):\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\nA node is", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n# Use Call-Based format\n#", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\nExample 1:\n\nInput: [1,0,1,0,1,1,1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nExample 4:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    In the above example, we", "\nUse Call-Based format\n\n\n\n\n\n\n\n# Definition for a binary tree node.\nUse Call-Based format\n\n\n\n\n\n\n\n\nExample 4:\n\nInput: [1,1,1,1,1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nX = 0\n\nY =", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nWe are given a head node root of a binary tree.\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\n\n\n\nWe are given the head node root of a binary tree.\n\n\n\n\nWe are given the", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\nInput: [1,1,1,1,1]\n\n\n\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Args:\n       ", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    We are given the head node root of a binary tree.\n\n\n\n\n\nExample 1:\n\n\n#"], "prompt": "\nQUESTION:\nWe are given the head node root\u00a0of a binary tree, where additionally every node's value is either a 0 or a 1.\nReturn the same tree where every subtree (of the given tree) not containing a 1 has been removed.\n(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)\nExample 1:\nInput: [1,null,0,0,1]\nOutput: [1,null,0,null,1]\n \nExplanation: \nOnly the red nodes satisfy the property \"every subtree not containing a 1\".\nThe diagram on the right represents the answer.\n\n\n\nExample 2:\nInput: [1,0,1,0,0,0,1]\nOutput: [1,null,1,null,1]\n\n\n\n\nExample 3:\nInput: [1,1,0,1,1,0,1,0]\nOutput: [1,1,0,1,1,null,1]\n\n\n\n\nNote: \n\nThe binary tree\u00a0will\u00a0have\u00a0at\u00a0most 200 nodes.\nThe value of each node will only be 0 or 1.\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def pruneTree(self, root: TreeNode) -> TreeNode:\n        \nUse Call-Based format\nANSWER:\n"}}