{"1928": {"code": ["\nUse Call-Based format\n\n    String = \"123,456,789\"\n    List = []\n\n\n\n\n\n\nGiven a nested list of integers:\n\n\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n\n\n\n\n#\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\nGiven a nested list of", "\nUse Call-Based format\n\n\n    :rtype List[NestedInteger]\n\n\n\n\nUse Call-Based format\n\n\n\n\nExample 3:\n\nGiven a nested list of integers:\n\n\n\n\n\n\nGiven\n\n\n\nGiven a nested list of integers:\n\n#\n\n\n\n#\n\n\n\n\n\n\n\n\n\nGiven a nested", "\nUse Call-Based format\n\nReturn a NestedInteger object containing a nested list of integers, or a list of nested integers.\n\n\n\n\n\n\nExample 3:\n\n\n\n\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n\n\n\n\n   \n\n\n\n    @return", "\n\n\n\n    return True\n\n\n\n\nUse Call-Based format\n\n\n\n\nNote:\nGiven a nested list of integers represented as a string:\n   \n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\nExample 3:\n\n#\n#\n\n\n#\n\n\n\n\n\n\n\n   \n\n\n\n\n    Args", "\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a nested list of integers represented as a string:\nGiven s = \"[123,[456,[789]]\",\n\n\n\n\n   \n\n\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n    Use Call", "\n\n\n   \n\nUse Call-Based format\n\n\n\n\n\n\n\nString is a list of integers represented as a string:\n  i.  i.  i.  i.  i.  i.  i.  i.  i.  i.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    s =", "\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\nReturn a NestedInteger object containing an integer:\n    i.  An integer containing value 123.\n    :rtype int\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n   \n\n    Given a nested list", "\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nReturn a NestedInteger object containing an integer.\n\nExample 3:\nGiven a nested list of integers represented as a string:\n\n\n\n\n\n\n\n   \n\n\n\n#\n#\n\n\n#\n\n\n\n\n\n\n\n\n\nGiven a nested list of integers represented", "\n\nUse Call-Based format\n\n\n   \n    Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n#\n#\n\n#\n\n\n#\n#\n\n\n\n\n#\n\n\n\n   \n\n\n       \n\n\n    \"\"\"\n\n#   ", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nNOTE:\n\nReturn a nested integer object containing the integer.\n\nNote:\n\n\n\n\nGiven\n\n\n   \n   \n#\n#\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n    @return", "\n\n    Use Call-Based format\n :type int\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n\n\n\n\n\n\nGiven\n#\n#\n\n\n\n#\n\n\n\n\n\n\n\n   \n\n\n    @return", "\n\n\n        return NestedInteger\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven a nested list of integers represented as a string:\n\n\n\nExample 3:\n\n\n\n\n#\n#\n#\n\n\n#\n\n\n\n\n\n\n\n   \n\n\n    @return", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a nested list of integers represented as a string, implement a parser to deserialize it.\n\n\n\nExample 3:\nGiven\n\n\n\n\n\n\n\n\n\n\n\n#\n#\n\n\n   \n\n\n\n\n\n    s = \"", "\n\n\n   \n\nUse Call-Based format\n\n\n\n\nGiven a nested list of integers represented as a string, implement a parser to deserialize it.\n\nNote:\n\n\n\n\n\n\n\n\n       \n   \n\n\n\n\n\n\n\n   \n#\n\n\n\n\n\n#\n#\n\n\n\n\n\n\n\n\n\n\n    s = \"", "\n\n\n\n        Return None if s is None\n        :rtype None\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n\n\n\n   \n   \n#\n#\n\n\n#\n\n\n\n\n\n\n\n   \n\n\n\n    Args:\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a nested list of integers represented as a string, implement a parser to deserialize it.\n\n\nExample 3:\nGiven a nested list of integers:\n\n\n\n   \n\n#\n#\n\n\n#\n\n\n\n\n\n\n\nGiven a nested list of integers", "\n\nUse Call-Based format\n\n\n    :type int\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a nested list of integers represented as a string:\n\n\n\n\n\n\nGiven\n#\n#\n\n\n#\n\n\n\n\n\n\n\n\n\n\nGiven a nested list", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n        :rtype int\n\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n    i. A nested integer containing value 123.\n        :rtype int\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\nGiven a nested list of", "\n\nUse Call-Based format\n\n :rtype int\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a nested list of integers represented as a string:\n\n    i. A nested integer containing value 123.\n\n\n\n\n\n\n\n\n   \n\n\n#\n#\n\n\n#\n#\n\n\n\n\n\n\n\nGiven a nested list of", "\n\n\n        return NestedInteger\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nString is the string representation of an integer.\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n    :rtype int\n\n\n\nExample 3:\n\n\n\n\n\n#\n\n\n\n\n\n       \n\n\n\n    @"], "prompt": "\nQUESTION:\nGiven a nested list of integers represented as a string, implement a parser to deserialize it.\n\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\n\nNote:\nYou may assume that the string is well-formed:\n\nString is non-empty.\nString does not contain white spaces.\nString contains only digits 0-9, [, - ,, ].\n\n\n\nExample 1:\n\nGiven s = \"324\",\n\nYou should return a NestedInteger object which contains a single integer 324.\n\n\n\nExample 2:\n\nGiven s = \"[123,[456,[789]]]\",\n\nReturn a NestedInteger object containing a nested list with 2 elements:\n\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789.\n# \"\"\"\n# This is the interface that allows for creating nested lists.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class NestedInteger:\n#    def __init__(self, value=None):\n#        \"\"\"\n#        If value is not specified, initializes an empty list.\n#        Otherwise initializes a single integer equal to value.\n#        \"\"\"\n#\n#    def isInteger(self):\n#        \"\"\"\n#        @return True if this NestedInteger holds a single integer, rather than a nested list.\n#        :rtype bool\n#        \"\"\"\n#\n#    def add(self, elem):\n#        \"\"\"\n#        Set this NestedInteger to hold a nested list and adds a nested integer elem to it.\n#        :rtype void\n#        \"\"\"\n#\n#    def setInteger(self, value):\n#        \"\"\"\n#        Set this NestedInteger to hold a single integer equal to value.\n#        :rtype void\n#        \"\"\"\n#\n#    def getInteger(self):\n#        \"\"\"\n#        @return the single integer that this NestedInteger holds, if it holds a single integer\n#        Return None if this NestedInteger holds a nested list\n#        :rtype int\n#        \"\"\"\n#\n#    def getList(self):\n#        \"\"\"\n#        @return the nested list that this NestedInteger holds, if it holds a nested list\n#        Return None if this NestedInteger holds a single integer\n#        :rtype List[NestedInteger]\n#        \"\"\"\nclass Solution:\n    def deserialize(self, s: str) -> NestedInteger:\n        \nUse Call-Based format\nANSWER:\n"}}