{"4456": {"code": ["\n\n\n\n\n\nUse Call-Based format\n,\n\n\n\n\n#\n\n\n\n\n\n\n\n---\n# Example:\nUse Call-Based format\n---\n\n# Kata:\n\n\n\n# Examples\n---\n# Call-Based format\n,\n\n\n\n# Examples\n---\n#\n\n,\n\n\n# No nesting\n# no nesting", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n#\n\n\n\n\n\n\n\n\n[1, 2, 3]\n\n---\n# Example\n# Examples\n\n# Examples\n\nUse Call-Based format\n\n\n\n,,\n\n---\n#\n\n,\n# Example\n\n\n# Use kata\n# the", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n---\n\n\n\n\n\n\n\n\n\n\n\n[1, 2, 3]\n\n\n\n\n\n[1, 2, 3]\n\n\n\n\n# Examples\n---\n\nUse Call-Based format\n\n\n\n\n# Examples\n\n\n# no nesting\n# no", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n#\n\n\n\n\n\t\n\n\n\n\n\n[1, 2, 3]\n\n\n\n---\n# Examples\n---\n\nUse Call-Based format\n\n,,\n\n\n,\n\n# Examples\n---\n# Examples\n# Call-Based format\n\n# no", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, 2, 3]\n\n---\n# Examples\n---\n\n# Example\n\n\n\n\n# Examples\n---\n\nUse Call-Based format\n,,\n\n\n,\n\n\n# Example:\n\n---\n# Use kata", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n# Example\n\n[1, 2, 3]\n\n# One level of nesting\n[1, 2, 3]\n\n\n\n\n\nUse Call-Based format\n\n\n---\n\n# Example\n\n\n\n\n# Examples\n\n#\n# no nesting\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n---\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n# Example\ndef flatten_me(lst):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n```python\n#", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n---\n\n# Examples\n---\ndef flatten_me(lst)\n\t\nUse Call-Based format\n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n---\n\n# Example\n\nUse Call-Based format\n\n\n\n\nIn this kata, you task is to create", "\nUse Call-Based format\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n---\n# Use Call-Based format\n[1, 2, 3, 4]\n\n\n\n\n\n\n\n\n---\n\n# Examples\ndef flatten_me(lst):\n\t\nUse Call-Based format\n\n\n\n,\n\n\n---\n\n# Examples\n---", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[True, False, '!', '?', 71, '@']\n\n\n\n# Use Call-Based format\n,,\n---\n# More examples\n---\n\n# Use Call-Based format\n\n# no nesting\n\n\n# no nesting\n[True, False]", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\t\n\n---\n\n# Examples\n---\nUse Call-Based format\n\n[1, 2, 3]\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n# no nesting\n[1, 2, 3]\n\n\n\nIn", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n---\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n# Example\nUse Call-Based format\n[1, 2, 3, 4]\n\n\n\n\n\n\t\n\n\n# use kata\n# kata.add", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n---\n\n\t\n\n\n\n\n\n\n\n\n\n\n[1, 2, 3]\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n---\n\n\n[1, 2, 3, 4]\n\n\n\n\n# Examples\n", "\n\n\n\n\nUse Call-Based format\n\n\n\n---\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n[1, 2, 3]\n\n\n\n\n\n---\n# Example\n# Examples\n\n# Example\nUse Call-Based format\n\nUse Call-Based format,,\n\n\n,\n\n\n# Examples\n\n```python\n", "\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Format\n\n\n\n\t\nUse Call-As-Argument format\n\n\n---\n# Example\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Example\n\n# Example\nA python function\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Example 1\n\n#", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n# Example\n---\n\n# Example:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# Examples\n---\n# Example\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n# Example 2\n", "\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n1 level of nesting\n2 level of nesting\n3 level of nesting\n@\n@\n\n\n\nUse Call-Based format,\n\n\n\n\n# use Call-Based format\n\n# no nesting\n[1, 2, 3]\n# one level of", "\n\n\n\n\n\n\nUse Call-Based format\n\n---\n# Example\n\n\n\n# Examples\n\n# List-based format\n\n\n\n\n\t\n\n\n# Examples\n---\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n---\n\n\n\n\n# No nesting\n# No nesting\n[1, 2, 3]\n", "\n\n\n\n\n\n\nUse Call-Based format\n\n---\n# Example\n\n\t\n\n\n\n\n\n\n\n\n# Example\n---\n\n# Use Call-Based format\n---:\n\nUse Call-Based format\n\n\n\n,,\n\n# Example\n\n# Examples\n---\n\nUse Call-Based format\n,\n\n\n# Examples\n# -", "\n\n\n\n\n\n\n\n\n\n# Use Function-Based format\ndef flatten_me(lst):\n\t\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n---\n\n# Examples\n\n>>> flatten_me([1, [2, 3]])\n\n\n\n\n# Example 1"], "prompt": "\nQUESTION:\nIn this kata, your task is to create a function that takes a single list as an argument and returns a flattened list. The input list will have a maximum of one level of nesting (list(s) inside of a list).\n\n```python\n# no nesting\n[1, 2, 3]\n\n# one level of nesting\n[1, [2, 3]]\n```\n---\n\n# Examples\n\n```python\n>>> flatten_me(['!', '?'])\n['!', '?']\n\n>>> flatten_me([1, [2, 3], 4])\n[1, 2, 3, 4]\n\n>>> flatten_me([['a', 'b'], 'c', ['d']])\n['a', 'b', 'c', 'd']\n\n>>> flatten_me([[True, False], ['!'], ['?'], [71, '@']]) \n[True, False, '!', '?', 71, '@']\n```\n\nGood luck!\ndef flatten_me(lst):\n\t\nUse Call-Based format\nANSWER:\n"}}