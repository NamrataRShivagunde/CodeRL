{"219": {"code": ["\nUse Call-Based format\n\n\n    pass\n\n\nUse Call-Based format\n\n\n\n   \n        pass\n\n\n\n\n   \n        pass\n\n\nWe are given hours, a list of the number of hours\u00a0worked per day for a given employee.\n\n\n\n\n\n\n\n\n\nWe are given hours\n\n\n\nWe are given hours", "\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.longestWPI(hours)\n\nUse Call-Based format\n\n\n   \n        pass\n\nUse Call-Based format\nWe are given hours\n\n\n\nWe are given hours, a list of the number of hours worked per day\n\n\n\n\n\n\n\nWe are given hours,", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n   \n        pass\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nWe are given hours, a list of the number of hours worked per day.\n\n\n\n\nWe are given", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return self.longestWPI(hours)\n\n\nUse Call-Based format\n\n   \n        pass\n\nWe are given hours, a list of the number of hours worked per day for a given employee.\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n   \n        pass\n\n\n\n\nWe are given hours.\n\n\n\nWe are given hours, a list of the number of hours worked per day.\n\n\n\n\n\n\n\nWe are given hours, a", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n        \nUse Call-Based format\n\n\n    def longestWPI(self, hours: List[int]) -> int:\n\n:\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list of hours.\n\n\n\nWe", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return self.longestWPI(hours)\n        \n\n\n\n\n   \n        pass\n\nWe are given hours, a list of the number of hours worked per day for a given employee.\nWe are given hours\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return self.longestWPI(hours)\n\n\nWe are given hours, a list of the number of hours worked per day.\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list of the number of hours worked\n\n\nWe", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n   \n        pass\n\nUse Call-Based format\nWe are given hours, a list of the number of hours worked per day.\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list of", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n   \n        return self.longestWPI(hours)\n        \nUse Call-Based format\n\n\n   \n        pass\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nWe are given hours, a list of the number of hours worked per day\n\n\n\n\nWe", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.longestWPI(hours)\n        \nUse Call-Based format\n\n\n   \n        pass\n\n\n\nWe are given hours, a list of the number of hours worked per day\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list", "\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n   \n        pass\n\n\nWe are given hours, a list of the number of hours worked per day.\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list of", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return self.hours.max()\n\n\n\n\u00a0\n\u00a0\n\n   \n        pass\n\n\nUse Call-Based format\nWe are given hours, a list of the number of hours worked per day.\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\nWe are given hours", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n\n   \n        pass\n\nWe are given hours and a list of the number of hours worked per day for a given employee.\n\n\n\n\n\n\n\n\n\n\n\n\n0 <= hours <= 15\n\n\nWe are given hours", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n\n\n   \n        pass\n\nUse Call-Based format\nWe are given hours.\n\n\n\n\n\n\nWe are given hours, a list of the number of hours worked.\n\n\n\n\nWe are", "\n\n\n\n\n\n\n\n\n    def longestWPI(self, hours: List[int]) -> int:\n        return 0\n\nUse Call-Based format\n\n\n\n   \n        pass\n\n\n\nWe are given hours, a list of the number of hours worked per day\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours, a list of", "\n\n\n\n\nUse Call-Based format\nWe are given hours.\n\nUse Call-Based format\n\n\n\n   \n        return self.longestWPI(hours)\n\n\n\n   \n        pass\n\nWe are given hours\nWe are given hours.\n\n\n\n\n\n\nWe are given hours, a list of the hours.\n\n\n\n\nWe are", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \n        return self.longestWPI(hours)\n        \n\n\n\u00a0\n\n   \n        pass\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nWe are given hours, a list of the number of hours worked per day.\n\n\n\n\nWe", "\n\n\n\nUse Call-Based format\n\nThe time is currently not accurate.\n\n\n   \n        return self.longestWPI(hours)\n\n\nThe time is not accurate.\n\n   \n        pass\n\nWell we are given hours\n\n\n\n\n\n\n\nAnother day is not a tiring day.\n\n\n\n\nWe are given hours,", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n   \n        pass\n\n\n\n    return self.longestWPI(hours)\n\nUse Call-Based format\n\nUse Method-Based format\n\nUse Call-Based format:\n\nWe are given hours\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given hours,"], "prompt": "\nQUESTION:\nWe are given hours, a list of the number of hours\u00a0worked per day for a given employee.\nA day is considered to be a tiring day if and only if the number of hours worked is (strictly) greater than 8.\nA well-performing interval is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.\nReturn the length of the longest well-performing interval.\n\u00a0\nExample 1:\nInput: hours = [9,9,6,0,6,6,9]\nOutput: 3\nExplanation: The longest well-performing interval is [9,9,6].\n\n\u00a0\nConstraints:\n\n1 <= hours.length <= 10000\n0 <= hours[i] <= 16\nclass Solution:\n    def longestWPI(self, hours: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}