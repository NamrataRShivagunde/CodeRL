{"4675": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n`if-not:julia,racket\n```else:julia,racket\nset\n:\n\n\n\n:\n:\n\n\n\n\n\nyou have to specify a function named setAlarm.\n\n\n\n\n\nset\n\nWrite a function named setAlarm", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nsetAlarm(employed, vacation)\n\nUse Call-Based format\n```if-not:julia,racket\n\n:\n\n\n\n:\n:\n\n\n:\n\n\n\nUse Call-Based format\n\n\nset\n:\nWrite a function named setAlarm", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nsetAlarm(true, true) -> true\n\nUse Call-Based format\n```if-not:julia,racket\nsetAlarm(false, true) -> true\n\n:\n\n\n:\n:\n\n\n:\n\n\n\n\n\nset\n\n\n\n```if-", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nsetAlarm(employed, true) -> true\nsetAlarm(false, false) -> true\n\n:\n:\nsetAlarm(false, true) -> false\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nWrite a function named setAlarm which receives", "Use Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nWrite a function named setAlarm which takes two parameters\n\nsetAlarm(true, true) -> true\nsetAlarm(false, false) -> false\n\n:\n:\n\n\n:\n\n\n\n\n\nsetAlarm(true, false) -> true\n\n:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n```if-not:julia,racket\nsetAlarm(true, false) -> true\n```else\n\n\n:\n\n\n:\n:\n\n\n:\n not\n\n\nUse Call-Based format\n\n\nset\n:\n\n```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nset\n\nWrite a function named setAlarm which receives two parameters and returns true whenever you are on the vacation.\n\nUse Call-Based format\n\n\n:\n:\n\n\n\n\n\n\n\n\n\nWrite a function named setAlarm\n\nset\n\n\n\n```if-not", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\nWrite a function named setAlarm which receives two parameters.\n\nset\n:\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nset\n\nWrite a function named setAlarm which receives two parameters, employ", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n```if-not:julia,racket\nsetAlarm(false, false) -> true\n```else:\n\n:\n\n\n\n:\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nset\n\n\n```if-not:julia", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nset_alarm(employed, vacation) -> true\n```\nif-not:julia,racket\nset_alarm(employed, true) -> true\n\n:\n\n\t:\n:\n\n\n:\n\n:\n\n\n\n:\nWrite a function named", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nsetAlarm(employed, vacation)\n\n```if-not:julia,racket\nsetAlarm(employed, vacation)\n```\n\n:\n\n\n\t:\n:\n\n\n:\n\n\n\n\n\n\n:\n\n```if-", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\nsetAlarm(employed, vacation) -> true\nsetAlarm(employed, vacation) -> false\n\n:\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\nset\n\nWrite a function named setAlarm which", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\nWrite a function named setAlarm which returns a function named setAlarm.\n\n\nsetAlarm(true, true) -> true\n\n:\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nset -> true\n:\nWrite a function named setAlarm which receives", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\nWHERE:\n\t\n:\n:\n\nsetAlarm(true, true) -> true\nsetAlarm(false, false) -> true\n\n\n\n\n\n\n\n\n\n\n\n\n```if-not", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nsetAlarm(employed, vacation) -> true\n\nUse Call-Based format\nWHERE:\n\n:\n\n\n\n:\n:\n\n\n\n\n\n\nsetAlarm(false, true) -> true\n\n\n\n\nset\n\nWrite a function named", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nsetAlarm(employed, vacation)\n```\n\n\n:\n\n\n\nsetAlarm(true, false) -> false\n```\n\n:\n:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nset\n\n\n\n```if-not", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nset_alarm(employed, vacation)\n\nUse Call-Based format\n```if-not:julia,racket\n\n:\n\n\n\n:\n:\n\n\n:\n\n\n\n\n\n\nsetAlarm(true, false) -> true\n\n:\nWrite", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nsetAlarm(employed, vacation)\n\nUse Call-Based format\n```if-not:julia,racket\nset_alarm(employed, vacation)\n\n:\n\n\n\n:\n\n\n: not\n:\n\n\n\n\n\tWrite a function", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n:\n\n\nset\n\t\n:\n:\n\n\n\n\n).\n\n```if-not:julia,racket\n\n\n```else:\n\n\n\n\n\n:\n\n```", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nWrite a function named setAlarm which takes two parameters\n\nUse Call-Based format\n\nsetAlarm(true, false) -> true\n\n:\n:\n\n\n:\n\n\n\n\n\n\n\n\n\n```if-not:julia"], "prompt": "\nQUESTION:\nWrite a function named setAlarm which receives two parameters. The first parameter, employed, is true whenever you are employed and the second parameter, vacation is true whenever you are on vacation.\nThe function should return true if you are employed and not on vacation (because these are the circumstances under which you need to set an alarm). It should return false otherwise. Examples:\n\n```if-not:julia,racket\nsetAlarm(true, true) -> false\nsetAlarm(false, true) -> false\nsetAlarm(false, false) -> false\nsetAlarm(true, false) -> true\n```\ndef set_alarm(employed, vacation):\n\t\nUse Call-Based format\nANSWER:\n"}}