{"1970": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n          \n    pass\n\n\n\n\nInput: \"123\"\nOutput: \"121\"\n\n\n\n\n   \n        pass\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an integer n, find", "\nUse Call-Based format\nUse Call-Based format\n    def nearestPalindromic(self, n: str):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    Given an integer n,", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format    def nearestPalindromic(self, n: str) -> str:\n\n\n\n\n\n\n\n   \n\n\n\n\nUse Class-Based format\n\nUse:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an integer n, find the", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\n\n\n\n\n          \n    pass\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClass Solution:\n   :\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThe string 'closest'\n\n\nGiven an integer", "\nUse Call-Based format\n\n    def nearestPalindromic(self, n: str):\n       \nUse Call-Based format\n\n\n\n\n\nUse Python format\n\nUse Call-Based format\n\n\n\n\n   :\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an integer n, find", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n        pass\n\n\n\n\n\nExample 2:\n\nInput: \"123\"\n\nOutput: \"121\"\n\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an integer n, find the closest integer\n\n\nGiven an integer n", "\nUse Call-Based format\n\n    def nearestPalindromic(self, n: str) -> str:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   :\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer n", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n       \n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nclass:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an integer n, find the closest", "\nUse Call-Based format\nUse Call-Based format\n    def nearestPalindromic(self, n: str):\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer n, find the", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nCall-Based format\n\n\n\n\n\n\n\n\n\nExample 2:\n\n   :\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an integer n, find the closest", "\nUse Call-Based format\n\n\nUse Call-Based format    def nearestPalindromic(self, n: str):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given an integer n, find the", "\nUse Call-Based format\n\n    def nearestPalindromic(self, n: str):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\nUse Class-Based format\n:\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nGiven an integer n, find the closest integer\n\n\nGiven an integer", "\nUse Call-Based format\nUse Call-Based format\n    def nearestPalindromic(self, n: str):\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n        \nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\nInput:", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExample:\n   \n\n\n\n\n\n -> str:\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven an integer n, find the closest integer\n\nGiven", "\nUse Call-Based format\nUse Call-Based format\n    def nearestPalindromic(self, n: str):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\nExample 2:\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer n, find the", "\nUse Call-Based format\n\n    def nearestPalindromic(self, n: str):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    Given an integer n,", "\nUse Call-Based format\n\n    def nearestPalindromic(self, n: str):\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an integer n, find the", "\nUse Call-Based format\n\n    def nearestPalindromic(self, n: str):\n        \nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an integer n, find the", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nClass Solution:\n   \n\n\n\n\nExample 2:\n   \n        \nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an integer n, find the closest pal", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n          \n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\n        pass\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an integer n"], "prompt": "\nQUESTION:\nGiven an integer n, find the closest integer (not including itself), which is a palindrome. \n\nThe 'closest' is defined as absolute difference minimized between two integers.\n\nExample 1:\n\nInput: \"123\"\nOutput: \"121\"\n\n\n\nNote:\n\nThe input n is a positive integer represented by string, whose length will not exceed 18.\nIf there is a tie, return the smaller one as answer.\nclass Solution:\n    def nearestPalindromic(self, n: str) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}