{"4136": {"code": ["\n# Use Call-Based format\n![\n![](cake_slice(n))\n\nUse Call-Based format\n\n\t\n# Task\n\n\n\n\n\t\n# Task\n\n\n\n\t# Task\n\n\n\n\n\t\n\n\n\n\n\n\n# Task\n# Task\n\n# Task\n\n# Task\n\n\n# Task\n\n# Task", "\n\n# Call-Based format\n![](cake_slice(n))\n\nUse Call-Based format\n\n\t\n# Task\n\n\n\n\n\t\nUse Call-Based format# Task\n\n \n\n\t\n# Task\n\n# Task\n\n\t# Task\n\n\t\n# Task\n# Task\n\n# Task\n\n\t\n\n# Task\nA", "\n# Use Call-Based format\n![]\n\n\nUse Call-Based format\n# Task\n\n# Task\n\n\n\n\n\t\n\n\t\n# Task\n# Input/Output\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\t\n\n# Task\n\n\n\n\n# Task\n# Task\n\n\n\t\n\n# Task\nA c", "\n# Call-Based format\n\n![](call_slice(n))\n\nUse Call-Based format\n\n\t\n\n# Task\n\n\n\t\n\t\n# Task\n\n# Input/Output\n\n\n\n\t# Task\n# Task\n\n\n\t\n\n\n\n\n# Task\n# Task\n# Task\n\n\n# Task\n\n# Task\nA c", "\n# Use Call-Based format\n# Call-Based\n\n\n\n\n\t\nUse Call-Based format# Task\n# Task\n\n\n\n\n\t\nUse Call-Based format# Task\n\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\t\n# Task\n\n\t\n\n# Task\n\n\n# Task\n\n\t\n\n# Task\nA", "\n\nUse Call-Based format# Task\n![](cake_slice(n, n))\n\nUse Call-Based format\n\n\t\nUse Call-Based format# Task# Task\n\n\n\n\t\n\t# Task\n\n\n\n\t# Task\n\n\n\n\n# Task\n\n\n\n# Task\n# Task\n# Task\n\n\n# Task\nA c", "\n# Call-Based format\n# Task\n\n\n\t\n\n# Task\n\n# Task\n\n\n# Task\n\n\n\n\n\t\n\n\t\n# Task\n\n# Task\n\n\n\n\n\n\t\n\n# Task\n# Task\n\n\n\n\t\n\n\n\n\n# Task\n\n\n\n# Task\n\n\n# Task\n\n# Task\nA", "\n\n\n\n\t\nUse Call-Based format\n# Task\n\n\n# Task\n\n# Task\n\n\n# Input/Output\n\n\n\t\n\n\t\n\n# Task\n\n\n\n\t\n# Task\n# Task\n \n\n\n\t# Task\n\n\n\n# Task\n\n\n# Task\n\n# Task\n\n\n\n\n# Task\n\n#", "\nUse Call-Based format# Task\n![](\n![](\n![](\n![](\n![](\n![](\n![](\n!\n\n\n\n\n\n\n\t\n\n# Task\n\n\n\n\t\n# Task\n\n\n\n# Task\n\n\n\n\n# Task\n# Task\n# Task\n\n\t\n\n# Task\n", "\n# Use Call-Based format# Task\n![](\n![(# Task\n\n\n\t\n\n# Call-Based\n\n\n# Task\n\n\n\n\n\t\n# Task\n\n\n\n\t\n# Task\n\n# Task\n\n\t\n\n\n\n\n\n\n# Task\n\n# Task\n\n# Task\n\n\n# Task\n\n\n# Task", "\t\nUse Call-Based format\n# Task\n\n\n\t\nUse Call-Based format# Task\n\n\n# Task\n\n\n\n\n\t\n# Task\n\n\n\n\t\n# Task\n\n\n# Task\n\n\n\t\n\n\t\n\n# Task\n\n\n\n# Task\n\n\n# Task\n\n# Task\n\n\n# Task# Task\n\n#", "\n# Call-Based format\n\n\n\t\nUse Call-Based format# Task\n# Task\n\n\n\n# Call-Based\n\t\n\n\t\n# Task\n\n# Task\n\n\n\n\t\n\n# Task\n\n\n# Task\n\n\n\t\n\n\n\n\n\n# Task# Task\n\n# Task\n# Task\n\n\n\n# Task\n\n#", "\n# Call-Based format\n# Task\n\n![](1)\n\n\n\t\nUse Call-Based format\n\n# Task\n\n\n\n\n\t\n\n\n# Task\n\n\n# Task\n\n\n\n\n\t\n\n# Task\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n# Task\n\n\n# Output\n\n\n\n# Task\n", "\n\n# Call-Based format\n![](image)\n\n\t\nUse Call-Based format\n# Task# Task\n\n\n\n\n\t\n# Task\n\n# Input/Output\n\n\n\t\n\n# Task\n\n# Task\n\n\n\n\t\n\n\t\n\n\n\n\n\n# Task\n# Task\n\n\n\t\n# Task\n\n# Task\n", "\n# Call-Based format\n\n![](cake_slice(n))\n\nUse Call-Based format\n\n\t\nUse Call-Based format# Task\n\n\n# Task\n\n\n\n\t\n\n# Task\n\n\n\t\n# Task\n\n\n\t\n\n# Task\n\n\n# Task\n# Task\n\n\n\n\n# Task\n# Task\n\n", "\nUse Call-Based format\n![](2)\n\n\n\t\nUse Call-Based format\n\n# Task\n\n\n\n\t\n\t\n\nUse Call-Based format# Task\n\n\n\n\t\n\n# Task\n# Task\n\n\n\t\n\t\n\n\n\n# Task\n\n\n# Task\n\n:\n# Task\n\n\t\n\n# Task\n", "\n\n# Call-Based format\n\n\n\t\nUse Call-Based format# Task\n\n# Task\n\n\n\t\n\t\n\n\n# Task\n\n\n \n\t\n\n# Task\n\n\n# Task\n\n\n# Task\n\n \n\n\t\n\n\t\n\n\n\n# Task\n# Task\n\n# Task\n\n\n\n# Task\n\n# Task", "\n# Use Call-Based format# Task\n\n\t\n\t\n# Task\n\nUse Call-Based format\n\n# Input/Output\n\n\t\n\n\t\n# Task\n\nUse Call-Based format\n\n\n\t\n\n\n# Task\n\n\n\n\n# Task\n\n\n\n# Task\n# Task\n# Task\n\n\t\n# Task\n\n# Task\n", "\n\t\nUse Call-Based format\n\n\t\n\n# Task\n# Task\n\n\n# Input/Output\n\n\n\n\t\n# Task\n# Input/Output\n\n \n\t\n\t\n# Task\n\n\t\n# Task\n\n\t\n\n\t\n# Task\n\n\n\n# Task\n\n# Task\n:\n# Task\n\n\n# Task\n#", "\n\t\nUse Call-Based format\n\n\n\t\nUse Call-Based format# Task\n# Task\n\n\n# Input/Output\n\n\n\n\t\n# Task\n# Input/Output\n\n \n\n\t\n# Task\n\n\n# Task\n\n\n\n\t\n# Task\n\n\n\n\n\n# Task\n\n\n# Task\n\n\n\n\n# Task"], "prompt": "\nQUESTION:\n# Task\nA cake is sliced with `n` straight lines. Your task is to calculate the maximum number of pieces the cake can have.\n\n# Example\n\n For `n = 0`, the output should be `1`.\n \n For `n = 1`, the output should be `2`.\n \n For `n = 2`, the output should be `4`.\n \n For `n = 3`, the output should be `7`.\n \n See the following image to understand it:\n \n ![](https://cdn2.scratch.mit.edu/get_image/project/92275349_500x400.png?v=1450672809.79)\n\n# Input/Output\n\n\n - `[input]` integer `n`\n\n  `0 \u2264 n \u2264 10000`\n\n\n - `[output]` an integer\n\n  The maximum number of pieces the sliced cake can have.\ndef cake_slice(n):\n\t\nUse Call-Based format\nANSWER:\n"}}