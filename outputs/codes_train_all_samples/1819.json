{"1819": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n    pick(1, 2)\n\n\n# obj.pick(3)\n# obj.pick(1);\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# The array is too big", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n#\n# obj.pick(target)\n# param_2 = obj.pick(target)\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array of integers with possible duplicates, randomly output the\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n# This class has a more complicated implementation.\n\nUse Call-Based format\n\n#\n# Use Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The array is not", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    pass_1 = 0;\n\nUse Call-Based format\n\n\n\n\n# Use Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    pick(self, target)\n\n\n\n\n# The array contains the index of the target number.\n#\n\nUse Call-Based format\n\n# The target number should be unique.\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The array contains 5 integers;", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n#\n# param_1 = obj.pick(target)\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n# To use a j", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n# This class is called from the class level.\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an array of integers with possible duplicates:\n\n\n#", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   ...\n\n\nUse Call-Based format\n\n\n# Use Call-Based format\n\n\n# You can choose to call pick() multiple times\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n# [#]\n# [", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    return 2;\n\n\n\n# obj.pick(target)\n# obj.pick(target)\n# obj.pick(3);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# See \"Use Call-Based format\"\n\n\n\n\n\n# The second example shows how to", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    pick(self, target)\n\n\n\nPick an index of a target number in an array of integers with possible duplicates\n\n\n\n\n\n# Array of integers with possible duplicates\n# target = 2\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# [1]\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n#\n# param_1 = obj.pick(target)\n\n\n\n# obj.pick(3)\n# obj.pick(3)\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an array of integers with possible duplicates", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n# Use Call-Based format\n\n\nGiven an array of integers with possible duplicates, randomly output the index of a given target number.\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an array of integers with possible duplicates:\n\n\n#", "\nUse Call-Based format\n\n\n# Use Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n# Return a randomly generated index of target\n#\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nExample:\n#\nint[] nums = [];\n\n\n\n\n\n\n\n# The array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n# This class is not callable\n\n\n\n\n#\n# This class is not callable.\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# The second example:", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n# Do not modify.\n\n\n\n\n\n#\n# The array must be in the same order as the array.\n\n\n\n\n\nPick an array of integers with possible duplicates.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nRandomly output a target number.\n\nGiven", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n#\n# param_1 = obj.pick(target)\n\n\n\n\n\n\n\n# This will be called randomly\n\n\nuse Call-Based format\n\n\n\n\n\n\n\n\n\n# Example:\n#\n\n\n\nGiven an array of integers with", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    return 0;\n\n\nGiven an array of integers with possible duplicates, randomly output the index of a given target number.\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nparam_1 = 0;\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n#\n# obj.pick(target)\n\n\n# obj.pick(3);\n\n\n\n\n\n# Your array contains multiple unique numbers\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array of integers with possible duplicates, randomly output index\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n#\n\nUse Call-Based format\n\n\n# obj.pick(3)\n# obj.pick(3);\n\n\n\n\n\n\n\nuse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n# This is a class-based format\nUse Call-Based format\n\nGiven an array of integers with possible duplicates, randomly output the index of a given target number.\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array of integers with possible duplicates:\n\n\nGiven"], "prompt": "\nQUESTION:\nGiven an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\n\nNote:\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\n\nExample:\n\n\nint[] nums = new int[] {1,2,3,3,3};\nSolution solution = new Solution(nums);\n\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(3);\n\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(1);\nclass Solution:\n    def __init__(self, nums: List[int]):\n    def pick(self, target: int) -> int:\n# Your Solution object will be instantiated and called as such:\n# obj = Solution(nums)\n# param_1 = obj.pick(target)\nUse Call-Based format\nANSWER:\n"}}