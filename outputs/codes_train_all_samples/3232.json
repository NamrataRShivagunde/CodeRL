{"3232": {"code": [":\n\n\n\nUse Call-Based format\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\nUse Function-Based format:\n\nUse Function-Based format:\n\n   \n\t\nUse Call-Based format\n\nUse Python Call-Based format:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ":\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\nUse Call-Based format:\n:\n\nUse Call-Based format\n   \n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n    Kata, the Kata Kata Kata,", ":\nUse Call-Based format:\n\n\nUse Call-Based format:\n:\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n   \n\t\nUse Call-Based format\n\t\nUse Call-Based format:\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n\n    If you have a number to search for", ":\nUse Call-Based format:\nUse Call-Based format\n\n:\n:\n\n\n\n\n:\n\n\n\n\t\nUse Simple Call-Based format:\n\nUse Python Call-Based format:\n\n\n\n\nUse Kata.Kata.lengthOfSequence():\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n    The", ":\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n\t\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n\n\t\nUse Call-Based format:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n:\n\nUse Kata Kata\n\n\n\n\n\n\n    A Kata, you can", ":\n:\n\n\nUse Call-Based format:\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n:\n\nUse Kata:\n\nUse Call-Based format\n   \n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ":\t\nUse Call-Based format\n\n\nUse Call-Based format:\n:\n\n\n\n\n:\n\n\n\n\nUse String-Based format:\n\n\nUse Simple Call-Based format:\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ":\nUse Call-Based format:\nUse Call-Based format\n\nUse Call-Based format:\n:\n\n\n\n\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n:\n\n\n\n\n:\n\n\n  A Kata, Kata, Kata, Kata, Kata,\n\n \n\n   \n\n\t\n", ":\n\n\n\n:\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Call-Based format:\n\nUse Python-based format:\n\nUse Python-Based format\n   \n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n   \n\n\n:\n\n\n\n\n\n    If the first occurrence of `n", ":\nUse Call-Based format:\n\n\n:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\n:\nUse Call-Based format:\n\nUse Call-Based format\n   \n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n#\n# All the time, for a given array `arr", ":\t\nUse Call-Based format\n\nUse Call-Based format:\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n## Examples\n\n", ":\nUse Call-Based format:\n\n\n\nUse Call-Based format:\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t# Kata - Kata.", ":\nUse Call-Based format:\n\n\n:\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n - Kata:\n\n\t\n\n\t1.", ":\nUse Call-Based format:\n\n\n:\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\nUse Call-Based format:\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\n\n# Example:\n#\n\n# lengthOfSequence([0,1,2,3])\n\n\n\n\n#", ":\n\n\nUse Call-Based format\n:\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n\n\nUse Python call-based format:\n\nUse Python Call-Based format\n\n\t\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n- `n`:\n\n", ":\n\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\nUse Call-Based format:\n\n\n\n\nUse Function-Based format:\n:\n\n\n\n   \n\nUse Call-Based format\n:\n\n\n\n   \n\nUse Call-Based format\n:\n\n\n\n\n\n    A Kata, you need to find the", ":\nUse Call-Based format:\n\n\n:\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\t\nUse Function-Based format:\n:\n\nUse Call-Based format\n\n   \n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n", ":\nUse Call-Based format:\n\n\n:\n:\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n\n:\n\n\n\n:\n\n\n\n    lengthOfSequence(arr,1)\n\n\n\n\n\n\n\n\n\n[", ":\n:\n\n\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format:\n\n\n\t\nUse Function-Based format:\n\n:\n\n   \n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\nION:\n\nThis is an example of the Kata.\n\n\n\n\n\n\n\n    This Kata", ":\n\nUse Call-Based format:\n\n\n\n:\n\n:\n\n\n\n\n:\n\n\n\n\nUse Function-Based format:\n:\n\nUse Call-Based format\n   \n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n    If the first and second occurrence of `n"], "prompt": "\nQUESTION:\nAs part of this Kata, you need to find the length of the sequence in an array, between the first and the second occurrence of a specified number.\n\nFor example, for a given array `arr`\n\n    [0, -3, 7, 4, 0, 3, 7, 9]\n    \nFinding length between two `7`s like\n    \n    lengthOfSequence([0, -3, 7, 4, 0, 3, 7, 9], 7)\n    \nwould return `5`.\n\nFor sake of simplicity, there will only be numbers (positive or negative) in the supplied array.\n\nIf there are less or more than two occurrences of the number to search for, return `0`, or in Haskell, `Nothing`.\ndef length_of_sequence(arr,n):\n\t\nUse Call-Based format\nANSWER:\n"}}