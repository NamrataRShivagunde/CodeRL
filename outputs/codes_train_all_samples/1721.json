{"1721": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_NOTE:___\n\n\n\n\n\n\nNote:\n\n* You", "\nUse Call-Based format\n\nUse Call-Based format\n\n___Notes:___\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nA kata is created", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n___Notes:___\n\n\n\n\n\n\n\nUse Call-Based format\n\n___Notes:___\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis task in this kata is implement the", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nprint(BinClass.convert_to(HexClass))\n\n\n___Notes:___\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nBinClass = create_number_class('01')\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n''\ndef create_number_class(alphabet):\n\n\n\n\n\n>>> from", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n___Notes:___\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\nCheck your kata\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\nThis is a simple example.\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef create_number_class(alphabet):\n\n\n\n\n```python\n\nkata", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nprint(BinClass(1))\nprint(HexClass(1))\n\n\n\n\n\n\n\n\n\n\nThe task in this kata is a simple function\n\n____Note:____\n\n\n\n\n\n\n\n\n\n>>> from k", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThis task in this kata is in a kata task\n\n___Notes:___\n\n\n\n\n\n\n\n\n\n\n\n* This task in", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n___Notes:___\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> x = create_number_class('01')\n\n    >>>\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nprint(BinClass+y)                   => 'A'\nprint(HexClass+x)                   => 'A'\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tNote:\n\tA task in", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n___Notes:___\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef convert_to(self, class_number):\n\t\n\n\n\n```python\n\n", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\nUse Call-Based format\n\n\n`\n\n\n\nUse Call-Based format\n\n___Notes:___\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n--------------------------------------------------------------------------\n\n\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n___Notes:___\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA kata is a task in this kata\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n__Notes:___\n\n\n\n\n\n\n__Notes:___\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe kata task in this kata", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n___Notes:___\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`alphabet`\n\n```\n\n\n\n\n>>> from k", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nprint(BinClass.convert_to(HexClass))\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nkata = K", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n___Notes:___\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t>>> create_number_class('0123456789')\n\n\n\n**Example", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$(alphabet).replace(' ', '').replace('"], "prompt": "\nQUESTION:\nYour task in this kata is to implement the function `create_number_class` which will take a string parameter `alphabet` and return a class representing a number composed of this alphabet.\n\nThe class number will implement the four classical arithmetic operations (`+`, `-`, `*`, `//`), a method to convert itself to string, and a `convert_to` method which will take another class number as parameter and will return the value of the actual class number converted to the equivalent value with tha alphabet of the parameter class (return a new instance of this one).\n\nExample:\n\n```python\nBinClass = create_number_class('01')\nHexClass = create_number_class('0123456789ABCDEF')\n\nx = BinClass('1010')\ny = BinClass('10')\n\nprint(x+y)                   => '1100'\nisinstance(x+y, BinClass)    => True\nprint(x.convert_to(HexClass) => 'A'\n```\n\n___Notes:___\n\n* Only positives integers will be used (either as parameters or results of calculations).\n* You'll never encounter invalid calculations (divisions by zero or things like that).\n* Alphabets will contain at least 2 characters.\ndef create_number_class(alphabet):\n\t\nUse Call-Based format\nANSWER:\n"}}