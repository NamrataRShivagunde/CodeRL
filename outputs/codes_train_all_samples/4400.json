{"4400": {"code": ["\n\n\n\n\n\nminimumSteps({10, 12, 9, 6, 2}, 12, 2)\n```\nminimumSteps({11, 9}, 12, 2)\n```\nminimumSteps({10, 9}, 10, 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n### Task\n\n", "\n\n\n\n\n\n\n```\nminimumSteps({1,3,4}, 7, 4, 6)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Input >> Output Examples\n\n```\nminimumSteps({1, 3, 7, 9, 7}, 5)\n\n\n\n\n*", "\n\n\n```\n\nminimumSteps({1, 2, 3, 9}, 464)\n```\n\nminimumSteps({4, 2, 3}, 464)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({1, 1}, 464)\n\n\n*", "\n\n\nMinimumSteps\n\n```\n\nminimumSteps({6,8,9}, 3)\n```\n\nminSteps({6,9}, 2)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##\n# Todo: \n\n* We  *add two elements* ", "\n\n\n\n\nminimumSteps({5, 2}, 464)\n\n```\nminimumSteps({5, 1}, 464)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({1, 2, 9, 8}, 364)\n```\nminimumSteps({9}, 9.", "\n\n\n\n\n\nminimumSteps({3,4}, 3)\n\n```\nminimumSteps({4,6,6}, 3)\n```\nminimumSteps({3,5}, 2)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({10, 9, 1, 2, 3", "\n\n\n\n\n\n\nminimumSteps({9, 7}, 6)\n```\nminimumSteps({9, 7, 6}, 5)\n```\nminimumSteps({5}, 8)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n**_Given_**\n\n*+1", "\n\n\n\n```\nminimumSteps({6, 7, 9, 10, 11, 11}, 3)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Warning >> Input Examples\n\n```\nminimumSteps({10, 9, 2, 2}, 3)\n\n\n\n**", "\n\n\n\n\n# Results\n\n```\nminimumSteps({6, 7, 2, 6}, 4)\n```\nminimumSteps({6, 7, 2}, 4)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## The Explanation\n\n\n```\nminimumSteps({3, 7", "\n\n\n\n\nminimumSteps\n\n```\n\nminimumSteps({3,4,5,6}, 464)\n```\nminimumSteps({12,4,6,8}, 464)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Result Examples\n\n```\n\n", "\n\n\n\n\n\nminimumSteps({5,6}, 1)\n\n```\nminimumSteps({5,6,7}, 1)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({1, 2, 6, 9, 11}, 3)\n```\nminimumSteps({15,", "\n\n\n\n\n\nminimumSteps({1,2,3,4,6}, 3)\n\n```\nminimumSteps({1,2}, 3)\n```\nminimumSteps({1,2,3}, 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Return Examples\n\n```\n\n#", "\n\n\n\n\n\n# Input >> Output Examples\n\n```\nminimumSteps({1,2,3,4}, 2)\n```\nminimumSteps({1,4,5}, 2)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({7,10,3,6},", "\n\n\nSum_K:\n\n \n\n\nMinimumSteps:\n\n```\n\nminimumSteps({9, 8, 6}, 464)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({1, 2, 3, 6, 9, 11, 12, 1}, 4", "\n\n\n\n\nminimumSteps({1,2,3,4}, 3)\n\n```\nminimumSteps({1,2}, 4)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nminimumSteps({1,2,3}, 2)\n\n```\nminimumSteps({1,2}, 6)\n\n\n", "\n\n\n\n\nminimumSteps({1, 2, 3}, 2)\n\n```\nminimumSteps({1, 4, 9}, 6)\n```\nminimumSteps({1, 3}, 5)\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##  The Task\n\n\n* The List size", "\n\n\n\n        return\n\n       \n\n\n```\n\n\nminimumSteps({4,6,3,6}, 3)\n```\n\n_Numbers\n\n**_Threshold\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n```\nminimumSteps({6, 7, 8}, 7)\n\n", "\n\n\n\n\n\n```\n\nminimumSteps({1, 10, 11, 22}, 2)\n```\n\n\nminimumSteps({1, 10, 11, 22})\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Result >> Output Examples\n\n```\n\nminimumSteps({", "\n\n\n\n\n```\nminimumSteps({5, 7, 9}, 5)\n```\nminimumSteps({5, 7, 9}, 5)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples\n\n```\nminimumSteps({5, 7}, 5)\n\n```\n\n```\n", "\n\n\n\n```\nminSteps({1,2,3}, 3)\n```\nminSteps({1,2,3}, 3)\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nminimumSteps({6, 7, 9, 2}, 464)\n\n___\n"], "prompt": "\nQUESTION:\n# Task\n\n**_Given_** *an array of N integers, you have to find* **_how many times_** *you have to* **_add up the smallest numbers_** *in the array until* **_their Sum_**  *becomes greater or equal to* **_K_**.\n___\n \n# Notes: \n\n* **_List size_**  is *at least 3*.\n\n* **_All numbers_**  *will be*  **_positive_**.\n\n* **_Numbers_**  could  *occur more than once* ,   **_(Duplications may exist)_**.\n\n* Threshold  **_K_**  will *always be reachable*.\n___\n# Input >> Output Examples\n\n```\nminimumSteps({1, 10, 12, 9, 2, 3}, 6)  ==>  return (2)\n```\n## **_Explanation_**:\n\n* We  *add two smallest elements*  **_(1 + 2)_**,  *their sum is 3* .\n\n* **_Then_**  we  **_add the next smallest number to it (3 + 3)_** , so  *the sum becomes 6* .\n\n* **_Now_**  the result is greater or equal to **_6_** ,  *Hence the output is (2) i.e (2) operations are required to do this* .\n___\n```\nminimumSteps({8 , 9, 4, 2}, 23)  ==> return (3)\n```\n## **_Explanation_**:\n\n* We  *add two smallest elements*  **_(4 + 2)_**,  *their sum is 6* .\n\n* **_Then_**  we  **_add the next smallest number to it (6 + 8)_** , so *the sum becomes 14* .\n\n* **_Now_**  we  **_add the next smallest number (14 + 9)_** , so *the sum becomes 23*  .\n\n* **_Now_**  the result is greater or equal to **_23_** ,  *Hence the output is (3) i.e (3) operations are required to do this* .\n___\n```\nminimumSteps({19,98,69,28,75,45,17,98,67}, 464)  ==>  return (8)\n```\n## **_Explanation_**:\n\n* We  *add two smallest elements*  **_(19 + 17)_**,  *their sum is 36* .\n\n* **_Then_**  we  **_add the next smallest number to it (36 + 28)_** , so *the sum becomes 64* .\n\n* We need to **_keep doing this_** *until **_the sum_** becomes greater or equal to **_K_** (464 in this case)*, which will require **_8_** Steps .\n___\n ## Expected Time Complexity `O(n Log n)`\n___\n___\n___\n\n# [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n\n# [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\n# [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)\n___\n\n## ALL translations are welcomed\n\n## Enjoy Learning !!\n# Zizou\ndef minimum_steps(numbers, value):\n\t\nUse Call-Based format\nANSWER:\n"}}