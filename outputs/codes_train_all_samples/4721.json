{"4721": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` \n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nWrite a function ```convert_", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n`python\ntemp = convert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\nWrite a function ```convert_temp(temp,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n: \n\nUse Call-Based format\n\n\nUse Call-Based format\n\n```python\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a function ```convert_temp(temp, from_", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\nUse Call-Based format\n\n```python\nconvert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRead a function ```convert", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\npython\ntemp = convert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n:\n\n\n\n\n\n\n\nconvert_temp(temp)\n\n\n\n    Write a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n`python\nconvert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\nConvert temperature from one scale to another\n\n\n\n\nWrite a function ```convert", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` converting temperature from one scale to another\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n    Use Call-Based format\n\n   \n\n   \n\n   \n\n\nWrite", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n`python\nconvert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\nWrite a function ```convert_temp(temp, from_", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\nWrite a function ```convert_temp(temp, from_scale, to_scale)```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\t# Use the function ``convert_temp(", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nwrite a function ```convert_temp(temp,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``\n", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` \n\n\n\n\n\n\n\n\n\nRead a function\nconvert_temp\n\n\n\n\n\n\n\n```python\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\nuse Call-Based format\n\n```python\nconvert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\nwrite a function ```convert_temp(temp, from", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n`python\nconvert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\nConvert temperature from one scale to another\n\n\n\n\nWrite a function ```convert", "\nUse Call-Based format\n\nConvert a number of scale inputs to a call-based format\n\n\n: \n\n\n\n\n\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` converting temperature from one scale to another\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\nWrite a function ```convert_temp(", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n```python\ntemp = convert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n```python\ntemp = convert", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n```python \nconvert_temp(temp, from_scale, to_scale)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite a function ```convert", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\nconvert_temp(temp, \"C\", \"K\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRead a function: convert_temp(temp, scale, scale)\n\n\n\n\n\n\n\nWrite a function", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` converting temperature from one scale to another\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\nConvert a function\n\n\n\n\n\n\n\nWrite a function ```convert", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nIf you are using call-based format:\n\n```python\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nWrite a function ```convert_temp("], "prompt": "\nQUESTION:\nWrite a function ```convert_temp(temp, from_scale, to_scale)``` converting temperature from one scale to another. \nReturn converted temp value. \n\nRound converted temp value to an integer(!).\n\nReading: http://en.wikipedia.org/wiki/Conversion_of_units_of_temperature\n\n```\npossible scale inputs:\n    \"C\"  for Celsius\n    \"F\"  for Fahrenheit\n    \"K\"  for Kelvin\n    \"R\"  for Rankine\n    \"De\" for Delisle\n    \"N\"  for Newton\n    \"Re\" for R\u00e9aumur\n    \"Ro\" for R\u00f8mer\n```\n\n```temp``` is a number, ```from_scale``` and ```to_scale``` are strings. \n\n```python\nconvert_temp(   100, \"C\",  \"F\") # => 212\nconvert_temp(    40, \"Re\", \"C\") # => 50\nconvert_temp(    60, \"De\", \"F\") # => 140\nconvert_temp(373.15, \"K\",  \"N\") # => 33\nconvert_temp(   666, \"K\",  \"K\") # => 666\n```\ndef convert_temp(temp, from_scale, to_scale):\n\t\nUse Call-Based format\nANSWER:\n"}}