{"1792": {"code": ["\n\n\n\n\n# Example\n\n###\n\n# The Kata\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##\n\n\n\n\n\n\n\n\n\n###############\n###############\n\n\n# Safety\n\n##\n\n##\n\n##\n\n###\n\n\n\n\n\n", "\n\n\n\n\n# The Twist\n\n# Some tests\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The Kata\n\n\n###############\n###############\n\n\n\n```python\n\n\n\n\n\n\n\n\n\n\n# Examples\n\n```python\n# 9669\n\n###\n\n\n\n\n\n```", "\n\n\n\n\n\n# Task\n\n###\n\n\n\n\n\n\n\n\n###\n\n###\n\n###\n\n## Input\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Hard input\n\n# Or the Few input\n\n```python\n\n# 1X\n\n\n\n\n\n\n```", "\n\n\n\n# Kata\n\n# The Tiling\n\n# The Twist\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n# No examples\n\n319787\n\n```\n\n\n\n\n\n\n\n\n\n# The N-1 task\n\n", "\n\n\n\n\n\n\n## Construction\n\n## Alternative\n\n\n\n\n\n\n# The Tiling\n\n# The Bell\n\n##\n\n####\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n## The Tiling\n\n##\n\n##\n\n####\n##\n####\n\n\n\n## The", "\n\n\n#####\n\n\n\n\n\n\n\n\n\n1\n\n##########\n\n\n\n\n# The Law\n\n\n\n\n\n##\n\n\n\n##########\n\n###\n\n##\n\n\n##\n\n###\n\n###\n\n\n\n\n\n\n\n\n#####\n\n######\n\n#####\n\n\n\n\n\n```", "\n\n\n## Examples\n\n#####\n\n###\n\n#####\n\n###\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The Tilist\n\n```python\n\n# Odd", "\n\n\n\n\n\n# Test\n\n\n\n\n\n\n\n\n# The Fish\n\n#\n\n## the Hill\n\n\n\n\n\n\n\n# The Chen\n\n\n\n\n\n\n\n\n###############\n###############\n\n\n\n\n\n\n# The Hill\n\nthree_by_n(0) == 0\n\n\n\n\n", "\n\n\n\n\n# The Lob\n\n\n\n\n\n\n# Examples\n\n```python\n\n# Odd input\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###############\n###############\n###############\n\n```\n\n\n\n\n\n\n\n# The Brown\n\nthree_by_n(2) ==", "\n\n\n# Description\n\n# Examples\n\n```python\n# N = 10\n# N = 100\n# N = 10\n# N = 100\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Tests\n\n```python\n#\n\n\n\n### Task\n\n###\n\n## Examples\n\n", "\n\n\n####\n\n###\n\n####\n\n####\n\n####\n\n####\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Tiling\n\n```python\n# John\n\n\n\n\n\n###############\n###############\n###############\n\n####\n\n\n\n\n", "\n\n\n#####\n\n###\n\n###\n\n#####\n\n###\n\n###\n\n#####\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Bullets\n\n##\n\n##\n\n\n\n\n\n\n##\n\n###\n", "\n\n\n\n\n# A French\n\n# A Blue\n\n# A Kata\n\n\n\n\n\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##########\n\n\n\n\n\n\n##\n\n####\n\n##\n\n#####\n\n###\n\n###\n\n\n\n##\n\n###\n", "\n\n\n####\n\n# Tiling\n\n####\n\n####\n\n###\n\n###\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n```python\n\n## N = 3\n## N = 2\n##\n\n\n\n", "\n\n\n\n\n# The Kata\n\n# The Twist\n\n\n\n\n\n\n\n1\n1\n\n\n\n\n\n\n\n# No tilings!\n\n\n\n\n\n\n\n\n\n\n\n\n# The Kat\n\n```python\n# <---  #\n```\n\n# The Twist\n\n```python\n# <", "\n\n\n###\n###\n###\n\n###############\n\n###\n\n\n\n\n\n\n\n# The Mass\n\n\n\n\n\n\n\n## Kata\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n###########\n\n####\n\n\n\n\n\n\n\n\n\n###\n\n###\n\n##\n\n##\n\n\n\n", "\n\n\n# An example\n\n# Example 1\n\n# Example 2\n\n# Example 3\n\n# Example 2\n\n# Example 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example 1\n\n```python\n\n# Just a few numbers\n\nN = 100\n\n", "\n\n\n###\n\n\n\n\n\n\n\n# Tiling\n\n### The Kata\n\n###\n\n#####\n\n#####\n\n#####\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples\n\n```python\n# Four input\n\n# This is a test and test\n\n###\n\n\n```", "\n\n\n\n\n# An antipodic\n\n# The Kata\n\n\n\n\n\n\n\n\n\n\n\n###############\n###############\n###############\n###############\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Bow\n\n# Odd numbers\n\n# `N = 2`\n\n\n\n\n\n\n\n```python", "\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n```python\n# 1.1.1.1\n\n\n\n\n# Five\n\n##\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n# A few examples\n\n```\n\n#####\n\n######\n\n###\n\n"], "prompt": "\nQUESTION:\n### Please also check out other katas in [Domino Tiling series](https://www.codewars.com/collections/5d19554d13dba80026a74ff5)!\n\n---\n\n# Task\n\nA domino is a rectangular block with `2` units wide and `1` unit high. A domino can be placed on a grid in two ways: horizontal or vertical.\n\n```\n## or #\n      #\n```\n\nYou have infinitely many dominoes, and you want to fill a board that is `N` units wide and `3` units high:\n\n```\n<---   N   --->\n###############\n###############\n###############\n```\n\nThe task is to find **the number of ways** you can fill the given grid with dominoes.\n\n# The Twist\n\nBut you quickly realize that the answer is zero for any odd `N`, because (obviously) you can't cover odd number of cells with dominoes! So you decide to introduce one **unit block** (1 unit wide and 1 unit high) to cover the final gap when needed (you don't need this block when `N` is even).\n\nThe following shows some possible tilings for `N = 5`. Note that, unlike my previous Kata, the numbers do not represent the colors (they are just for convenience). Also note that the unit block (marked as 'X') can be placed **anywhere on the board**, making the answers for odd numbers way higher than even ones.\n\n```\n11255   1122X   14456\n3X267   33447   13356\n34467   55667   22X77\n```\n\nSince the answer will be very large, please give your answer **modulo 12345787**.\n\n# Examples\n\n```python\n# Even input\nthree_by_n(2) == 3\nthree_by_n(4) == 11\nthree_by_n(10) == 571\nthree_by_n(20) == 413403\n\n# Odd input (the numbers grow much faster than even inputs)\nthree_by_n(1) == 2\nthree_by_n(3) == 18\nthree_by_n(5) == 106\nthree_by_n(11) == 11542\nthree_by_n(21) == 3287999\n\n# You must handle big values\nthree_by_n(9999) == 6311027\nthree_by_n(10000) == 12003229\n```\n\n# Constraints\n\n`1 <= N <= 10000`\n\nAll inputs are valid integers.\ndef three_by_n(n):\n\t\nUse Call-Based format\nANSWER:\n"}}