{"3045": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\npython\nelevator(left, right, call):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n:\nelevator(left, right, call):\n\n\nGiven 2 elev", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\ndef elevator(left, right, call):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```python\nimport re\nimport re.", "\nUse Call-Based format\nUse Call-Based format\n```\ndef elevator(left, right, call):\n\nUse Call-Based format\n\n\n:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven 2 elevators (named \"left\"` and \"", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\ndef elevator(left, right, call):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\nelevator(left, right, call):\n\n\n```python\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\npython\nelevator(left, right, call)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven 2 elevators (named \"left\" and \"right\"):\n:\n\n\nGiven 2", "Use Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\npython\ndef elevator(left, right, call):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven 2 elevators (named \"left\" and \"right\"),\nION:\n\n\nGiven 2 elev", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\ndef elevator(left, right, call):\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\n:\n\n\n\nGiven 2 elevators (named \"left\"` and \"", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\npython\nimport sys\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nelevator(left, right, call)\n\nUse Call-Based format\n\n\n\n\n\nGiven 2 elevators (", "Use Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nelevator(left, right, call)\n\nUse Call-Based format\n\nExample:\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven 2 elevators (named \"left\" and \"right\"):\n:\n\n\n``", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n:\npython\nelevator(left, right, call)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\nUse Call-Based format\n\n\n\n\npython\n\n\nGiven 2 elevators (named \"left\"` and \"", "\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\npython\nelevator(left, right, call)\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\nright\n\n\n\n:\nright\nelevator(left, right, call)\n\n\nGiven", "Use Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n:\nUse Call-Based format\npython\ndef elevator(left, right, call):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\nGiven 2 elevators (named \"left\", \"right\"),", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\npython\nelevator(left, right, call):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n`python\nelevator(left, right, call):\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\npython\nelevator(left, right, call)\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n`python\nelevator(left, right, call):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\nUse Call-Based format\n\n\n\n\n:\n\n```\n\nGiven 2 elevators (named \"left\"` and \"", "\nUse Call-Based format\nUse Call-Based format\n```python\nelevator(left, right, call)\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n```python\n\n\nGiven 2 elevators (named \"left\"`", "Use Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\npython\nelevator(left, right, call):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\npython\nelevator(left, right, call):\n\n\n\n```python\n\n", "Use Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\ndef elevator(left, right, call):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n:\n\npython\nelevator(\"left\")\n\n\nGiven 2 elevators (", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n:\nUse Call-Based format\n\n\n\n:\n\n```python\nelevator(left, right, call):\n\n\n\n```", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\npython\nelevator(left, right, call):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n:\nelevator(left, right, call)\n\n\nGiven 2 elev"], "prompt": "\nQUESTION:\nGiven 2 elevators (named \"left\" and \"right\") in a building with 3 floors (numbered `0` to `2`), write a function `elevator` accepting 3 arguments (in order):\n\n- `left` - The current floor of the left elevator\n- `right` - The current floor of the right elevator\n- `call` -  The floor that called an elevator\n\nIt should return the name of the elevator closest to the called floor (`\"left\"`/`\"right\"`).\n\nIn the case where both elevators are equally distant from the called floor, choose the elevator to the right.\n\nYou can assume that the inputs will always be valid integers between 0-2.\n\nExamples:\n\n```python\nelevator(0, 1, 0) # => \"left\"\nelevator(0, 1, 1) # => \"right\"\nelevator(0, 1, 2) # => \"right\"\nelevator(0, 0, 0) # => \"right\"\nelevator(0, 2, 1) # => \"right\"\n```\ndef elevator(left, right, call):\n\t\nUse Call-Based format\nANSWER:\n"}}