{"4491": {"code": ["\nUse Simple format\n\ndef solve(a,b):\n\nUse Call-Based format\n\n\n:\n\n\n\ndef solve(a,b):\n\nUse Call-Based format\n\n\n\n\n\n \n\n\t\n\n\n\n\n\n:\nUse Simple format\n\n\n\n\n\n\n\n\n\n\n----- Examples:\n---\n\nA:\n\n", "\nUse Call-Based format\n\ndef solve(a,b):\n\nUse Simple remove duplicates\n\n\n:\n\n\n\n\n\t\nUse Call-Based format\n\nUse Simple format\n\nWITH:\n\t\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nHaskell:\nHaskell\n\n\n\n\n```Haskell\n", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\ndef solve(a,b):\n\t\nUse Simple remove duplicates\ndef solve(a,b):\n\t\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\nsolve(\"x", "\nUse Call-Based format\n\ndef solve(a,b):\n\t\nUse Call-Based format\n\n\n:\n\nUse Simple format\n\n\n\t\n\n\n\n solve(a,b)\ndef solve(a,b):\n\t\n\n\t\n\n\n\n\t\n:\n\n\n\n\n\n\n\n\n\n\n    A Kata task for solving", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\nUse Simple remove duplicates\n\n\n\t\nUse Simple format\n\nUse Call-Based format\n\n\n\n\n x,y,z\n\n\t\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n    # The \"y\" is the first character", "\nUse Simple Call-Based format\n\ndef solve(a,b):\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n\n\n \n\n\t\n\n\n\n\t\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nNote:\n\nA Kata task is not yet", "\nUse Call-Based format\n\n\n\nUse Simple format\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse Simple format\n\nUse Call-Based format\n\nWITH:\n\n\t\nUse Call-Based format\n\nWITH:\n\n\n\n \n\n\n\n\t\n:\n\n\n\n\n\n\n\n\nUse Simple format\n\n\n```K", "\nUse Call-Based format\n\ndef solve(a,b):\n\t\nUse Call-Based format\n\n\n:\nUse Simple format\n\n\n\n\n\n\nUse Simple format\n \n\t\tremove_duplicates(a,b)\n\n\t\nUse Simple format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n```Haskell\nsolve(\"x", "\nUse Call-Based format\n\n\nUse Simple remove duplicates\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nUse Simple remove duplicates\n\nUse Call-Based format\n\nTEST:\n\n\n\n \n\n\t\n\n\n\t\n\n\n\n\n\n\n\n\nHaskell:\n\nUse Simple remove duplicates\nTEST:\n\n\n\n\n```", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n:\n\nUse Simple Remove duplicates\nUse Call-Based format\n\n\n\t\n\n\n\n \n\t\n\t\nUse Simple format\n\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n```Haskell\nsolve(\"x", "\nUse Call-Based format\n\n\nUse Simple Remove Duplicate format\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Simple Remove Duplicate format\n\nUse Call-Based format\n\nWITH:\n\n\t\n\n\n \n\t\n\n\n\n\n\n\n\n\n\n\n\n\nKata:\n\nKata:\n\n\n\n\n\n\n```K", "\nUse Call-Based format\nUse Simple remove duplicates format\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\t\nUse Simple remove duplicates format\n\nUse Call-Based format\n\nWITH:\n\n:\n\n \t\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\nThe Kata task will return the characters of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Simple remove duplicates\nUse Call-Based format\n\n\n\t\n\n\nUse Call-Based format\n\n\n\t\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nUse Simple remove duplicates\ndef solve(a,b):\n\t\n\n\n\n```K", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Simple Remove Duplicate format\n\n\n\t\nUse Call-Based format\n\nUse Simple format\n\nTest case:\n\ndef solve(a,b):\n\n\n:\n\n\n\t\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n```Haskell\nsolve", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Simple remove duplicates\n:\n\n\n\n\t\nUse Simple remove duplicates\ndef solve(a,b):\n\t\nUse Call-Based format\n\nUse Simple format\n\n\n\n\n\t\n\n\t\n\n\n:\n\n\n\n\n\n\n\t\n```Haskell\nsolve(\"x", "\nUse Simple format\n\ndef solve(a,b):\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\nUse Simple remove duplicates\ndef remove(a,b):\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\nsolve(\"xab\",", "\n\n\ndef solve(a,b):\n\t\nUse Call-Based format\n\n\n:\nUse Simple Remove duplicates\nUse Call-Based format\n\n\n\n\n\n solve(a,b):\n\t\nUse Simple format\ndef solve(a,b):\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\n", "\nUse Call-Based format\n\ndef solve(a,b):\n\nUse Call-Based format\n\n\n:\n\n\ndef remove_duplicates(a,b):\n\n\n\n\n\n solve(a,b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\n\n\n    If you would like to solve(\"", "\nUse Simple format\n\ndef solve(a,b):\n\t\nUse Call-Based format\n\n\n:\n\n\n\n\t\n\n\n\nUse Simple remove duplicates\n\nUse Call-Based format\n \n\t\n\t\n\n\n\n\n\t\n:\nUse Simple format\n\n\n\n\n\n\n\n\nIn this Kata, you will return two strings `a`", "\nUse Simple format\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\t\n\n\n\nUse Simple format\n\nUse Call-Based format\n \n\t\n\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\nsolve(\"xab\","], "prompt": "\nQUESTION:\nIn this Kata, you will be given two strings `a` and `b` and your task will be to return the characters that are not common in the two strings. \n\nFor example:\n```Haskell\nsolve(\"xyab\",\"xzca\") = \"ybzc\" \n--The first string has 'yb' which is not in the second string. \n--The second string has 'zc' which is not in the first string. \n```\nNotice also that you return the characters from the first string concatenated with those from the second string.\n\nMore examples in the tests cases. \n\nGood luck!\n\nPlease also try [Simple remove duplicates](https://www.codewars.com/kata/5ba38ba180824a86850000f7)\ndef solve(a,b):\n\t\nUse Call-Based format\nANSWER:\n"}}