{"1966": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nGiven a rows * columns matrix mat of ones and zeros, return how many submatrices have all zeros.\n\n\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a rows * columns matrix mat of ones.\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of ones and zeros, return how many\u00a0submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of ones and zeros.\n\n\nGiven a\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a matrix mat of ones and zeros, return how many submatrices have all zeros.\n\n\n\n\n\n is 1 rectangle of side 1x1.\n\n\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of ones and zeros.\nGiven a", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nGiven a matrix mat of ones and zeros, return how many submatrices have all zeros.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a rows * columns matrix mat of zeros.\n\n\n\nGiven a rows *", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a matrix mat of zeros and zeros, return how many\u00a0submatrices have all zeros.\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of zeros and zeros, return the number of rows\n\n\n\nGiven", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def numRectangles(self, mat) -> int:\n\n\n is 1 rectangle of side 1x1.\n\n\n\n\n\n\n\n\n\n\nGiven a\u00a0rows * columns matrix mat", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nGiven a matrix mat of ones and zeros, return how many submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a rows * columns matrix mat of ones and zeros, return how many submatrices have all zeros\n\n\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nGiven a\u00a0rows * columns matrix mat of ones and zeros, return how many submatrices have all zeros.\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of zeros and zeros.\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nGiven a matrix mat of zeros and zeros and returns how many submatrices have all zeros.\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\nThe matrix mat is in the call-based format.\n\n\n\n\nGiven a\u00a0rows * columns matrix mat", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nGiven a matrix mat of ones and zeros, return how many\u00a0submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nGiven a rows * columns matrix mat of zeros and ones.\n\n\n\nGiven a", "\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nGiven a\u00a0rows * columns matrix mat of ones and zeros, return how many submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nGiven a rows * columns matrix mat:\n\n\n\nGiven a\u00a0rows", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nGiven a\u00a0rows * columns\u00a0matrix mat of ones and zeros, return the number of submatrices in all ones.\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of ones and zeros.\n\n\n\n\nGiven a\ufffd", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe number of submatrices in a matrix mat of zeros and zeros.\n\n\n\n\n\nGiven a matrix mat of zeros and zeros, return how many submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of ones and zeros.\nGiven", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nGiven a matrix mat of ones and zeros, return how many\u00a0submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven a rows * columns matrix mat of ones and", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nGiven a matrix mat of ones and zeros, return the number of submatrices.\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\nUse Call-Based format\n\nGiven a matrix mat of ones and zeros\n\n\nGiven a", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nGiven a rows * columns matrix mat of ones and zeros, return how many submatrices have all zeros.\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a rows * columns matrix mat:\n\n\n\nGiven a\u00a0rows", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nGiven a matrix mat of ones and zeros, return how many submatrices have all ones.\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven a rows * columns matrix mat of ones and zeros.\n\n\n\n\nGiven a rows *", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a\u00a0rows * columns matrix mat of ones and zeros, return how many\u00a0submatrices have all zeros.\n\n is\n\n\n\n\n\n\n\n\n\nGiven a matrix mat of ones and zeros.Given", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nGiven a\u00a0rows * columns\u00a0matrix mat of ones and zeros, return how many\u00a0submatrices have all zeros.\n\n\n   \n\n\n\u00a0\n\n\n\n\n\n\n\n\nThere are 6 rectangles of side 1x1.\nGiven", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n    numSubmat(self, mat) -> int:\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nGiven a rows * columns matrix mat of ones and"], "prompt": "\nQUESTION:\nGiven a\u00a0rows * columns\u00a0matrix mat of ones and zeros, return how many\u00a0submatrices have all ones.\n\u00a0\nExample 1:\nInput: mat = [[1,0,1],\n\u00a0             [1,1,0],\n\u00a0             [1,1,0]]\nOutput: 13\nExplanation:\nThere are 6 rectangles of side 1x1.\nThere are 2 rectangles of side 1x2.\nThere are 3 rectangles of side 2x1.\nThere is 1 rectangle of side 2x2. \nThere is 1 rectangle of side 3x1.\nTotal number of rectangles = 6 + 2 + 3 + 1 + 1 = 13.\n\nExample 2:\nInput: mat = [[0,1,1,0],\n\u00a0             [0,1,1,1],\n\u00a0             [1,1,1,0]]\nOutput: 24\nExplanation:\nThere are 8 rectangles of side 1x1.\nThere are 5 rectangles of side 1x2.\nThere are 2 rectangles of side 1x3. \nThere are 4 rectangles of side 2x1.\nThere are 2 rectangles of side 2x2. \nThere are 2 rectangles of side 3x1. \nThere is 1 rectangle of side 3x2. \nTotal number of rectangles = 8 + 5 + 2 + 4 + 2 + 2 + 1 = 24.\n\nExample 3:\nInput: mat = [[1,1,1,1,1,1]]\nOutput: 21\n\nExample 4:\nInput: mat = [[1,0,1],[0,1,0],[1,0,1]]\nOutput: 5\n\n\u00a0\nConstraints:\n\n1 <= rows\u00a0<= 150\n1 <= columns\u00a0<= 150\n0 <= mat[i][j] <= 1\nclass Solution:\n    def numSubmat(self, mat: List[List[int]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}