{"4750": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\nUse Call-Based format\nWrite a function that flattenes an Array of `Array` objects into a flat `Array`\n\n\n\n\n\nflatten [[1,2,3]]\n\n\n\n\n\nflatten [1]\n\n\n\nS", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format:\n\n\n\n:\n\n:\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nflatten\n# =>\nflatten\n\nflatten\n# =>\nflatten\n\n\n\n\n\n\n\n\n\n```python", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t:\n\nUse Call-Based format\n\n\n\t\nUse Python-based format:\n\n\n:\n\n\n\n\nUse Python-based format\n\nUse Call-Based format\n\n\nflatten [[1,2,3]] # => []\n\n\n\n\n\n\n\n    This function will not", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n:\n:\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nflatten [[[1,2,3]]] # => []\n\n\n\nflatten [[[\n\n\n```", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n```python\n# python -m\n\n # => [1,2,3]\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\t\n:\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Function-Based format\n\nflatten [[1,2,3]] # => 1\n\n\n\n\nflatten\n\n\nuse function that flat", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n```python\nflatten (lst) # => [lst]\n```\n\n\n\n\n\n\n\n\n\n    | `flatten([1,", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\n\t\nUse Python format\n:\n\n:\n\n\n\nUse Python-based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nflatten [[1,2,3]] # => 1\n\n\n\nflatten\n\n\n```", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Only format:\n\n\n\t\n:\n\nUse Call-Based format:\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n # => [[1,2,3]]\n\n\nflatten [[]] #\n\n\n", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\t:\n:\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n # => [1,2,3]\n\n\n\n\n\n\n\nUse Python:\n#", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\nUse Call-Based format:\n\n\n\n\t\nUse List-Based format:\n\n\n:\n\nUse function that flattens an Array of `Array` objects\n\n\n\n\n\nflatten [[[1,2,3]]] # => []\n\n\n\n\nflatten [[\n\n\n```python", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n:\n\n\n\n\t\n:\n\nUse Call-Based format:\n\n\n\nUse Function-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nflatten [[[1,2,3]]] # => []\n\n\n\nflatten [[[\n\n\n\t``", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t:\n\n\n\n\t\n:\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n```python\nflatten(list) # => list\n```\n\n\n\n\n\nflatten\n\n\n\n", "\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\n\n\t\n:\n\n:\n\n\n\n\n\nUse Python-based format\n\nUse Python-based format\n1,2,3,[\"a\",\"b\",\"c\"]\n\n\n\n\n\n\n\n\n\n\n\n```python\n# [#]", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\n\n\n\n\t\nUse Python-based format:\n\n\n:\n\nUse Array-based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n```python\n # => [1,2,3]\n\n\nflatten\n\n\n\n\n```python", "\n\nUse Call-Based format\n\n\n\n\n\nUse Python format\n\n\n\n\n\n\n:\n\n\n\n:\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\nUse Python-based format\n\n\nUse Python-based format\n\nflatten [[[1,2,3]]] # => []\n\n\n\n\nflatten [[\n\n\n``", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Python format\n\n\nUse Call-Based format\n\nUse Python-based format1,2,3,...\n\n\n```python\n # => [lst]\n\n\n\nflatten\n\n\nUse Python format", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format\n\n\n:\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n```python\n\n # => [1,2,3]\n\n\n\n\n\n\nUse Python:\n\n#", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n:\n\n:\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n```python\nflatten [1,2,3] # => 1,2,3\n```python\n\n\n\n\n\n\n\n```python", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n\nUse Call-Based format:\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n # => [1,2,3]\n\n\n\nflatten [[1]]\n\n\n\n``"], "prompt": "\nQUESTION:\nWrite a function that flattens an `Array` of `Array` objects into a flat `Array`.  Your function must only do one level of flattening.\n\n```python\nflatten [1,2,3] # => [1,2,3]\nflatten [[1,2,3],[\"a\",\"b\",\"c\"],[1,2,3]]  # => [1,2,3,\"a\",\"b\",\"c\",1,2,3]\nflatten [[[1,2,3]]] # => [[1,2,3]]\n```\ndef flatten(lst):\n\t\nUse Call-Based format\nANSWER:\n"}}