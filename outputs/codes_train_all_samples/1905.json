{"1905": {"code": ["\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n    @TornadoCallBased\nGiven a set of distinct positive integers, find the largest subset of the distinct positive integers\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n    def largestDivisibleSubset(self, nums: List)\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\n\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n    pass\n\nGiven a set of distinct positive integers, find the largest divisible subset of the set of distinct positive integers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers, find", "\nUse Call-Based format\n\n    class Solution:\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\nExample 3:\n   \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers, find", "\nUse Call-Based format\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        return nums\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers:\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]) -> List[int]:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n    \nGiven a set of distinct positive integers, find the largest subset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers", "\nUse Call-Based format\n\n    pass\n\n\n\nUse Call-Based format\n\n\n       pass\n\n\n\n\n\n    pass\n\nGiven a set of distinct positive integers, find the largest divisible subset of the set of distinct positive integers\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers:\n\n\n\n\n\nGiven a set", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a set of distinct positive integers:\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n    def largestDivisibleSubset(self, nums: List[int]):\n       \n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n    pass\n\nGiven a set of distinct positive integers, find the largest subset of all distinct positive integers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct", "\nUse Call-Based format\n\n    pass\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\nExample 3:\n    def largestDivisibleSubset(self, nums: List[int]):\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n    \"\"\"\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers, find the largest", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n       pass\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given a set of distinct positive", "\nUse Call-Based format\n\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\nExample 3:\n    def largestDivisibleSubset(self, nums: List[int]):\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\nExample 3:\n    def largestDivisibleSubset(self, nums: List[int])\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers", "\nUse Call-Based format\nUse Call-Based format\n    def largestDivisibleSubset(self, nums: List[int]):\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n    def split(self, nums):\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive", "\nUse Call-Based format\nUse Call-Based format\n    def largestDivisibleSubset(self, nums: List[int]):\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a set of distinct positive integers\n\n\n\n\nGiven a set", "\nUse Call-Based format\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n\nExample 3:\n   \n        \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct positive integers", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n    def largestDivisibleSubset(self, nums: List[int]):\n        return nums\nGiven a set of distinct positive integers, find the largest subset of the elements in this set\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a set of distinct"], "prompt": "\nQUESTION:\nGiven a set of distinct positive integers, find the largest subset such that every pair (Si, Sj) of elements in this subset satisfies: Si % Sj = 0 or Sj % Si = 0.\n\n\nIf there are multiple solutions, return any subset is fine.\n\n\nExample 1:\n\nnums: [1,2,3]\n\nResult: [1,2] (of course, [1,3] will also be ok)\n\n\n\nExample 2:\n\nnums: [1,2,4,8]\n\nResult: [1,2,4,8]\n\n\n\nCredits:Special thanks to @Stomach_ache for adding this problem and creating all test cases.\nclass Solution:\n    def largestDivisibleSubset(self, nums: List[int]) -> List[int]:\n        \nUse Call-Based format\nANSWER:\n"}}