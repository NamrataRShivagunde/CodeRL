{"2586": {"code": ["\nUse Standard Input format\n\n0\n\nUse Standard Input format\n\n m.group()\n1\n\n\nend\n1\n\nUse Standard Input format\n\n\n\n\n\n\n=====Function Descriptions=====\nstart() & end()\n\n\n\n\n\n\n\n\n\nStart & end()\n\nEnd:\n\n\n\n\n\n=====Function Descriptions=====", "\nUse Standard Input format\n\n1\n2\n3\n4\n5\n1\n\nUse Standard Input format\n\n\n\n2\n1\n\n\n\n\n\n\n\n\n\nCode\n\n>>> re.search('\\d+','1234')\n>>> m.start()\n1\n>>> m.end()\n1\n\n\n\n\n\n\n\n\n\n\n\n=====", "\nUse Standard Input format\n\n2\n\nUse Standard Input format\n\n m.group()\n1\n m.end()\n3\nend()\n0\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Output format\n\n\n\nend()\n4\n\n\nend()\n\nend() & start()\n\n\n\n\n\n=====Function Descriptions=====\nstart", "\nUse Standard Input format\n\n0\n\nUse Standard Input format\n\n m.end()\n0\n\n\nend()\n0\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\nend()\n4\n\n\nstart() & end()\nend() & start()\nend()\n\n\n\n\n=====Function Descriptions=====\nstart() &", "\nUse Standard Input format\n\n1\n2\n3\n\nUse Standard Input format\n\n m.group()\n2\n m.end()\n1\nend()\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n5\n4\n5\n5\n\n\n\nUse Standard Input format\n\n\n\n\n=========Function Descriptions=====\nstart() &", "\nUse Standard Input format\n\n2\n\nUse Standard Input format\n\n\n\n1\n2\n3\n\n\n\n\n\n\n\n\n\nCode\n\n>>> import re\n>>> m = re.search('1234', '1234')\n\n\n\n0\n\n\n\n\nstart & end()\n\nend()\n\n\n\n\n\n\nCode\n\n>>> m = re.", "\nUse Standard Input format\n\n1\n2\n3\n\nUse Standard Input format\n\n m.end()\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe expression'start()' & 'end()' return the indices of the start and end of the substring matched by the group.\n\n\n\nStart & end()\n\n\n\n\n\n\n {\n", "\nUse Standard Input format\n\n\nUse Standard Input format\n\n m\n0\n>>> m.end()\n1\n>>> m.start()\n0\n\n\n\n\n\n\n\n\n\n\n\n\nStart & end()\nUse Standard Input format\n\n\nend() & start()\nend()\n\n\n\nend()\n1\n\n\n\n=====Function Descriptions=====", "\nUse Standard Input format\n\n\nUse Standard Input format\n\n m.end()\n2\n>>> m.start()\n0\n>>> m.end()\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nend()\n\nstart()\nend()\n\n\n\nend()\n0\n\n\n\n\nCode:\n\n>>> import re\n>>>", "\nUse Standard Input format\n\n2\n3\n\nUse Standard Input format\n\n m.end()\n0\n>>> m.start()\n0\n>>> m.end()\n0\n\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n\n0\n\n\n\n\nStart & end:\n\nStart & end:\nend\n\n\n\n====", "\nUse Standard Input format\n\n1\n2\n\nUse Standard Input format\n\n m.start()\n2\n>>> m.end()\n3\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nstart() & end()\n\nCode\n\n>>> import re\n>>> m.groups()\n\n\n\n\n\n\n\n\n\n\n\n\ns,j", "\nUse Standard Input format\n\n0\n\nUse Standard Input format\n\n m\n0\n>>> m.end()\n2\n>>> m.start()\n0\n>>> m.end()\n2\n>>> m.start()\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n>>> m = re.search(r'1234')\n", "\nUse Standard Input format\n\n0\n1\n2\n\nUse Standard Input format\n\n\n0\n\n\nend()\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n\n0\n1\n2\n3\n4\n5\n\n\n\nend()\n\n-1\n\n\n\n\nfunction_description\n\n=====Function D", "\nUse Standard Input format\n\n0\n\nUse Standard Input format\n\n\n\n\nend()\n\nend()\n\nstart()\nend()\n\nstart()\nend()\n\n\nQuestion:\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n4\n\n\n\n\n\n\nStart & end()\nend()\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n4\n\nUse Standard Input format\n\n m.group()\n\n\nUse Standard Input formatend()\n3\n\n\n\nFunction Description Description\n\n\n\n\n\n\n\n\n\n1 & 2\n1 & 2\n2 & 3\n1 & 2\n1 & 2\n2\n\n\n\n\n\n\n\n\n-----\nFunction Descriptions=====", "\nUse Standard Input format\n\n1\n2\n\nUse Standard Input format\n\n m.end()\n2\n>>> m.start()\n3\n>>> m.end()\n3\n>>> m.end()\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4\n\n\nStart & end:\n\n\n\n\n\n=====Function Descriptions=====\n", "\nUse Standard Input format\n\n2\n\nUse Standard Input format\n\n m.end()\n3\n\nend()\n0\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\nend()\n\n\n\nStart & end()\n\nEnd & start()\n\n\n\n\n\n\nCode\n\n>>> import re\n>>>", "\nUse Standard Input format\n\n1\n2\n3\n\nUse Standard Input format\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nstart() & end()\n\nCode\n\n>>> re.search('abc','123')\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n\n[Start] & [End]", "\nUse Standard Input format\n\n1\n2\n3\n4\n5\n6\n1\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\nStart and end indices are the same as the function definitions\nUse Standard Input format\n\n\n0\n\n\n1\n\n\n\n\n\nCode\n\n>>> m = re.search(r'\\d+')\n", "\nUse Standard Input format\n\n\nUse Standard Input format\n\n m.end()\n0\n>>> m.start()\n0\n>>> m.end()\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Standard Input format\n\n\n\n\nThe expression\n\n>>> re.search('\\d+','1234')\n\n\n\n\n\n\n\n\n====="], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nstart() & end()\n\nThese expressions return the indices of the start and end of the substring matched by the group.\n\nCode\n\n>>> import re\n>>> m = re.search(r'\\d+','1234')\n>>> m.end()\n4\n>>> m.start()\n0\n\n=====Problem Statement=====\nYou are given a string S.\nYour task is to find the indices of the start and end of string k in S.\n\n=====Input Format=====\nThe first line contains the string S.\nThe second line contains the string k.\n\n=====Output Format=====\nPrint the tuple in this format: (start_index, end_index)\n\nIf no match is found, print (-1, -1).\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}