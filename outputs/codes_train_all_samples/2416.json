{"2416": {"code": ["\nUse Call-Based format\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n        \n\n\n\n   \n        \n\nGiven a positive integer num, write a function which returns True if num is a perfect square else False.\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\nGiven a positive", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format    pass\n\n\n\nUse Call-Based format\n\n\n\n          \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Python-Based format\n\n\n\n\n\nGiven a positive integer num, write a function\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format    pass\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\nUse Python-Based format\nclass\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Function-Based format\n\n\n\n\n\nGiven a positive integer num, write", "Use Call-Based format\n\n    pass\n\n\n\nUse Call-Based format\n\n\n\n\n          \n        pass\n\n\n\n\nUse Call-Based format\nclass Solution:\n   \n        pass\n\n\nGiven a positive integer num, write a function\n\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num,", "\nUse Call-Based format\n\n\n\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n          \n\n\n\n\n\n\n\n\n\nExample 3:\n   \n       ...\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a positive integer num:\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format    pass\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python-based format\nclass\n        pass\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\nExample:\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n          \n\n\n\n\n\n\n\n\n\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num, write a function\n\n\n\n\n\nGiven a positive", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n          \n\n\n\n\n\n   \n        \nUse Call-Based format\nGiven a positive integer num, write a function which returns True if num is a perfect square.\n\n\n\n\n\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n    pass\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python 2\nclass\n        \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive integer num:\n\n\n\n\n\nGiven a positive", "\nUse Call-Based format\n\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n          \n\n\n\n\n\n\n\n\n\n        pass\n\nGiven a positive integer num, write a function\n\n\n\n\nUse Function-Based format\n\n\n\n\n\nGiven a positive integer num:\n\n\n\nGiven a positive", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num", "\nUse Call-Based format\n\n\nUse Call-Based format    pass\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Function-Based format\n\n\n\n\n\n\n\nGiven a positive integer", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format    pass\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n          \n\n\n\n\n\n\n        pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive integer num:\n\n\n\nGiven a positive", "\nUse Call-Based format\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n          \n        return num > 3\n\n\n\n\n\nUse Python-Based format\nclass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a positive integer num, write a function\n\n\n\n\nGiven a positive integer", "\nUse Call-Based format\n\n\n\n    @call__\n    def isPerfectSquare(num: int):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n        pass\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    Given a positive", "\nUse Call-Based format\n\n\n    pass\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n   \n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\nGiven a positive integer", "\nUse Call-Based format\nUse Call-Based format\n\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\nUse Class-Based format\n\nclass\n        \n\n\n\n\n\nUse Function-Based format\n\n\n\n\n\n\n\n\n\n\n    Given a positive integer num", "\nUse Call-Based format\n\n\nUse Call-Based format    pass\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python 3 format\n\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer num, write", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python-Based format\nUse Python-Based format\n\n\n\n\nUse Python-Based format\n\n\n\n\nGiven a positive integer", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Python-Based format\n       \n        pass\n\n\n\n   \n        pass\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a positive integer"], "prompt": "\nQUESTION:\nGiven a positive integer num, write a function which returns True if num is a perfect square else False.\n\n\nNote: Do not use any built-in library function such as sqrt.\n\n\nExample 1:\n\nInput: 16\nReturns: True\n\n\n\nExample 2:\n\nInput: 14\nReturns: False\n\n\n\nCredits:Special thanks to @elmirap for adding this problem and creating all test cases.\nclass Solution:\n    def isPerfectSquare(self, num: int) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}