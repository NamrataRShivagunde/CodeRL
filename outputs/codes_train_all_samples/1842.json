{"1842": {"code": ["\u00a0\n\n\n\n\n\n\n\n\n\n\n1 <= n <= 10^-5\n1 <= edges.length <= 2\n1 <= edges[i].length <= 2\n1 <= edges[i].length <= 3\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\n is 0.16666666666666666\nExplanation", "\n\n\n\n\n\n\n\n\u00a0\n\nExplanation:\n\n\n<= n\n1 <= t\u00a0<= target\n1 <= target\u00a0<= n\n1 <= t\u00a0<= n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= n <= 10\n1 <= t\u00a0<= n\n1\n, the probability is", "\n\n\n\n\n\n\n\nExplanation:\n\nInput: n = 7, edges = [1,2,3,4,5,6,3,5,6,6]\nOutput: 0\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n is 0.16666666666666666", "\n\n\n\n\n\n\n\n\nExplanation:\n\nInput: n = 7\nedges = [1,2,3,4,6,5,7,10,10]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\nInput: n = 8\nedges = [1,2,3]\n is", "\n\n\u00a0\n\n\n\n\nInput: n = 7, edges = [1,2,3,4,5,6,7,8,9,10,10,10,10]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = 7\n\nexplanation:\n\nInput: n = 7\n\n is 6\ufffd", "\n\nExample:\n\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n<= n\n0.166666666666666666\n0.1666666666666666666666\n\n\n\n\n\n\u00a0\n\u00a0\n\n\u00a0\n\n\n\n\n\n\n\n\n\nOutput: 0.16666666666666666\n is 1/3 * 1/2 *", "\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\u00a0\nExplanation:\n\n<= n\n\u00a0<= n\n\nExplanation:\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\nExample 4:\n\nInput: n = 7, edges = [1,2,3,4,5]\n is 0", "\n\n\n\n\n\n\n\n\nn = 7\nedges.length == n\n\n\n<= n\n\nExplanation:\n\n\u00a0<= n\n\n\nExplanation:\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\nExplanation:\n\nOutput: 0.16666666666666666\n\nExplanation:\n is 0.16", "\n\n\n\n\n\n\n\n\n\n1 <= n <= 100\n1 <= t\u00a0<= 10\n1 <= target\u00a0<= 10\n0\n\n\n\n\n\nExplanation:\n\n\n\n\u00a0\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\u00a0\n\n\n\n\n is considered a frog.\n\nExplanation:\n\n", "\n\n\n\n\n\n\n\n\n\nInput: n, edges, t, target\nOutput: 0.16666666666666666\n\nExplanation:\n\nExample:\n\nInput: n = 7, edges = [1,2,3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is\n1 <= n\u00a0<=", "\n\n\nExplanation:\n\nInput: n = 7, edges = [1,2,3]\nOutput: 0.16666666666666666\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 0.16666666666666666\n\nExplanation:\n\n\n\n is 6\n", "\n\n\u00a0\n\n\u00a0\n\n\nInput: n = 7, edges = [[1], [1], [1], [1]]\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n0.16666666666666666\n\nExamples:\n\nInput: n = 7, edges = [1]", "\n\n\n\n\nExample:\n\nInput: n = 7, edges = []\nOutput: 0\n\nExplanation:\n\n\nInput: n = 7, edges = []\nOutput: 0\n\nExplanation:\n\nInput: n = 7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is 0.16666666666666666", "\n\n\n\n\n\n\n\n\n\n1 <= n <= 100\n1 <= t\u00a0<= n\n1 <= target\u00a0<= n\n1 <= target\u00a0<= n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n0.16666666666666666\n\n\n is 0.166666666666666666\n0", "\u00a0\n\n\n\nExplanation:\n\n\n\nInput: n = 7\n\nInput: edges = [1,2,3,4,5]\nOutput: 0\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nInput: n = 7\n\nOutput: 0\n\n\n is 1/", "\n\nExample:\n\n\n\n\n\n\n\n\n1 <= n <= 10\n1 <= n <= 10\n1 <= t\u00a0<= 50\n1 <= target\u00a0<= 20\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.16666666666666666\n\nExamples:\n\nInput: n = 7\n\n is 0.166666", "\n\n\n\n\n\n\n\n\n0 <= t\u00a0<= 0\n1 <= target\u00a0<= 0\n\n\u00a0\nExplanation:\n\u00a0\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n16666666666666666\n\nExplanation:\n\nInput: n = 7\nEdges:\n\n are 0.166666", "\u00a0\n\n\n\n\n\n\n\n\n \u00a0\n\n\n\u00a0<= n\n\u00a0\nExplanation:\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n of the condition is 1.166666666666666666\n\nReturns:\n\n1.1666666666666666666666\n\nExplanation:\n\n1 <= n", "\nExplanation:\n\n\n\n\n\n\n\n\n\nn = 7\nedges = [1,2,3,4,5,6,5,6]\n\nExplanation:\n\n\n<= n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nExplanation:\n\n\n is 0.16666666666666666\nex", "\n\n\n\n\n\n\n\n\n\n\nexplanation:\n\n\nExplanation:\n\u00a0n\u00a0<= 0\n\nExplanation:\n\n\n\nExplanation:\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\nn = 7\nedges = [1,2,3,4,5]\n is"], "prompt": "\nQUESTION:\nGiven an undirected tree\u00a0consisting of n vertices numbered from 1 to n. A frog starts jumping\u00a0from the vertex 1. In one second, the frog\u00a0jumps from its\u00a0current\u00a0vertex to another unvisited vertex if they are directly connected. The frog can not jump back to a visited vertex.\u00a0In case the frog can jump to several vertices it jumps randomly to one of them with the same probability, otherwise, when the frog can not jump to any unvisited vertex it jumps forever on the same vertex.\u00a0\nThe edges of the undirected tree\u00a0are given in the array edges, where edges[i] = [fromi, toi] means that exists an edge connecting directly the vertices fromi and toi.\nReturn the probability that after t seconds the frog is on the vertex target.\n\u00a0\nExample 1:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 2, target = 4\nOutput: 0.16666666666666666 \nExplanation: The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 probability to the vertex 2 after second 1 and then jumping with 1/2 probability to vertex 4 after second 2. Thus the probability for the frog is on the vertex 4 after 2 seconds is 1/3 * 1/2 = 1/6 = 0.16666666666666666. \n\nExample 2:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 1, target = 7\nOutput: 0.3333333333333333\nExplanation: The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 = 0.3333333333333333 probability to the vertex 7 after second 1. \n\nExample 3:\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 20, target = 6\nOutput: 0.16666666666666666\n\n\u00a0\nConstraints:\n\n1 <= n <= 100\nedges.length == n-1\nedges[i].length == 2\n1 <= edges[i][0], edges[i][1] <= n\n1 <= t\u00a0<= 50\n1 <= target\u00a0<= n\nAnswers within 10^-5 of the actual value will be accepted as correct.\nclass Solution:\n    def frogPosition(self, n: int, edges: List[List[int]], t: int, target: int) -> float:\n        \nUse Call-Based format\nANSWER:\n"}}