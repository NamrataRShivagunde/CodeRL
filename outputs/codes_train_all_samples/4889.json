{"4889": {"code": ["\n\nInput:\n\nYour function is called.\n\nOutput:\n\n\n\n\n\nTest Example:\n\n\n\n\n\n\n\n\n\n\nTest Example:\n\n\n\n\n\n\n  \n\n\n\n.\n\n\n   2 4 6 8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n   4 6 8 2", "\n\n\n\n\n\n\n\n\nn = 3\nseq = [1, 2, 3, 2, 3, 3, 4, 3, 4, 4, 4, 2, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmax_beam : integer\n\n\n\n:\n\n", "\n\n\n\n\n  1 -> 0\n  2 -> 1\n  2 -> 1\n  2 -> 0\n  1 -> 1\n  1 -> 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n arguments:\n\n  1 -> 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n:\n\n ", "\n\n\n \n\n\n\n\n\nn = 2\n\nseq : a finite integer sequence of integers\n\nn = 4\n\nTest Example:\n\n\n\n\n\n\n\n\n  \n\n\n\n\n arguments\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmax_beam = 2\n\n\n\n\n\nmax_beam = 2\n\n\n:\n", "\n\nYour task is executed once per test.\n\n\nn = 2\nseq = [3, 4, 6, 8, 6, 8, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n.\n\n\n\n.\n\n.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n will be the smallest integer.\n\nYour", "\n\n\n  2 4 4 6 8\n  3 4 4 6 8\n\n\n\nTest Example:\n\n\n\n\n\n\n\n\n\nTest Example:\n\n\n\n\n\n  \n.\n\n is:\n\n\n\n\n\n\n\n\n\n\n\n\nTest Example:\n\n\n   2 4 4 6 8\n\n  \n\n  \n  \n\n:", "\n\n\n\n\n\n\n\n\n\nn = 4\nseq = [1, 2, 3, 4, 2, 2]\n\n\nTest Example:\n\n\n\n\n\n\n\n\n\n\n \n   2 4 6 8 2\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is the maximum sum of any hex", "\n\n\n\n0 1 2 3 4 4 6 6 8 2 2 4 4\n\n1 1 1 2 3 4 4 4 4 6 8 8 2\n\n\n\n\n\n\n\n\n\n\n arguments:\n\n\n\n.\n\n.\n arguments:\n\nn = 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n is the smallest integer in the", "\n\n\n\nn : the length of each side of the grid.\nseq = [3, 4, 6, 8, 8, 8, 8, 8, 8, 8, 8]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe\n\n\n\n\n\n\n\n2 <n <", "\n\n\n  n = 4\n  seq = [2, 3]\n\n  beam = [3]\n\n\n\nTest Example:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n arguments:\n\nn = 4\n\n\n:\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is the smallest integer.\n\n", "\n\n\n\n\n\n\n\n\nn = 100\nseq = [1, 2, 3, 4, 2, 2, 2]\n\nTest Example:\n\n\n\n\n\nOutput Example:\n\n\n\n  \n  \n\n\n\n arguments\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\nn :", "\n\n\n\n\n\n\n\nn : the length of the grid\nseq : a finite integer sequence\n\nOutput Example:\n\n\n\n\n\n\n\nTest Example:\n\n\n\n\n\n  \n\n\n\nOutput Example:\n\n\n arguments\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n   \n\n\n\n    4 4 6 8 2", "\n\nTest Example:\n\nInput\nYour function will receive two arguments:\n\nn : the length of the grid\nseq : a finite integer sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is the largest integer. Refer", "\n\n\n\n\n\n\nYour test example\n\nInput:\n\nn = 4\nseq = [2, 3, 4, 6, 8, 2, 3, 4, 3]\n\nTest Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n   2 4 6 8", "\n\n\n\n\nInput:\n\nYour function should be called with the following arguments:\n\nn : the length of the hexagonal grid\nseq : a finite integer sequence\n\nOutput:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\n\n\n\n\n\n\n\n\n\n\n\n\n   -> 2\n\n is then\n\n   2", "\n\n\n\n\n\n\n\n\n\nOutput Example\n\nYour function should return the maximum beam value in our example.\n\nInput Example:\n\nn = 3\nseq = [3, 4, 6, 8]\n\nTest Example:\n\n\n\n\n\n\n\n\n\n.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n  2 4", "\n\n\n\n    n: the length of each side of a hexagonal grid\n\n    seq : the length of each cell of a hexagonal grid\n\n\n\n\n\n\n\n\n\n\n.\n\n\n\n\nOutput Example:\n\n\n:\n arguments.\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n   \n\n\n\n  2", "\n\n\n  n = 3\n\n  seq = [2, 3, 4, 2, 4, 2, 2, 2, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\n\n is:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   1 -> 20\n\n   2 : 2 arguments:", "\n\n\n\n\n\n\n\nn = 3\n\nseq = [2, 2, 2, 2]\n\nOutput:\n\n\nTest Example:\n\n\n\n\n\n\n\n\n arguments\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe maximum beam value in our test example\n\n\n\n\n\n  \n\n:\n", "\n\n\n\n\n\n\n\n\nn = 3\nseq = [2, 4, 6, 8, 6, 8]\n\nTest Example:\n\n\n\n\n\n\nTest Example:\n\n\n\n\n  \n  \n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n is given by the above"], "prompt": "\nQUESTION:\nIn this kata, your task is to find the maximum sum of any straight \"beam\" on a hexagonal grid, where its cell values are determined by a finite integer sequence seq.\nIn this context, a beam is a linear sequence of cells in any of the 3 pairs of opposing sides of a hexagon. We'll refer to the sum of a beam's integer values as the \"beam value\".Refer to the example below for further clarification.\nInput\nYour function will receive two arguments:\n\nn : the length of each side of the hexagonal grid, where 2 <= n < 100\nseq : a finite sequence of (positive and/or nonpositive) integers with a length >= 1The sequence is used to populate the cells of the grid and should be repeated as necessary.The sequence type will be dependent on the language (e.g. array for JavaScript, tuple for Python, etc.).\n\nOutput\nYour function should return the largest beam value as an integer.\nTest Example\n\nIn our test example, we have the following arguments:\nn = 4\nseq = [2, 4, 6, 8]\n\nBelow is the hexagonal grid determined by our example arguments;\nthe sequence repeats itself from left to right, then top to bottom.\n\n   2 4 6 8\n  2 4 6 8 2\n 4 6 8 2 4 6\n8 2 4 6 8 2 4\n 6 8 2 4 6 8\n  2 4 6 8 2\n   4 6 8 2\n\nThe three diagrams below illustrate the \"beams\" in the hexagonal grid above.\nIn the grid on the left, the horizontal beams are highlighted by their likewise colors,\nand the value of each beam is given to its right.\nIn the center grid, the beams highlighted go from upper-right to bottom-left (and vice-versa).\nIn the grid on the right, the beams highlighted go from upper-left to bottom-right (and vice-versa).\n\n   2 4 6 8 -> 20           2 4 6 8           2 4 6 8\n  2 4 6 8 2 -> 22         2 4 6 8 2         2 4 6 8 2\n 4 6 8 2 4 6 -> 30       4 6 8 2 4 6       4 6 8 2 4 6\n8 2 4 6 8 2 4 -> 34     8 2 4 6 8 2 4     8 2 4 6 8 2 4\n 6 8 2 4 6 8 -> 34       6 8 2 4 6 8       6 8 2 4 6 8\n  2 4 6 8 2 -> 22         2 4 6 8 2         2 4 6 8 2\n   4 6 8 2 -> 20           4 6 8 2           4 6 8 2\n\nThe maximum beam value in our example is 34.\n\nTest Specifications\n\nAll inputs will be valid\nFull Test Suite: 12 fixed tests and 100 random tests\nFor JavaScript, module and require are disabled [NOTE: if you would like to suggest a module that you think should be permitted for JS, please leave a note in the Discourse section]\n\nIf you enjoyed this kata, be sure to check out my other katas\ndef max_hexagon_beam(n:\n\t\nUse Call-Based format\nANSWER:\n"}}