{"2891": {"code": ["\n\n\n\n# The main part of the code\n\nfind_the_key(\"scout\", [19, 30, 24]) # --> 1939\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Description\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Introduction\n\n\n\n# Introdu", "\n\n## Example\n\n\n# Induction\n\nfind_the_key(\"scout\", [1939]) # -->  1939\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# The code\n\n\n\n\n\n\n\n# Intro", "\n\n# Main\n\n\n# Main\n\nfind_the_key(\"scout\", [11, 19, 27, 2, 7, 9])\n\n# Main\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# End\n\n\n\n\n# End\n\n\n\n# Introdu", "\n# Example\n\n# Example\n\n# Example\n\n# Example\n\n\n# Example\n\n# Example\n\nfind_the_key(\"scout\")\n\n# Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n# Introduction \n\n", "\n\n\n\n\n# Example\n\nfind_the_key(\"scout\", [1, 2, 3, 4])\n# -->  1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Introduction\n\n#\n\n\n\n\n\n# Int", "\n\n\n\n# Example\n\nfind_the_key(\"scout\", [19, 18, 30, 28, 30, 28])\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n# Int", "\n\n\n# Input / Output\n\n# Example\n\nfind_the_key(\"scout\", [10, 11, 13, 9, 14, 15]) # -->  1939\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n \n\n  b = 0\n  d = 1", "\n\n\n# Example\n\n# The task\n\nfind_the_key\n\n# Example\n\nfind_the_key\n\n# Example\n\n# Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  #  b  c ", "\n# Example\n\n# Note\n\n#\n\n# Example\n\n# Example\n\n# Example\n\n# Example\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n```python\n\n\n\n\n\n\n\n\n\n\n# Introdu", "\n\n\n# Input / Output\n\nfind_the_key(\"scout\", [1, 2, 3, 4]) # -->  1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Way\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n \n \n  a  b  c  d ", "\n\n\n# Example:\n\n# Introduction\n\nfind_the_key(\"scout\", [1939, 30, 29, 20, 22])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n\n", "\n\n\n# Example\n\nfind_the_key(\"scout\", [22, 30, 21]) # -->  1939\n\n# Example\n\nfind_the_key(\"scout\", [])\n\n\n\n\n#\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n# Int", "\n\n\n# Example\n\n# Example\n\nfind_the_key(\"scout\", [20, 19, 20, 20])\n# -->  1939\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n# Task\n\n\n\n```", "\n\n Example:\n\n# Introduction \n\n# Testing\n\nfind_the_key(\"test\", [20, 21]) # -->  1939\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n# Test\n\n \n\n\n  # The `", "\n\n\n# Ironic\n\nfind_the_key(\"scout\", [12, 12, 12])\n\n# Task\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n \n\n  m  b  k ", "\n\n\n# Example\n\nfind_the_key(\"scout\", [11, 12, 18, 30, 21, 21, 22, 24]) # -->  12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher \n\n\n\n\n# Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# End of tasks\n\n\n\n#", "\n\n\n#\n\n# Bold\n\nfind_the_key(\"scout\", [1939, 20, 30, 21])\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n \n\n\n# Bold\n\n\n\n\n\n\n\n# Increction\n\n```\n\n\n\n\n\n\n\n# Introduction \n\n\n\n", "\n\n\n\n\n# Test\n\nfind_the_key(\"scout\", [1939, 20, 30, 20, 30, 30, 30])\n\n### Input / Output\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n\n```python\n\n\n\n# Int", "\n\n\n# Example\n\nfind_the_key(\"scout\", [20, 30, 21]) # --> 1939\n\n# Example\n\nfind_the_key(\"scout\", [20]) # --> 1939\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Introduction \n", "\n\n\n# Example:\n\n# Tests\n\nfind_the_key(\"test\", [15])\n\n# Example:\n\n# Tests\n\nfind_the_key(\"test\")\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\npher\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n"], "prompt": "\nQUESTION:\n# Introduction \n\nDigital Cypher assigns a unique number to each letter of the alphabet:\n\n```\n a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x  y  z\n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n```\n\nIn the encrypted word we write the corresponding numbers instead of the letters. For example, the word `scout` becomes:\n\n```\n s  c  o  u  t\n19  3 15 21 20\n```\nThen we add to each number a digit from the key (repeated if necessary). For example if the key is `1939`:\n\n```\n   s  c  o  u  t\n  19  3 15 21 20\n + 1  9  3  9  1\n ---------------\n  20 12 18 30 21\n  \n   m  a  s  t  e  r  p  i  e  c  e\n  13  1 19 20  5 18 16  9  5  3  5\n+  1  9  3  9  1  9  3  9  1  9  3\n  --------------------------------\n  14 10 22 29  6 27 19 18  6  12 8\n```\n\n# Task\n\nWrite a function that accepts a `message` string  and an array of integers `code`. As the result, return the `key` that was used to encrypt the `message`. The `key` has to be shortest of all possible keys that can be used to code the `message`: i.e. when the possible keys are `12` , `1212`, `121212`, your solution should return `12`.\n\n#### Input / Output:\n\n* The `message` is a string containing only lowercase letters.\n* The `code` is an array of positive integers.\n* The `key` output is a positive integer.\n\n# Examples\n\n```python\nfind_the_key(\"scout\", [20, 12, 18, 30, 21]) # -->  1939\nfind_the_key(\"masterpiece\", [14, 10, 22, 29, 6, 27, 19, 18, 6, 12, 8]) # -->  1939\nfind_the_key(\"nomoretears\", [15, 17, 14, 17, 19, 7, 21, 7, 2, 20, 20]) # -->  12\n```\n\n# Digital cypher series\n- [Digital cypher vol 1](https://www.codewars.com/kata/592e830e043b99888600002d)\n- [Digital cypher vol 2](https://www.codewars.com/kata/592edfda5be407b9640000b2)\n- [Digital cypher vol 3 - missing key](https://www.codewars.com/kata/5930d8a4b8c2d9e11500002a)\ndef find_the_key(message, code):\n\t\nUse Call-Based format\nANSWER:\n"}}