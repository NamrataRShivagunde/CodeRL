{"489": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def maxWidth(self, A):\n        return A[0] - A[1]\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n,\n\n\n,, 2, 9\n\n\n\n\n\n\n\nGiven an array A of integers,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n,\n\u00a0\n\n\n\n\n\n\n\n\n\nGiven an array A of integers, a ramp is", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n        return j - i\n\n\n\u00a0\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n       \n\n,9,1,2]\n\n\n\n,\n\n\n\n\n\n\nGiven an array A of integers,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nA.length <= 50000\n\n\n   \n        return 0\n\n\n\n\n\n\u00a0\n\n\n\n\n,4,2,9]\n\n\n\n,4,3]\n\n\n\n\n\n\n\n\nGiven an array A of integers, a r", "\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n   \n        \nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\n,1]\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven an array A of integers, a ramp", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n        return 0\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\nA[1] > A[0]\n\n\n\nGiven", "\nUse Call-Based format\n\n\n    def maxWidthRamp(self, A: List[int]):\n        return j - i\n\n\n\n\n\n\n\u00a0\n   \n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\n,1,5]\n\n\n\n,\n\n\n\n\n\n\n\nGiven an array A of integers, a ramp", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    def maxWidth(self, A) -> int:\n        return A[i]\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n,\n\n\n,,\n\n\n\n\n\n\nGiven an array A of integers, a r", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n        return j - i\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\nThe maximum width ramp is 0\n\n\n\n\nGiven an array", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.maxWidthRamp(A)\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n       \n\n\nUse Call-Based format,9,2]\n\n\n\n,\n\n\n\n\n\n\n\nGiven an array A of integers, a ramp", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n        return j - i\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n,1]\n\n\n\n,\n\n\n\n\n\n\nThe maximum width ramp is 0\n\nGiven an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n        return 1\n\n\n\n\n\u00a0\n\n\u00a0\n\n\nUse Call-Based format\n,\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nA = [5,6,8,2]\nGiven", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n   \n        \"\"\"\n\n\n\n\n\u00a0\nNote:\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format,2,8]\n\n\n\n\n\n\n\n\n\n\n\n\nA[i] > A[j]\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n\n   \n        return 0\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n,\n\n\n,\n\n\n\n\n\n\n\n\n\n    Given an array A of integers, a r", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n,5,9,2,2]\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array A of integers, a ramp is", "\n\n\n\n    def maxWidthRamp(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\nUse Call-Based format\n\n\n,\n\n\n, 1, 2, 3\n\n\n\n\n\n\n\n\nGiven an array A of integers, a", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n   \n        return A[i]\n        \n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array A of integers A of", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def maxWidth(self, A: List[int]) -> int:\n   \n    return 0\n\n\n\n\u00a0\n\n\n\nUse Call-Based format\n,9]\n\n\n\n,\n\n\n\n\n\n\n\n\nGiven an array A of integers, a r", "\n\n\n\n    def maxWidthRamp(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n        return 6\n\n\n\n\n\u00a0\n\n\n\n\n, 2, 6, 3, 2, 1, 2\n\n\n\n,\n\n\n\n\n\n\n\nGiven an array A of integers, a r", "\nUse Call-Based format\n\n\n    def maxWidthRamp(self, A) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n       \n\n\n\n   \n\n\n\n,4,1,9,4]\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an array A of integers, a r"], "prompt": "\nQUESTION:\nGiven an array A of integers, a ramp\u00a0is a tuple (i, j) for which i < j\u00a0and\u00a0A[i] <= A[j].\u00a0 The width of such a\u00a0ramp is j - i.\nFind the maximum width of a ramp in A.\u00a0 If one doesn't exist, return 0.\n\u00a0\nExample 1:\nInput: [6,0,8,2,1,5]\nOutput: 4\nExplanation: \nThe maximum width ramp is achieved at (i, j) = (1, 5): A[1] = 0 and A[5] = 5.\n\n\nExample 2:\nInput: [9,8,1,0,1,9,4,0,4,1]\nOutput: 7\nExplanation: \nThe maximum width ramp is achieved at (i, j) = (2, 9): A[2] = 1 and A[9] = 1.\n\n\n\n\n\u00a0\nNote:\n\n2 <= A.length <= 50000\n0 <= A[i] <= 50000\nclass Solution:\n    def maxWidthRamp(self, A: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}