{"1724": {"code": ["\n\nKata:\n\n Kata:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien Ships:\n\nThe number of ships (m) represent an integer representing the number of ships.\n\n\n\n\n\n\n\n\n\n\nThe matrix is a 2-D array.\n\n\n\n\n\nReturns:\n\n[2", "\nKata: This kata is the game of the jalopy game.\nKata: This kata is the game of the jalopy game.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe image is fixed\n\nThe position represents the target position\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe second row is fixed by a", "\n\n Kata:\n\nThe kata is a kata game, the kata game is a kata game, the kata game is a kata game\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis game is in the format of:\n\n\nThe first", "\n\nKata:\n\nThe kata is not a kata game.\n\nKata:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe action is given by an integer.\n\n\n\n\n\n\n\n\n\n\n\nThe action is given by an integer (m - 1)\n\nThe target is given by an integer\n        ", "\n\n Kata\n\n\n\n\n\n\n\n\n\n\nAlien ships at [0,2]\n\nThe image coordinates are [0,2]\n\nThe position coordinate is [0,0]\n\nThe images are [0,2]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Note:\n\nBelow:", "\n\n\nKata:\n\nThe kata is not kata.\n\nThe kata is kata.\n\nThe kata is kata.\n\nThe kata is kata.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        An example:\n", "\n\n\n\n\n\n\n\n\n\n\nStart Example:\n\nYour function should return an array of integers\n\nThe function should return an array of integers\n\nThe function should return a 1-D array of integers\n\nThe function should return an array of integers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you are using the", "\n\n\n\n\n\n\n\n\n\n\nAlien Ship Movement Pattern\n\nAlien Ship Movement Pattern\n\nAlien Ship Movement Pattern\n\nAlien Ship Movement Pattern\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien Ship Movement Pattern\n\nYour position is fixed\n\n\n\n", "\n\nInput\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe result of your function is:\n\nYour position represents an integer, the column coordinate, the width (m)\n\nYour position represents a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe function should return an array of integers (0,n)\n\nThe action is\n", "\nKata:\n\nAlien Ships:\n\nAlien Ships:\n\nAlien Ships:\n\nAlien Ships:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe current state is now [0,0]\n\nThe", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien Ships:\n\na 1-D array of integers\n\na 2-D array of integers\n\na 1-D array of integers\n\n\n\n\n\n\n\n\n\n\n\n\nA2:\n\na 1-D array of integers\n\n\n\n\nIf you", "\nKata:\n\nKata:\n\nYour function should return an array of integers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn anomaly:\n\nAlien ships are at position [0,2], the position [0,3]\n\n\n\n\n\nThe\n\n\n\nThe two", "\n\n Kata:\n\nThe Kata is the same as the other kata:\n\nThe Kata is the same as the other kata:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first time you're using this function:\n\n\n\n\n\n\nBelow:\n\n", "\n\n\n\n\n\n\n\n\n\n\n\nThe position is fixed\n\nThe target position is fixed\n\nThe delay is fixed\n\nThe rotation is fixed\n\nThe position is fixed\n\nThe image coordinates are fixed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow many images are given:\n\na 2-D array\nThe", "\nKata:\n\nThe kata is kata.\n\nThe kata is kata.\n\nThe kata is kata.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe current position is fixed\n\nThe target is fixed\n\n\n\n0,0", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe action is fixed:\n\nThe matrix is fixed:\n\na 2-D array of integers\n\nThe width (m) represent the distance (m)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien Ships can be used for a single image.\n\n\n\n\nBelow: Turn", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien ships have a width (m) and an width (m)\n\nAlien ships have a width (m)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA2-D array of integers representing the image coordinates of each row.\n\n\n\n\nBelow:", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first argument represents the position of the target of the game.\nThe second argument represents the position of the target of the game.\nThe third argument represents the position of the target of the game.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[0,0]\n\n[0,1]\n[", "\n\n\n\n\n\n\n\n\n\n\nAlien Ships:\n\nAlien Ships:\n\nAlien Ships:\n\nAlien Ships:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe action is below\n\nThe images above:\n\nAlien Ships\n\n\n\n\n\n\nThe results above:", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe function should take two arguments:\n\nInput\na 2-D array\n\nOutput\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe current space is the same as the game's\n\n\n\n\n\n\n\n\nThe target is the target of the current game\n\nThe target is the target of\n\n"], "prompt": "\nQUESTION:\nThis kata is inspired by Space Invaders (Japanese: \u30b9\u30da\u30fc\u30b9\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc), an arcade video game created by Tomohiro Nishikado and released in 1978.\nAlien invaders are attacking Earth and you've been conscripted to defend.\nThe Bad News: You performed poorly in the manual training. As a result, you're ranked low priority and you're piloting a space jalopy.\nThe Good News: Your coding skill is better than your piloting and you know the movement pattern of the alien spaceships.\nYou're going to program an algorithm that aids in shooting down the incoming alien wave despite your limitations.\nInput\nThe action takes place on an m x n matrix. Your function will receive two arguments:\n\na 2-D array where each subarray represents a row of alien ships. Subarrays consist of integers that represent each alien ship. Zero values (0) are empty spaces.\n        \nyour [row,column] coordinates\n\nThe width (n) of a row is equal to the length of a subarray in the first argument and all rows are of the same length.\nYour row coordinate will be the last row of the matrix (m - 1).\nAlien Ship Movement Pattern\n\nEach alien ship is given in the form of an integer that represents its movement speed and direction.\nAlien ships move left or right. A positive integer means an alien moves right, a negative integer means an alien moves left. The absolute value of the integer is the distance the alien moves in 1 turn.\nWhen an alien reaches an edge, it moves down one position and reverses lateral (left/right) direction.\n\nYour Ship's Limitations\n\nYour position is fixed.\nYour pulse cannon has a time delay of 1 turn. After the delay, your cannon blasts the first target in its path.\nYou can fire up to one shot per turn.\n\n\nOutput\nYour function should return an array of integers. Each integer represents the turn for each shot fired from your ship's cannon. If it is not possible to destroy all alien ships before they reach the last row, return null or None.\nTest Example\n\nAbove: Turn 0 (Initial State)\nBelow: Turn 1\n\nThe images above represent the matrix states at Turn 0 and Turn 1 for the test example below. Note the following:\n\nMultiple alien ships can occupy the same space concurrently. The red alien at [0,2] and the light blue alien at [0,7] at turn 0 will both end up at position [0,4] at turn 1.\nThe pink alien (1) at [0,9] at turn 0 is already at the right edge, so it moves one space down and changes direction from right to left.\nThe yellow alien (6) at [0,6] at turn 0 ends up at [1,7] at turn 1.\nThe green alien (7) at [0,8] at turn 0 ends up at [1,4] (white alien) and gets shot down by your cannon at turn 1. Therefore, the time of registering your first shot is at turn 0.\n\nIn the test example, there is only one subarray in the first argument, meaning only the top row (row 0) of the matrix is occupied at the initial state.\n\n```python\nalien_wave = [[3,1,2,-2,2,3,6,-3,7,1]]\nposition = [6,4]\n\nblast_sequence(alien_wave,position)# [0, 2, 3, 4, 5, 9, 10, 13, 19, 22]\n```\n\nOther Technical Details\n\nIn the event where multiple alien ships occupy the same position and the position is the target of your cannon fire, the fastest alien ship will be destroyed. If two ships are going at the same speed in opposite directions, the ship moving to the right will be destroyed.\nAll alien ship movement speeds will be less than the width of the matrix.\nAlien count upper bound is 228\nInputs will always be valid\n\n\nIf you enjoyed this kata, be sure to check out [my other katas](https://www.codewars.com/users/docgunthrop/authored).\ndef blast_sequence(aliens, position):\n\t\nUse Call-Based format\nANSWER:\n"}}