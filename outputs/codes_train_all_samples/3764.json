{"3764": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n```\n\nThe string 1101 is reserved for use by the function:\n1000\n```\n\n\n\n## Examples\n\n## Methods\n\n*\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n## Example\n\n## Examples\n\n*\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n## Example\n\n## Use Call-Based format\n\n## Examples\n\n* Call-Based format\n\n# TODO:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n**Masters**:\n\n**2**", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n## Methods\n\n## Example\n\ndef\n\n## Example\n\n## Usage\n\n\n\n\n\t\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n## Example:\n\n* The arbitrate function\n\n*\n\n* The arbitrate", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef\n\t\nUse Call-Based format\n\n## Example\n\n## Notes\n\n*\n\n\n\n\n\n\n\n\n\n\n```\nThe string 1101 means that master 0 has granted access to the bus\n```\n\n\n\n\n\n\n* The second", "\nUse Call-Based format\n\n\n\n\n\n\n\ndef\n\nUse Call-Based format\n\n## Usage\ndef call(s, n):\n\nUse Call-Based format\n\n## Examples\n\n## Examples\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n### Examples\n\n## Example\n\n## Examples\n\n## Examples\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n* The function should return a string (`char* `).\n\nThe string 1101:\n1000\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Masters**:\n\n**Input:", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n```\nThe string 1101 means that master 0 has granted access to the bus\n```\n\n\n\n:\n\n\n\n\n## Example\n\n\n\n\n\n\n\n* The string `s` should have the", "\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n## Usage\n\n* Call-Based format\n\nINPUT:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n## Examples\n\n## Example\n\n*\n\n* `s`", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n## Example\n\ndef arbitrate(s, n):\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n## Example\n\nThe task is:\n\n```\n\n\n\n\n```\nThe string 1101 means", "\nUse Call-Based format\n\n\n\n\n\n\n## Example\n\ndef arbitrate(inp, n):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nA string (`char* `inp`):\n\n\n\n:\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n## Example\n\n## Examples\n\n*\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\treturn inp\n\n#\n\n\n\n\n\n\n\n\n\nThe number of masters connected to a single bus are used to determine which of them can have access priority than master 0 has granted access.\n\n\n\n\n\n* The number of **", "\nUse Call-Based format\n\n\n\n\n\n* `n` should be greater than 1\n* `s` should be a string (`char* `)\n\nUse Call-Based format\nANSWER:\n\n*\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nINPUT:\n\n**inp**\n\n\n\n* `s`", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n*\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Input**\n\n**\n\n**\n\n**\n\n**\n\n**\n\n**\n\n**\n\n**\n\n**\n\n**\n\n**", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n   \n\n## Example\n\n## Input\n\nINPUT:\n\n0\n\n1\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Returns\n\ninp:\n\nin:\n1101\n\n```\n\n\n\n```\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n## Examples\n\n* Use Call-Based format\n\t\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n## Examples\n\n## Example\n\n* Example\n\n*\n\n* The", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n## Returns\n\n## Output\n\nstring:\n\ninput:\n\necho \"input\"\n\necho \"output\"\n\n## Examples\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n### Example\n# Example", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n### Input\n## Output\n\n## Output\n\n## Example\n\n\n# Use Call-Based format\nINPUT:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\nINPUT:\n\n\n\n* The string `s` is considered", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\ndef\n\nUse Call-Based format\n\n## Example\n\ndef arbitrate(s, n):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n## Example\n\n## Example\n\n## Examples\n\n## Examples\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\ninput:\n1\n\ninput:\n1\n\noutput:\n1000\n\nanswer:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n* The `s` parameter", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n* `arbitrate(inp, n)`\n\nUse Call-Based format\n\n*\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n* The arbitrate function\ndef\n\n## Example\n\n*\n"], "prompt": "\nQUESTION:\nWhen multiple master devices are connected to a single bus (https://en.wikipedia.org/wiki/System_bus), there needs to be an arbitration in order to choose which of them can have access to the bus (and 'talk' with a slave).\n\nWe implement here a very simple model of bus mastering. Given `n`, a number representing the number of **masters** connected to the bus, and a fixed priority order (the first master has more access priority than the second and so on...), the task is to choose the selected master.\nIn practice, you are given a string `inp` of length `n` representing the `n` masters' requests to get access to the bus, and you should return a string representing the masters, showing which (only one) of them was granted access:\n\n```\nThe string 1101 means that master 0, master 1 and master 3 have requested\naccess to the bus. \nKnowing that master 0 has the greatest priority, the output of the function should be: 1000\n```\n\n## Examples\n\n## Notes\n\n* The resulting string (`char* `) should be allocated in the `arbitrate` function, and will be free'ed in the tests.\n\n* `n` is always greater or equal to 1.\ndef arbitrate(s, n):\n\t\nUse Call-Based format\nANSWER:\n"}}