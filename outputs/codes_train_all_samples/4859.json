{"4859": {"code": ["\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\nQUESTION:\n\n\n\n\n\nssc_forperm(arr", "\n\n\n\n\nUse Call-Based format\n\nssc_forperm(arr)\n\nUse Call-Based format\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm()\n\n\n\n\n\n\n\n\nThe sum of all the two positions in", "\n\n\n\n\n\n\n\nssc_forperm(arr):\n\t\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr):\n\t\n\n\n\n\nssc_", "\n\n    Call-Based format\n   \n   \n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nDOCS:\n\n    special_score(ssc)\n\n   `\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm:\n\n\n\n    a,", "\n\n\n\n\n\nUse Call-Based format\n\n\nssc_forperm(arr, ssc)\n\nReturns:\nssc_forperm(arr, ssc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe special score(ssc) of an array:\n\n\n# The special", "\n\n\n\n\n\n\nssc_forperm(arr)\n\nReturns:\n\tssc_forperm(arr)\n\nEXAMPLE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr):\n\t\n\n\n\nssc_forperm(arr):", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\nQUESTION:\n\n\n\n\n\n\n\n\nssc_forperm([6,", "\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nssc_forperm(arr)\n\n\nUse Call-Based format\n\nQUESTION:\n\nThe special score(ssc) is used for all permutations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nssc", "\n\n\nssc_forperm(arr)\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\nssc_forperm()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nssc_forperm()\n\nUse Call-Based format\n\nSSC:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr):\n\t\n\n\n\n\n    The", "\nUse Call-Based format\n\n\n\n\n\n\n\nssc_forperm(arr, ssc)\n\nReturns:\nssc\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr, ssc)\n\n\n\n\n\n\n\n\nssc_forperm(arr,", "\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\nUse Call-Based format\n\nQUESTION:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_for", "\n\n\n\n\n\n\nssc_forperm(arr)\n\nUse Call-Based format\n\nNOTE:\n\nssc_forperm(arr)\n\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\n\n\n", "\n\n\nssc_forperm\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe special score(ssc) of an array of integers is the special score(ssc) of all possible permutations\n\n\n\n\n\n\n\n\n\n\n\nThe special score(ssc", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr, ssc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr, ssc)\n\n\n\n\n\n\n\n\nssc_forperm(arr, ssc)", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\t\nDo not use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nssc_forperm(arr, ssc)\n```\n\n", "\n\n\n\n\n\n\nssc_forperm()\n\nThe following example will produce a list of dictionaries:\n\nssc_forperm(arr)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe array is not called by the call-based format\n\n\n\n\n\nssc_forperm(arr", "\n\n\n\n\n\n\nssc_forperm(arr):\n\t\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n\n\n\n\n\n\n\n\nssc_forperm(arr)\n", "\n\n\nssc_forperm(arr)\n\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The special score(ssc) of an array of integers", "\n\n\n\n\n\nUse Call-Based format\n\n\nssc_forperm(arr, ssc)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n    The total ssc's ```total"], "prompt": "\nQUESTION:\nThe special score(ssc) of an array of integers will be the sum of each integer multiplied by its corresponding index plus one in the array.\n\nE.g.: with the array  ```[6, 12, -1]```\n```\narr =   [6,      12,       -1 ]\nssc =   1*6  +  2* 12 +  3.(*1) = 6 + 24 - 3 = 27\n```\nThe array given in the example has six(6) permutations and are with the corresponding ssc:\n```\nPermutations      Special Score (ssc)\n[6, 12, -1]      1*6 + 2*12 + 3*(-1) = 27\n[6, -1, 12]       1*6 + 2*(-1) + 3*12 = 40\n[-1, 6, 12]       1*(-1) + 2*6 + 3*12 = 47\n[-1, 12, 6]       1*(-1) + 2*12 + 3*6 = 41\n[12, -1, 6]       1*12 + 2*(-1) + 3*6 = 28\n[12, 6, -1]       1*12 + 2*6 + 3*(-1) = 21\n```\nThe total sum of the ```ssc's``` of all the possible permutations is: ```27 + 40 + 47 + 41 + 28 + 21 = 204```\n\nThe maximum value for the ```ssc``` is ```47```.\n\nThe minimum value for the ```ssc``` is ```21```.\n\nWe need a special function ```ssc_forperm()``` that receives an array of uncertain number of elements (the elements may occur more than once) and may output a list of dictionaries with the following data:\n```\n[{\"total perm\":__}, {\"total ssc\": ___}, {\"max ssc\": __}, {\"min ssc\": __}]\n```\nFor the example we have above will be:\n```python\nssc_forperm([6, 12, -1]) = [{\"total perm\":6}, {\"total ssc:204}, {\"max ssc\":47}, {\"min ssc\":21}]\n```\nYou may assume that you will never receive an empty array.\n\nAlso you will never receive an array with the same element in all the positions like [1, 1, 1, 1 ,1], but you may have elements occuring twice or more like [1, 1, 1, 2, 3]\n\nEnjoy it!!\ndef ssc_forperm(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}