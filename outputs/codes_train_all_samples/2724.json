{"2724": {"code": ["\n:\n  - Use Call-Based format  - string should not contain spaces\n\nUsage:\n  -\n\n  - Use Call-Based format:\n  -\n\nReturns:\n  - string\n\nUse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n  -\n\n:\n\n\n\n:\n  -\n\n\n", "\n:\n\n - should not contain uppercase letters\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\n\n  - string should contain lowercase letters\n\nUSAGE:\n  -\n  - string\n\n\nUse\n\n\n:\n\n\t:\n  -\t\n:\n  -\n\n\n\n\n\n  -\n\n\n", "\n:\n - string should contain only lowercase letters\n\nUsage:\n  - kebabize(string)\n\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\nUse\n\n\n\n\n\ndef\n\t\n\n\n\n\n  - string should contain uppercase letters\n\n\t\n:\n\n  -\n\n\n\n\n\n\ndef\n\n\n", "\n:\n\n - should be lowercase\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\n:\n\n  - string should be a string\n\nUse Call-Based format\n\nUSE\n  -\n\n\n:\n\n\n:\n\n\n\n:\n  -\n\n\n\n\n  -\n  -\n\n\n ", "\n:\n\n - should be lowercase\n\nExample:\n\ndef\n\n\nUse Call-Based format\n\n  - should be a valid python string\n  - should be in a valid kebab case\n\nUse Case-Based format\n\nUSAGE:\n\n \n\nUse\n\n:\n\n\n\t:\n\n  -\n\n:\n  -\n\n\n\n\n\n", "\n:\n\n - should be a lowercase letter\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\n:\n\n\n  -\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n:\n  -\n \n\n\n \n", "\n:\n - should not contain uppercase letters\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\t\n:\n\n  - string should be a string\n  - string should be a string\n\nUSAGE:\n \n  -\n\n\n:\n\n\t:\n\n\n\n:\n  -\n\n\n\n\ndef\n\n", "\n:\n - should be lowercase\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\n:\n  - should be lowercase\n  - should be upper case\n\nNOTE:\n  - should be lowercase\n  - should be uppercase\n  - should be lowercase\n\n \n\n:\n\n\n:\n  -\n\n:\n  -\n", "\n\nUse Call-Based format:\n\n  - string should be a string\n\nUsage:\n  - kebabize(string):\n\n\n\n:\n\n\n\n  - string should be a string\n\nUse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n  -\n\n\n\n\n  -\n\n  *", "\n:\n - should not contain uppercase letters\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\n:\n  - string should be a string\n\nUse Case-Based format\n\nUSAGE:\n  -\n  -\n\n\n:\n\n\t:\n\n\n\n:\n  -\n\n\n\n\n  -\n\n ", "\n:\n\n - string should be a string\n\nUsage Call-Based format\n\t\n\n\n  - string should be a string\n  - string should be a string\n  - string should be a string\n\nUse String-Based format\n\n   \n\n   \n   \n:\n\n\t\t:\n\n\n\n\n:\n  -\n\n\n\n\ndef\n\n\n", "\n\nUse Call-Based format:\n\n - should not contain uppercase letters\n\nUsage:\n  - kebabize(string):\n\n\n\n:\n\n  - string should be a string\n  - string should not be empty\n\nUse Call-Based format\n\n\n  -\n\n:\n\n\n:\n\n\n\n:\n  -\n\n\n\n\n\n", "\n:\n - should not contain uppercase letters\n  - should not contain underscores\n\nUse Call-Based format\n\n\n\n\n  - should not be modified\n\nUse Call-Based format\n\nA\n  - should not be modified\n\n\nUse\n\n\n:\n\n\n:\n\n\n\n:\n  -\n\n\n\n\n  - should be\n\n\n  *", "\n:\n  - Use Call-Based format  - should not contain underscores\n\nUsage:\n  -\n\n:\n  -\n  - string = string.title()\n\nUse\n\nReturns:\n  - string.title()\n\n\n\n\n\n\n\n\n\n\n\n:\n  -\n\t\n:\n\n\n\n:\n  -\n\n\n\n", "\n:\n - should not be empty\n\nUsage:\n  -\n\t\nUse Call-Based format\n:\n\nUse Call-Based format\n  - string should not be empty\n\nExample:\n\n \n\nUse\n\nExample:\n  -\n:\n  -\n  -\t:\n\n\t\n:\n  -\n  -\n\n\n\ndef\n\n", "\n\nUse Call-Based format:\n - should not contain lowercase letters\n\nUsage:\n  -\n\n:\n  - string should be a string\n  - string should be a string\n\nUse Call-Based format\n\nREQ:\n\n\n  - string\n\t\nUse\n\n:\n\n\n\n\n\n\n\n:\n  -\n\n\n\n\n\n\n\n", "\n:\n\n - should be converted to lowercase\n\nUsage:\n \n\n\n\n  - string should be a string\n  - string should be a call-based format\n\nUSAGE:\n  - kebabize(string)\n\n\n\n  -\n\n\n\t:\n\n\n\t:\n\n\n\n:\n  -\n\n\n\n\n  -\n\n", "\n:\n - should not contain underscores\n\nUsage:\n  - kebabize(string)\n\nUse Call-Based format\n\n\n:\n\n  - string should be a string\n  - string should not contain underscores\n\nUsage:\n  -\n\n\nUse\n\n:\n\n\n:\n\n\t\n:\n  -\n\n\n\n\ndef\n\n\n", "\n:\n  - Use Call-Based format  - string should not contain spaces\n\nUsage:\n  -\n\nUse Call-Based format\n  -:\n\n  -\n\nUse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n  -\n\t:\n\n\n\n:\n  -\n\n\n\n\n\n\n", "\n:\n - string should not contain spaces\n\nUse Call-Based format\n\n\n\n\n  - string should be a python string\n\nExample:\n  - string = 'foo'\n\nUse String-Based format\n\nExample:\n  - string = 'bar'\n\n\nUse Python-Based format\n\n\n  -\n\n:\n\n\n\n\n\n\n\n\n:\n\n  - string should be a string\n\n\n\n\n\n  -\n\n\n\n\n\n\nCOMPUTATION:\n\n\n\n\n  -\n\n$ python\n\n$\n\n\n\n\n$\n\n\n \nAPPROX:\n\n  *\n\n\n\n\n\n    *\n\n    *\n\n  *\n  *\n\n    *\n\n\n\n\n\n    *\n\n\n\n\n*\n*"], "prompt": "\nQUESTION:\nModify the `kebabize` function so that it converts a camel case string into a kebab case.\n\nNotes:\n  - the returned string should only contain lowercase letters\ndef kebabize(string):\n\t\nUse Call-Based format\nANSWER:\n"}}