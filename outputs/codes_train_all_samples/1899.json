{"1899": {"code": ["\n\n\nUse Call-Based format    def shortestBridge(self, A: List[List[int]]) -> int:\n        return A[0][0]\n\n\n\n\n\n   \n\n\n\n   \n    pass\n        \n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\nIn a given 2D binary array A", "\n\nUse Call-Based format\n\n    return self.shortestBridge(A)\n\n\n\n\n\n          \n        return self.shortestBridge(A)\n\n\n\n    def shortest(self, A):\n        return 1\n\nUse Call-Based format                        \n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\nIn a given 2D", "\nUse Call-Based format\n\n\n    def shortestBridge(self, A: List[List[int]]):\n        return 1\n\nUse Call-Based format\n\n\n   \n        return 1\n\n\n\n   \n    pass\n\nUse Call-Based format\u00a0\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\nIn a given 2D binary", "\nUse Call-Based format\n\n\n    def shortestBridge(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n    def shortest(self, A: List[int]) -> int:\n                \n\n\n\n\n\n\n\n\n\n\n\n\u00a0\nIn a given 2D binary array", "\nUse Call-Based format\n\n\n    def shortestBridge(self, A: List[int]) -> int:\n        return self.shortestBridge(A)\n\n\n\n\n\n   \n        pass\n\n\n\n   \n    pass\n\n\n\u00a0\n\n\n\n\n\n\n\nIn a given 2D binary array A:\n\n\n\n\u00a0\nIn a", "\nUse Call-Based format\nUse Call-Based format\n        pass\n        \n\n\n\n   \n          \n        pass\n\n\u00a0\n\nUse Call-Based format\n\n\n   \n    pass\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\nIn a given 2D", "\nUse Call-Based format\nUse Call-Based format\n    def shortestBridge(self, A):\n        return A[0][0]\n\n\n\n\n\n   \n        return 0\n\nUse Call-Based format\n\n\n\n   \n    pass\n        \n\n\n\n\n\n\n\n\nA island is connected to two islands.\n\n\n\n\nIn", "\nUse Call-Based format\n\n        pass\n\n\n\n\n        return self.shortestBridge(A)\n\n\u00a0\n\nUse Call-Based format\n\nUse Call-Based format\n\nMethod:\n\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\nIn a given 2D binary array", "\nUse Call-Based format\nUse Call-Based format\n\n    def shortestBridge(self, A: List[int]) -> int:\n\n\n\n\n\n   \n\n\n\n   \n    pass\n\n\nUse Call-Based format\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\nIn a given", "\nUse Call-Based format\n\n\n    def shortestBridge(self, A: List[List[int]):\n        \nUse Call-Based format\n\n\n\n\n   \n        return 1\n\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\nA[0][0] = 0\n\n\n\nIn", "\n\nUse Call-Based format\n\n    def shortestBridge(self, A: List[List[int]]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n    pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\nIn a given 2D binary array A", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\n\n\n\n    def shortest(self, A: List[int]) -> int:\n        return 1\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\nIn a given 2D binary array A", "\nUse Call-Based format\nUse Call-Based format\n        pass\n\n\n\n\n   \n        pass\n\n\n\u00a0\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\u00a0\n\n\nOptions:\n\n\n\n\n   \n                \n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\nIn a given", "\nUse Call-Based format\nUse Call-Based format\n\n    def shortestBridge(self, A: List[List[int]):\n        return self[0][0]\n\n\n\n\n\n   \n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\nA[i][j] = 1\n\n\n\n\n\n\nIn a given 2", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\n\nUse Call-Based format\n\n\n    def shortest(self, A: List[int]) -> int:\n        return self.shortestBridge(A)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn a given 2D binary array", "\nUse Call-Based format\nUse Call-Based format\n\n    def shortestBridge(self, A: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nA[i][j] = 0\n\n\n\n\n\nIn a given 2", "\nUse Call-Based format\nUse Call-Based format\n\n    pass\n\n\n\n\n   \n        pass\n\n\u00a0\n\n\n\u00a0\n\n\nReturns:\n\n1\n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n\n\n\n\nA island is in a 2D binary array A\n\n\n\n\nIn a given 2D binary", "\nUse Call-Based format\n\n\n    def shortestBridge(self, A: List[List[int]]) -> int:\n\n\n\n\n\n   \n\n\nIn a given 2D binary array A\n   \n       ...\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\nIn a given 2", "\nUse Call-Based format\n\n\n    def shortestBridge(self, A: List[List[int]):\n        return A[0][0]\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\nA island is not connected to any other island.\n\n\n\n\nIn a", "\nUse Call-Based format\nUse Call-Based format\n\n    def shortestBridge(self, A: List[int]) -> int:\n\n\n\n\n\n   \n\n\nIn a given 2D binary array A:\n\n          \n       \n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\nIn a given 2D binary array A,"], "prompt": "\nQUESTION:\nIn a given 2D binary array A, there are two islands.\u00a0 (An island is a 4-directionally connected group of\u00a01s not connected to any other 1s.)\nNow, we may change 0s to 1s so as to connect the two islands together to form 1 island.\nReturn the smallest number of 0s that must be flipped.\u00a0 (It is guaranteed that the answer is at least 1.)\n\u00a0\nExample 1:\nInput: A = [[0,1],[1,0]]\nOutput: 1\nExample 2:\nInput: A = [[0,1,0],[0,0,0],[0,0,1]]\nOutput: 2\nExample 3:\nInput: A = [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\nOutput: 1\n\n\u00a0\nConstraints:\n\n2 <= A.length == A[0].length <= 100\nA[i][j] == 0 or A[i][j] == 1\nclass Solution:\n    def shortestBridge(self, A: List[List[int]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}