{"3788": {"code": ["\n Task\n\n### Examples\n\n### Examples\n\n### Examples\n\n### Examples\n\n### Examples\n\n### Examples\n\n### Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task\n\n\n\n\n\n\n\n\n### Task\n\n\n\n\n\n\n\n# Task\n", "\n Task\n\n### Example\n\n### Example\n\n\n# Task\n\n# Example\n\n\n# Task\n\n\n\n\n\n\n\n\n Description\n\n### Examples\n\n### Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Task\n\n## Example\n\n\n           \n\n\n\n\n\n\n\n## Task\n\n", "\n Examples:\n\n### Example\n\n\n### Examples:\n\n### Examples:\n\n* Pentagonal Numbers\n\n### Examples:\n\n\n\n\n\n\n Examples:\n\n### Examples:\n\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task\n\n\n\n\n\n\n\n### Task\n", "\n\n\n Task\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n Task\n\n## Example\n\n\n### Example\n\n\n## Task\n\n\n\n\n\n\n\n Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n # Task\n\n### Task\n\n\n\n\n\n\n\n# Task\n", "\n Task\n\n### Examples\n\n\n### Examples\n\n\n## Data\n\n\n\n# The pattern of three dots\n\n\n\n\n\n\n\n\n\n Description\n\n### Examples\n\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Task\n\n\n\n### Examples\n\n\n\n\n\n#", "\n Description\n\n### Example\n\n## Description\n\n# Task\n\n\n\n\n## Example\n\n\n\n Task\n\n\n\n\n Task\n\n\n\n\n\n\n\n\t\n\n\n## Task\n\n### Example\n\n### Task\n\n## Example\n\n# Task\n\n\n## Examples\n\n## Task\n\n\n\t\n\n\n\n\n\n\n\n# Task", "\n## Example\n\n Use Call-Based format\n\n### Examples\n\n### Description\n\n\n\n#\n\n## Task\n\n\n Description\n\n### Examples\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n #Task\n\n\n## Task\n\n Task\n\n\n\n\n\n## Task\n\n\n\n\n\n# Task\n\n\n# Task\n", "\n## Example\n\n\t \n\t \n\t ## Task\n\n## Examples\n\n\n## Description\n\n\n## Task\n\n## Example\n\n\n\n\n\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n\n    \n## Task\n\n Task\n\n### Example\n\n## Task\n\n\t\n\n\n\n\n\n\n\n# Task 2\n#", "\n\n Task\n\n### Example\n\n### Examples\n\n## Examples\n\n\n#\n\n## Example\n\n\n## Task\n\n\n\n\n\n\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n\t## Task\n\n## Example\n\n #Task\n\n    = Pn\n#Task:\n\n\n\n\n Description\n\n\n\n\n\n\n# Task", "\n## Example\n\n\n# Example\n#\n\n Pentagonal Number\n\n### Examples\n\n### Description\n\n\n\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n\t## Task\n\n\n\n\n\n\n Task\n\n\n### Examples\n\n### Task\n\n\n\n\n\n# Task", "\n\n Task\n\n### Examples\n\n### Usage\n\n#\n\n\n## Task\n\n\n## Example\n\n### Usage\n\n Number\n\n#\n\n\n\n\n Number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n\n\n\n\n### Examples\n\n### Task\n\n\n\n\n\n\n\n\n\n# Task\n\n\n", "\n Task\n\n## Example\n\n### Examples\n\n\n### Example\n\n#\n\n\n\n\n Description\n\n### Task\n\n\n\n\n## Examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task\n\n Task\n\n\n\n\n\n\n\n\n## Task\n\n\n\n\n# Task\n\n#\n", "\n Description\n\n### Examples\n\n### Description\n\n### Examples\n\n### Examples\n\n### Examples\n\n\n\n\n    \n\n    \n\n\n\n\n\n\n Description\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Task\n\n### Examples\n\n## Task\n\n\n\n\n\n\n\n\n\n# Task\n", "\n Description\n\n## Example\n\n# Pentagonal numbers\n\n### Examples\n\n* n = 1\n\n\n\n\n\n Description\n\n### Example\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example\n\n### Task\n\n\n    \n\n\n\n\n\n Task\n\n### Example\n\n\n\n## Task\n\n", "\n\n\n## Example\n\n# \t0\n\n\n\n### Task\n\n#\n\n## Example\n\n\n\n Task\n\n\n\n\n\n\n\n\n\n Description\n\n### Example\n\n\n\n\n\n\n\n\n\n\n\n\n Task\n\n## Example\n\n\n## Task\n\n\n\n\n\n\n\n\n\n\n\n\n## Task\n\n#", "\n\n Task\n### Example\n\n## Description\n\n\n\n\n\n\n## Usage\n\n### Task\n\n Number\n\n#\n\n\n\n\n Task\n\n\n Number\n\n\n\n\n\n\n\n\n\n# Task\n\n# Task\n\n\n\n\n\n\n### Examples\n\n## Task\n\n\n\n\n### Examples\n\n\n\n\n\n\n# Task\n", "\n## Example\n\n  ## Task\n\n\n\n## Details\n\n### Example\n\n\n\n\n\n Task\n\n Task\n\n\n\n\n## Examples\n\n## Task\n\n\n\n\n\n\n\n\n\n \n\n    ## Task\n\n\n### Task\n\n\n\n\n# Task\n\n Description\n\n### Task\n\n\n\n\n\n# Task\n\n\n", "\n Task\n\n Task\n\n\n\n## Example\n\n\n\n## Example\n\n### Example\n\n\n\n## Examples\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Task\n\n Task\n\n## Example\n\n### Task\n\n# Task\n\n## Examples\n\n## Task\n\n\t\n\n\n\n\n\n\n\n# Task\n", "\n\n## Example\n\n\n\n\n\n\n### Description\n\n### Usage\n\n# Task\n\n\n Task\n\n# Task\n\n\n\n\n\n Usage\n\n Number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Task\n\n\n## Effects\n\n### Task\n\n\n\n    \n\n\n\n## Example\n\n\n\n\n\n\n#", "\n## Example\n\n# Task\n\n\n# Task\n\n# Task\n\n# Task\n\n\n\n\n\n\n Description:\n\n### Task\n\n## Example\n\n\n\n\n\n\n\n\n Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n Task\n\n## Example\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task"], "prompt": "\nQUESTION:\n## Task\n\nYou have to write three functions namely - `PNum, GPNum and SPNum` (JS, Coffee), `p_num, g_p_num and s_p_num` (Python and Ruby), `pNum, gpNum and spNum` (Java, C#), `p-num, gp-num and sp-num` (Clojure) - to check whether a given argument `n` is a Pentagonal, Generalized Pentagonal, or Square Pentagonal Number, and return `true` if it is and `false` otherwise.\n\n### Description\n\n\n\n\n`Pentagonal Numbers` - The nth pentagonal number Pn is the number of distinct dots in a pattern of dots consisting of the outlines of regular pentagons with sides up to n dots (means the side contains n number of dots), when the pentagons are overlaid so that they share one corner vertex.\n\n\n> First few Pentagonal Numbers are: 1, 5, 12, 22...\n\n`Generalized Pentagonal Numbers` - All the Pentagonal Numbers along with the number of dots inside the outlines of all the pentagons of a pattern forming a pentagonal number pentagon are called Generalized Pentagonal Numbers.\n\n> First few Generalized Pentagonal Numbers are: 0, 1, 2, 5, 7, 12, 15, 22...\n\n`Square Pentagonal Numbers` - The numbers which are Pentagonal Numbers and are also a perfect square are called Square Pentagonal Numbers. \n\n> First few are: 1, 9801, 94109401...\n \n### Examples\n\n#### Note: \n* Pn = Nth Pentagonal Number\n* Gpn = Nth Generalized Pentagonal Number\n\n\n\n    \n     ^        ^          ^             ^                 ^\n    P1=1     P2=5      P3=12         P4=22             P5=35   //Total number of distinct dots used in the Pattern\n    Gp2=1    Gp4=5     Gp6=12        Gp8=22                    //All the Pentagonal Numbers are Generalised\n             Gp1=0     Gp3=2         Gp5=7             Gp7=15  //Total Number of dots inside the outermost Pentagon\ndef p_num(n):\n\t\nUse Call-Based format\nANSWER:\n"}}