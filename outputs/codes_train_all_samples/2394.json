{"2394": {"code": ["\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nInput\n2\n3\n1\n\n\n\n\n1\n2\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n-----Note-----\n\nNote:\n\n  $", "\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe task is not proved that the task is proved that the minimum number of moves required to obtain the bracket sequence from the string.\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----", "\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n-----Example-----\n\nInput\n4\n2\n4\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n-----Note-----\n\nThe number of moves required is:\n\n\n\n", "\n\nNote-----\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n-----Note-----\n\nThe test case of the input is:\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nInput\n2\n3\n4\n5\n5\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n", "\nNote-----\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n1\n\n1\n2\n2\n3\n\n1\n2\n\n\n\n\n\n\n\n-----Note-----\n\n\n1\n\n\n\n\n\n1\n1\n\n\n-----Note-----\n\n\n\n\n\n\n\n-----Example-----\n\nInput\n4\n", "\n\n-----Note-----\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe minimum number of moves required to obtain the bracket sequence from the string is not sufficient.\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nNote:\n\n\n", "\n\n\n\n\n\n\nNote:\n\n\n\n\n\n\n-----Example-----\n\nInput\n4\n2\n1\n2\n3\n\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n1\n\n\n-----Note-----\n\n\n\n\n\n\n\n-----Note-----\n\nThe first move is to the end of", "\nNote-----\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n-----Example-----\n\nInput\n4\n2\n3\n8\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nInput\n4\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note\n", "\n\n-----Example-----\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThis task is not sufficient to find the minimum number of moves required to obtain the bracket sequence from the string.\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n*/\n", "\nNote-----\n\n\n\n\n\n\n\n4\n\n5\n2\n1\n\n\n\n6\n\n1\n\n\n-----Note-----\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n-----Note-----\n\nThe test case of the example is:\n\n  (()\n1\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe first", "\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Example-----\n\nInput\n1\n2\n3\n2\n1\n2\n1\n", "\n\n-----Note-----\n\n\n\n\n-----Example-----\n\n\n\n\n3\n\n\n-----Example-----\n\nInput\n4\n2\n3\n1\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n1", "\n\n-----Note-----\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n3\n2\n1\n3\n\n\n-----Example-----\n\nNote:\n\n\n\n\n\n1\n2\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe task is to move the first move.\n\n\n1", "\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Example-----\n\nInput\n5\n5\n(()\n\n\n\n\n\n\n\n\n\n\n\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n\n\n\n\n\n\n\n\n\\", "\n\n-----Note-----\n\n\n\n-----Example-----\n\nExample\n(()\n()\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample\n\n5\n2\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe first line of the output contains", "\nNote-----\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n4\n()\n\n\n\n\n\n\n\n\n0\n1\n1\n1\n1\n1\n0\n\n\n-----Note-----\n\n\n\n\n\n-----Example-----\n\n\n1\n1\n2\n2\n3\n4\n\n\n\n\n0\n1\n", "\n\n-----Note-----\n\n\n\n\n\n\n\n\n4\n2\n8\n\n\n\n-----Example-----\n\nInput\n3\n3\n0\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe first line of", "\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe first test case of the example is to find the minimum number of moves required to obtain a bracket sequence from the string.\n\n\n\n\n\n\n\n))((", "\n\n\n\n\n-----Note-----\n\nNote:\n\n\n\n-----Example-----\n\n\n\n\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\n1\n0\n2\n3\n1\n0\n1\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe first line of the output contains", "\nNote-----\n\n\n\n\n-----Example-----\n\n\n\n((\n(\n(()\n\n()()\n\n\n\n\n-----Note-----\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n0\n1\n\n\n\n-----Example-----\n\nInput\n3\n\n\n\n\n\n-----Note-----"], "prompt": "\nQUESTION:\nYou are given a bracket sequence $s$ of length $n$, where $n$ is even (divisible by two). The string $s$ consists of $\\frac{n}{2}$ opening brackets '(' and $\\frac{n}{2}$ closing brackets ')'.\n\nIn one move, you can choose exactly one bracket and move it to the beginning of the string or to the end of the string (i.e. you choose some index $i$, remove the $i$-th character of $s$ and insert it before or after all remaining characters of $s$).\n\nYour task is to find the minimum number of moves required to obtain regular bracket sequence from $s$. It can be proved that the answer always exists under the given constraints.\n\nRecall what the regular bracket sequence is:\n\n  \"()\" is regular bracket sequence;  if $s$ is regular bracket sequence then \"(\" + $s$ + \")\" is regular bracket sequence;  if $s$ and $t$ are regular bracket sequences then $s$ + $t$ is regular bracket sequence. \n\nFor example, \"()()\", \"(())()\", \"(())\" and \"()\" are regular bracket sequences, but \")(\", \"()(\" and \")))\" are not.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 2000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains one integer $n$ ($2 \\le n \\le 50$) \u2014 the length of $s$. It is guaranteed that $n$ is even. The second line of the test case containg the string $s$ consisting of $\\frac{n}{2}$ opening and $\\frac{n}{2}$ closing brackets.\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 the minimum number of moves required to obtain regular bracket sequence from $s$. It can be proved that the answer always exists under the given constraints.\n\n\n-----Example-----\nInput\n4\n2\n)(\n4\n()()\n8\n())()()(\n10\n)))((((())\n\nOutput\n1\n0\n1\n3\n\n\n\n-----Note-----\n\nIn the first test case of the example, it is sufficient to move the first bracket to the end of the string.\n\nIn the third test case of the example, it is sufficient to move the last bracket to the beginning of the string.\n\nIn the fourth test case of the example, we can choose last three openning brackets, move them to the beginning of the string and obtain \"((()))(())\".\nUse Standard Input format\nANSWER:\n"}}