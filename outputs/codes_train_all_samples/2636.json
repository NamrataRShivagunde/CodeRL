{"2636": {"code": ["\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nUse Standard Input format\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====", "\n=====Function Descriptions=====\nZip a list of iterables\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\nAverage score, subject ID, subject ID, subject ID\n\n\n\n\n\n\n\n\n\n\n\n=====Return Format=====\n\n\n=====Function Descriptions=====\nzip([iterable", "\n\n\nAverage score = sum(zip([iterable],'Hacker'))\nAverage score = sum(zip([iterable],'Hacker'))\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable])\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Description=====\n\n\n\n=====Function Description====", "\n=====Function Descriptions=====\nZip a sequence of sequences.\n\n\n\n\n\n\n\n\n\n=====Question Descriptions=====\nzip([iterable,...])\n\n\n\n\n=====Analysis Description=====\nzip([iterable,...])\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n=====Function Descriptions=====", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nZip\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n\n=====Function Descriptions=====\nzip([iterable])\n\n\n\n\n\n\n\n\n\n\n\n\n# Some function descriptions\n=====Function Descriptions=====\n\n\n=====Function Descriptions====", "\n=====Function Description=====\nZip a sequence of sequences.\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nUse Standard Input format\n\n\n\n\n=====Function Description=====\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Description=====\nzip([iterable])\n\n\n=====Function", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nZip(iterable,...)\n\nUse Standard Input format\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions=====", "\n\n\n\n[N, X, 6, 7, 9]\n\n\n\n\n\n\n\n=====Answer Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n       \n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n\n=====Function D", "\n\n\n       \n       \n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nUse Standard Output format\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Question Descriptions=====\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n=====Function Descriptions=====\nzip", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n=====Question Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nWhat is the number of subjects you are looking for\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n\n\n\n\n\n\n\n\n_\n\n=====Function Descriptions=====\nzip([iterable])\n====", "\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\nAverage score\nAverage subject 1\nAverage subject 2\nAverage subject 3\nAverage subject 4\nAverage subject 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====\nzip", "\nZip\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n=====Question Descriptions=====\nzip([iterable,...])\n\n\n\n\n\n=====Question Descriptions=====\n\n\n\n\n\n\n\n\n=====Question Descriptions=====\n\nAverage score = 0\n\n\n=====Function Descriptions", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Question Descriptions=====\n\n\n\n\n\n\n\n\n\n0<N<X<3<5<6>\n\n\n\n\n=====Function Descriptions=====", "\nZip\n=====Function Description=====\nZip\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nWhat is the first argument sequences?\n\n\n\n\n\n=====Function Description=====\nzip([iterable,...])\n\n\n\n\n\n\n\n\n\n\n\n\n=====Question Descriptions=====\n=====", "\nZip:\n=====Function Descriptions=====\nZip\n\n\n\n\n\n\n\n=====Question Descriptions=====\nZip:\n=====Question Descriptions\nzip(iterable,...)\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable])\n\n\n\n=====", "\n=====Function Descriptions=====\nZip a list of iterables\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions", "\n=====Function Descriptions=====\nZip a function into a list of tuples\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nZip a function to a list of tuples\n\n\n\n\n=====Answer Descriptions=====\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable])\n\n=====Function Descriptions", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nUse Standard Input format\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n=====Result Format=====\n\n\n=====Function Descriptions=====\n", "\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\nUse Standard Output format\n\nUse Standard Input format\n\n\n\n\n=====Function Descriptions=====\nzip([iterable,...])\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nzip([iterable])\n\n\n=====Function D"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nzip([iterable, ...])\n\nThis function returns a list of tuples. The ith tuple contains the ith element from each of the argument sequences or iterables. If the argument sequences are of unequal lengths, then the returned list is truncated to the length of the shortest argument sequence.\n\nSample Code\n>>> print zip([1,2,3,4,5,6],'Hacker')\n[(1, 'H'), (2, 'a'), (3, 'c'), (4, 'k'), (5, 'e'), (6, 'r')]\n>>> \n>>> print zip([1,2,3,4,5,6],[0,9,8,7,6,5,4,3,2,1])\n[(1, 0), (2, 9), (3, 8), (4, 7), (5, 6), (6, 5)]\n>>> \n>>> A = [1,2,3]\n>>> B = [6,5,4]\n>>> C = [7,8,9]\n>>> X = [A] + [B] + [C]\n>>> \n>>> print zip(*X)\n[(1, 6, 7), (2, 5, 8), (3, 4, 9)]\n\n=====Problem Statement=====\nThe National University conducts an examination of N students in X subjects.\nYour task is to compute the average scores of each student.\n\nAverage score = Sum of scores obtained in all subjects by a student / Total number of subjects\n\nThe format for the general mark sheet is:\nStudent ID -> ___1_____2_____3_____4_____5__               \nSubject 1   |  89    90    78    93    80\nSubject 2   |  90    91    85    88    86  \nSubject 3   |  91    92    83    89    90.5\n            |______________________________\nAverage        90    91    82    90    85.5\n\n=====Input Format=====\nThe first line contains N and X separated by a space. The next X lines contains the space separated marks obtained by students in a particular subject.\n\n=====Constraints=====\n0<N\u2264100\n0<X\u2264100\n\n=====Output Format=====\nPrint the averages of all students on separate lines. The averages must be correct up to 1 decimal place.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}