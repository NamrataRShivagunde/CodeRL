{"1808": {"code": ["\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n        pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find the minimum number of\n\n", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals):\n        \"\"\"\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find the minimum number\n\n", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\nIf you want to remove overlapping intervals,\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find the minimum number of intervals\n\n\nGiven a", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\n\n\n\n\n\n\n   \n        pass\n        \n\nThis function is not part of the call-based format\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given a collection of intervals, find", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given a collection of intervals, find", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\nGiven a collection of intervals, find the minimum number of intervals that are non-overlapping.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given a collection of", "\nUse Call-Based format\n\n\nUse Call-Based format\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n       \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find the", "\nUse Call-Based format\n\n\nUse Call-Based format\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\nNote:\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a collection of intervals", "\nUse Call-Based format\n\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\nRemove overlapping intervals\n\nNote:\n\n\n   \n\n\n\n\n\n\n\n\n\n\nThe minimum number of intervals you have to remove is:\n\n\n\nGiven a collection of", "\nUse Call-Based format\n\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n        \nUse Call-Based format\n\n\n\n\n\n\n    def\n\n\nRemove all overlapping intervals\nNote:\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Remove overlapping intervals\n\n\nNote:\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nReturns the minimum number of intervals that would be removed\n\n\n\n\n\nGiven a collection", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals):\n    \nUse Call-Based format\n\n\n\n\n\n    def\n        \nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find", "\nUse Call-Based format\n\n\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals\n\n\nGiven a collection", "\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals):\n        return 0\n\nUse Call-Based format\n\n\n\n\n\n\n   \n        \n\nTake a list of intervals\n\n\n\nExample 4:\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the form of the input argument", "\nUse Call-Based format\n\n\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\nRemove overlapping intervals\n\nNote:\n\n\n\n\n\n\nRemove overlapping intervals\n\n\n\n\nGiven a collection of intervals", "\nUse Call-Based format\n\n\nUse Call-Based format\n    def eraseOverlapIntervals(self, intervals):\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    For each interval in intervals:\n\n   \n\n\n    Given", "\nUse Call-Based format\nUse Call-Based format\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n\n\n\n\n\n\n\n   \n\n\nThis method can be called directly\n\nExample 4:\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a collection of intervals, find", "\nUse Call-Based format\n\n\n\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n        \"\"\"\nUse Call-Based format\n\n\n\n\n\n\n   \n       ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find", "\nUse Call-Based format\n\n\nUse Call-Based format\n    def eraseOverlapIntervals(self, intervals: List[List[int]]):\n        \nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a collection of intervals, find the"], "prompt": "\nQUESTION:\nGiven a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\n\n\nNote:\n\nYou may assume the interval's end point is always bigger than its start point.\nIntervals like [1,2] and [2,3] have borders \"touching\" but they don't overlap each other.\n\n\n\nExample 1:\n\nInput: [ [1,2], [2,3], [3,4], [1,3] ]\n\nOutput: 1\n\nExplanation: [1,3] can be removed and the rest of intervals are non-overlapping.\n\n\n\nExample 2:\n\nInput: [ [1,2], [1,2], [1,2] ]\n\nOutput: 2\n\nExplanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.\n\n\n\nExample 3:\n\nInput: [ [1,2], [2,3] ]\n\nOutput: 0\n\nExplanation: You don't need to remove any of the intervals since they're already non-overlapping.\nclass Solution:\n    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}