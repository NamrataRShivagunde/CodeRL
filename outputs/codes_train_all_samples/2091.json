{"2091": {"code": ["\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nA query is required for a third query:\n\n1 1 2 2... 3...\n\n-----Note-----\n\n\n\u00bb\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\u00bb\n\n-----Note", "\n\n\n2\n2\n2\n2\n3\n4\n5\n6\n7\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\u00bb\n", "\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n1 1 2\n1 2\n1 1 1\n1 1 1 1 1\n1 1\n2 1\n1 1\n\n\n\n\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n2\n\n\u00bb\n\n", "\n\n\n\n\n\n\n\n\n1\n2\n1\n2\n2\n0\n4\n6\n\n\n-----Note-----\n\n\u00bb\n\n6\n4\n5\n2\n6\n\n\n-----Note-----\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\u00bb\n", "\n\n\n1 1 2 2 3\n5 1 2... 3\n1 1 1 1 1 1\n\n\n-----Note-----\n\n\n\n\n\n1 1 1 1\n2 1 2\n\n\n\n\u00bb\u00bb\u00bb\n\nNote\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\u00bb\u00bb\u00bb\n\n", "\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n0\n0\n1\n2\n3\n5\n6\n6\n7\n8\n9\n10\n\n\n-----Note-----\n\n\u00bb\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n1\n2\n\n\n\n\n\n\u00bb\n\nFor", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n5\n6\n8\n1\n5\n6\n\n\n-----Note-----\n\n\n\n\n\n\n\u00bb\u00bb\u00bb\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\u00bb\n\n-----", "\n\n\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\n\u00bb\u00bb\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\n\u00bb\u00bb\u00bb\n", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n1 1\n2 1\n2 1\n2 1\n1 1\n2 1\n2 1\n2 1\n1 1\n1 1\n1\n\n\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\n\u00bb\u00bb\u00bb\n", "\n\n-----Note-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n1\n1\n2\n2\n5\n4\n5\n6\n6\n\n\n-----Note-----\n\n\n\n\n\n\n\u00bb\u00bb\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\u00bb\n\n", "\n\n\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\n\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\n\u00bb\u00bb\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\u00bb", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Note-----\n\nExample:\n\n\u00bb1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\u00bb\n\n1\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\n-----Note-----\n\nThe first line contains\n\u00bb\n\n-----Input-----", "\n\n\n3\n\n\n-----Note-----\n\n\n0\n1\n2\n3\n1\n1\n2\n\n\n\n6\n4\n5\n6\n\n\n-----Note-----\n\n\u00bb\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n1\n\n\n1\n2\n\n\n\u00bb", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n0\n1\n2\n3\n2\n5\n6\n\n\n-----Note-----\n\n\n\n\n\n\u00bb\u00bb\u00bb\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n2\n3\n4\n5\n6\n\n\n\n\u00bb", "\n\n\n\n-----Note-----\n\nThe question:\nSereja\n\nQuestion:\nSereja\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\u00bb\n\u00bb\u00bb\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\n\u00bb", "\n\n-----Note-----\n\n\n1 1 2 1 1\n2 1\n2 1 2\n\n-----Note-----\n\n\n\n\n\n\n3\n4\n5\n6\n\n\n\n-----Note-----\n\n\n\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\u00bb\n\n", "\n\n\n\n\n\n\n-----Note-----\n\n\n\n0\n1 1\n2 2\n5 2\n6 2\n4\n\n0\n0\n5\n6\n\n\n\n-----Note-----\n\n\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n1\n2\n1\n\n\n\n\n\n\u00bb\n\n", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n1\n1\n2\n1\n1\n\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\u00bb\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n\n6\n\n\n-----Note-----\n\n\n\n\n\n\u00bb\n\n", "\n\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n\n\n\u00bb\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\u00bb\n\n"], "prompt": "\nQUESTION:\nSereja has a bracket sequence s_1, s_2, ..., s_{n}, or, in other words, a string s of length n, consisting of characters \"(\" and \")\".\n\nSereja needs to answer m queries, each of them is described by two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n). The answer to the i-th query is the length of the maximum correct bracket subsequence of sequence s_{l}_{i}, s_{l}_{i} + 1, ..., s_{r}_{i}. Help Sereja answer all queries.\n\nYou can find the definitions for a subsequence and a correct bracket sequence in the notes.\n\n\n-----Input-----\n\nThe first line contains a sequence of characters s_1, s_2, ..., s_{n} (1 \u2264 n \u2264 10^6) without any spaces. Each character is either a \"(\" or a \")\". The second line contains integer m (1 \u2264 m \u2264 10^5) \u2014 the number of queries. Each of the next m lines contains a pair of integers. The i-th line contains integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) \u2014 the description of the i-th query.\n\n\n-----Output-----\n\nPrint the answer to each question on a single line. Print the answers in the order they go in the input.\n\n\n-----Examples-----\nInput\n())(())(())(\n7\n1 1\n2 3\n1 2\n1 12\n8 12\n5 11\n2 10\n\nOutput\n0\n0\n2\n10\n4\n6\n6\n\n\n\n-----Note-----\n\nA subsequence of length |x| of string s = s_1s_2... s_{|}s| (where |s| is the length of string s) is string x = s_{k}_1s_{k}_2... s_{k}_{|}x| (1 \u2264 k_1 < k_2 < ... < k_{|}x| \u2264 |s|).\n\nA correct bracket sequence is a bracket sequence that can be transformed into a correct aryphmetic expression by inserting characters \"1\" and \"+\" between the characters of the string. For example, bracket sequences \"()()\", \"(())\" are correct (the resulting expressions \"(1)+(1)\", \"((1+1)+1)\"), and \")(\" and \"(\" are not.\n\nFor the third query required sequence will be \u00ab()\u00bb.\n\nFor the fourth query required sequence will be \u00ab()(())(())\u00bb.\nUse Standard Input format\nANSWER:\n"}}