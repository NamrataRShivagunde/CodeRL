{"2489": {"code": ["\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n    pass\n\n\n\n\n   \n        pass\n\n\n\n   \n\n\n\n    maxProfit(self, prices: List[int]) -> int\n        \n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n    def maxProfit(self, prices: List[int]):\n\n\n\n\n\n   \n\n\n\n\n   \n        return maxProfit\n\n\nSay you have an array\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nExample 3:\n\n\nSay", "\nUse Call-Based format\nUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n   \n\n\n\n   :\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nSay", "\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\n\n   \n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nSay you have an array for", "\nUse Call-Based format\nUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        pass\n\n\nSay you have an array for which the price is on day i.\n\n\n\n\n\n\n\n\n\n\n\nSay you", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n\nUse Call-Based format\n   \n   \n    return maxProfit(prices)\n\n\n\n\n   :\n        \n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\nSay you have an array for which the price is on the day\n\nExample 3:\n\n\nInput: [7,1]\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n   :\n\n\nSay you have an array for which the price is on day i\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nSay you have", "\nUse Call-Based format\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n   :\n\nUse Call-Based format\n\nUse Call-Based formatUse Call-Based format\n\n\n\n\n\n\n\n\n\nSay you have", "\nUse Call-Based format\nUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n\n\nUse Call-Based format\n\n   \n   \n\n\n\n   :\n        return maxProfit\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array for which the i", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n\n\n\n\n\n   \n\n\n\n\n   \n    maxProfit(self, prices: List[int]) -> int\n\n\n\n\nUse Call-Based formatUse Call-Based format\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n   \n\n\n\n   :\n\nSay you have an array of prices\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nSay you have", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n   \n              \n\n\n   :\n        \nUse Call-Based format\n\nUse Call-Based formatSay you have an array for which the price is on day i.\n\n\n\n\n\n\n\n\n\n\nSay", "\nUse Call-Based format\n\n\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n   \n\n\n\n\n   :\nSay you have an array for which the ith element is the price\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nSay you have", "\nUse Call-Based format\nUse Call-Based formatUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\n\n\n   :\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nSay you have an", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]):\n        return 0\n\nUse Call-Based format\n\n\n   \n\n\nSay you have an array for which the transaction is done\n\nExample 3:\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array", "\nUse Call-Based format\n\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\n\nSay you have an array for which the ith element is the price on day i.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n        maxProfit: int\n\n   \n\n\n\n   :\n\nUse Call-Based format\n\nUse Call-Based formatUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nSay you have an array\nSay", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n              \n\n\n\n\n\n    maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSay you have an array for which", "\nUse Call-Based format\nUse Call-Based format\n    def maxProfit(self, prices: List[int]) -> int:\n\nUse Call-Based format\nUse Call-Based format\n\n   \n   \n\n\n\n   :\n\nSay you have an array for which the ith element is price\n\n\n\n\n\n\n\n\n\n\n\nSay you"], "prompt": "\nQUESTION:\nSay you have an array for which the ith element is the price of a given stock on day i.\n\nIf you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.\n\nNote that you cannot sell a stock before you buy one.\n\nExample 1:\n\n\nInput: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n\u00a0            Not 7-1 = 6, as selling price needs to be larger than buying price.\n\n\nExample 2:\n\n\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\nclass Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}