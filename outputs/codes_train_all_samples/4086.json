{"4086": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nThis task is a call-based format\n\nEXAMPLE:\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n```if:c\nIf the array is not consecutive then return `false`.\n```\n\n\n\n\n\n\nThis task is find the first non", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTBD:\n\nThis task is not called by a test function\n\n\n```c\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n```\n\nif:", "\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nTest for the first non consecutive number in an array\n\n```if:c\n`\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n```if-not:c\nIf we have an empty array then return `null`^(1).\n\n```\n\n\n\n\n\n\n+``", "\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c\nIf we have an empty array then return `null`^(1).\n```\n\n\n\n\n\n\n\nThe task is find the first element", "\n\n\n\n\n\n\n(1)\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n```if:c\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n```\n\nEg:\n\n\n\n\n\n\n\n```if:c\n\n\n\n```if-not:c\n\n\n```if:", "\n\n\nThe method is called by the function `first_non_consecutive`.\n\n```\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c\nIf you have an empty array then return `null`^(1).\n```\n\n\n\n\nEg:", "\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nThe first element of an array is not consecutive and not consecutive.\n\n```if:c\n\n\n\n\n\n\n\n\n\n\n```if:c\nIf we have an empty array then return `null`^(1).\n\n```if-not:c\n\n\n\n\n\n\n\n+``", "\n\n\n\n\n\n\n\n#\n\n\n\n\n\n\nAn array must be called with a call-based format\n\n```if:c\n\n\n\t\t\n\n\n\n\n\n\n\n\n\n```if:c\nIf you like this Kata then return `true`  \n```\n\n\n\n\n\n\n\n\n\n```if:c", "\n\n\n\n\n\n\n\n\n\n\t\n\n\nGet the first non consecutive number in an array\n\n## Example\n# Example 1\n# Example 2\n# Example 3\n# Example 4\n\n\n\n\n\t\n\n\n\n\n\n\n\n```if:c\n`\n\n\n\n\n```if:c\n\n\n[1]\n\n[2]", "\n\n\nUse Call-Based format\n\n```if:c``\nIf you like this Kata then you can write your own example test.\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if-not:c\n\n\n\n\n```if:c``\n^1", "\n\n\n\n\n\n\n\n\n\n\n\nIf you have a call-based format\n\n\n\n\t\n\n\nUse Call-Based format\n\n\n`*`\n\n\n\n\n```\n\nThe function is called `first_non_consecutive`\n\n```if:c\n```\n\n\n\n\n\n\n\n\n\n\n```if:", "\n\n\n\n\n\n\n\n\n\n\t\n\n\nReturns:\n\narray(arr)\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```if:c\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c\nIf you want to write your own example test\n```if-not:c\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\nreturn `true`\n\n```if:c\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n```if:c\n\n\n\n\n```if:c\n\n\n\n```if-not:\n", "\n\n\n\n\n\n\n\n\n\n\t\n\n\n\nThe task is found to find the first non consecutive number in an array\n\n```if:c\n\n\n\t\n\n\n\n\n\n\n```\n\n^1)  \nThe array will always have at least 1 element.\n\n\n\n\n\n\n\n\n\n\t\t# [1]\n\t\t", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nYou're using the call-based format\n\n```if:c\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c\nif `[]` then `[]` then `[]` then `[]` then `\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n```\n\nEg:\n\n`\n\n\n\n\n\n\n```if:c\nIf you are using a Python test then return `true`.\n\n\n``\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```if:c`\n\n\n\n\n\t\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c\nIf the array is not consecutive then return `null`^(1).\n\n\n\n\n``", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe task is created to find the first non consecutive number in the array\n\n```if:c\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nIf we have an empty array then return `null`^(1).\n\n```if:c\n\n\n\n\n\nThe task is find the first", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\ndef first_non_consecutive(arr):\n\t\nUse Call-Based format\n\n\n\t\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n```if:c\nIf you want to use this Kata: `nil`  \n\n\n\n\n\n\n\nThis task is find", "\n\n\n\n\n\n\nThe array is not call-based format\n\n```if:c\n\nReturns:\n^1\n`false`\n```\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n```\n\n```if:c\n\n\n\n\n\n```if-not:c\n\n\n\n\n```"], "prompt": "\nQUESTION:\nYour task is to find the first element of an array that is not consecutive.\n\nBy not consecutive we mean not exactly 1 larger than the previous element of the array.\n\nE.g. If we have an array `[1,2,3,4,6,7,8]` then `1` then `2` then `3` then `4` are all consecutive but `6` is not, so that's the first non-consecutive number.\n\n```if:c\nIf a non consecutive number is found then return `true` and set the passed in pointer to the number found.\n\nIf the whole array is consecutive then return `false`.\n```\n```if-not:c\nIf the whole array is consecutive then return `null`^(2).\n```\nThe array will always have at least `2` elements^(1) and all elements will be numbers. The numbers will also all be unique and in ascending order. The numbers could be positive or negative and the first non-consecutive could be either too!\n\nIf you like this Kata, maybe try this one next: https://www.codewars.com/kata/represent-array-of-numbers-as-ranges\n\n```if:c\n^(1) Can you write a solution that will return `false` for both `[]` and `[ x ]` (an empty array and one with a single number) though? (This is an empty array and one with a single number and is not tested for, but you can write your own example test. )\n```\n```if-not:c\n^(1) Can you write a solution that will return `null`^(2) for both `[]` and `[ x ]` though?  (This is an empty array and one with a single number and is not tested for, but you can write your own example test. )\n\n^(2)  \nSwift, Ruby and Crystal: `nil`  \nHaskell: `Nothing`  \nPython, Rust: `None`  \nJulia: `nothing`  \nNim: `none(int)` (See [options](https://nim-lang.org/docs/options.html))\n```\ndef first_non_consecutive(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}