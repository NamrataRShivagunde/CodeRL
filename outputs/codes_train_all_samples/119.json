{"119": {"code": ["\nUse Standard Input format\n\n\n\n\nUse Standard Output format\n\nExamples:\n\n-----Input-----\n\n\n1\n2\n3\n4\n5\n\n1\n2\n5\n\n1\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nq\n\n\n-----Note-----\n\n\n\n\n-----Input-----", "\nUse Standard Input format\n\n\n\nUse Standard Output format\n\nUse Standard Output format\n\n-----Note-----\n\nUse Standard Input format\n\n\n1\n2 2 3 4 5 6 6 7 8 8 9 10 10 10 10 10 10 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n-----Note-----\n\n", "\nUse Standard Input format\n\n\n\n\nUse Standard Output format\n\n\n\n\n-----Note-----\n\n\n1 2 3 4 5 6 7 10 10\n1 5 3 2 7 10 10\n\n\n\n\n\n\n\n\n\n\n\n\n\nImage\n\n\n-----Note-----\n\n\n\n\n\n\n3\n\n-----Note-----\n\n\n\nAssume that the first", "\nUse Standard Input format\n\n\n\nUse Standard Output format\n\nq\n\n\n-----Note-----\n\nUse Standard Output format\n\nExample:\n\n\n\n\n-----Note-----\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\nAssume that", "\nUse Standard Input format\nUse Standard Output format\n\n\nUse Standard Output format\n\n\n\n\n10\n1 3\n2 4 3 3 4 6\n2 3 3 7 8\n2 3 3 4 6\n\n\n\n\n\n\n\n\n\n\n\n\n\nImage\n\n-----Note-----\n\n\n\n\n\nq\n\n-----Note-----\n\n\n\n    I see the", "\nUse Standard Input format\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nUse Standard Output format\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Note-----\n\nYou are given an input format\n\n\n\n\n\n%", "\nUse Standard Input format\n\n\n\n\nUse Standard Output format\n\n-----Note-----\n\nUse Standard Input format\n\n\n1\n2 3 3 4 5 5 7 6 9 9 10 10 10 10 10 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n3 \\le", "\nUse Standard Input format\n\n1\n2\n3\n3\n2\n3\n5\n3\n5\n5\n4\n5\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nAssume", "\nUse Standard Input format\n\n\n\n\nUse Standard Output format\n\n-----Input-----\n\nUse Standard Input format\nInput\n10\n2 3 3 4 5 7 6 10 10 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n-----Input-----", "\nUse Standard Input format\n\n\nUse Standard Output format\n\n\nUse Standard Input format\n\n\n\n\n2\n1\n2 3\n2 2 3 4 5 6 7 8 8 9 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n-----Note-----\n\n\n* Example:", "\nUse Standard Input format\n\n\nUse Standard Output format\n\n\nUse Standard Output format\n\n\n\n9\n\n1\n2 3\n2 1\n1 2 3\n1 2\n2 2\n2 3\n1 1\n2 1\n2 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n$1 \\le q", "\nUse Standard Input format\n\n\n-----Note-----\n\nUse Standard Output format\n\nUse Standard Input format\n\n\n\n\n\n\n\n-----Note-----\n\nPrint a good subtree of size $q$\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Note-----\n\nYou", "\nUse Standard Input format\n\n\nUse Standard Output format\n\n\n\n\n\n\n2\n3 3\n6\n9\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nq\n\n\n-----Note-----\n\n\n\n\n\n\n\nq\n\n-----Note-----\n\nA good subtree of size $m$\n\n\n\n\n", "\nUse Standard Input format\n\n\n\n\nUse Standard Output format\n\n\n\n\n\n9\n\n\n\n1\n2\n3\n3\n\n\n-----Note-----\n\nUse Standard Input format\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n-----Input-----\n\nAssume", "\nUse Standard Input format\nANSWER:\n\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n3\n\n-----Note-----\n\n\n\n$1 \\le", "\nUse Standard Input format\n\n\n\n\nUse Standard Output format\nINPUT:\n\n1 2 3 6 5 9\n2 2 3 6 7 7 8\n1 2 3 4 5\n2 3 3 6 7 9\n2 5 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\nFor each query $", "\nUse Standard Input format\n\n\n1 2 3 2 3 4 3 3 4 4 5 6 7 7 8 8 9 10 10 10 10 10\n\n\n\n\n\n\n\n\n\n\n\n1 2 3 2 2 3 3 10 10\n\n\n\n\n\n\n\nq\n\n-----Note-----\n\n\n\n\n\nq\n\n-----Note-----\n\n\n\n1 \\le q", "\nUse Standard Input format\nUse Standard Output format\n\n\n\nUse Standard Output format\n\n\n-----Note-----\n\nUse Standard Input format\n\n1 2 3 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 10\n\n\n\n\n\n\n\n\n\n\n\n\nImage\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\nAssume that you", "\nUse Standard Input format\n\n\n\nUse Standard Input format\n\n\n1 2 3 4 5 6 7 8 9 10 10 10 10 10 10 10\n\n-----Input-----\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nq\n\n-----Note-----\n\n\n\n\n\n5\n\n-----Note-----\n\n\n\n\n-----Note-----\n", "\nUse Standard Output format\nUse Standard Input format\n\n\n\nUse Standard Output format\n\n\n2\n3\n4\n5\n9\n\n\n1\n2 1\n2 3\n3 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssume that you have $k$ one-dimensional segments.\n\n\n\n\n\n\n\tI can build a subtree"], "prompt": "\nQUESTION:\nAssume that you have $k$ one-dimensional segments $s_1, s_2, \\dots s_k$ (each segment is denoted by two integers \u2014 its endpoints). Then you can build the following graph on these segments. The graph consists of $k$ vertexes, and there is an edge between the $i$-th and the $j$-th vertexes ($i \\neq j$) if and only if the segments $s_i$ and $s_j$ intersect (there exists at least one point that belongs to both of them).\n\nFor example, if $s_1 = [1, 6], s_2 = [8, 20], s_3 = [4, 10], s_4 = [2, 13], s_5 = [17, 18]$, then the resulting graph is the following: [Image] \n\nA tree of size $m$ is good if it is possible to choose $m$ one-dimensional segments so that the graph built on these segments coincides with this tree.\n\nYou are given a tree, you have to find its good subtree with maximum possible size. Recall that a subtree is a connected subgraph of a tree.\n\nNote that you have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 15 \\cdot 10^4$) \u2014 the number of the queries. \n\nThe first line of each query contains one integer $n$ ($2 \\le n \\le 3 \\cdot 10^5$) \u2014 the number of vertices in the tree.\n\nEach of the next $n - 1$ lines contains two integers $x$ and $y$ ($1 \\le x, y \\le n$) denoting an edge between vertices $x$ and $y$. It is guaranteed that the given graph is a tree.\n\nIt is guaranteed that the sum of all $n$ does not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each query print one integer \u2014 the maximum size of a good subtree of the given tree.\n\n\n-----Example-----\nInput\n1\n10\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n4 9\n4 10\n\nOutput\n8\n\n\n\n-----Note-----\n\nIn the first query there is a good subtree of size $8$. The vertices belonging to this subtree are ${9, 4, 10, 2, 5, 1, 6, 3}$.\nUse Standard Input format\nANSWER:\n"}}