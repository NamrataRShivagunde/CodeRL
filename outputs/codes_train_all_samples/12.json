{"12": {"code": ["\nOutput-----\n\nA test case that can be solved:\n\n-----Input-----\n\nAn Anton task is built on an existing task. \n\nA task is built on an existing task. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$1 \u2014 $1$ \u2014", "\nExample:\n\n-----Input-----\n\nChoose an array of test cases\n\n-----Input-----\n\nChoose an array of test cases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest cases\n\n-----Test cases-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test cases-----\n\n\n-----\n\n\n\n-----Input", "\nAA:\n\nA A B B B B B B B B B B B B B B B.\n\nA B B B B B B B B B B B B.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test Case-----\n\nThis test case describes", "\n\n\nA test case is a test case.\n\nA test case is a test case, and a test case is a test case\n\nA test case is a test case\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test Case-----\n\nAn Anton task.\n\n\n\n\n\n*/\n\n\n", "\nImportant:\n\n-----Important-----\n\nathan\n\n-----Important-----\n\nExample:\n\n\n\n\n\nBoris needs a task:\n\n\nInput-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test Example-----\n\n\n\n\n\n\n-----Test Output-----\n\nThe first line contains two test cases:\n", "\n\n\n\n\n\n-----Test Case-----\n\nDo you want to solve the problem with Boris?\n\n\n\n\n\n\n-----Test Case-----\n\nTest cases\n\n-----Test Case-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test Case-----\n\nA number of test cases \n\nThe first line:\n\n\n\n", "\n\n\n\n\n-----Input-----\n\nBoris needs an Anton task to perform the following problem:\n\nBoris needs an operation to perform the described operations.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----TestCase-----\n\n\n\n\n\n\n-----TestCase-----\n\n\nFor each test case", "\nInput-----\n\nBoris needs a Boris task.\n\nBoris needs a task.\n\nInput-----\n\n\n\n\n\n\n\n\nInput-----\n\n\n\n\n\n\n\n\n \n\n\n-----Input-----\n\nBoris needs a task. \n\n\n\n\n\n\n\n\n\n\n\n-----Test Case----\n\nA test case with", "\nBoris needs the following problem:\n\nNOTE:\n\nThe second line contains \"YES\" if it's possible to perform the described operations.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Problem-----\n\nA Boris is testing the following problem:\n\n\n\n\n\n\n\n-----", "\n\n\n\n\n\n\n\nCase\n\nTestCase \n\nArray of test cases \n\nA test case is a list of test cases \n\nA test case is a list of test cases \n\nA test case is a list of test cases\n\nA test case is a list of test cases \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nTest cases\n\n-----Test cases-----\n\nThis is an example of a test case. \n\nA test case:\n\n\n\nTest cases:\n\n\n\n\n\n\nInput-----\n\n\n\n\nTest cases:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Error-----\n\nA problem occurred.\n\n\n\n\n\n\n-----Info", "\nRun Anton\n\n-----Test Parameters-----\n\nTechnical test cases.\n\nTechnical test cases:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA test is a test case.\n\n-----Test Example-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Done-----\n\n$t$\n\n\n\n\t$t", "\nHelp:\n\n    Boris needs to be called with the following parameters:\n\n    $t\n\n    $n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest cases.\n\n-----Test Case-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test Case-----\n\n$\n\n$\n-----Output", "\nBoris needs a Boris task.\n\n\n\n-----Input-----\n\nA test with multiple test cases.\n\nYour task needs a task. \n\n\n\n\n\n\n\n\n\n\nInput-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Education-----\n\nA", "\n\n\n\n\n-----Description-----\n\nA test with multiple test cases. \n\n\n\n\n\n\n\n\n-----Test Case-----\n\nThis is a test case. \n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nA test with multiple test cases:\n\n-----Input-----\n\n\n\n\n\n\n\n\n-----Example-----\n\nYES:", "\nInput-----\n\nRun Anton on the following input:\n\n-----Input-----\n\n\n\n\n\n\n\n\n\nInput-----\n\nBoris needs an Anton task\n\n-----Input-----\n\n\n\nTest cases:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Info-----\n\nThis is an example:\n\n\n# The", "\nRun Boris:\n\n\n\n\n-----Description-----\n\nAn Anton task is in progress. \n\n\n\n\n\n\n\n\n\n\n\nTest cases:\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n-----Test Case-----\n\nThe second line contains multiple test cases. \n\nThe first line contains two test cases:\n\n\n\n\n\n\n", "\n\n\n\n-----Error-----\n\nThe Boris needs to run Anton in creating a task.\n\nBoris needs to run the task.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest cases:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test End-----\n\n\n\n-----Test Complete-----\n\n", "\nOutput-----\n\n\n\n\nBoris needs to be installed and configured.\n\nBoris needs to be installed.\n\n\n\n\n\n\nTestCase-----\n\nTest cases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test cases-----\n\nA test case is possible.\n\n-----Input-----\n\n\n\n\n\n\n\n-----End", "\n\n\n\n-----Test cases-----\n\nThe test case is a list of test cases.\n\nThe test case is one of the following:\n\n\n\n\n\n\n\n\n\nInput-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Test cases-----\n\nLet's say that \u2014 the task is finished.\n\n\n"], "prompt": "\nQUESTION:\nOnce again, Boris needs the help of Anton in creating a task. This time Anton needs to solve the following problem:\n\nThere are two arrays of integers $a$ and $b$ of length $n$. It turned out that array $a$ contains only elements from the set $\\{-1, 0, 1\\}$.\n\nAnton can perform the following sequence of operations any number of times:  Choose any pair of indexes $(i, j)$ such that $1 \\le i < j \\le n$. It is possible to choose the same pair $(i, j)$ more than once.   Add $a_i$ to $a_j$. In other words, $j$-th element of the array becomes equal to $a_i + a_j$. \n\nFor example, if you are given array $[1, -1, 0]$, you can transform it only to $[1, -1, -1]$, $[1, 0, 0]$ and $[1, -1, 1]$ by one operation.\n\nAnton wants to predict if it is possible to apply some number (zero or more) of these operations to the array $a$ so that it becomes equal to array $b$. Can you help him?\n\n\n-----Input-----\n\nEach test contains multiple test cases. \n\nThe first line contains the number of test cases $t$ ($1 \\le t \\le 10000$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 10^5$) \u00a0\u2014 the length of arrays.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\dots, a_n$ ($-1 \\le a_i \\le 1$) \u00a0\u2014 elements of array $a$. There can be duplicates among elements.\n\nThe third line of each test case contains $n$ integers $b_1, b_2, \\dots, b_n$ ($-10^9 \\le b_i \\le 10^9$) \u00a0\u2014 elements of array $b$. There can be duplicates among elements.\n\nIt is guaranteed that the sum of $n$ over all test cases doesn't exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, output one line containing \"YES\" if it's possible to make arrays $a$ and $b$ equal by performing the described operations, or \"NO\" if it's impossible.\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n5\n3\n1 -1 0\n1 1 -2\n3\n0 1 1\n0 2 2\n2\n1 0\n1 41\n2\n-1 0\n-1 -41\n5\n0 1 -1 1 -1\n1 1 -1 1 -1\n\nOutput\nYES\nNO\nYES\nYES\nNO\n\n\n\n-----Note-----\n\nIn the first test-case we can choose $(i, j)=(2, 3)$ twice and after that choose $(i, j)=(1, 2)$ twice too. These operations will transform $[1, -1, 0] \\to [1, -1, -2] \\to [1, 1, -2]$\n\nIn the second test case we can't make equal numbers on the second position.\n\nIn the third test case we can choose $(i, j)=(1, 2)$ $41$ times. The same about the fourth test case.\n\nIn the last lest case, it is impossible to make array $a$ equal to the array $b$.\nUse Standard Input format\nANSWER:\n"}}