{"4661": {"code": ["\n###Functions:\n\n###Task:\n\n###Arguments:\n\n###Task:\n\n###Parameters:\n\n###Arguments:\n\n\n\n\n\n\n\n\n\n\n\n\n###Tasks:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n###Task:\n", "\n\n###Task:\n\nThe first parameter is the pattern\n\n###Examples:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n##", "\n\n\n\n\n###Rules:\n\n###Task:\n\n###Examples:\n\n###Rules:\n\n###Task:\n\n\n\n\n\n\n\n###Task:\n\n\n\n###Rules:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n###Task:\n\n\n\n", "\n\n\n\n\n\n###Task:\n\n\n###Rules:\n\n###Task:\n\n\n\n\n\n###Task:\n\n\n\n###Task:\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n###Task:\n\n\n\n###", "\n\n\n\n\n\n###Task:\n\n###Pattern:\n\n###Rules:\n\n###Example:\n\n###Task:\n\n567890\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n###Tasks:\n\n###Task:\n\n\n\n\n\n\n###Task:\n\n   ", "\n\n\n\n\n\n\n\n###Example:\n\n###Task:\n\nA function **pattern**\n\n###Examples:\n\n###Rules:\n\n567890\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Example:\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n###Task:", "\n\n\n\n\n\n###Task:\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n###Rules:\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n###", "\n###Rules:\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Rules:\n\n###Task:\n\n###Rules:\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Example:\n\n###Example:\n\n\n\n\n###Task:\n\n\n\n\n\n\n###", "\n\n\n\n\n###Task:\n\n\n###Examples:\n\n###Task:\n\n###Task:\n\n 123456789012345\n\n\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n###Task:\n", "\n\n###Pattern:\n\n\n\n\n\n\n\n\n\n\n###Rules:\n\n \n\n###Task:\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n\n\n###Task:\n\n   ", "\n###Task:\n\n###Examples:\n\n###Rules:\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      12345\n      12345\n\n   1234567890\n   1234567890\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n", "\n###Definition:\n\n###Task:\n\n###Example:\n\n###Definition:\n\n\n\n\n\n\n\n\n\n\n\n###Question:\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n###Rules:\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n###Task:\n\n\n\n\n    1234567890 \n    1234567890\n\n###Rules:\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n 1234567890\n\n\n\n\n    A **", "\n###Task:\n\n###A Task\n###A Task\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n    1234567890\n\n###Task:\n\n\n\n\n\n\n\n\n###Task:\n\n###A Task\n\n\n\n\n\n##Task:\n", "\n###Rules:\n\n\n\n\n\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n###Rules:\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n###Task:\n\n\n\n\n\n###Task:\n\nA", "\n\n\n\n\n\n\n\n###Example:\n\n###Task:\n\n\n\n\n###Rules:\n\n 1234567890\n\n\n\n\n\n\n###Rules/Note:\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n\n\n###Task:\n\n###Example:\n\n###Task:\n\n\n\n\n\n\n\n\n###Task:", "\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\nA function **pattern** that returns a string\n\n###Tasks:\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n###Tasks:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n###Tasks:\n\n", "\n\n###Rules:\n\n###Tasks:\n\n###Examples:\n\n###Rules:\n\n###Rules:\n\n\n\n\n\n\n\n\n\n\n\n\n###Tasks:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Tasks:\n\n###Task:\n\n\n\n\n\n\n\n\n\n###Task:\n\n\n\n\n###Task", "\n###Task:\n\n###Rules:\n\n###Example:\n\n\n\n\n\n\n\n\n###Examples:\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###Task:\n\n###Task:\n\n\n\n###Task:\n\n\n\n\n\n\n    function pattern"], "prompt": "\nQUESTION:\n###Task:\n\nYou have to write a function **pattern** which returns the following Pattern(See Examples) upto n rows, where n is parameter.\n\n####Rules/Note:\n* If the Argument is 0 or a Negative Integer then it should return \"\" i.e. empty string.\n* The length of each line = (2n-1).\n* Range of n is (-\u221e,100]\n\n###Examples:\n\npattern(5):\n\n        12345\n       12345 \n      12345  \n     12345   \n    12345    \n\npattern(10):\n\n             1234567890\n            1234567890 \n           1234567890  \n          1234567890   \n         1234567890    \n        1234567890     \n       1234567890      \n      1234567890       \n     1234567890        \n    1234567890         \n\npattern(15):\n\n                  123456789012345\n                 123456789012345 \n                123456789012345  \n               123456789012345   \n              123456789012345    \n             123456789012345     \n            123456789012345      \n           123456789012345       \n          123456789012345        \n         123456789012345         \n        123456789012345          \n       123456789012345           \n      123456789012345            \n     123456789012345             \n    123456789012345              \n\npattern(20):\n\n                       12345678901234567890\n                      12345678901234567890 \n                     12345678901234567890  \n                    12345678901234567890   \n                   12345678901234567890    \n                  12345678901234567890     \n                 12345678901234567890      \n                12345678901234567890       \n               12345678901234567890        \n              12345678901234567890         \n             12345678901234567890          \n            12345678901234567890           \n           12345678901234567890            \n          12345678901234567890             \n         12345678901234567890              \n        12345678901234567890               \n       12345678901234567890                \n      12345678901234567890                 \n     12345678901234567890                  \n    12345678901234567890\ndef pattern(n):\n\t\nUse Call-Based format\nANSWER:\n"}}