{"468": {"code": ["\nUse Call-Based format\n\n\n    pass\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n          \n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n          \n\n\n\n\n  - Use Call-Based format\n\n\n  - Use Call-Based format\n\n\n  - Use Call-Based format\n\n  -\n\nInput:\n\n\n  - Given two", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n          \n\n\n\n\n\nGiven two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n           \n\n\n\nGiven two integers representing the numerator and denominator of a fraction, return the fractional part in string format.\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\nUse Call-Based format\n\n\n\n   \n        return self.fractionToDecimal(numerator, denominator)\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n    def        \n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n    - Repeated fractions\n\n\n\n\n\n\n\n\n\n\n    - Repeated", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n    def fractionToDecimal(self, numerator: int, denominator: int) -> str:\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven two integers representing the numerator", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n          \n    pass\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven two integers representing the numerator and denominator of a fraction\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    def       \n\n\n\n\n\nGiven a two integers representing the numerator and denominator of a fraction, return the fractional part in string format.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a two integers representing", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n    def integerToDecimal(self, integer: int, integer: int) -> str:\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n    def\n       ...\n\n\n\n\n\nThe fraction to decimal conversion is a call-based format.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven two integers representing the numerator and", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\n    def callToDecimal(self, numerator: int, denominator: int) -> str:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n\n\n\n    def\n\n    Use Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven two integers representing the numerator", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n       \nUse Call-Based format\n\n\nGiven two integers representing the numerator and denominator of a fraction, return the fractional part in string format.\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n          \n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\n", "\nUse Call-Based format\n\n    pass\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n          \n\n\n\n\n\nExample:\n\n\n    2\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nExample 1:\n\n    numerator =", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n       \n        pass\n\n\n\nGiven two integers representing the numerator and denominator of a fraction, return the fractional part in string format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n          \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator of a fraction:\n\n\nGiven", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nExample 4:\n\n\n\n\n   \n\n\n\n\n\n\n          \n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and denominator of", "\nUse Call-Based format\n\n\n    use Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n          \n\n\n\nUse Call-Based format\n\nExample:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven two integers representing the numerator and"], "prompt": "\nQUESTION:\nGiven two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\nIf the fractional part is repeating, enclose the repeating part in parentheses.\n\nExample 1:\n\n\nInput: numerator = 1, denominator = 2\nOutput: \"0.5\"\n\n\nExample 2:\n\n\nInput: numerator = 2, denominator = 1\nOutput: \"2\"\n\nExample 3:\n\n\nInput: numerator = 2, denominator = 3\nOutput: \"0.(6)\"\nclass Solution:\n    def fractionToDecimal(self, numerator: int, denominator: int) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}