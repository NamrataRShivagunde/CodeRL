{"3630": {"code": ["\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```a``` b``` a\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\ndef\n\n\n\n\n```javascript\n\ndef\n```\n\nUse Call-Based format\n\n\n\n```javascript\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```a``` is the first number in the operation", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\ndef arithmetic(a, b, operator):\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n,\n\n\n\n\n returns 3\n\n\n\n\n\n\nGiven two numbers and an arithmetic operator (the name of", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n``a```\na```b```\n\n\n\n\n\n\t\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a number and an operator (name of it", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\ndef arithmetic(a, b, operator):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n returns 2\n\n\n\n\nGiven two numbers and an arithmetic operator, return the result\n\n\n\n\n\n```a``", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\nUse Call-Based format\n\n returns 2\n\n\n\nGiven two two numbers and an arithmetic operator (as a string):\n\n\n\n\nGiven two numbers", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n```javascript \n\n\n\n\n\n\n\n\nUse Call-Based format\n returns 2\n\n\n\n\n\ngiven two numbers and an arithmetic operator name\n\n\n\n```a```b``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n \n\n\n\n\n\n\n\nReturns a number\nReturns b number\n``` javascript\n``` javascript\n``` javascript\n\n\n``` \n\n\n\n```\n\n``` \n\n\n\n\n\n\n\n\n\n\n\n\n\n\na,b = a + b\n\na", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n => returns 2\n\n\n\nUse Call-Based format\n\n returns 2\n\t\nUse Call-Based format\n\n\n returns 2\n\n\n\nGiven two numbers and an arithmetic operator name, return the result\n\n\n\n\n\n```a```", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n \n\n\ndef arithmetic(a, b, operator):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\nUse Call-Based format\n\n\n\n\nGiven two numbers and an arithmetic operator, return the result\n\n\n\n\nGiven two numbers", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n`\n\n\n\n\n\nReturns 2\nReturns 4\nReturns 5\nReturns 6\nReturns 7\nReturns 2\nReturns 10\n\n\n\n\n\n\n\n\n\n returns 6\n\n\n\n\n\n\n\n\n\n\nGiven two numbers and an arithmetic operator (the name of an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n => returns 5\n``` \n\ndef\n``` \n\n\n\n\n\n\n\nUse Call-Based format\n\n returns 2\n\n\n\n\n\n\n\n\n\n\n```a``` and ```b```", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n returns 6\n``` javascript \n\ndef arithmetic(a, b, operator):\n\t\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n```a``` and ```b``", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n => returns 10\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nReturns the result of the two numbers having the given operator used on them\n\n\n\n\n\n\n\n\n\n\n\nGiven two numbers and an", "\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nfunction arithmetic(a, b, operator):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n returns 2\n\n\n\nUse Call-Based format\n\n\n\n\n\n    A number is a positive", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n```javascript\n\ndef\n```javascript\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\na, b, operator\nb, operator\n\n\n\n\nGiven two numbers and an", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n```javascript\n\ndef\n\n```javascript\n\nUse Call-Based format\n\n\n\n```js \n\n```\n\n\n\n\n\n\n\n\n\n\n```javascript \n\nArithmeticFunction.", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\ndef arithmetic(a, b, operator):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n returns 2\n\n\n\n\n\n\n\n\n\n\nGiven two numbers and an arithmetic operator (the name of", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\ndef\n\n\n\n\n``a, b```\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n```javascript``\n\n", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n returns 2\n\n```javascript\nimport math\n\n```js\n\n\n```\n\n\n\n\n\t\nUse Call-Based format\n\n returns 2\n\n\n\n\n\n\n\n\n\n```a``` a = 2\n``"], "prompt": "\nQUESTION:\nGiven two numbers and an arithmetic operator (the name of it, as a string), return the result of the two numbers having that operator used on them. \n\n```a``` and ```b``` will both be positive integers, and ```a``` will always be the first number in the operation, and ```b``` always the second.\n\nThe four operators are \"add\", \"subtract\", \"divide\", \"multiply\". \n\nA few examples: \n\n``` javascript\nArithmeticFunction.arithmetic(5, 2, \"add\")      => returns 7\nArithmeticFunction.arithmetic(5, 2, \"subtract\") => returns 3\nArithmeticFunction.arithmetic(5, 2, \"multiply\") => returns 10\nArithmeticFunction.arithmetic(5, 2, \"divide\")   => returns 2\n```\n\nTry to do it without using if statements!\ndef arithmetic(a, b, operator):\n\t\nUse Call-Based format\nANSWER:\n"}}