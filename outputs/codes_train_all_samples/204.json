{"204": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you.\n\n   \n        #!python\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nSuppose an array sorted in ascending order is", "\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n   \n       ...\nSuppose an array is sorted in ascending order.\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order is rotated", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def\n        \nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nSuppose an array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nSuppose an array is sorted in ascending order.\n\n\n   \n    return -1\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nSuppose an array sorted in ascending order is rotated.\n\n\n\nSup", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n   \n        # ---\n\n\n\n    # ---\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order is", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    def\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nSuppose an array sorted in ascending order is", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\nSuppose an array sorted in ascending order is rotated.\n\nUse Call-Based format\n\n   :\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def\n       \nUse Call-Based format\nSuppose an array sorted in ascending order is rotated.\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nSuppose an array sorted in ascending order", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nSuppose an array sorted in ascending order is rotated.\n\n\n\n   \n        #TODO:\n        return 0\n\n\n\n\nSuppose an array is sorted in ascending order with increasing pivot.\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n   \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nSuppose an array sorted in ascending", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you.\n\n   :\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order is", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n   \n\n\n\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you.\n\n\n   :\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order is rotated", "\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n    def:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nSuppose an array sorted in ascending order", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n        #...\n\n\n\n\n\n\nSuppose an array is sorted in ascending order.\n\n\n\nSuppose an array is sorted in ascending order\n\n\n\n\nSuppose an array sorted in ascending order", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    def search(self, nums: List[int], target: int):\n        return -1\n\n\n\n\n\n   \n       \nSuppose an array sorted in ascending order is rotated\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array is sorted in ascending order", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n    def search(self, nums: List[int], target: int):\n\n\n\n\n\nSuppose an array is sorted in ascending order\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order is", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def search(self, nums: List[int], target: int) -> int:\n       \n       ...\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nSuppose an array sorted", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n   \n        # TODO:\n        return -1\n\nSuppose an array sorted in ascending order is rotated\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nSuppose an array sorted", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def search(self, nums: List[int], target: int):\n\nUse Call-Based format\n\n\n\n   \n        pass\n\n\nSuppose an array is sorted\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nSuppose an array sorted in ascending order", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nSuppose an array sorted in ascending order is rotated in ascending order.\n\n\n   \n    search(self, nums: List[int], target: int):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSuppose an array sorted in ascending order"], "prompt": "\nQUESTION:\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n\n(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\n\nYou are given a target value to search. If found in the array return its index, otherwise return -1.\n\nYou may assume no duplicate exists in the array.\n\nYour algorithm's runtime complexity must be in the order of\u00a0O(log\u00a0n).\n\nExample 1:\n\n\nInput: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4\n\n\nExample 2:\n\n\nInput: nums = [4,5,6,7,0,1,2], target = 3\nOutput: -1\nclass Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}