{"141": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n    def numRescueBoats(self, people: List[int], limit: int):\n        \nUse Call-Based format\n\n\n\n\n   \n   \n\n\n\n    def:\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight people[", "\nUse Call-Based format\nUse Call-Based format\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n    def\n\n\n\n\n\n    def numRescueBoats(self, people: List[int], limit: int) -> int:\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight people", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\n\n\n\n\n\n   \n\n\n\n\n\n1 <=\u00a0people.length <= 50000\n\n        pass\n        \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThe i-th person has weight people[i]\n\n\n\n\n\n\n\nThe i-", "\nUse Call-Based format\nUse Call-Based format\n\n    def numRescueBoats(self, people: List[int], limit: int):\n       \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight people[i]\n\n\n\n\n\nPerson i", "\nUse Call-Based format\nUse Call-Based format\n       \nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\nExample 4:\n   :\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nThe i-th person has weight people[i]\n\n\nExample\n\nThe", "\nUse Call-Based format\nUse Call-Based format\n    pass\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n1 <= people[i] <=\u00a0limit <= 30000\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nThe i-th person has weight people[i]The", "\nUse Call-Based format\nUse Call-Based format\n    def numRescueBoats(self, people: List[int], limit: int):\n    return people.length\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n    def:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight people[", "\nUse Call-Based format\nUse Call-Based format\n\n    def numRescueBoats(self, people, limit: int):\n        \nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\n        pass\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight people", "\nUse Call-Based format\nUse Call-Based format\n    def numRescueBoats(self, people, limit: int):\n        \nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n   \n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight people[i]\n\n\n\nThe", "\nUse Call-Based format\nUse Call-Based format\n    def numRescueBoats(self, people: List[int], limit: int):\n    return people.length\n\nUse Call-Based format\n\n\n\n   \n   \n\n\n\n   :\n\n\u00a0\n\n\n\n\n\n\n\n1\n\n\n\n\nThe i-th person has weight people", "\nUse Call-Based format\nUse Call-Based format\n    def numRescueBoats(self, people: List[int], limit: int):\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n   :\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nThe i-th person has weight people", "\nUse Call-Based format\nUse Call-Based format\n    def numRescueBoats(self, people: List[int], limit: int):\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n   :\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nThe i-th person has weight people[i]\n\n\nThe i-", "\nUse Call-Based format\nUse Call-Based format\n\n    def numRescueBoats(self, people: List[int], limit: int):\n       \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   :\n        \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThe i-th person has weight people[", "\nUse Call-Based format\n\n\n    def numRescueBoats(self, people: List[int], limit: int):\n    \nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n\n\n\n   :\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nThe i-th person has weight", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\n\n\n\n\n    def numRescannedBoats(self, people: List[int], limit: int):\n        \nUse Call-Based format\n\n\n\n\n   :\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has", "\nUse Call-Based format\nUse Call-Based format\n\n    def numRescueBoats(self, people, limit: int):\n\n\n\n\n\n   \n\n\n\n\n   \n        pass\n\n\n\n\n\n\ni-th person has weight people[i] and i-th boat has weight limit\n\n\n\n\n\n\nThe i-th person has", "\nUse Call-Based format\n\n\n    def numRescueBoats(self, people: List[int], limit: int):\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n    def\n        pass\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nThe i-th person has weight people", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\nUse Call-Based format\nUse Call-Based format\n\n\n        def numRescindBoats(self, people: List[int], limit: int):\n                  \n\n\n   :\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person has weight", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\n\n\n\n\n\n    def numRescuePeople(self, people: List[int]) -> int:\n        return self.numPeople\n\nUse Call-Based format\n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe i-th person", "\nUse Call-Based format\nUse Call-Based format\n\n    def numRescueBoats(self, people: List[int], limit: int):\n\nUse Call-Based format\n\n\n\n   \n\n\n\n   :\n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n1 <=\u00a0people.length <= 50000\n\n\n\n\nThe i"], "prompt": "\nQUESTION:\nThe i-th person has weight people[i], and each boat can carry a maximum weight of limit.\nEach boat carries at most 2 people at the same time, provided the sum of the\u00a0weight of those people is at most limit.\nReturn the minimum number of boats to carry every given person.\u00a0 (It is guaranteed each person can be carried by a boat.)\n\u00a0\n\nExample 1:\nInput: people = [1,2], limit = 3\nOutput: 1\nExplanation: 1 boat (1, 2)\n\n\nExample 2:\nInput: people = [3,2,2,1], limit = 3\nOutput: 3\nExplanation: 3 boats (1, 2), (2) and (3)\n\n\nExample 3:\nInput: people = [3,5,3,4], limit = 5\nOutput: 4\nExplanation: 4 boats (3), (3), (4), (5)\nNote:\n\n1 <=\u00a0people.length <= 50000\n1 <= people[i] <=\u00a0limit <= 30000\nclass Solution:\n    def numRescueBoats(self, people: List[int], limit: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}