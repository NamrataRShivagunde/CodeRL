{"3579": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n`\n\n==10\nchoose(10,5)==0\nchoose(20,5)==0\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n\n\n\n\n```\n# This is the famili", "\n\n\ndef choose(n,k):\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n:\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n```\n\n\n\n```\n\n:\n\n`\n\n\n\n\n```\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n:\n\t\nUse Call-Based format\n`\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n\n    A familiar format\n\n   \n\n   \n\n   \n\n    n = 10\n    k = 10\n    while", "\n\t\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\n`\nn = 10**5\nk = 2**5\n\n\n", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\t\nUse Python-Based format\n```\n\ndef choose(n,k):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n```\n\n`\n\n\n\n\n\n```\n\nif you have a more", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n:\n\n\n   \n\n\n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n    `n` is the number of elements\n    `k", "\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n==`n!/(n-k!)==k!*n!`\nchoose(1,1)==1\n\n\n:\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n:\n\n`\nn==1\nk!==1\n\n\n\n``", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n`\nn,k = 2**(k-1)\n```\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n```\n# See https://en.wikipedia.", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based:\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n:\n\n```\n\nn = 2\nk = 2\n\n\n\n\n```\n\n\n``", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format\n`\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n:\n\n\n\n\n\n\n:\n\n\n`\nn = 2\nk = 3\n\n\n\n\n```\n\n", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n:\n\n```\n\n```\n\n\n\n\n```\n\n\n# The famili", "\n\nUse Call-Based format\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n`\n==0\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n```\n\n==0\n\n\n\n\n```\n\n:\n\n```\n`\n\n\n\n\n```\n\n```\n", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\nBUT:\n\t\nUse Call-Based format\n\n\n\n:\n\t\n\n\n\t\n\n\n\n\n\n\t\nION:\n\t\n\n\n\n\n\n:\n\n`\n\n\n\n\n\n```\n\nk!=", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n:\n```\nn!=k!=k!=n!=k!=k!=n!=n!\n\n\n\n:\n\n\n\nION:\n\n\n\n\n\n:\n\n\n\n\n\n```\n\n\n```\n\n2*", "\n\t\nUse Call-Based format\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n**\n\n\n\n\n\n\n**\n\n:\n\n**\n\n\n\n\n\n**\n\n\n**\n\n\n**\n", "\n:\n\t\nUse Call-Based format\n\n:\n\t\nUse Call-Based format\n:\n\n\n\n:\n\t\nUse Call-Based format\n\n`\n\n\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n2:\n\n1:\n2\n\n:\n\n2:\n\n\n\n\n\nn==", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n`\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\nION:\n\n\n\n\n\n\n   :\n\n\n\n\n\n\n```\n\nk=5\nfor k in", "\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n:\n\t\nUse Call-Based format\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n\n\n:\n\t\n\n\n\n\n```\n# This is a famili", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n`\n\n\n\n\n\n\n\n\n\n\n\n    Use Call-Based format\n\n```\n\n1.2.3.4,\n1.4.3.4\n\n\n\n\n\n:\n\n\n\n\n\n```\n\n\n```", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n==1/n\nchoose(1,2)==1/(n-k)\n\n\t\nUse Call-Based format\n\n\n\n\n:\n\t\nUse Call-Based format\n\n\n:\n\n\t:\n\t\n`\n\n\n\n\n\tn = 3\nk = 2"], "prompt": "\nQUESTION:\nYou may be familiar with the concept of combinations: for example, if you take 5 cards from a 52 cards deck as you would playing poker, you can have a certain number (2,598,960, would you say?) of different combinations.\n\nIn mathematics the number of *k* combinations you can have taking from a set of *n* elements is called the [binomial coefficient](https://en.wikipedia.org/wiki/Binomial_coefficient) of n and k, more popularly called **n choose k**.\n\nThe formula to compute it is relatively simple: `n choose k`==`n!/(k!*(n-k)!)`, where `!` of course denotes the factorial operator.\n\nYou are now to create a choose function that computes the binomial coefficient, like this:\n\n```\nchoose(1,1)==1\nchoose(5,4)==5\nchoose(10,5)==252\nchoose(10,20)==0\nchoose(52,5)==2598960\n```\n\nBe warned: a certain degree of optimization is expected, both to deal with larger numbers precision (and their rounding errors in languages like JS) and computing time.\ndef choose(n,k):\n\t\nUse Call-Based format\nANSWER:\n"}}