{"395": {"code": ["\n\n\n\n\nExample:\n\n\n\n\n\n\nExplanation:\n\nFrom starting index i = 0, we can't jump to i = 1, i = 2\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, we can't jump to i = 0:\n\n\n = 0", "\n\n\n\n\n\n\n\n\n\n\nExample 1:\nInput: [2,3,4,6]\nOutput: 2\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, we can go back to the end of the array:\n\n\nOutput: 4\n\nExplanation:\n =", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, i = 1, i = 2, i = 3, i = 4:\n\nExplanation: \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\nInput: [2,3,4,5,6,7]\nOutput: 5\n =", "\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\nFrom starting index i = 0, i = 1, i = 2\nExplanation:\n\n\n\n\nOutput: 2\nExplanation:\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\nFrom starting index i = 0, i = 1\n\nExample 3:\nInput: []\n =", "\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, we can't jump to i = 1\n\nFrom starting index i = 1, we can't jump to i = 2, i = 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\nInput: [3]\nOutput: 2\n\n = 0", "\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, i = 1, i = 2\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n = 2\n\nExample 3:\nInput: [3,4,5,6]\nOutput: 5\nExplanation: \nFrom starting index i", "\n\n\n\n\nExample:\n\nInput: [0,1,2,3,4]\nExplanation: \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\nOutput: 1\nExplanation:\n\nExplanation:\n\n\n\n\n\n\n = 2\n\nExplanation:\n\nFrom starting index", "\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, i = 1, i = 2\n\nExplanation:\n\n\n\nExample 3:\n\nInput: [1,2,3,4]\nOutput: 3\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0:\n\n = 1\n\nExample 3:", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 1\nOutput: 2\n\nExplanation:\n\nFrom starting index i = 0\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nFrom starting index i = 1, i = 2, i = 3\n = 0\n", "\n\n\n\n\n\nExample:\n\nInput: [0,1,2,3,4,5,6,7,8,9]\nOutput: 2\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, i = 1\n\n\n = 1\nFrom starting index", "\n\n\n\n\n\n\n\n\n\n\nExample 1:\nInput: [1,2,3,4,5]\nOutput: 1\nExplanation:\n\nExplanation:\n\nFrom starting index i = 0\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n = 1\n\nExample 3:\nInput: [", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0\nOutput: 0\nExplanation:\n\nFrom starting index i = 1\n\nExplanation:\n\nFrom starting index i = 2\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n = 1\n\nExample 3:\nInput: [0,2", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, we can jump to i = 1, i = 2, i = 3, i = 2\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n = 1\n\nExample 3:\nInput: [1,2,3,4]\nOutput: 2\nEx", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first number of jumps is:\n\n\n\n\u00a0\n\n\n\n\n\n\nExample 3:\nInput: [1,3,4,5,6]\nOutput: 4\nExplanation:\n\nFrom starting index i = 0\n\n\n\n\n\n\n\n = 1\n\nExample 3:\n", "\n\nExample:\nInput: [10,10,10,10,10,10]\nOutput: 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\nInput: [10,10,10,10,10]\nOutput: 2\nExplanation:\n\n\n\n\n = 2\nFrom starting index", "\n\n\n\n\n\n\n\n\n\n\nA starting index is not good if, you can't jump to i = 1, i = 2, i = 3\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, then we can't jump to i\n\nOutput: 2\n\n\n = 0", "\n\n\n\n\n\n\n\nExample 0:\nInput: [1,2,3,4]\nOutput: 1\nExplanation:\n\nFrom starting index i = 0\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0\n\nOutput: 2\n\nExplanation:\n =", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of good starting indexes:\n\n\n\n\u00a0\nFrom starting index i = 0, i = 1, i = 2, i = 2\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nFrom starting index i = 0, i = 1, i = 2\n\n\n = 2\n", "\n\n\n\n\n\n\n\n\n\nInput: [1,2,3,4,6,5,1,2]\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\nInput: [1,2,3,4,5]\nOutput: 3\nExplanation:\n\n\n\n\n\n\n = 2 (ie.", "\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\nInput: [0,1,2,3,4,5]\nOutput: 1\nExplanation:\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n = 0\n\nExample 3:\nInput: [0, 1, 2, 1, 2, 3, 4]\n"], "prompt": "\nQUESTION:\nYou are given an integer array A.\u00a0 From\u00a0some starting index, you can make a series of jumps.\u00a0 The (1st, 3rd, 5th, ...)\u00a0jumps in the series are called odd numbered jumps, and the (2nd, 4th, 6th, ...) jumps in the series are called even numbered jumps.\nYou may from index i\u00a0jump forward to index j\u00a0(with i\u00a0< j) in the following way:\n\nDuring odd numbered jumps (ie. jumps 1, 3, 5, ...), you jump to the index j\u00a0such that A[i] <= A[j] and A[j] is the smallest possible value.\u00a0 If there are multiple such indexes j, you can only jump to the smallest such index j.\nDuring even numbered jumps (ie. jumps 2, 4, 6, ...), you jump to the index j\u00a0such that A[i] >= A[j] and A[j] is the largest\u00a0possible value.\u00a0 If there are multiple such indexes j, you can only jump to the smallest such index j.\n(It may be the case that for some index i, there are no legal jumps.)\n\nA starting index is good if, starting from that index, you can reach the end of the array (index A.length - 1) by jumping some number of times (possibly 0 or more than once.)\nReturn the number of good starting indexes.\n\u00a0\nExample 1:\nInput: [10,13,12,14,15]\nOutput: 2\nExplanation: \nFrom starting index i = 0, we can jump to i = 2 (since A[2] is the smallest among A[1], A[2], A[3], A[4] that is greater or equal to A[0]), then we can't jump any more.\nFrom starting index i = 1 and i = 2, we can jump to i = 3, then we can't jump any more.\nFrom starting index i = 3, we can jump to i = 4, so we've reached the end.\nFrom starting index i = 4, we've reached the end already.\nIn total, there are 2 different starting indexes (i = 3, i = 4) where we can reach the end with some number of jumps.\n\n\nExample 2:\nInput: [2,3,1,1,4]\nOutput: 3\nExplanation: \nFrom starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\n\nDuring our 1st jump (odd numbered), we first jump to i = 1 because A[1] is the smallest value in (A[1], A[2], A[3], A[4]) that is greater than or equal to A[0].\n\nDuring our 2nd jump (even numbered), we jump from i = 1 to i = 2 because A[2] is the largest value in (A[2], A[3], A[4]) that is less than or equal to A[1].  A[3] is also the largest value, but 2 is a smaller index, so we can only jump to i = 2 and not i = 3.\n\nDuring our 3rd jump (odd numbered), we jump from i = 2 to i = 3 because A[3] is the smallest value in (A[3], A[4]) that is greater than or equal to A[2].\n\nWe can't jump from i = 3 to i = 4, so the starting index i = 0 is not good.\n\nIn a similar manner, we can deduce that:\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can't jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\nIn total, there are 3 different starting indexes (i = 1, i = 3, i = 4) where we can reach the end with some number of jumps.\n\n\nExample 3:\nInput: [5,1,3,4,2]\nOutput: 3\nExplanation: \nWe can reach the end from starting indexes 1, 2, and 4.\n\n\n\n\u00a0\nNote:\n\n1 <= A.length <= 20000\n0 <= A[i] < 100000\nclass Solution:\n    def oddEvenJumps(self, A: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}