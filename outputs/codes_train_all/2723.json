{"2723": {"code": [":: -> \"zero\"\n\n::\n\ndef):\n\t\n\t\n:\n)\n\n\n\t\n::\n -> \"floor\" -> \"floor\" -> \"floor\" -> \"floor\"\n\n\n\n\n\n -> \"four\"\n\n\n\n\n\"zero\" -> \"zero\"\n\n\nstring(s)\n\n\n\n\n", "::\n -> \"one\"\n\n::\n\nreturn \"n/a\"\n\n):\n\t\n:\n\n\n\t\n::\n\n\"zero nine five two\" -> \"one\"\n\n\n\n\n\n\n -> \"floor\"\n\n\n\n\n\n\n\n\n\n -> \"floor\"\n\nstring(s)\n\t\n\n\nYou", ":\n: -> \"two\"\n\n:\n\nreturn):\n\t\n\n:\n\n -> return \"n/a\"\n\n\t\n:\n\n\n\n: -> \"floor\"\n\n\n\n\nUse Call-Based format\n -> \"floor\"\n\"\"\"\n\n\n\n\n\n\n -> \"floor\"\n\nnumber(s)\n\t\n\n\n\n", ":: -> \"two\"\n\n::\n\n)\n\t\n\t\n:\n -> return \"n/a\"\n\n::\n\n\n\n\n -> \"fine\"\n\n\n\n\n\n\n -> \"floor\"\n\n\n\n\n\n\n\n\n\n\n\n -> \"one\"\n\n\nstring(s)\n\n\n\n\n\n\n\n\n", "::\n -> \"n/a\"\n\n::\n\n\ndef):\n\t\n\n\n:\n\n\ndef\n\t:\n\n\n\n\n\n\n -> \"f\"\n\n\n\n\n\n\n\n\nUse Call-Based format\n -> \"f\"\n\n\n\n\n\n\n\n\n -> \"n/a\"\n\nstring(s)\n\n\n", ":: -> \"zero\"\n\n\n:\n\n\n\n):\n\t\n\t\n:\n)\n\n\n\t:\n:\n\nUse Call-Based format -> \"floor\"\n\n\n\n\nUse Call-Based format\n\"0\" -> \"zero\"\n\nstring(s) -> \"four\"\n\n:\n\n\n\n\nstring(s)\n\n", ":\n:\n\n\n:\n\n\n\ndef):\n\t\n\n:\n\n -> \"fine\"\n\n\n:\n\n:\n\nUse Call-Based format -> \"f\" -> \"f\"\n\n\n\n\n\n\n\n\n\n -> \"f\"\n\n\n\n\n\n\n\n\n\n -> \"1/9\"\n\nstring\n\n\n\n\n", ":: -> \"one\"\n\n:\n\n\n\n)\n\n\n:\n\n\t\n:\n\n\n\n:\n\n\n# Use Call-Based format -> \"one\"\n\n\n\n\n\n.\n\n\"floor\" -> \"floor\"\n\nreturn(s)\n\n:\n\n\n\n -> \"floor\"\n\nstring(s)\n\n", "::\n\n\n:\nreturn \"n/a\"\n\n):\n\t\n\n:\n\n)\n\n\n:\n\n:\n\nUse Call-Based format -> \"floor\" -> \"floor\"\nstring(s) -> \"n/a\"\n:\n:\n\n\n\n\n\n\n\n\n -> \"n/a\"\n\nstring\n\n\n\n", "::\n -> \"n/a\"\n\n\n:\n:\nreturn \"n/a\"\n\ndef):\n\t\n\n\n:\n):\n\t\n\n\t\n::\n -> \"floor\"\nstring(s)\n\n\n\n\nUse Call-Based format\n -> \"floor\"\n\n\n\n\n\n -> \"n\"\n\nstring\n\n\n", ":\n: -> \"n/a\"\n\n::\nreturn):\n\t\n\n:\n) -> \"n/a\"\n\n\n::\n\n -> \"four\"\n\n\n\n\n\n\n\n\"zero nine five two\" -> \"two\"\n\n\n\nstring(s)\n\n\n\n\n -> \"n/a\"\n\nnumber\n\n\n", "::\n -> \"fine\"\n\n\n:\n\nreturn \"n/a\"\n\n):\n\t\n\n\n:\n\n\t:\n\n\"zero nine five two\" -> \"four\"\n\nstring(s) ->\n\n\n\n -> \"floor\"\n\n:\n\n\n\n -> \"floor\"\n\nstring(s)\n\n\n\n", "::\n\n\n:\n\n\n)\n\n\n:\n -> \"n/a\"\n\t\n:\n\n\t\n:\n -> \"f\"\n\n\n\t\n\n\t\nUse Call-Based format\n\n\n\"zero\" -> \"zero\",\n\n\"zero\" -> \"n\",\n\ndefstring(s)\n\n\n\nstring(s)\n\n\n", ":: -> \"one\"\n\n:\n\nreturn\"\ndef):\n\t\n\n:\n)\n\n\t\n:\n\n\n\n\n: -> \"f\"\n\n\n\n\n\n\nUse Call-Based format\n\"0 nine five two\" -> \"f\"\n\n(s) -> \"f\"\n\n:\n\n\n\nnumber(s)\n\n\n", "::\n -> \"n/a\"\n\n:\t\n\ndef):\n\t\n\n\t:\n\n)\n\n\n:\n\n\n\n\n -> \"floor\"\n\nIf you are given a string of numbers between 0-9, return \"floor\".\n_string(s)\n::\n\ndefstring(s):\n\n\nnumber(s)\n\n", "::\n -> \"n/a\"\n\n:\n:\n\n)\n\n\n:\n -> return \"n/a\"\n\n\n\t\n::\n\n\n -> \"f\"\n\n\n\n\n\n\n\n\"zero\" -> \"zero\", \"nine\", \"f\" -> \"fine\"\n\n =\n\n\n\n\nstring\n\n\n\n\n\n", ":\n: -> \"four\"\n\n:\n:\nreturn):\n\t\n\n:\n) -> \"n/a\"\n\n:\n\n\n\n\n\n: -> \"floor\"\n\n\n\n\n\n -> \"four\"\n\n\n\n\n\n\nYou are given a string of numbers between 0-9.\n,\n\nnumber(s)\n\n\n", ":: -> \"fine\"\n\n\n\n::\n\n\n):\n\t\n:\n\n):\n\t\n\n:\n:\n\n -> \"floor\"\n\n\n\n\n\n\n\"zero nine five two\" -> \"floor\" -> \"floor\" -> \"floor\"\n\ndefstring(s)\n\t\n\n\n\nstring\n\n\n\n", ":\n:\n -> \"two\"\n\n:\n:\n\n\n):\n\t\n\n:\n\n):\n\t\n\n\t:\n\nThis program is a Python version of Call-Based and is not available.: -> \"floor\"\n\n\n\n\n -> \"floor\"\n\n:\n\n\n\n\n -> \"0\"\n\nstring(s)\n\n\n", ":\n:\n -> \"fine\"\n\n:\n\nreturn \"n/a\"\n\n):\n\t\n\n\t:\n\n\n\t::\n -> \"fine\"\n\n\t\n\n\nUse Call-Based format\n\n\"0 0\" -> \"zero\",\n\n\"0 1\" -> \"one\",\n,:\n\n\n\nstring\n\t\n\n No"], "prompt": "\nQUESTION:\nYou are given a string of numbers between 0-9. Find the average of these numbers and return it as a floored whole number (ie: no decimal places) written out as a string. Eg:\n\n\"zero nine five two\" -> \"four\"\n\nIf the string is empty or includes a number greater than 9, return \"n/a\"\ndef average_string(s):\n\t\nUse Call-Based format\nANSWER:\n"}}