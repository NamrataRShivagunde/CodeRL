{"223": {"code": ["\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    hIndex(self, citations)\n\n\n\n\n\n\n\n\n\n\n\nThis is the solution to the H-Index.\n\n\n\n\n\nGiven an array of citations sorted in ascending", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    For each of the citations sorted in", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    def hIndex(self, citations: List[int]):\n        return 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    For each of the\ufffd", "\n\n\n\n    Use Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    See example above for a full explanation.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations:\n\n\n\nGiven", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n       See the call-based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def hIndex(self, citations: List[int]):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given an array of", "\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n   \n   \n    def citations(self, citations: List[int]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations sorted in", "\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def hIndex(self, citations: List[int]) -> int:\n\n   \n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations sorted", "\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n    def hIndex(self, citations: List[int]):\n        \n     \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations sorted", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n   \n    def citations = [0,1,2,3,5,6]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncitations = [0,1]\n\n\n\n", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n   \n    def hIndex(self, citations: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n    A function to compute the h-index of a researcher\n\n\n\n\nGiven", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    >>> researcher.hIndex(citations)\n        3\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    Given an array of c", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n       \n\n\n\n \u00a0\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array of citations sorted", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n           \n    def hIndex(self, citations: List[int]) -> int:\n\n            return self.hIndex(citations)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations sorted", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n       \n    def hIndex(self, citations: List[int]) -> int:\n       \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncitations = [0]\n\n\n\nGiven an", "\n\nUse Call-Based format:\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n      \n       1.\n\n\n    3.\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array of citations sorted", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\ncitations = [0,1,3,5,6]\n\n\n\n   \n\n       citations = [0,1,3,5,6]\n\n\n\n\n\n\n\n\n\n\n\n\n\n    A researcher is\n\n\nGiven an array of", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def cIndex(self, citations: List[int]) -> int:\n    \nUse Call-Based format\n\n\n\n\n      \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n    Given a array of citations", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n    def hIndex(self, citations: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncitations:\n\n\n\n\n\n    Given an array of", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nA researcher has an index of h to be computed.\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven an array of citations sorted", "\n\n\n    def hIndex(self, citations: List[int]) -> int:\n\n    Use Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of citations sorted in ascending order:\n\n\n"], "prompt": "\nQUESTION:\nGiven an array of citations sorted\u00a0in ascending order (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\n\nAccording to the\u00a0definition of h-index on Wikipedia: \"A scientist has index\u00a0h\u00a0if\u00a0h\u00a0of his/her\u00a0N\u00a0papers have\u00a0at least\u00a0h\u00a0citations each, and the other\u00a0N \u2212 h\u00a0papers have\u00a0no more than\u00a0h\u00a0citations each.\"\n\nExample:\n\n\nInput: citations = [0,1,3,5,6]\nOutput: 3 \nExplanation: [0,1,3,5,6] means the researcher has 5 papers in total and each of them had \n             received 0, 1, 3, 5, 6 citations respectively. \n\u00a0            Since the researcher has 3 papers with at least 3 citations each and the remaining \n\u00a0            two with no more than 3 citations each, her h-index is 3.\n\nNote:\n\nIf there are several possible values for\u00a0h, the maximum one is taken as the h-index.\n\nFollow up:\n\n\n       This is a follow up problem to\u00a0H-Index, where citations is now guaranteed to be sorted in ascending order.\n       Could you solve it in logarithmic time complexity?\nclass Solution:\n    def hIndex(self, citations: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}