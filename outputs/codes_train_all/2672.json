{"2672": {"code": ["\nUse Call-Based format\n\ncolor_probability(color, texture):\n\nUse Call-Based format\nANSWER:\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n:\n\n\n*\n\n\t\n\n\t\n\n\n\n*\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\t# Bumpy\n* 0", "\nUse Call-Based format\n* Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nQUESTION:\n\n* Use Call-Based format\n\n*\n*\n\n\n\n* 1 bumpy red marble\n*\n\n\n\n\n\n\n\n\n\n\n\n\n* The same format as", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\ncolor_probability(color, texture)\n\nUse Call-Based format\n\nQUESTION:\n\n*\n\n\n\n\n\n\n\n\n*\n\n\n\n\n*\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n    * A function that takes two arguments", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nprobability(color, texture)\n\nUse Call-Based format\n\nQUESTION:\n\ncolor_probability(color, texture)\n\nUse Call-Based format\n\nQUESTION:\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n    :", "\nUse Call-Based format\n\n\n\nCall-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nENTER:\n\n    color_probability(color, texture)\n\nUse Call-Based format\n\nENTER:\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n##\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nA Call-Based format\n\nENTER:\n\n\n\n\n\n\nUse Call-Based format\nENTER:\n\n\n\n* 1 smooth red marble\n* 1 smooth yellow marble\n*\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n#!/usr", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n:\n\n\n\n* 1 smooth red marble\n* 1 smooth yellow marble\n* 1 smooth green marble\n\n\n\n:\n\n*\n\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nENTER:\n\t\nUse Call-Based format\nENTER:\n:\n\n\n*\n\n\n\n\n* 3 bumpy red marbles\n*\n\n\n\n\n\n\n\n\n\n\n# -----------\n#\n# Pl", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nANSWER:\n\n:\n\n\n\n\n:\n\n* 0.5\n* 1.5\n* 0.5\n\n\n\t\n:\n\n* 1 smooth green marble\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n#\n", "\nUse Call-Based format\n\t\n\t\nUse Call-Based format\n\n\n\n\nprobability = color_probability(color, texture)\n\nUse Call-Based format\n\nEXAMPLE:\n\n\t\n\n\n\n\n\n\t\n\n\n\n* 1 smooth blue marble\n* 1 smooth blue marble\n\n\n\n\n\n\n\n\n\n\n\n#", "\nUse Call-Based format\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* 0.17\n* 0.32\n* 0.28\n* 0.20\n\n\n\n:\n\n*\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n    I'll see the probability of picking", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUSAGE:\n\n    :color_probability(color, texture)\n\n\n\n\n\n\n\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n* 2 bumpy green marble\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n# The three", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\n\nUse Call-Based format\n:\n\t\n\n* 0.01\n* 0.10\n\n\n\n\n\n* 1 smooth blue marble\n\n\n\n\n*\n\n\n\n\n\n\n\n\n#!/usr/bin/env python", "\nUse Call-Based format\n\nUse Call-Based format\n\nWHAT:\n\n\t\n\n\nUse Call-Based format\n\n\n\n\n\n\n:\n\n\n* 1 bumpy red marble\n* 1 bumpy yellow marble\n* 1 smooth green marble\n\n\n:\n*\n\n\n\n\n\n\n\n\n\n\n#", "\nUse Call-Based format\n* Call-Based format\n\t\n\n\n\n\n\n\nprobability(color, texture):\n\nUse Call-Based format\n\nQUESTION:\n\n*\n\n\n\n\n*\n*\n\n\n\n* 2 bumpy blue marbles\n*\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n## Examples\n\n", "\nUse Call-Based format\n\n\n\n\n\n\ncolor_probability(color, texture)\n\nUse Call-Based format\nANALYSIS:\n\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n* 3 bumpy red marbles\n*\n\n\n\n\n\n\n*\n\n\n\n\n\n## Examples:\n\n*", "\nUse Call-Based format\n\nUse Call-Based format\n\nDEPRECATED:\n\n* bumpy and smooth\n\n* bumpy and smooth\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n* 3 bumpy red marbles\n* 2 bumpy green marbles\n\n\n\n\n\n\n\n\n\n\n\n\n# Example", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nEXAMPLE:\n\n* A function that returns a probability\n\n* A function that returns a string\n* A function that returns a string\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n#!/usr", "\nUse Call-Based format\n\n\t\nUse Call-Based format\nANSWER:\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\t\n\n\n* 1 bumpy red marble\n* 1 smooth red marble\n*\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\nA:\n*", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\nANSWER:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n:\n\n\n* 1 bumpy red marble\n* 1 smooth red marble\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n    # Examples:\n\n"], "prompt": "\nQUESTION:\nYou're playing a game with a friend involving a bag of marbles. In the bag are ten marbles:\n\n* 1 smooth red marble\n* 4 bumpy red marbles\n* 2 bumpy yellow marbles\n* 1 smooth yellow marble\n* 1 bumpy green marble\n* 1 smooth green marble\n\nYou can see that the probability of picking a smooth red marble from the bag is `1 / 10` or `0.10` and the probability of picking a bumpy yellow marble is `2 / 10` or `0.20`.\n\nThe game works like this: your friend puts her hand in the bag, chooses a marble (without looking at it) and tells you whether it's bumpy or smooth. Then you have to guess which color it is before she pulls it out and reveals whether you're correct or not.\n\nYou know that the information about whether the marble is bumpy or smooth changes the probability of what color it is, and you want some help with your guesses.\n\nWrite a function `color_probability()` that takes two arguments: a color (`'red'`, `'yellow'`, or `'green'`) and a texture (`'bumpy'` or `'smooth'`) and returns the probability as a decimal fraction accurate to two places.\n\nThe probability should be a string and should discard any digits after the 100ths place. For example, `2 / 3` or `0.6666666666666666` would become the string `'0.66'`. Note this is different from rounding.\n\nAs a complete example, `color_probability('red', 'bumpy')` should return the string `'0.57'`.\ndef color_probability(color, texture):\n\t\nUse Call-Based format\nANSWER:\n"}}