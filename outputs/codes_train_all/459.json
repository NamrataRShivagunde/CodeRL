{"459": {"code": ["\n\n\n\nUse Call-Based format\n\n\nReplace the string with another letter\n\n\n\n\n\n\n\n\n\n\n\n    def characterReplacement(self, s, k: int):\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA:\n    s = \"A", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nNote:\nThis is the only way to perform", "\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    def characterReplacement(self, s, k: int) -> int:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nNote:\n\nA string that consists only", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string that consists only only uppercase English", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    def characterReplacement(self, s, k: int):\n       \n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n\n\nThe string is not in English.\n\n\n\n\n\n\n\nIf you are not sure which characterReplacement", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\nInput:\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nExample:\n\nInput", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nReplace all uppercase English letters with a single letter.\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\nNote:\n\n    When you are using", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\nInput:\n\ns = \"abc\"\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n   \n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven a string that consists only only uppercase English", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def characterReplacement(self, s, k: int):\n       \nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nExample 3:\n\n\n\n\n\n\n\n\n\nFor example:\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def characterReplacement(self, s, k: int):\n       \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 1:\n\nInput", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\nInput:\n\ns = \"ABAB\"\n\nOutput:\n\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nReplace all repeating letters with another one.\n\nNote:\nNo k will exceed 104.\n\n\n\n\n\n\n\n\n\n    Given a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n        A1 B2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample:\n\n    Input:\n    s", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n   \n\n\n\n\n\n\n\nReplace all uppercase English letters with another uppercase letter\n\n\n\n\n\n\n\n\n\n\n\n\nNote:\nGiven a string that consists only", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    return s.count(\"A\")\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nA:\n    s = \"", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\nInput:\ns = \"", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nReplace the string of k times with the replacement\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n   \n\n\nYou can use a regex to find the longest substring containing all repeating letters.\n\n\n\n\n\n\n\n\n\nGiven a string that consists only only", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThe string is too long.\n\n\n\n\n\n\n\n\n\nInput:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    characterReplacement(self, s, k) -> int:\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nInput:\ns"], "prompt": "\nQUESTION:\nGiven a string that consists of only uppercase English letters, you can replace any letter in the string with another letter at most k times. Find the length of a longest substring containing all repeating letters you can get after performing the above operations.\n\nNote:\nBoth the string's length and k will not exceed 104.\n\n\n\nExample 1:\n\nInput:\ns = \"ABAB\", k = 2\n\nOutput:\n4\n\nExplanation:\nReplace the two 'A's with two 'B's or vice versa.\n\n\n\n\nExample 2:\n\nInput:\ns = \"AABABBA\", k = 1\n\nOutput:\n4\n\nExplanation:\nReplace the one 'A' in the middle with 'B' and form \"AABBBBA\".\nThe substring \"BBBB\" has the longest repeating letters, which is 4.\nclass Solution:\n    def characterReplacement(self, s: str, k: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}