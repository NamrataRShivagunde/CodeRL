{"2620": {"code": ["\nUse Standard Input format\n\n\ndeque()\n\ndeque()\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\nprint d\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\ndeque()\n\nprint\ndeque()\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\ndeque()\n>>> print 'deque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\nprint d\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n=====Function Descriptions=====", "\n\n\ndeque([1, 2, 3])\ndeque([1, 2])\ndeque([1])\ndeque([1])\ndeque([1])\n\n\n\n\n\n\nprint d\n\n\n\n\n\n=====Description Description=====\n\n\n\n\n\n\n\n\n\n\n=====Test Description=====\n\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Variables\n\n\n\n\n\n\n\n\n\ndeque()\nprint 'deque()'\n\n\n=====Function", "\nUse Standard Input format\n\n\ndeque()\n# Use Standard Input format\n\ndeque()\n\n\n\n\ndeque()\n>>> d.reverse()\n>>> d.count()\n>>>\n\n\n\n\n=====Functions Descriptions=====\ndeque()\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\n=====Function Descriptions=====", "\nUse Standard Input format\n\n\ndeque()\n\ndeque()\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n=====Question Description=====\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\ndeque()\n\n=====Function", "\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\n\n\ndeque()\n\n\n\n=====Function Descriptions=====\n", "\n\n\ndeque(['1', '2', '3', '4', '5', '6', '7', '9'])\n\n\n\n\nprint d\nprint d\ndeque()\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\ndeque()\n\ndeque()\n>>> print d\n\n\n=====Function D", "\nUse Standard Input format\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\ndeque()\n\n\n\n\ndeque()\n\n=====Function Descriptions=====\ncollections", "\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n=====Function Description=====\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\n=====Function Descriptions====", "\nUse Standard Input format\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n=====", "\nUse Standard Input format\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n=====Input Format Description=====\n\n\n\n=====Function D", "\nUse Standard Input format\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ndeque()\n\n\n\n=====Function", "\nUse Standard Input format\n\n\ndeque('4')\ndeque('5')\ndeque('2')\ndeque('3')\ndeque('5')\ndeque('5')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\n\n\n\ndeque()\n\n\n\n=====Function Descriptions====", "\nUse Standard Input format\n\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\nUse Standard Input format\n\n=====Question Descriptions=====\n\n\ndeque()\n\n\n\n\n\ndeque()\n\n\n\n\n\ndeque()\n\n\n\n=====Function Descriptions", "\n\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\ndeque()\n\n\n=====Function Descriptions=====\ncollections.", "\nUse Standard Input format\n\n\ndeque(['1', '2', '3', '4', '5'])\n\n\n\n\n\n\n\n\ndeque()\n\ndeque()\n\n=====Function Descriptions=====\ncollections.deque()\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ndeque()\n\n\n\n====", "\nUse Standard Input format\n\n\ndeque()\n>>> print 'deque'\n\n\n\nprint 'deque'\n\ndeque()\n\ndeque()\n\n=====Function Descriptions=====\n d.pop()\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n\n\n\ndeque()\n\n=====Function Descriptions=====\n=====", "\nUse Standard Input format\n\n\ndeque()\n>>>\ndeque()\n\n\n\n\n\n\ndeque()\n\n\ndeque(['1', '2', '3', '4'])\n\n\n\n\n\n=====Function Descriptions=====\ndeque()\n\n\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\ndeque()\n\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\ndeque()\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\ndeque()\n\n\n=====Function Descriptions=====\nde"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\ncollections.deque()\nA deque is a double-ended queue. It can be used to add or remove elements from both ends.\n\nDeques support thread safe, memory efficient appends and pops from either side of the deque with approximately the same O(1) performance in either direction.\n\nExample\nCode\n>>> from collections import deque\n>>> d = deque()\n>>> d.append(1)\n>>> print d\ndeque([1])\n>>> d.appendleft(2)\n>>> print d\ndeque([2, 1])\n>>> d.clear()\n>>> print d\ndeque([])\n>>> d.extend('1')\n>>> print d\ndeque(['1'])\n>>> d.extendleft('234')\n>>> print d\ndeque(['4', '3', '2', '1'])\n>>> d.count('1')\n1\n>>> d.pop()\n'1'\n>>> print d\ndeque(['4', '3', '2'])\n>>> d.popleft()\n'4'\n>>> print d\ndeque(['3', '2'])\n>>> d.extend('7896')\n>>> print d\ndeque(['3', '2', '7', '8', '9', '6'])\n>>> d.remove('2')\n>>> print d\ndeque(['3', '7', '8', '9', '6'])\n>>> d.reverse()\n>>> print d\ndeque(['6', '9', '8', '7', '3'])\n>>> d.rotate(3)\n>>> print d\ndeque(['8', '7', '3', '6', '9'])\n\n=====Problem Statement=====\nPerform append, pop, popleft and appendleft methods on an empty deque d.\n\n=====Input Format=====\nThe first line contains an integer N, the number of operations.\nThe next N lines contains the space separated names of methods and their values.\n\n=====Constraints=====\n0<N\u2264100\n\n=====Output Format=====\nPrint the space separated elements of deque d.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}