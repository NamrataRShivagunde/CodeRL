{"1805": {"code": ["\n\n\n\n\n\nid = 0\nlevel = 1\n\nExplanation:\n\nid = 0\nlevel = 2\n\nExamples:\n\nExample:\n\nInput:\n\nNumber of people\n\nNumber of people\n\nExample:\n\nnumber of people\n\n):\n\n:):):\n\n\n\n\n\n\n\n\n\n\n):\n        for i in range(", "\n\n\n\n\n\nid = 0\nlevel = 0\n\nExplanation:\n\n\n\n    def get_watchedVideosByFriends(self, watchedVideos):\n        return watchedVideos\n):\n\n\n\n\n):\n        \"\"\"\n\n\n\n\n\n\n\n\n\n\n\n    def get_watchedVideosByFriends(self):, watched", "\n\n\n\n\n\nid = 0\u00a0\nlevel = 1\n\nExplanation:\n\nExample:\n\nExplanation:\n\n\n\n    pass\n):\n        \"\"\"\n\n\n\u00a0\n\n    \"\"\"\n\n, friends):\n        \"\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n    def __init__(self):\n        \"\"\"):\n       ", "\n\n\n\n\n\nid = 0\nlevel = 0\n\nExplanation:\n\n\n\n\n    self.watchedVideosByFriends(watchedVideosByFriends)\n):\n\n\n\n\n    @property\n):\n):\n\n\n\n\n\n\n\n\nid = 1\n\n\n\n    def get_watchedVideos(self):):\n", "\n\n\n\n\"A\"\n\"B\"\n\"C\"\n\n\nid = 0\n\"D\"\n\n\n\n\n    def friends(self, friends, id):\n        return []\n):\n        return []\n\n\n\n   \n):\n):\n\n\n\n\n\n\n\n\n\n\n\n\n\n, friends, id):\n\n    def", "\n\n\n\n\nExample:\n\nExample:\n\n\nid = 1\nlevel = 2\n\nExplanation:\n\nExample:\n\nExample:\n\nExample:\n\nExample:\n\nExample:\n\n\n\n):\n\n\n\n\n):\n):\n\n\n\n\n\n\n\n\n\n\n\n\n    def __init__(self):\n        self\n):", "\n\n\n\n\nExample:\n\n\nid = 0\n\nlevel = 0\n\nExplanation:\n\n\n\nPerson with id = 1\n\nPerson with id = 2\n, id, level):\n\n\n\n\n):\n, friends):\n\n\n\n\n\n\n\n\n\n\n\n    def get(self, id):\n        return [id]\n\n):", "\n\n\n\n\n\nid = 0\n\nExplanation:\n\n\nPerson with id = 0\n\nExplanation:\n\nPerson with id = 0\n\nExplanation:\n\nPerson with id = 0\n\nExplanation:\n\n\n):\n\n\n\n:\n):\n):\n\n\n\n\n\n\n\n\n\n\n, friends, id, level):\n       ", "\n\n\n\n\n\nid = 0\nlevel = 0\n\nExplanation:\n\nInput: id = 0\n\nOutput: id = 0\n\nExplanation:\n\n\n\n    self = Person\n, id):\n\n\n\n\n\n):\n):\n\n\n\n\n\n\n\n\n\n\n\n    def __init__(self):\n        self = None\n):", "\n\n\n\n\n\nid = 0\nlevel = 1\n\nExplanation:\n\n\nPerson with id = 0\n\nExplanation:\n\n):\nid = 1\nlevel = 2\n\n\n\n\u00a0\n\n):\n        \"\"\"\n\n\n\n\n\n\n\n\n\n\nid = 1\nid = 2\nlevel = 2\n\n\n\n\n):\n        \"\"\"", "\n\n\n\n\n\nid = 0\nlevel = 0\n\n\u00a0\n\n\nPerson with id = 0\n\nExplanation:\n\nPerson with id = 1\n\n):\n\n\n\n\n\n, friends, id=0, level=1):\n\n\n\n\n\n\n\n\n\n\n\n\n    def __init__(self):\n        self\n):\n", "\n\n\n\n\n\nid = 0\nlevel = 0\n\nExplanation:\n\nExample:\n\nExplanation:\n\n\n\n\n):\n        \"\"\"\n\n\n\n   \n, friends, id):\n        \"\"\"\n):\n\n\n\n\n\n\n\n\n\nid = 0, level = 1\n\n\u00a0\n\n, friends, id, level):\n", "\n\n\n\n\n\nExamples:\n\nExample:\n\n\n\n\n\nPerson with id = 0\n\n\u00a0\nDescription:\n\n\u00a0\n\n\n):\n\n\n\n\u00a0\n\n, friends, id, level):\n\n\n\n\n\n\n\n\n\n\nfriends = [[\"B\",\"C\"]]\n\n\n\n\n, friends, id", "\n\n\n\n\n\nid = 1\nlevel = 2\n\nExplanation:\n\n\nid = 0\nlevel = 1\n\nOutput:\n\n\n):\n    \"\"\"\n\n\n\nExample 3:\n\n   \n\n):\n, friends):\n\n\n\n\n\n\n\n\nid = 1\n\n\n\n, friends, id=0, level=1):", "\n\n\n\n\n\nid = 0,level = 1\n\nExample:\n\nInput: watchedVideos = [[\"A\",\"B\"], [\"C\",\"D\"]]\n\n\n\n    @classmethod\n,\n\n\n\n   \n, id):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def getWatchedVideos(self):\n):\n", "\n\n\nPerson with id = 0 -> watchedVideos = [\"A\"]\n\nExplanation:\n\n\n\n\n\n\n\n):\n        return watchedVideos\n\n\n\n\n   \n, friends, id, level):\n    \"\"\"\n\n\n\n\n\n\n\n\n\nid = 1\n\n\u00a0\n\n\n  , friends, id):\n        if id", "\n\nid = 1\nid = 2\nlevel = 2\nlevel = 3\n\nExplanation:\n\n\n\n\n\n\n\n    def __init__(self, watchedVideos):\n        self.watchedVideos = []\n):\n\n\n\n\n):\n):\n\n\n\n\n\n\n\n\n\n\n\n, id, friends, id, level):\n", "\n\n\n\n\n\n\n\n\nPerson with id = 1\nPerson with id = 2\nPerson with id = 3\n\nExample 3:\n\nExample 4:\n\nPerson with id = 2\n\n):\n\n\n   :\n):\n):\n\n\n\n\n\n\n\n\nid = 0\u00a0\n\u00a0\n\n\n\n, friends, id=0, level", "\n\n\n\n\n\nid = 0\u00a0\nlevel = 1\n\n\nPerson with id = 0\u00a0\nid = 0\u00a0\nlevel = 2\n\nExample:\n\nExample:\n\n\n):\n\n\n\n\n   :\n):\n):\n\n\n\n\n\n\n\n\n\n\n\n\n    def getWatchedVideosByFriends(self,):", "\n\n\nPerson with id = 0, friends = [0,1]\n\nExplanation:\n\n\n\n\n\n\n\n    def getWatchedVideosByFriends(self, friends):\n        pass\n\n\n\n\n\n):\n):\n\n\n\n\n\n\n\n\n\n\n\n    def __init__(self, watchedVideos):\n):\n"], "prompt": "\nQUESTION:\nThere are n people, each person has a unique id between 0 and n-1. Given the arrays watchedVideos and friends, where watchedVideos[i] and friends[i] contain the list of watched videos and the list of friends respectively for the person with id = i.\nLevel 1 of videos are all watched videos by your\u00a0friends, level 2 of videos are all watched videos by the friends of your\u00a0friends and so on. In general, the level k of videos are all\u00a0watched videos by people\u00a0with the shortest path exactly equal\u00a0to\u00a0k with you. Given your\u00a0id and the level of videos, return the list of videos ordered by their frequencies (increasing). For videos with the same frequency order them alphabetically from least to greatest.\u00a0\n\u00a0\nExample 1:\n\nInput: watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 1\nOutput: [\"B\",\"C\"] \nExplanation: \nYou have id = 0 (green color in the figure) and your friends are (yellow color in the figure):\nPerson with id = 1 -> watchedVideos = [\"C\"]\u00a0\nPerson with id = 2 -> watchedVideos = [\"B\",\"C\"]\u00a0\nThe frequencies of watchedVideos by your friends are:\u00a0\nB -> 1\u00a0\nC -> 2\n\nExample 2:\n\nInput: watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 2\nOutput: [\"D\"]\nExplanation: \nYou have id = 0 (green color in the figure) and the only friend of your friends is the person with id = 3 (yellow color in the figure).\n\n\u00a0\nConstraints:\n\nn == watchedVideos.length ==\u00a0friends.length\n2 <= n\u00a0<= 100\n1 <=\u00a0watchedVideos[i].length <= 100\n1 <=\u00a0watchedVideos[i][j].length <= 8\n0 <= friends[i].length < n\n0 <= friends[i][j]\u00a0< n\n0 <= id < n\n1 <= level < n\nif\u00a0friends[i] contains j, then friends[j] contains i\nclass Solution:\n    def watchedVideosByFriends(self, watchedVideos: List[List[str]], friends: List[List[int]], id: int, level: int) -> List[str]:\n        \nUse Call-Based format\nANSWER:\n"}}