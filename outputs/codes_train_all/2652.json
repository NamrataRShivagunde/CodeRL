{"2652": {"code": ["\n\t\t\"\"\"\n\t\t\"\"\"\n\t\t\"\"\"\t\n\n\n\t\nUse Call-Based format\n\n\n +-+-+\n\n\n    +-+-+\n    +-+-+\n    +-+-+\n   \n\n\n   \n   \n\t\n\n\n\n\n\n\n\n\n\n   \n\n   \n\t\n\n    This function counts the number of", "\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    +---+    +---+\n    +---+    +---+\n\n\n   \n\n\n\n    +-+-+\n\t\n\n\n\n\n\n\n\n\n\n\n    +---+\n\n    +---+\n\n |\n\n\n\n    +---", "\n\t\n\t\tUse Call-Based format\n\t\n\n\t\tUse Call-Based format\n\t\n\n\n\n\n | |\n    +-+-+\n    +-+-+\n\n\n\t\t+\n\n\n   \n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n +--+\n\n\n\n\n\n    \"\"\"\n        # TODO: Do", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n | | | | |\n    +---+\n\n\n   \n\n\n\n\n    +---+\n    | | |\n    +---+\n   \n\n\n\n\n\t\n\n\n\n\n\n\n\n\n    +---+\n    | |\n    |\n\n\t#", "\n\t\tUse Call-Based format\n\n\t\t\t\n\t\n\n\t\t\t\n\n    +-+-+\n    +-+-+\n\n\n    +-+-+\n    +-+-+\n\n\n   \n\n\n   \n   \n\t\n\n\n\n\n\n\n\n\n\n   \n   \n    +-+-+\n   \n\n    To count", "\nUse Call-Based format\n\n\n\n\t\n\n\n    +---+\n    +---+\n    +---+\n    +---+\n\n\n\n   \n\t\n\n\t\n\n   \n\t\n\n\n\n\n\n\n\n\n\t\n\n\n\n    |-| | | | | |\n\n\n\n\n\n\n    |---+\n    +", "\nUse Call-Based format\n\n\n\n\n\n\t\n    +---+\n    +---+\n    +---+\n    +---+\n    +---+\n\n\n\n\n\n\n\n\n\n   \n\t\n\n\n\n\n\n\n\t\n\n\n\n\n\n    +---+\n    +---+\n\n\n    +---+\n   \n\n", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    +--+\n    +-+-+\n    +-+-+\n    +---+\n    +-+-+\n\n\n   \n\t\n\n\n\n   \n\n\t\n\n\n\n\n\n\n\n\n\nThe function counts the number of squares\n\n   \n   \n\n\n\n", "\n\t\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n    |\n    +-+-+\n    +---+\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\n\t\n\n\n\n\n\n    +-+\n\n\n\n   \n\n    +-+-+\n   \n\n    +--", "\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n +-+\n\n+-+\n +-+\n+-+\n+-+\n\n\t\n\n\n | |\n    |\n\t\n\n\n\n\n\t\n\n\t\n\n\n\n\n\n\n\n    +-+\n\n\n\n\t\nNote:\n\n\t", "\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n    >>> count_squares(lines)\n\n    3\n\n   \n\n\n\n\n\n\n    |\n\n\n\n\n\n\t\n\n\n\n\n\n\n  +---+\n+---+\n\n\n\n\n  +---+\n\n    |  | ", "\n\ncount_squares(lines)\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n +-+-+\n\n\n\n    +-+-+\n    +-+-+\n    +-+-+\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n    +-+\n   \n\n\t>>>\n    |", "\nUse Call-Based format\nEXAMPLE:\n\n\n\n\t\nUse Call-Based format\n\n\n\n    +---+\n    +---+\n    +---+\n\n\n    +---+\n   \n\t\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n \ncount_squares()\n\n\t\n\n\n  +---+\n   ", "\nUse Call-Based format\n\n\n\n\n\n\n +-+\n\n\n    +-+\n    +-+\n    +-+\n    +-+\n    +-+\n    +-+\n    \n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n    1\n\n    +-+\n   \n\n\n    The task is written", "\nUse Call-Based format\n\n\n\n\n\n\n    +---+\n    +---+\n    +---+\n    +---+\n    +---+\n    +---+\n    +---+\n    \n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n+-+\n\n\n\n\n-----+-----+-----+", "\n\ncount_squares()\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n    +---+\n    | | |\n    +---+\n\n\n\n\n\n    +-+-+\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    +-+-+\n    +-+-+\n   \n\n\t", "\n\nUse Call-Based format\n\n\n\n\n\n\n    +---+\n    +---+\n    +---+\n    +---+\n\n    +---+\n\n\n\n    +---+\n   \n\n\n\n\n   \n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n    +---+\n    +---+\n\n\n\n\n", "\n\t\"\"\"\n\n\t\nUse Call-Based format\n\n\t\nUse Call-Based format\n\t\n\n+\n\n +--+\n\t\n\n | |\n | |\n    +---+\n    | | |\n    +---+\n\n\t\n\n\n\n\n\n\n\n\n\n    +-+-+\n   \n   \n\n\n\t# How many of", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    +-+-+\n    +-+-+\n    +-+-+\n\n\n\n    +-+-+\n   \n\n\n\n   \n\n\n\n\n\n\t\n\n\n\n\n\n\n    +---+\n    +---+\n\n\n\n   \n\n\n", "\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n    +-+-+\n    +-+-+\n    +-+-+\n    +-+-+\n    +-+-+\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    +---+\n    +---+\n\n\n\t#"], "prompt": "\nQUESTION:\nYour task is to write a function which counts the number of squares contained in an ASCII art picture.\n\nThe input pictures contain rectangles---some of them squares---drawn with the characters `-`, `|`, and `+`, where `-` and `|` are used to represent horizontal and vertical sides, and `+` is used to represent corners and intersections. Each picture may contain multiple, possibly overlapping, rectangles.\n\nA simple example input looks like this:\n\n    +--+  +----+\n    |  |  |    |    +-+\n    |  |  +----+    | |\n    +--+            +-+\n    \nThere are two squares and one rectangle in this picture, so your function should return 2 for this input.\n\nThe following picture does not contain any squares, so the answer for this one is 0:\n\n    +------+\n    |      |\n    +------+\n\nHere is another, more complex input:\n\n    +---+\n    |   |\n    | +-+-+\n    | | | |\n    +-+-+ |\n      |   |\n      +---+\n\nThe answer for this one is 3: two big squares, and a smaller square formed by the intersection of the two bigger ones. Similarly, the answer for the following picture is 5:\n\n    +-+-+\n    | | |\n    +-+-+\n    | | |\n    +-+-+\n\nYou are going to implement a function `count_squares()` which takes an ASCII art picture as input and returns the number of squares the picture shows. The input to that function is an array of strings, where each string corresponds to a line of the ASCII art picture. Each string is guaranteed to contain only the characters `-`, `|`, `+`, and `` `` (space).\n\nThe smallest valid square has a side length of 2 and is represented by four `+` characters arranged in a square; a single `+` character is not considered a square.\n\nHave fun!\ndef count_squares(lines):\n\t\nUse Call-Based format\nANSWER:\n"}}