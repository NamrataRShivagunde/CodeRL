{"1979": {"code": ["\nUse Call-Based format\n\n\n\n\n\narr.length == 4\n\n\n    def largestTimeFromDigits(self, arr):\n        return arr[i]\n\n\u00a0\n\nUse Call-Based format\n\n\u00a0\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of 4 digits, find the", "\nUse Call-Based format\n\n\n\n\n\narr.length == 4\n\ni = 0\n\ni == 1\n\n\u00a0\n\n   \n        return self.largestTimeFromDigits(arr)\n        \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nA = [1,2,3,4]\n\n\n\n\nGiven an", "\n\n\n\n    arr: [0,1,2,3]\n\n\n\n\n\n\n   \n        return \"23:00\"\n        \n\n\n\n   \n    return \"23:00\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA valid array of 4 digits is an array of 4 digits, and each digit is 4.\n\n\n\n", "\n\n\n\n    arr: List[int]\n    \nUse Call-Based format\n\n\narr: List[int]\n\n\u00a0\n\n   \n\n\n   \n   \n        return \"23:23\"\n\n\n\n\n\n\n\n\n\n\n\nA is an array of 4 digits\n\n\n\n\n\n\n\nA is an array of 4 digits.\n", "\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n    return arr[i]\n\n\u00a0\n\nUse Call-Based format\n\n\u00a0\n\nInput: arr\nOutput: \"\"\n\n\u00a0\n\nConstraints:\n\n\u00a0\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an", "\n\n\n\n    arr: List[int]\n\nUse Call-Based format\n\n\narr.length == 4\n\narr.length == 9\n\nExplanation:\n\u00a0\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\nA.sort()\n\n\u00a0\n\n\nGiven an array\ufffd", "\n\n\n\n    arr.length == 4\n    arr[i] <= 9\n\nUse Call-Based format\n\n\narr.length == 4\n\n\n   \n    arr = self\n\n\n\n   \n        return arr[0]\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\u00a0\n", "\n\n\n\n\n\n\n\narr.length == 4\n\n\n\n\n    return arr[i]\n\n\n\u00a0\nUse Call-Based format\n\n\nExample 2:\n   \n\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThe array arr is the 4 digits.\n\n\n\nGiven an array\u00a0arr of", "\nUse Call-Based format\n\n\n\nInputs:\n    arr: List[int]\n\nConstraints:\n\n\n\n\n   \n        return arr[i]\n\n\n\n\n    def largestTimeFromDigits(self, arr):\n        return arr[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of 4 digits, find", "\n\n\n\n\nUse Call-Based format\n\n\n\n    return \"00:00\"\n\n\n   \n        return \"00:00\"\n\n\n\n    def largestTimeFromDigits(self, arr):\n        return arr[0]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of 4 digits, find the latest valid", "\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\narr.length == 4\n\ni = 0\n\n\u00a0\n\n\n\n   \n    return \"00:00\"\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\nGiven an array of 4 digits,\n\n\n\n\nGiven an array of 4 digits,\ngiven", "\n\n\n\n    arr: List[int]\n    \nUse Call-Based format\n\n\n\narr.length == 4\n\n\u00a0\n\n   \n        return arr[i]\n\n\n\n\n   \n        return arr[i]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArray of 4 digits:\n\n\n\nA = [\n\n   ", "\n\nUse Call-Based format\n\n    arr: List[int]\n\n\u00a0\n\n\n\n\n\n    def largestTimeFromDigits(self, arr: List[int]) -> str:\n        return \"\"\n\n\u00a0\n\nFunctions:\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array\u00a0arr of 4", "\n\n\n\n\n\n\nArray of 4 digits is the number of digits\n\nArray of 9 digits is the number of digits\n\nArray of 4 digits is the number of digits\n\n\n\n   \n        \n\n\n   \n       ...\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n\n\n\u00a0\nA:\narr:", "\nUse Call-Based format\n\n\n    arr = [0,0,0,0]\n\n\n\n\n\n    def largestTimeFromDigits(self, arr: List[int]) -> str:\n        return \"\"\n\n\u00a0\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of 4 digits, find the", "\nUse Call-Based format\n\n\n    arr.sort()\n    return arr[0]\n\n\n\narr.length == 4\n\n\n   \n    return arr[0]\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\narr.sort()\n\nExplanation:\n\n\n\n\n\n\narr.sort()\n\nReturns:\n", "\n\n\n\n\nUse Call-Based format\nUse Call-Based format.\n\narr.length == 4\n\nMaximal time is not specified\n\nConstraints:\n\narr.length == 9\n\n\n\n   :\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\u00a0\n\u00a0\n\n\n\u00a0\n\n\n\nA = [\n    3", "\n    return \"\"\n\n\n\n    return \"23:00\"\n\n\n\nArray of 4 digits:\n\narr.length == 4\n\n\n\n   \n        return \"23:00\"\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1:\n\nIf arr is not an array of 4 digits:\n\n\nFor", "\n\n\n\n    arr: List[int]\n\nUse Call-Based format\n\n\n\n\n   \n        return \"23:00\"\n\n\nArray of 4 digits\n\n   \n        arr: List[int]\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nA = arr\n\n\n\n\n\nGiven an array of 4 digits, find the", "\n    return \"00:00\"\n\n\n\n\n\n\narr.length == 4\narr[i] == 0\narr[i] == 9\n\n\n\n   \n        pass\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\nA:\nArray of 4 digits\n\n\n\n\n\n\nGiven an array of 4 digits, find"], "prompt": "\nQUESTION:\nGiven an array\u00a0arr of 4 digits, find the latest 24-hour time that can be made using each digit exactly once.\n24-hour times are formatted as \"HH:MM\", where HH\u00a0is between\u00a000\u00a0and\u00a023, and\u00a0MM\u00a0is between\u00a000\u00a0and\u00a059. The earliest 24-hour time is 00:00, and the latest is 23:59.\nReturn the latest 24-hour time\u00a0in\u00a0\"HH:MM\" format.\u00a0 If no valid time can be made, return an empty string.\n\u00a0\nExample 1:\nInput: A = [1,2,3,4]\nOutput: \"23:41\"\nExplanation:\u00a0The valid 24-hour times are \"12:34\", \"12:43\", \"13:24\", \"13:42\", \"14:23\", \"14:32\", \"21:34\", \"21:43\", \"23:14\", and \"23:41\". Of these times, \"23:41\" is the latest.\n\nExample 2:\nInput: A = [5,5,5,5]\nOutput: \"\"\nExplanation:\u00a0There are no valid 24-hour times as \"55:55\" is not valid.\n\nExample 3:\nInput: A = [0,0,0,0]\nOutput: \"00:00\"\n\nExample 4:\nInput: A = [0,0,1,0]\nOutput: \"10:00\"\n\n\u00a0\nConstraints:\n\narr.length == 4\n0 <= arr[i] <= 9\nclass Solution:\n    def largestTimeFromDigits(self, arr: List[int]) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}