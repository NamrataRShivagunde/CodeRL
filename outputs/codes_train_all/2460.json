{"2460": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n   \n    maxSubArray(self, nums)\n\nUse Call-Based format\nGiven an integer array nums, find the contiguous subarray of the contiguous subarray of the\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array nums,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n6\n\n\n\n\n   \n        pass\n        \n\n\n\n\n   \n\n\nGiven an integer array nums, find the contiguous subarray containing at least one number and return its sum\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nclass\n\nGiven an integer array", "\nUse Call-Based format\n\n\n\n\n6\n\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n\n\n\n\n\n   \n       \n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nSum of the contiguous subarray of the array nums is the largest sum of the array\n\n\n\nclass\nGiven an integer array", "\n\n\n\n\nUse Call-Based format\n\n1\n\n\n\n   \n\n\nUse Call-Based format\n\n    maxSubArray(self, nums: List[int])\n    \nUse Call-Based format\n\nUse\n        pass\n\n\n\n\n\n\n\n6.\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \nGiven an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n1/4/3/5/1/2/2/4/3\n\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n1 has the largest sum = 4.\n\n\n\n\n   \n\n\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n    \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \nGiven an", "\n\nUse Call-Based format\n\n\n\n\n4\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n    \n\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExplanation:\n\n\n\n\nGiven an integer array nums", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    pass\n\n\n\n\n   \n        maxSubArray(self, nums)\n\nGiven an integer array nums, find the contiguous subarray of the contiguous subarray\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nclass\n\nGiven an integer array", "\n\nUse Call-Based format\n\n\n\n\n1\n\nUse Call-Based format\n   \n    maxSubArray(self, nums: List[int])\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer array nums, find the contiguous subarray\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n4\n\n\n   \n    pass\n    \n\n\n\n\n   \n\nUse Call-Based format\nGiven an integer array nums, find the contiguous subarray of the contiguous subarray\n\n\n\n\n\n\n\n\nSum the contiguous subarrays of the integer array nums\n\n\n\nclass\nGiven an integer", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    pass\n\n\n\n\n\n    maxSubArray(self, nums: List[int]) -> int\n\n\nUse\n\n\n\n\n\n\n6\n\n\n\nMaxSubArray(nums)\n\nUse Call-Based format\n\n\n\nclass\n\nGiven an integer array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n   \n        pass\n        \n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nSum the subarray of the array nums.\n\n\n\n\nclass\nGiven an integer", "\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n   \n\n\n\n\n\n    maxSubArray(self, nums: List[int])\n\nUse Call-Based format\n\nUse\n    pass\n\n\n\n\n\n\n\n\n\n\nSum of all numbers in the array\n\n\n\n\nclass\n\nGiven an integer array nums,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n1 has the largest sum = 4.\n\n\n\n   \n\n\n\n\n\n   \n        pass\n\nGiven an integer array nums, find the contiguous subarray containing at least one number\n\n\n\n\n\n\n\nSum is the largest array sum\n\n\n\n\n\nclass\nGiven an integer array nums", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n1\n\n\n\n   \n\n\n\n\n   \n        maxSubArray(self, nums)\n\nUse Call-Based format\nGiven an integer array nums, find the contiguous subarray of the contiguous array\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\nGiven an integer", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n    pass\n\n\n\n\n   \n    maxSubArray(self, nums: List[int])\n\nUse Call-Based format\nGiven an integer array nums, find the contiguous subarray\n\n\n\n\n\n\n\n\n\nGiven an integer array nums, find the contiguous subarray\n\n\n\nGiven an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n   \n    maxSubArray(self, nums: List[int]) -> int\n        \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nExample:\n\n\nclass\n\nGiven an", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n        return self.maxSubArray(nums)\n\nUse Call-Based format\n\n\n   \n\nGiven an integer array nums, find the contiguous subarray containing at least one number\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nclass\n\nGiven an integer array", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    maxSubArray(self, nums: List[int]) -> int\n        \nUse Call-Based format\n\n\n\n   \n\nGiven an integer array nums, find the contiguous subarray of each number\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse\nGiven an", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n    maxSubArray(self, nums: List[int]):\n        \nUse Call-Based format\n\n\nUse\n    maxSubArray(nums: List[int])\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass\nGiven an integer array"], "prompt": "\nQUESTION:\nGiven an integer array nums, find the contiguous subarray\u00a0(containing at least one number) which has the largest sum and return its sum.\n\nExample:\n\n\nInput: [-2,1,-3,4,-1,2,1,-5,4],\nOutput: 6\nExplanation:\u00a0[4,-1,2,1] has the largest sum = 6.\n\n\nFollow up:\n\nIf you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.\nclass Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}