{"1797": {"code": ["\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n:\n\nA *[Hamming number][0]* is a positive integer\n\n\n\n\n:\n\n, and *j* and *k*.\n\n\n\n\n\n  -\n\n:\n\n\n\n\n\n:\nA\n\n\nA *[Hamming number", "\nUse Call-Based format\n\n\n\n\nA *[Hamming number][0]* is a positive integer\n\nUse Call-Based format\n:\n\n\n\n\n\n\n*, and *k*.\n\n\n\n\n\n  - The last smallest Hamming number is 5\n\n  -\n\n\n\n\n\n\n\n, and\n\nA *[H", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n*\n\n\n\nA *[Hamming number][1]* is a positive integer\n:\n**\n\n\n\n  -\n\n:\n\n\n\n\n\nA\n, *\n\n\nA *[Hamming", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based formatA *[Hamming number][0]* is a negative integer\n\nUse Call-Based format\n:\n\n\n\n:\n**, and *k*.\n\n\n\n\n\n\n:\n\n\n\nA hamming number is 1\n\n,\n\nA *[H", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nA *[Hamming number][0]* is a positive integer\n:\n\nUse Call-Based format\n\n\n\n\n\n, and *k*.\n\n\n\n\n\n  - The\n\n:\n\n\n\n\n\n:\n\nA *[Hamming number][1]*\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nA *[Hamming number][0]* is a negative integer\n:\nA *[Hamming number][0]* is a positive integer\n\n\n\n\n:\n**\n\n\n\n  -\n\n:\n\n\n\n\nA 10\n\n\nA, and *k*.\n\n\n\n", "\nUse Call-Based format\n\n\n\nA *[Hamming number][0]* is a positive integer\nA *[Hamming number][0]* is a negative integer\n:\n\n\n\n\n\n\n**, and *k*.\n\n\n\n\n\n  -\n\n:\n\n\n\n\nA\nA, and *n*.\n\n\n\n\nA", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nA *[Hamming number][0]* is a positive integer\n:\n\n\n\n:\nA *[Hamming number][1]* is a positive integer**\n\n\n\n\n\n:\n\n\n\n\n\nA, and *k*.\n\n\n\nA", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\n\n\n\n\nA *[Hamming number][1]* is a positive integer\n*, and *k*.\n\n\n\n\n\n\n\n:\n\n\n\n\nA\n, and *k*.\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nA *[Hamming number][1]* is a positive integer\n:\n\n\n\n\n\n\n\n\n*, and *j*, *k*.\n\n\n\n\n\n  -\n\n\n\n\n\n\n\n\nA *[Hamming number][1]* is\n\n\n\n\nA", "\nUse Call-Based format\n\n\n\nA *[Hamming number][1]* is a positive integer\n:\nUse Call-Based format\n\n\n\nA *[Hamming number][1]* is a call-based integer\n**,\n\n\n\n  -\n\n:\n\n\n\n\n\nA\nA, *k*.\n\n\n\n\n  *", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nA *[Hamming number][0]* is a positive integer\n:\n\n\n\n\n\n:\n*, and *j*, *k*.\n\n\n\n\n\n  - The\n\n\n\n\n\n\n\n\n\n\nA *[Hamming number][1]*\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nA *[Hamming number][1]* is a positive integer\n:\n\n\n\n\n\n\n\nA *[Hamming number][1]* is a positive integer**\n\n\n\n\n:\n\n\n\n\nA *[Hamming number][1]* is\n\n\n\n\n[", "\nUse Call-Based format\n\n\n\nA *[Hamming number][0]* is a negative integer.\n\n:\n\n\n\n\n\nA *[Hamming number][1]* is a positive integer\n\n**, *k*.\n\n\n\n\n\n  -\n\n:\n\n\n\n\nA\n, *\n\n\nA *[Hamming", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nA *[Hamming number][0]* is a positive integer\n:\n\n\n\n\nA *[Hamming number][1]* is a positive integer\n**\n\n\n\n\n:\n\n\n\n\n\n\nA *[Hamming number][1]* is\n\n\n\n  *", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n\nA *[Hamming number][1]* is a positive integer\n\n\n**, and *k*.\n\n\n\n\n\n  -\n\n:\n\n\n\n\n\n\nA *[Hamming number]:*\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nA *[Hamming number][1]* is a negative integer\n:\n\n\n\n\nA *[Hamming number][1]* is a positive integer\n:\n**\n\n\n\n  -\n\n:\n\n\n\n\nA\nA, *j*, *k*.\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\nA *[Hamming number][1]* is a positive integer\t\n*, and *k*.\n\n\n\n\n\n  -\n\n:\n\n\n\n\n\nA hamming number\n\n, and\n\n\n\n  *", "\nUse Call-Based format\n\n\n\n:\nA *[Hamming number][1]* is a positive integer\nA *[Hamming number][2]* is a negative integer\n\n\n\n\n\n**\n\nA *[Hamming number][1]* is a positive integer\n\n\n\n:\n\n\n\n\nA,\n\nA *[Hamming", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nA *[Hamming number][1]* is a positive integer\n:\n\n\n\n\n\n\n\n\n*, and *k* are all positive integers.\n\n\n\n\n\n  -\n\n:\n\n\n\n\nA *[Hamming number][1]* is\n\n\n\n\n"], "prompt": "\nQUESTION:\nA *[Hamming number][1]* is a positive integer of the form 2*i*3*j*5*k*, for some non-negative integers *i*, *j*, and *k*.\n\nWrite a function that computes the *n*th smallest Hamming number. \n\nSpecifically:\n\n  - The first smallest Hamming number is 1 = 2^(0)3^(0)5^(0)\n  - The second smallest Hamming number is 2 = 2^(1)3^(0)5^(0)\n  - The third smallest Hamming number is 3 = 2^(0)3^(1)5^(0)\n  - The fourth smallest Hamming number is 4 = 2^(2)3^(0)5^(0)\n  - The fifth smallest Hamming number is 5 = 2^(0)3^(0)5^(1)\n\nThe 20 smallest Hamming numbers are given in example test fixture.\n\nYour code should be able to compute all of the smallest 5,000 (Clojure: 2000, NASM: 13282) Hamming numbers without timing out.\n\n[1]:https://en.wikipedia.org/wiki/Regular_number\ndef hamming(n):\n\t\nUse Call-Based format\nANSWER:\n"}}