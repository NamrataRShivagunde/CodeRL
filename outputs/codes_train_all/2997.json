{"2997": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\t\n\t\nUse Call-Based format\n\n # returns 000000\n```\n\n\nUse Nasm-Format\n\n\n\n\n\n# Example of output:\n#\n#\t", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Nasm format\n\n\n\n\n\t\n\n\n\n\n\n\n\nUse Call-Based format\n\n # returns 000000\n\n```\n\n\n\n\n\n\n\n\n\n```python\nif:nasm\n#ifdef rgb", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\nUse Nasm format\n\nUse Call-Based format\n # returns 0000000\n```\n\n\n\n\n# Use Nasm format\n\n\n\n\n```python\nif", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Nasm format\n\n\n\n\n\n\n\n```python\n#ifdef rgb(int", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Nasm-Format\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\nRGB\n\n\n\n\nUse Python format\n # returns 000000\n\n\n\nThe rgb function is incomplete.\n\n\n\n\n\n```python\n#ifnasm\n#", "\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nRGB\n\n\nUse Python format\n\nif:nasm\n\nchar \\*outp:\n\t\n\n\t\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nchar \\*outp:\n\t\n\n\n\n```python\n", "\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Nasm format\n\n\n\n\n\n\nUse Nasm format\n\n\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n # returns 0x00000000\n```\n\n\nUse Call-Based format\n\n\n\n\n\n\n```python\n#ifnasm\n", "\nUse Python-based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nUse Nasm or Call-Based format\n\n # returns 0FFFFF\n```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```python\n#!/usr/bin/env python\n", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n```python\n\t\n\n\n\n\n\n\n\n\n\nUse Python format\n\n # returns 0000000\n```\n\nUse Call-Based format\n\n\n\n\nThe rgb function is incomplete.\n\n\n\n\n```python\n#if:nasm", "\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python format\n\n # returns 00000000\n\n```\n\nUse Nasm-Format\n\n\nUse Call-Based format\n```\n\n\n\n\n\n\n\n\n\n```python", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Python format\n\n\n\n\t\n\n\n\n\n\n\n\nUse Python format\n\n\n # returns 0\n```\n\nUse Nasm format\n\nNOTE:\n\nUse Call-Based format\n\n\n\n\n\n\n\n```python\nif:nasm", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n```\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n```python\nprint rgb(r, g, b)\n``", "\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\t\n\n\n\n\n\t\n\n\n # returns 0x9F\n```\n\n\n\nUse Nasm format\n\n\n\n\n\n```\n\n\n\n```python\n\nif [0,", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\t\nUse Python format\n```\nimport rgb\n\n\n\n\n\n\nThe rgb function is incomplete.\nUse Call-Based format\n\n\n```\n\n\nUse Nasm format\nThe rgb function is incomplete.\n\n\n\n\n\n```python\n#ifn", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\n\nUse NASM format\n\n\n\n\n # returns 000000\n\n\n\nThe rgb function is incomplete\n\ncolor_rgb(int r, int g, int b):\n\n\n\n\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\nUse Python format\n\n```python\n\n\n\n\n\n\n\n\n\n # returns 0\n```\n\n\n\n\n\n\n\n\n\n```python\nif:nasm\nif(2)", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Nasm format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n```python\n\n```\n\n\n\n # returns 0xFFFFFFF\n```\n\n\n\n\n\n\n\n\n\n```python\nif:nasm\nif:nasm\nimport re", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Nasm format\n\n\n\n\n\t\n\n\n\n\nUse Python format\n\n```python\n\n\n```\n\n\t\nUse Call-Based format\n\nUse Nasm format\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n```python\nif:n", "\n\nUse Python format\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\t\n\n\n\n\n\t\nUse Call-Based format\n\n\nUse Python format\n\nUse Python format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThe rgb function is incomplete.\nThe rgb function is", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\nUse Nasm format\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nRGB:\nRGB:\nrgb(r, g, b)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\trgb(0, 0,"], "prompt": "\nQUESTION:\nThe rgb function is incomplete. Complete it so that passing in RGB decimal values will result in a hexadecimal representation being returned. Valid decimal values for RGB are 0 - 255. Any values that fall out of that range must be rounded to the closest valid value.\n\nNote: Your answer should always be 6 characters long, the shorthand with 3 will not work here.\n\nThe following are examples of  expected output values:\n```python\nrgb(255, 255, 255) # returns FFFFFF\nrgb(255, 255, 300) # returns FFFFFF\nrgb(0,0,0) # returns 000000\nrgb(148, 0, 211) # returns 9400D3\n```\n```if:nasm\n\nchar \\*rgb(int r, int g, int b, char \\*outp)\n\n```\ndef rgb(r, g, b):\n\t\nUse Call-Based format\nANSWER:\n"}}