{"1903": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n1 <= points.length <= 1000\n\n1 <= points.length <= 106\n\nExplanation:\n\n\n\n\n\n    def points(self, points):\n        return points\n\n\n\n\n\n\n\n\n\n\nYou are using a call-based format\n\n\n\n\nYou are given an array", "\nUse Call-Based format\n\n\n    minCostConnectPoints(self, points: List[List[int]]) -> int\n\n\n\n\n\n\n   \n\n\n\n\n    def minCostConnect(self, points: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array\u00a0points representing integer", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0<= xi, yi <= 106\n\n    def minCostConnectPoints(self, points: List[int]):\n        return 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array\u00a0", "\nUse Call-Based format\n\n\n    minCostConnectPoints(self, points) -> int:\n\n\n\n\n\n\n   \n\n\n\n\n\n    def minCost(self, points: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npoints = [[xi, yi]]\n\n\n\n\nWe are given", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nOutput: 0\n\n\u00a0\nExplanation:\n\n\u00a0\n\n\n\n\n\n\n\n\n    Now you can calculate the minimum cost of connecting points.\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\nxj = points[0", "\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nInput: points\nOutput:\n\nInput: points\n\n\u00a0\nExplanation:\n\nExample 0:\n\nExplanation:\n\n\u00a0\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n    def maxCostConnectPoints(self, points: List[List[int]]):\n\n    return 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    if points is not a list:\n\n   \n\n\n\n    You are given an", "\nUse Call-Based format\n\n\n\n\n\n1 <= points.length <= 1000\n1 <= points.length <= 106\n0 <= points.length <= 106\n1 <= points.length <= 106\n\nExample:\n\nInput: points\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array points", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nOutput: 20\n\n\u00a0\n\n\u00a0\n\n    def costConnectPoints(self, points: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array\u00a0points representing integer", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 0\n\nExplanation:\n\n\u00a0\n\n    def minCost(self, points: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\nThe minimum cost of all points is 2.\n\n\n\n\n\nYou are given an array\u00a0", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nThere are no points connected.\n\nExample 2:\n\nInput: points = [[0,0],[0,0],[1,1]]\nOutput: 0\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an array\u00a0points representing integer", "\nUse Call-Based format\nUse Call-Based format\nExplanation:\n\n\n\n\n\n\n\n\n\n   \n\n\n\nInput points = [[0,0],[0,0]]\nOutput: 0\n\n\u00a0\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an array points representing integer coordinates on a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def minCostConnectPoints(self, points: List[List[int]]):\n        return 0\n\n\n\n\n\n    def minCost(self, points):\n        return 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array pointsrepresenting integer", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n    minCostConnectPoints(self, points) -> int:\n        #...\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\nInput: points\n\n\n\n\n\n\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nYou have been given an array of points representing integer coordinates representing the points on a 2D-plane.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array of points representing integer coordinates representing an array of points.\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def minCost(self, points: List[int]) -> int:\n        return 0\n\n\n\n\n\n\n\n\n\n\nyou are given an array of points representing integer coordinates.\n\n\n\n\nYou are given an array", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    def minCostConnectPoints(self, points):\n        return 1\n\n\n\n\n\n\n\n\n    # Examples:\n    from pyre.devel.analysis import MinCostConnectPoints\n\n\n\n\n\n\n\n\n\n\n    You are given", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nYou are given an array points representing integer coordinates of some points on a 2D-plane.\n\n\n\n    def costConnectPoints(self, points):\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe have a solution to the function minCostConnect", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nExplanation:\n\n\n\n\n   \n\n\u00a0\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array of points representing integer coordinates on a 2D-plane.\n\n\n\n\nYou", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 20\n\nExplanation:\n\n\u00a0\nReturns:\n\nminCostConnectPoints(self, points)\n\nExample:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array\u00a0pointsrepresent"], "prompt": "\nQUESTION:\nYou are given an array\u00a0points\u00a0representing integer coordinates of some points on a 2D-plane, where points[i] = [xi, yi].\nThe cost of connecting two points [xi, yi] and [xj, yj] is the manhattan distance between them:\u00a0|xi - xj| + |yi - yj|, where |val| denotes the absolute value of\u00a0val.\nReturn\u00a0the minimum cost to make all points connected. All points are connected if there is exactly one simple path between any two points.\n\u00a0\nExample 1:\n\nInput: points = [[0,0],[2,2],[3,10],[5,2],[7,0]]\nOutput: 20\nExplanation:\n\nWe can connect the points as shown above to get the minimum cost of 20.\nNotice that there is a unique path between every pair of points.\n\nExample 2:\nInput: points = [[3,12],[-2,5],[-4,1]]\nOutput: 18\n\nExample 3:\nInput: points = [[0,0],[1,1],[1,0],[-1,1]]\nOutput: 4\n\nExample 4:\nInput: points = [[-1000000,-1000000],[1000000,1000000]]\nOutput: 4000000\n\nExample 5:\nInput: points = [[0,0]]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 1000\n-106\u00a0<= xi, yi <= 106\nAll pairs (xi, yi) are distinct.\nclass Solution:\n    def minCostConnectPoints(self, points: List[List[int]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}