{"313": {"code": ["\n\nEXAMPLES:\n\n\n\n\n\nExample:\n\nOutput:\n\nExample 1:\n\nExample 2:\n\nExample 3:\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\nExample 5:\n\nInput: bloomDay = [1,1,1,1]\n\n\nAfter", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 0:\n\n\n\n\n\n\nOutput:\n\nExplanation:\n\nReturns the minimum number of days to wait to be able to get the answer.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\nExample 5:\n\nInput: bloomDay\nOutput: 2\n", "\n\n\n\n\n\n\n\n\n\n\n\nThe answer is 3\n\n\n\n\nOutput:\n\nExplanation:\n\nThe answer is 3\n\nExample:\n\n    Examples\n\n   \n\n\n\nOutput:\n\n\n\n\n\n\n\n\n\n1\n\n\nExample 5:\nInput: bloomDay = [1,10,10]\n\n 2", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\nInput: bloomDay = [1,1,1,1,1,1]\nOutput: 1\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nAfter day 7, m, k, m\nExplanation:\n\n\nAfter day", "\n\n\n\n\nExample 2:\n\nExample 3:\n\n\n\n\n\n\n1\n\nExample 4:\n\nExample 2:\n\n\n\n\n\nExample 3:\n\n\n\n\n\nExample 4:\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nOutput:\n\nExample 5:\n\nExample 6:\n\n\n\n\nExample 5:", "\n\n\n\n\n\n\n\nExample:\n\nExample:\n\n% Blooming\n\nExample 1:\n\n% Blooming\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nExample 5:\n\nExample 4:\n\n\n\n\n\nExample 5:\n\n:\n\n\n\nExample 5", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe answer is -1\n\nExample 5:\n\nGiven an integer array bloomDay, m and k\n\nExample 6:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Examples:\n\n\n", "\n\n\n\n\n\n\n\n\n\nExample:\n\n    Example 1:\n\n    Input: bloomDay = [1,1,1,1,1,1,1,1,1,1]\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n: 1000\n\n\nExample 5:\nInput: bloomDay = [1,] 2", "\n\n\n\n\n\n\n\nExplanation:\n\nGiven an integer array bloomDay, m and k,\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nGiven an integer array bloomDay, m and k\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nExample 6:\n\nExample 7:", "\n\n\n\n\n\n\n\n\n\nExample 0:\n\nThe input array bloomDay\n\nExample 1:\n\nExample 2:\n\nExample 3:\n\nInput: bloomDay\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\nExplanation:\n\nAfter day 1, m, k = 1\n\n\n:\n\nAfter", "\n\n\n\n\n\n\n\nExplanation:\n\n \u00a0\n\n \u00a0\n\n\n\n\n \u00a0\n\n\n\n\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n    Return the minimum number of days you can make the bouquets\n\n   \n\n\n\n    Output:", "\n\n\n\n\n\n\n\nExample 4:\n\nGiven an integer array bloomDay\n\nExample 5:\n\nGiven an integer array bloomDay\n\nExample 7:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\nExample 0:\n\n\n\n\n\n\n\n\nOutput: 1\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\nAfter day 7:\nAfter day 12:\nAfter day 7:\nAfter day 11:\nAfter day 12:\nAfter day 11:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\nExample 1:\n\nGiven an integer array bloomDay,\nbloomDay,m,k\nExplanation:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nExample 6:\n\nExample 7:\n\n\n\n\n\n\n\n\n\n\n\n\n    Examples 5:\n\n    >>>", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n    We need m\u00a0k\u00a0\n    We need m\u00a0k\u00a0\n\nExample 5:\n\n\n\nExample 6:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\nInput: bloomDay = [1,1],\n 2", "\n\n\n\n\n\n\nExample:\n\nExample:\n\n\n\nExample 2:\n\n\n\n\nExample 3:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nGiven an integer array bloomDay, m, k, m, k = 1\nExplanation:\n\n\n\nExample 6:\n 2", "\n\n\n\n\n\n\n\n\n\n\nOutput:\n\nExplanation:\n\nIf m = 1, k = 1\n\nExplanation:\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nExample 6:\n\nExample 7:\n\n\n\n\n\n\n\nExplanation 5:\n\n", "\n\n\n\n\n\n\n\nExample:\n\nExample 1:\n\nGiven an integer array bloomDay,\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n\n\n\n\n\n\n\nExample 5:\n\nExample 7:\n\nExample 2:\n\nExplanation:\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\nExample 1:\n\nExample 2:\n\nExample 3:\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\nGiven an integer array bloomDay, m and k\n\n\n\n\n\n\n\n\n\nExample 5:\n\nExplanation:\n\nFor m = 5", "\n\n\n\n\n\n\n\n\n\nExplanation:\n\n    We need m, k, m, k\n   \n\n    Examples:\n\n\n\n\n\n\nOutput:\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\nInput: bloomDay = [1000000000,1000000000,1000000000,1,1]\n\n\n\n: -1\n"], "prompt": "\nQUESTION:\nGiven an integer array bloomDay, an integer m and an integer k.\nWe need to make m\u00a0bouquets. To make a bouquet,\u00a0you need to use k adjacent flowers from the garden.\nThe garden consists of n flowers, the ith flower will bloom in the bloomDay[i]\u00a0and then can be used in\u00a0exactly one bouquet.\nReturn the minimum number of days you need to wait to be able to make m bouquets from the garden. If it is impossible to make m bouquets return -1.\n\u00a0\nExample 1:\nInput: bloomDay = [1,10,3,10,2], m = 3, k = 1\nOutput: 3\nExplanation: Let's see what happened in the first three days. x means flower bloomed and _ means flower didn't bloom in the garden.\nWe need 3 bouquets each should contain 1 flower.\nAfter day 1: [x, _, _, _, _]   // we can only make one bouquet.\nAfter day 2: [x, _, _, _, x]   // we can only make two bouquets.\nAfter day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.\n\nExample 2:\nInput: bloomDay = [1,10,3,10,2], m = 3, k = 2\nOutput: -1\nExplanation: We need 3 bouquets each has 2 flowers, that means we need 6 flowers. We only have 5 flowers so it is impossible to get the needed bouquets and we return -1.\n\nExample 3:\nInput: bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3\nOutput: 12\nExplanation: We need 2 bouquets each should have 3 flowers.\nHere's the garden after the 7 and 12 days:\nAfter day 7: [x, x, x, x, _, x, x]\nWe can make one bouquet of the first three flowers that bloomed. We cannot make another bouquet from the last three flowers that bloomed because they are not adjacent.\nAfter day 12: [x, x, x, x, x, x, x]\nIt is obvious that we can make two bouquets in different ways.\n\nExample 4:\nInput: bloomDay = [1000000000,1000000000], m = 1, k = 1\nOutput: 1000000000\nExplanation: You need to wait 1000000000 days to have a flower ready for a bouquet.\n\nExample 5:\nInput: bloomDay = [1,10,2,9,3,8,4,7,5,6], m = 4, k = 2\nOutput: 9\n\n\u00a0\nConstraints:\n\nbloomDay.length == n\n1 <= n <= 10^5\n1 <= bloomDay[i] <= 10^9\n1 <= m <= 10^6\n1 <= k <= n\nclass Solution:\n    def minDays(self, bloomDay: List[int], m: int, k: int) -> int:\nUse Call-Based format\nANSWER:\n"}}