{"2895": {"code": ["\n# Function-Based\n\n# Example \n\nKaCokadekaMe(\"a\"); //=> \"a\"\n\n\n\n\n\n\n# Task\n\nKa\n\n\n\n\n\n\n\n\n# Broduction \n\nKa\n\n\n\n\n\n\n# Task \n\n\n\n\n\n# Task \n\n\n\n\n# Task \n\n# Int", "\n# Example\n\nKa CokadekaMe(\"kalalalalalalalalalal\")\n\n\n\n\n\n\n\n\n\n# Example\n\n# Makes\n\nKa\n\n\n\n# Task \n\n\n\n\n\n\n# Example \n\n\n\n\n\n\n# Task \n\n\n\n\n\n\n\n# Introduction \n\n", "\n# Example \n\nKa CokadekaMe(\"kab\")\n\n# Example\n\nKa CokadekaMe(\"kab\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example \n\n# Introduction \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\n\nka\n\n# Example\n\n", "\n\n Example:\n\n# Introduction \n\nKa CokadekaMe(\"kas\")\naa\n\n# Task \n\nKa CokadekaMe(\"kas\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\n\n\n\n\n\n\n# Task \n\nKa\n# Int", "\n# Description\n\n# Example\n\n# The `ka` string can be converted\n\n\n\n\n\n\n\n# Example \n\nKa ka ka cypher \n\nKaka\n\n\n\n\n\n\n# Example \n\nKa CokadekaMe(\"a\");  //=> \"a\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example\n", "\n\n# Example\n\nKa CokadekaMe(\"Ka\");  //=> \"kaka\"\n\n# Example\n\nKa CokadekaMe(\"ka\");  //=> \"ka\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\n\n\n\n\n# Task\n\n", "\n\n# Example \n\nKaCokadekaMe(\"a\");  //=> \"a\"\nKaCokadekaMe(\"aa\")\n\n# Example \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\n\n\n\n\n\n\n\n\n# Birth\n\nKa\n\n\n\n# Birth \n\n# Intro", "\n\n\n# Example \n\n# Call-Based \n\nKa CokadekaMe(word):\t\n\n\n\n\n\n\n\n\n\n# Example \n\nKa CokadekaMe(word):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n# Call \n\n\n\n\n\n\n\n# Task\n\n\n# Int", "\n\n\nKa CokadekaMe(word):\n\t\nUse Call-Based format\n\n# Example \n\nKa CokadekaMe(word):\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n# Introduction \n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n# Introduction \n\n", "\n\n\n\n# Example \n\n# Boring \n\nKa CokadekaMe(\"ka\");  #=> \"kaa\"\n\n# Example \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Boring \n\n\n\n\n\n# Boring \n\n# Task \n\n\n\n\n\n# Task \n\n\n# Intro", "\n\n# Example \n\nKa CokadekaMe(\"k\")\n\n# Example \n\nKa CokadekaMe(\"k\")\n\n# Example \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n# Task \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Introduction \n\n#", "\n# Description\n\n# Example\n\n# Ka CokadekaMe \n\n\n\n\n\n\n\n\n# Example\n\nKa CokadekaMe(\"a\")\n\n# Example\n\nka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task \n\nKa ka ka cypher \n\n\n\n\n# Example", "\n# Example \n\n# Ka CokadekaMe \nka\n\n\n\n\n\nKa CokadekaMe \n\n# Text-Based \n\nKa CokadekaMe(\"Ka\")  \n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n# Task \n\nKa\n\n\n# Task-Based \n\n", "\n# Example \n\n# Call-Based format\n\n\n\n\n\n\n\n# Example \n\nKaCokadekaMe(\"kan\")\n\n\n\n\n# Example \n\n# Introduction \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\nKa CokadekaMe \n\n\n\n\n\n# Task \n\n", "\n\n\n# Example\n\n# Intercepted \n\nKa CokadekaMe(\"ka\");  //=> \"ka\"\n\n# Example\n\nKa CokadekaMe(\"ka\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\n\n# Introdu", "\n\n# Pre-Task \n\n# Example \n\n# Introduction \n\nKa ka cypher \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n# Task \n\n\n\n\n\n\n\n\n\n\n\n# Task \n\nKa ka cypher \n\n\n\n\n\n\n\n# Introduction", "\n# Example \n\nKa CokadekaMe(\"Ka\");  #=> \"Ka\"\n\n\n\n\n\n\n\n\n\n\n# Example \n\n# Recall \n\n\n\n\n\n\n# Note \n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n# Task \n\nKa\n# Introdu", "\n\t\n# Description \n\nKa cypher's country residents \n\nKa CokadekaMe(\"a\"); //=> \"a\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Text-Based \n\nKa\n\n\n\n\n\n\n\n\n# Task\n\nKa CokadekaMe \n\n\n\n\n\n# Introduction", "\n\n# Proof \n\nKaCokadekaMe(\"kabania\")\n\nKaCokadekaMe(\"kabania\")\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Function \n\nKa\n\n\n\n\n\n\n\n# Example\n\n\n# Intro", "\n\n\nKa CokadekaMe(word)\n\n# Task \n\nKa CokadekaMe(word)\n\n# Task \n\nKa CokadekaMe(word)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task \n\n\n\n\n# Task-Based \n\n#"], "prompt": "\nQUESTION:\n# Introduction \n\nKa ka ka cypher is a cypher used by small children in some country. When a girl wants to pass something to the other girls and there are some boys nearby, she can use Ka cypher. So only the other girls are able to understand her. \nShe speaks using KA, ie.: \n`ka thi ka s ka bo ka y ka i ka s ka u ka gly` what simply means `this boy is ugly`. \n\n\n# Task \n\nWrite a function `KaCokadekaMe` (`ka_co_ka_de_ka_me` in Python) that accepts a string word and returns encoded message using ka cypher. \nOur rules:\n- The encoded word should start from `ka`.\n- The `ka` goes after vowel (a,e,i,o,u)\n- When there is multiple vowels together, the `ka` goes only after the last `vowel`\n- When the word is finished by a vowel, do not add the `ka` after\n\n# Input/Output\n\nThe `word` string consists of only lowercase and uppercase characters. There is only 1 word to convert - no white spaces.\n\n# Example\n\n```\nKaCokadekaMe(\"a\");  //=> \"kaa\"\nKaCokadekaMe(\"ka\");  //=> \"kaka\"\nKaCokadekaMe(\"aa\"); //=> \"kaaa\"  \nKaCokadekaMe(\"Abbaa\"); //=> kaAkabbaa\nKaCokadekaMe(\"maintenance\"); //=> kamaikantekanakance\nKaCokadekaMe(\"Woodie\"); //=> kaWookadie\nKacokadekaMe(\"Incomprehensibilities\"); //=> kaIkancokamprekahekansikabikalikatiekas\n```\n\n# Remark\n\nKa cypher's country residents, please don't hate me for simplifying the way how we divide the words into \"syllables\" in the Kata. I don't want to make it too hard for other nations ;-P\ndef ka_co_ka_de_ka_me(word):\n\t\nUse Call-Based format\nANSWER:\n"}}