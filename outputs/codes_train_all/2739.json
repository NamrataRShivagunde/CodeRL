{"2739": {"code": ["\n\n\n~~~if:kata\n\n\nUse Call-Based format\n\n\n\n~~~if:kata\n\n\ndef:\n\t\n\n\n\n\t\n\n-----\n,\n\t\n\n\t\n\t\n\n-----\n\n\n\n\n\n\n\n\n\n\n---\n\n\n~~if:kata,csharp\n\n\n\n* This", "\n\nUse Call-Based format\n\n~~~\ndef cube_odd(arr):\n\t\n\n\t\n\n\n\n\n~~~\ndef:\n\t\n\n\n\n\ndef\n\n\n\t\n\n\n\n\n\n\n\n  $ kata.cube.odd(arr)\n\n\n\n\n~\n\n\n\n  $ kata.cube.odd(arr", "\n\nUse Call-Based format\n\n\n~~~if:kata\n\n\nUse Call-Based format\n\n\n\ndef,\n\n\n\n~~~if:java,csharp\nNote:\n\n~~~if:python\n:\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n~\ndef\n\n\n\n    * Find the sum of", "\nUse Call-Based format\n\n~~~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\n\ndef:\n\n\n\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\t\n\n*\n\n\n\n*\nQUESTION:\n\nFind the sum of the odd numbers within an array\n\t\n\n\n", "\n\n~\ndef cube_odd(arr):\n\t\n\n\n\n\n~\n\n\n\ndef:\n\t\n\n\n\n\t\n\n\n\n\n\n    def,python\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~if:kata\nNote:\n\n\n\n\n\n\n\n~\ndef\n\t\n\n~", "\n\n~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n~\ndef:\n\t\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n~~~if:kata\nNote:\nNote: The function should return `undefined`/`NULL`/`NULL`\n\n\n~\n\n", "\n\nUse Call-Based format\n\n~~~if:kata\nNote:\n\n~~~if:kata\nNote:\n\n~~~if:kata\n\n\n\n~~\ndef:\ndef:\n\t\n\n\n\n:\n\ndef\t\n\n\n\n\n\n\n\n\n\n\n\n~\ndef\n\nQUESTION:\n\n    \\b", "\n\n\n~~~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\n~\n\n\t\n\n\n\n\t\n\n\n    def\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCIRCLE:\n\n\n1:\n1:\n2:\n2:\n3:\n3:\n~~\ndef:\n", "\n\n~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\n~\ndef:\n\t\n\n\n\n\t\n\n\n   def\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n    [1]\n\n    [2]\n\n    [3]\n\n~\n~\ndef\n\n\n    [2", "\n\n\n\t\nUse Call-Based format\n\n\nNote:\n~\ndef_odd(arr):\n\t\n\n\n\n\n\t\n:\n\t\n\n\t\n\n\n\n\n\n\n\n\n\n\n~~~if:kata\nNote: The Kata version of Kata is not stable yet\n\n\n\n~\ndef\n\t\n\n    * Find the", "\nUse Call-Based format\n\n~~~if:kata\nNote:\n\n\n\n\n\n\n~~~if:kata\n\ndef:\n\n\t\n\n\n\n\n   :\n\n\t\n\n\n\n\n\n\n\nUse Kata call-based format\n\n\n\n\n\n\n~\ndef cube_sum_odd(arr):\n\t\n\n\n", "\n\n\n~~~\ndef cube_odd(arr):\n\n\n\nUse Call-Based format\n\n\n\n\ndef\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n~~~if:kata\nNote: Kata versions are not used\n\n\n\n\n\n~~\ndef\n\n\n\n~~~", "\n\n~\ndef cube_odd(arr):\n\t\nUse Call-Based format\t\n\n\n\n~\n\ndef:\n\t\n\n\n\n\t\n\n\t\nUse Cube-Based format\n\nfunction:\n\t\ndef\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n~if:kata\n\tdef\n\n\n", "\n\nUse Call-Based format\n\n~~~\ndef cube_odd(arr):\n\t\n\n\nUse Call-Based format\n\n\n\ndef\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n~~~if:kata\nNote:\n\n\n\n\n~if:kata\n\ndef\n\n\n    array = [", "\n\n\n~~~if:kata\n\n\nUse Call-Based format\n\n\n\n\ndef:\n\t\nUse Cube-Based format\n\nABA:\n\t\n\t\n\n\n\n\n\t\n\n\n\t\n\n\n\n\n\n\nUse Cube-Based format\n\n\n\n\n\n\n~\ndef\n\n\n\n\n    * Find the sum", "\n\n~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\t\n\n\n\ndef:\n\t\n\n\n\n\n\n\t\n\n\n\n```\n\n\n\n\n\n\n\n\n~~~if:kata\nNote:\nNote: The Kata version.\n~~~\n\n\n\n~\ndef\n\n\n\t# NAME:", "\n\n\n~~~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\n\n~~\ndef_odd(arr):\n\t\n\n\n\n\n   :\n\n    def\n\t\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n~if:jdk,kara\n\n\n\n```\n\n", "\n\n~\ndef cube_odd(arr):\n\t\n\n\n\n\nUse Call-Based format\n~\ndef:\n\t\n\n\n\t\n\n\n\n\n    1.0\n\n\n\n\n\n\n\n\n~~~if:kata\nNote:\nNote: The Kata version is not working\n~~~\n\n\n\n~\ndef\n\n\n~~", "\n\n~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\n~\n\ndef\n\t\n\n\n\n\t\n\n\n\t\n\t\n\n\n\n\n\n\n\nUse Javascript-based format\n\n\n   \n\n\n\n\n~if:java,csharp,python\nNote:\n\n```python\ndef\n\n\t", "\n\n\n~~~\ndef cube_odd(arr):\n\t\nUse Call-Based format\n\n\n\n\n:\n\t\n\n\n\n\t\n\n\t\n\n\t\n\n\n\n\n\n\n\n\n\n\n   \n    0x1\n    0x1\n    0x1\n\n\n   \n~\ndef\n\t\n\n\n\t\t# The function"], "prompt": "\nQUESTION:\nFind the sum of the odd numbers within an array, after cubing the initial integers. The function should return `undefined`/`None`/`nil`/`NULL` if any of the values aren't numbers. \n\n~~~if:java,csharp\nNote: There are ONLY integers in the JAVA and C# versions of this Kata.\n~~~\n\n~~~if:python\nNote: Booleans should not be considered as numbers.\n~~~\ndef cube_odd(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}