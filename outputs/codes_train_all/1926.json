{"1926": {"code": ["\nUse Call-Based format\n\n    pass\n\n\n\n\n    pass\n\n#\n\n\nUse Python-Based format\n\n   \n    return self.closestDivisors(num)\nUse Python-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n1 <= num <= 10^9\n\n\n\n\nGiven an integer num, find the closest", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n   \n\n\n\u00a0\n\n   \n    self.closestDivisors(num)\n\nUse Python-based format\nUse Python-Call-Based format\n\n\n\n\n\nExample 4:\nInput: num = 5\n\n\n\n\n\n\n\n\n\nGiven an integer num, find the", "\nUse Call-Based format\n\n\n    self = self\n\n\n\n\n\n        return self.closestDivisors(num)\n\nUse Call-Based format\n\nExample:\n\n\n\n\n   \n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\n\n\n\nGiven an integer num,", "\nUse Call-Based format\n\n       \n\n\n\n\n\n        return [3,5]\n\n\u00a0\n\n\nUse Call-Based format\n\n\n       \nUse Python format\nUse Call-Based format\n\n\n\nUse Python call-based format\n\n\n\n\nUse Python call-based format\n\nExplanation:\n\u00a0\n\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n   \n\n\nUse Call-Based format\n\n        return [3,3]\n\nUse Call-Based format\n\nUse Tuple-Based format\n       \nUse Python-based format\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\nUse Python-Based format\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n        return [num, num]\n\nUse Call-Based format\n\nUse Call-Based format\n\n          \n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nExplanation:\n\n\u00a0\n\n\n\n\nGiven an integer num", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n       \n\nUse Call-Based format\n\n              \nUse Method-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\u00a0\n\n\n\u00a0\n\n\u00a0\n\n\nUse Method-Based format\n\nExample:\n\nGiven an", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n        return [2,4]\n\nUse Call-Based format\n\nUse Call-Based format\n\n          \n\n\nUse Python-based format\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\nGiven an integer num, find the", "\nUse Call-Based format\n\n       \n\n\n\n\n\n       \n\n\n\u00a0\nUse Python-based format\n\n           \nUse Call-Based format\nUse Python-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n\nGiven a integer num, find the closest two integers.\n\nGiven an integer", "\nUse Call-Based format\n\n       \n\n\n\n\n\n        return [2,3]\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n          \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\nGiven an integer num, find the", "\nUse Call-Based format\n\n\n        # TODO\n\n\n\n\n        return [10,10]\n\n\u00a0\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\nUse Python-based format\nUse Python-Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer num, find the closest two", "\nUse Call-Based format\n\n\n    #...\n\n\n\n\n       ...\n\n   \n    #...\n\n\n\n              \n    return self.closestDivisors(num)\n\n\nUse Call-Based format\n\n\n\n\n\n\nExample 4:\nInput: num = 9\n\n\n\n\n\n\n\nGiven an integer num, find the closest", "\nUse Call-Based format\n\n\n        \"\"\"\n\n\n\n\n\n        return [3,3]\n\n\u00a0\nUse Python call-based format\n\nUse Python code\n\nUse Python-based format\n\nUse Python3 format\n\n\n\n          \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer num, find the", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n\n       \n\nUse Call-Based format\n\n\n          \nUse Call-Based format\n\nUse Call-Based format3 & 3\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\nnum < 10^9\n\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n       \n\n\n\u00a0\n\n       \nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nExample:\n\nInput: num\nOutput: [4,5]\n\n\n\n\n\n\n\nGiven an integer num", "\nUse Call-Based format\n\n\n       ...\n\n\n\n\n\n        return [10,10]\n\n\u00a0\n\nUse Call-Based format\n\n\n\n\n\n          \nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an integer num, find the closest two", "\nUse Call-Based format\n\n\n       ...\n\n\n\n\n   \n\n\n\n          \nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format3 & 3\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an integer num,", "\nUse Call-Based format\n\n\n\n\n\n\n\n       \n\n\n\u00a0\nUse Python-based format\n    \n          \nUse Python-Based format\nUse Call-Based format\n3 & 3\nUse Call-Based format\n\n\n\n\nUse Python-based format\nUse Python-based format\n\u00a0\n\n\n\n\nGiven an integer num, find the closest", "\nUse Call-Based format\n\n       \n\n\n\n\n\n       \n\n\n\n          \n    return self.closestDivisors(num)\n\nUse Python Call-Based format\nUse Python Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\nnum = 10**9\n\n\n\n\nGiven an integer", "\nUse Call-Based format\n\n\n    pass\n\n\n\n\n       \n\n\nUse Call-Based format\n    return [3,3]\n\nUse Method-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an integer num, find the"], "prompt": "\nQUESTION:\nGiven an integer num, find the closest two integers in absolute difference whose product equals\u00a0num + 1\u00a0or num + 2.\nReturn the two integers in any order.\n\u00a0\nExample 1:\nInput: num = 8\nOutput: [3,3]\nExplanation: For num + 1 = 9, the closest divisors are 3 & 3, for num + 2 = 10, the closest divisors are 2 & 5, hence 3 & 3 is chosen.\n\nExample 2:\nInput: num = 123\nOutput: [5,25]\n\nExample 3:\nInput: num = 999\nOutput: [40,25]\n\n\u00a0\nConstraints:\n\n1 <= num <= 10^9\nclass Solution:\n    def closestDivisors(self, num: int) -> List[int]:\n        \nUse Call-Based format\nANSWER:\n"}}