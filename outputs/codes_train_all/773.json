{"773": {"code": ["\n\n\n\n\n\n\n\n\n1 \u2264 T \u2264 1 \u2264 n \u2264 1\n\n1 \u2264 T \u2264 1\n\n2 \u2264 n \u2264 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[1]", "\n\n\n\n\n\nExplanation-----\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n\n- \u2264 T \u2264 n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\nOriginal Constraints:\n\n-----Input-----\n\nNumber of permutation of length n\n\n\n's not good since", "\n\n\n\n\n-----Description-----\n\n\nInput:\nT\nn\n\n-----Constraints-----\n\nOriginal Constraints\n\nInput:\nT\nn\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\nQuestion:\n\n-----Input-----\n\n's not good since", "\n\n\n- All permutations of length n are good.\n\n-----Constraints-----\n\nOriginal Constraints\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3 \u2264 1 \u2264 2\n\n's not good since p[1] = 1 and p[2] = 2;\n-", "\n\n\n\n\n-----Input-----\nThe input is a list of integers, T is the number of test cases.\n\n\nInput:\n2\n3\n5\n\n-----Constraints-----\nThe constraints\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n's not good since p[1] = 1;\n", "\n\n\n\n\n-----Input-----\n\nThe input is a permutation of length T.\n\nConstraints:\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[1] = 2 and p[2] = 3;\n- p = (2,", "\n\n\n\n\n\nExplanation:\n\n-----Constraints-----\n\nOriginal Constraints\n\nInput:\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\nThe only good permutation is not good.\n\n\n\n\n\n\n\n\n's not good since p[1", "\n\n\n\n\n\n\n\n\n1 \u2264 T \u2264 n\n2 \u2264 i \u2264 l\n3 \u2264 i \u2264 l\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[2] = 2;\n- p[3] = 1;\n", "\n\n\n\n\n-----Explanation-----\n\n\nExplanation:\n\n-----Input-----\n\nFirst line:\n1\n2\n3\n4\n5\n6\n\n-----Constraints-----\n\nOriginal Constraints\n\nInput:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n's not good since p[1]", "\n\n\n\n\n\nOutput:\n\n-----Input-----\n\nInput is a array of length n.\nInput is a single integer.\n\nConstraints:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\nThe constraints are:\n\n\n2 1 3 4 3 6 5\n\n\n\n\n\n\n's not good since p[", "\n\n\n\n\n\nInput:\n0\n1\n2\n3\n5\n6\n\n\n-----Constraints-----\n\nOriginal Constraints\n\nInput:\n0\n2\n3\n5\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[1] = 1;", "\n\n\n\n\n-----Input-----\n\nThe input is a number of permutations of length n.\n\n\nInput:\n\n1\n2\n3\n4\n5\n6\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n1\n\n's not good since p[1] = 1", "\n\n\n\n\n\n-----Explanation-----\n\nOriginal Constraints\n\nInput:\n\n\n-----Constraints-----\n\nThe only good permutation of length n\n\nConstraints:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[1] = 1;\n- p[2] =", "\n\n-----Description-----\nA permutation of length n is a array of size n.\nInput:\n2 n\n3 n\n4\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n\n\nT = 3\nT = 2\nT = 4\nT = 5\nT = 3\n's", "\n\n\n\n\n-----Description-----\n\nDescription:\n\nDescription:\n\nExample:\n\nA permutation of length n\n\nExample:\n\nExample:\n\n\nConstraints:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n's not good since p[1] =", "\n\n\n\n\n-----Input-----\n\nInput:\nT\n\nT\n\nT\n\nT\nT\nT\nT\nT\nT\nT\nT\nT\nT\nT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[1] = 1;\n-", "\n\n\n- \u2264 T \u2264 T\n\n\n\nExplanation-----\n\nInput:\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n\n\n\n-----Subtasks-----\n\nThe input is not valid.\n\n's not good", "\n\n\n\n\n\nInput:\n1\n2\n3\n4\n5\n6\n\n\n-----Constraints-----\n\nOriginal Constraints\n\nInput:\n1\n2\n3\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 \u2264 T \u2264 n\n's not good", "\n\n\n\n\n\n\nInput:\n4\n5\n6\n\n-----Constraints-----\n\nOriginal Constraints\n\nInput:\n4\n5\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation-----\nA permutation of length n is an array of size n consisting of only integers.\n\n\n's not good since p[1]", "\n\n\n\n\n\n\n\n\n\nT = 1\n\n\n\n\n\n\n1 \u2264 T \u2264 n \u2264 T \u2264 n \u2264 T\n\n\n-----Explanation-----\nOriginal Constraints\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n's not good since p[1] = 1;\n-"], "prompt": "\nQUESTION:\nA permutation of length n is an array of size n consisting of n distinct integers in the range [1, n]. For example, (3, 2, 4, 1) is a permutation of length 4, but (3, 3, 1, 4) and (2, 3, 4, 5) are not, as (3, 3, 1, 4) contains duplicate elements, and (2, 3, 4, 5) contains elements not in range [1,4].\nA permutation p of length n is good if and only if for any 1 \u2264 i \u2264 n, pi \u2260 i.\nPlease find the lexicographically smallest good permutation p.\nDefinition for \"lexicographically smaller\":\nFor two permutations p and q, we say that p is lexicographically smaller than q if and only if there exists a index 1 \u2264 l \u2264 n such that:\n- For any 1 \u2264 i < l, pi = qi. Note that if l = 1, this constraint means nothing.\n- and, pl < ql.\n\nFor example, (2, 3, 1, 4) < (2, 3, 4, 1) < (3, 4, 1, 2). The lexicographically smallest permutation is, of course, (1, 2, ..., n), though this one is not good.\n\n-----Input-----\nFirst line of the input contains an integer T denoting number of test cases.\nFor each test case, the only line contains an integer n.\n\n-----Output-----\nFor each test case, output the lexicographically smallest good permutation of length n. It's guaranteed that this permutation exists.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- 2 \u2264 n \u2264 105\n\n-----Subtasks-----\n- Subtask #1 (17 points): 2 \u2264 n \u2264 9\n- Subtask #2 (83 points): Original Constraints\n\n-----Example-----\nInput:\n4\n2\n3\n5\n6\n\nOutput:\n2 1\n2 3 1\n2 1 4 5 3\n2 1 4 3 6 5\n\n-----Explanation-----\nExample case 1. The only good permutation of length 2 is (2, 1).\nExample case 2. Consider all permutations of length 3, they are(in lexicographically order):\n- p = (1, 2, 3), it's not good since p[1] = 1, p[2] = 2 and p[3] = 3;\n- p = (1, 3, 2), it's not good since p[1] = 1;\n- p = (2, 1, 3), it's not good since p[3] = 3;\n- p = (2, 3, 1), it's good since p[1] \u2260 1, p[2] \u2260 2 and p[3] \u2260 3;\n- p = (3, 1, 2), it's good since p[1] \u2260 1, p[2] \u2260 2 and p[3] \u2260 3;\n- p = (3, 2, 1), it's not good since p[2] = 2.\nThus the minimum good one is (2, 3, 1).\nExample case 3. Consider two good permutations for third test case: p=(2, 1, 4, 5, 3) and q=(2, 4, 1, 5, 3), then p < q. You can check lexicographically condition as follows. Find the first index where the entries of two permutations are different, and compare those entries. For example, in this case, the first position where the entries differ is index 2. You can see that p[2] < q[2], as 1 < 4, so p is lexicographically smaller than q.\nUse Standard Input format\nANSWER:\n"}}