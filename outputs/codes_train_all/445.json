{"445": {"code": ["\nUse Call-Based format\n\n\n    minDifference(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n    minDifference(self, nums) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n--\n\n\n\n\nGiven an array nums, you are allowed to choose one", "\nUse Call-Based format\n\n\n    minDifference(self, nums)\n    \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        return self.minDifference(nums)\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nOutput: 0\n\n\u00a0\n\nGiven an array nums, you are", "\nUse Call-Based format\n\n\n    minDifference(self, nums: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        pass\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nGiven an array nums, you are allowed to choose one element of nums\n\nGiven", "\nUse Call-Based format\n\n\n    minDifference = self.minDifference\n\n\n\n\n\n\n    def maxDifference(self, nums: List[int]):\n        return self.maxDifference(nums)\n\n\u00a0\n\nUse Call-Based format\n\n\n   :                \n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array nums, you", "\nUse Call-Based format\n\n\n    minDifference(self, nums)\n\nUse Call-Based format\n\n\n\n\n\n   \n        return 0\n\n\n\n   \n        return 1\n        \n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\nGiven an array nums, you are allowed to choose one element of nums.\n", "\nUse Call-Based format\n\n\n    minDifference(self, nums):\n       \nUse Call-Based format\n\n\n\n\n              \n\n\n\n\n\u00a0\nUse Method-Based format\n\nUse Call-Based format\n\n       ...\n        \n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nIn the first move:\n\n\n\nGiven an array", "\nUse Call-Based format\nUse Call-Based format\n\n    minDifference(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n    minDifference(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nInput: nums\nOutput: 0\n\nExample\nGiven an", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\n\n\nNumerical numbers of elements\n\u00a0\n\n    minDifference(self, nums: List[int]) -> int:\n\n\nUse Call-Based format2\n\n\n\n\n\n\n\nUse Array-Based format\n\n\nOutput: 0\n\n\u00a0\n\n\nGiven an array nums,", "\nUse Call-Based format\n\n\n    minDifference(self, nums) -> int:\n\n\n\n\n\n   \n\n\n\n   \n        return self.minDifference(nums[0])\n        \nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array nums, you are allowed", "\nUse Call-Based format\n\n\n    minDifference(self, nums)\n    \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n        return 1\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\u00a0\n\n\n\nMax difference:\n\n\nGiven an", "\nUse Call-Based format\n\n\n    def minDifference(self, nums: List[int]) -> int:\n\n\n\n\n\n   \n\n\n\n   \n        return self.minDifference(nums[0])\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an array nums, you are allowed to choose", "\nUse Call-Based format\n\n\n    def minDifference(self, nums: List[int]) -> int:\n       \nUse Call-Based format\n\n\n\n\n   \n       \n\n\n\n   \n        pass\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an array nums, you are allowed to", "\nUse Call-Based format\n\n\n    minDifference(self, nums) -> int:\n\n\n\n\n   \n\n\nExample 2:\n\n-10^5 <= nums[i] <= 10^5\n-10^9 <= nums[j] <= 10^9\n\n   \n                \n\n                \n\n\n\n\n\n\n\n\nGiven an array nums,", "\nUse Call-Based format\n\n\n    minDifference(self, nums) -> int\n\n\n\n\n\n    def maxDifference(self, nums: List[int]) -> int:\n        return 1\n\n\u00a0\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 <= nums[i] <= 10^9\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n        return minDifference(self, nums)\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n        pass\n        \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= nums[0] <= 10^9\n2\nGiven an", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return 0\n\n\u00a0\n\n\n\nIn a call-based format:\n\n-10^5 <= nums[i] <= 10^5\n-10^9 <= nums[j] <= 10^9\n\n:                \n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array nums", "\nUse Call-Based format\n\n\n    minDifference(self, nums: List[int]) -> int:\n\n\n\n\n\n\n   \n    return minDifference(nums)\n\n\n\n    minDifference(self, nums):\n        return 1\n\n\n\n\n\n\n\n\n\n\nReturn the minimum difference between the maximum and minimum values\n\n\nExample\nGiven an array", "\nUse Call-Based format\n\n\n\n\n\n\n\n        return minDifference(self, nums)\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\nReturns:\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array nums, you are allowed to choose", "\nUse Call-Based format\n\n\n    minDifference = self.minDifference(self, nums)\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n        return 1\n        \n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nGiven an array nums, you are allowed to choose", "\nUse Call-Based format\n\n\n    minDifference(self, nums) -> int\n\n\n\n\n\n        return self.minDifference(nums)\n\n\u00a0\n\nUse Method-Based format\n\n\n\n\n   \n        return 0\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array nums, you are allowed to choose one"], "prompt": "\nQUESTION:\nGiven an array nums, you are allowed to choose one element of nums and change it by any\u00a0value in one move.\nReturn the minimum difference between the largest and smallest value of nums\u00a0after perfoming at most 3 moves.\n\u00a0\nExample 1:\nInput: nums = [5,3,2,4]\nOutput: 0\nExplanation: Change the array [5,3,2,4] to [2,2,2,2].\nThe difference between the maximum and minimum is 2-2 = 0.\nExample 2:\nInput: nums = [1,5,0,10,14]\nOutput: 1\nExplanation: Change the array [1,5,0,10,14] to [1,1,0,1,1]. \nThe difference between the maximum and minimum is 1-0 = 1.\n\nExample 3:\nInput: nums = [6,6,0,1,1,4,6]\nOutput: 2\n\nExample 4:\nInput: nums = [1,5,6,14,15]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10^5\n-10^9 <= nums[i] <= 10^9\nclass Solution:\n    def minDifference(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}