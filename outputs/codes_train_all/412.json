{"412": {"code": ["\nUse Call-Based format\n\n\n\n\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\n\n\n\n1 <= d <= 30\n\nUse Call-Based format\n\nInput:\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= d <= 30\n1 <= f <= 30\n\n", "\nUse Call-Based format\n\n\n \nUse Call-Based format\n\n\nUse Call-Based format\n\n\n   \n\n\n\n\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= d <= 6\n\n \u00a0\n", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nOutput:\n\n1 <= d <= 6\n\n\u00a0\nConstraints:\n\nd <= f <= 30\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of rolls to target is", "\nUse Call-Based format\n\n\n    def numRollsToTarget(self, d: int, f: int, target: int) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nYou have d dice, and each die has f faces numbered 1, 2.\n\n\n\n\nThe", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\nThe answer is returned modulo 10^9.\n\n\n\n\n\nYou have d dice, and", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nd, f, target\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1+2+3, 4+4\n\nd", "\nUse Call-Based format\n\n\n\n\n\n1 <= d <= 6\n1 <= f <= 30\n1 <= target <= 1000\n\nReturns:\n\n\u00a0\n\n\n   \n\n\n\n\n       \n        numRollsToTarget(self, d, f, target)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of rolls to", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nd > 1\n\nf > 30\n\ntarget > 3\n\n\u00a0\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\nIn d, f, d, f faces numbered 1", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n1 <= d <= 3\n\n\n\nThe number of rolls to", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nd > 1\nd > 1\nd <= 2\nd <= 2\nf > 2\nf <= 2\n\n\n\n   \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= d <= 5\n\n\nThe number of roll", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nd <= d <= 4\nf <= 6\ntarget = 5\n\n\u00a0\n\n\n   \n\n\n\n\n\n\n\nYou have d dice and f faces numbered 1, 2,..., f.\n\n\n\n\n\n\n\n\n\n\n\nd+2", "\nUse Call-Based format\n\n\n    def numRollsToTarget(self, d, f, target: int):\n        return 1\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\nYou have d dice, and each die has f faces numbered 1.\n\n\n\n\nd", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nThis is the answer.\n\n\n\n\n\nd = 0\nf =", "\nUse Call-Based format\n\n\n\n\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe following answer is returned modulo 10^9 + target:\n\n\n\n\n\nYou have d dice,", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\u00a0\nUse Call-Based format\n\n   \n    numRollsToTarget(self, d, f, target) -> int:\n\n\n\n\n\n\n\n\n\n\n\nThe answer is returned modulo 10^9.\n\n\n\n\nYou have", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nd, f, target: int\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nYou have d dice, and f faces numbered 1.\n\n\n\n\nYou have", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\nYou have d dice, and each die has f faces numbered 1, 2,..., f.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10^9\n\n\n\n\nYou have d dice,", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nd = d+1\nf = f", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nd <= d <= 5\nf <= f <= 30\ntarget <= target <= 1000\n\nReturns:\n\n10^9\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\nyour answer is returned modulo 10^9\n\n\n\n\n\nyour answer is returned", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n1 <= d <= 3\n\n1 <= f <= 10\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\nReturn the number of possible ways to roll dice.\n\n\n\n\n\n\nYou have"], "prompt": "\nQUESTION:\nYou have d dice, and each die has f faces numbered 1, 2, ..., f.\nReturn the number of possible ways (out of fd\u00a0total ways) modulo 10^9 + 7 to roll the dice so the sum of the face up numbers equals target.\n\u00a0\nExample 1:\nInput: d = 1, f = 6, target = 3\nOutput: 1\nExplanation: \nYou throw one die with 6 faces.  There is only one way to get a sum of 3.\n\nExample 2:\nInput: d = 2, f = 6, target = 7\nOutput: 6\nExplanation: \nYou throw two dice, each with 6 faces.  There are 6 ways to get a sum of 7:\n1+6, 2+5, 3+4, 4+3, 5+2, 6+1.\n\nExample 3:\nInput: d = 2, f = 5, target = 10\nOutput: 1\nExplanation: \nYou throw two dice, each with 5 faces.  There is only one way to get a sum of 10: 5+5.\n\nExample 4:\nInput: d = 1, f = 2, target = 3\nOutput: 0\nExplanation: \nYou throw one die with 2 faces.  There is no way to get a sum of 3.\n\nExample 5:\nInput: d = 30, f = 30, target = 500\nOutput: 222616187\nExplanation: \nThe answer must be returned modulo 10^9 + 7.\n\n\u00a0\nConstraints:\n\n1 <= d, f <= 30\n1 <= target <= 1000\nclass Solution:\n    def numRollsToTarget(self, d: int, f: int, target: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}