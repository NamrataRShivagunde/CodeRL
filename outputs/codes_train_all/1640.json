{"1640": {"code": ["\n```\n\n\n\n\n\n\n\n\n`1` = \"A aa b c d\"`\n\n```\n\ns1 = \"A aa bb b c d d d d\"\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n\n\n\n1 = \"A&friend&", "\"`\n\n```\n\n\n\n\n\n\ns1 = \"A a b c d\"`\ns2 = \"A b c d d\"\n\n```\n\n\n\n\n```\n\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n\ns1 = \"a b c d\"`\n2", "```\n```\n\n```\ns1 = \"A A A A B B B B C C C C C C C C C C C C C C C C C\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n\ns1 =\n\n\n\n\n1 =", "```\n```\n\n`b`\n\nAnother example:\n\n```\ns1 = \"A b b c d d\"`\n\n```\n\n\n\n\n\n\ns2 = \"B b c d d\"`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n2 = \"kk", "\"`\n```\n\n```\ns1 = \"a b c d d\"\ns2 = \"b d d d d d d d d d d d d d d d d d d d d d d d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n1", "\n```\n\n\n\n\n\n\n\ns1 = \"A a b c d\"\ns2 = \"A b d d\"\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n`\n\n\n```\n\n\n\n\n\n```\n\n\n/\n\n\n\n```\n\n\n\n\n\n\n1 = \"hj", "```\n```\n\n```\n\n1:\nmy friend John & b\n2:bbb\n\n2:bbb\n\n```\n\n\n\n\n\n\ns2 = \"A a aa b c d d\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n1 = \"1", "\"`\n```\n\n```\ns1 = \"A a b b c d d\"`\ns2 = \"a b d d d e e\"\n\n```\n\n```\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n1 = \"h&friend", "\n```\n\n\n\n```\n\ns1 = \"A a b c d d\"\ns2 = \"A b c d\"\n\n```\n\n\n\n\n\n\n\n\ns2 = \"A b c d\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n1 = \"hj", "\"`\n```\n\n\n\n\n```\n\n\n\ns1 = \"A a b c d d\"\ns2 = \"A b b d\"\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n`\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n1 =", "\n```\n```\n\n`\n```\n\n```\n```\n\ns1 = \"A aa aa b c d d\"\ns2 = \"A aa bb b c d\"\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n\n1 = \"A aa b c d", "\"`\n\n```\n\n\n\n\n```\n\n```\ns1 = \"A aa aa b c d d d f f f d h h k k k k k k k k k k k k k k k k k k k k k k k k k k k k\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "```\n\n\n\n\n\n```\n\n```\n\ns1 = \"A a b b c d d\"\ns2 = \"A b b d d d d d d d d d d d d d d d d d\"`\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n1 =", "\n```\n`\n\n\n\n\n\ns1 = \"A b c d &\"\ns2 = \"A b c d &\"\n\n```\n\n\n\n\n```\n\n`\n\n\n\n```\n\n\n\n\n\n\n\n`\n\n```\n\n\n\n\n\n\n```\n\ns2 = \"\"`\n1 = \"", "```\n```\n\n\n\n\n\n```\ns1 = \"A a b c d d\"\ns2 = \"A a b c d\"\n\n```\n\n\n\n\n\n\ns1 =\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n\n1 = \"hjj", "\"`\n\n```\n\n\n\n\n\n\n```\n\n\n\n`a` = \"a b c d\"`\n`b` = \"b c d\"`\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n```\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n2 = \"h", "```\n\n```\n\n\n\n\n\n```\ns1 = \"A a b c d d a\";\ns2 = \"a b c d \";\n\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\ns1 = \"\"`\n\ns2\n1", "```\n\nExamples:\n\n```\nabbbbbbbbbbbbbbbbbbbbbbb\n```\n\n``\n\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n1 =", "```\n\n\n\n\n\n\n```\n\n\n\n`1` = \"A A B B B C C C C C C C C C C C C C C C C C C C C C C C C C C C C C\n\n\n\n\n\n\n\n\n\n\n\n\n\"`\n\n```\n\n\n\n```\n1 = \"hhhhh", "```\n```\n\n\n\n\n\n```\ns1 = \"A a b c d d b c c d d d d\"\ns2 = \"A b d d d d d d d d d d d d d d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n1 = \"h"], "prompt": "\nQUESTION:\nGiven two strings s1 and s2, we want to visualize how different the two strings are.\nWe will only take into account the *lowercase* letters (a to z).\nFirst let us count the frequency of each *lowercase* letters in s1 and s2.\n\n`s1 = \"A aaaa bb c\"`\n\n`s2 = \"& aaa bbb c d\"`\n\n`s1 has 4 'a', 2 'b', 1 'c'`\n\n`s2 has 3 'a', 3 'b', 1 'c', 1 'd'`\n\nSo the maximum for 'a' in s1 and s2 is 4 from s1; the maximum for 'b' is 3 from s2.\nIn the following we will not consider letters when the maximum of their occurrences\nis less than or equal to 1.\n\nWe can resume the differences between s1 and s2 in the following string:\n`\"1:aaaa/2:bbb\"`\nwhere `1` in `1:aaaa` stands for string s1 and `aaaa` because the maximum for `a` is 4.\nIn the same manner `2:bbb` stands for string s2 and `bbb` because the maximum for `b` is 3.\n\nThe task is to produce a string in which each *lowercase* letters of s1 or s2 appears as many times as\nits maximum if this maximum is *strictly greater than 1*; these letters will be prefixed by the \nnumber of the string where they appear with their maximum value and `:`. \nIf the maximum is in s1 as well as in s2 the prefix is `=:`.\n\nIn the result, substrings (a substring is for example 2:nnnnn or 1:hhh; it contains the prefix) will be in decreasing order of their length and when they have the same length sorted in ascending lexicographic order (letters and digits - more precisely sorted by codepoint); the different groups will be separated by '/'. See examples and \"Example Tests\".\n\nHopefully other examples can make this clearer.\n\n```\ns1 = \"my&friend&Paul has heavy hats! &\"\ns2 = \"my friend John has many many friends &\"\nmix(s1, s2) --> \"2:nnnnn/1:aaaa/1:hhh/2:mmm/2:yyy/2:dd/2:ff/2:ii/2:rr/=:ee/=:ss\"\n\ns1 = \"mmmmm m nnnnn y&friend&Paul has heavy hats! &\"\ns2 = \"my frie n d Joh n has ma n y ma n y frie n ds n&\"\nmix(s1, s2) --> \"1:mmmmmm/=:nnnnnn/1:aaaa/1:hhh/2:yyy/2:dd/2:ff/2:ii/2:rr/=:ee/=:ss\"\n\ns1=\"Are the kids at home? aaaaa fffff\"\ns2=\"Yes they are here! aaaaa fffff\"\nmix(s1, s2) --> \"=:aaaaaa/2:eeeee/=:fffff/1:tt/2:rr/=:hh\"\n```\n# Note for Swift, R, PowerShell\nThe prefix `=:` is replaced by `E:`\n``` \ns1 = \"mmmmm m nnnnn y&friend&Paul has heavy hats! &\"\ns2 = \"my frie n d Joh n has ma n y ma n y frie n ds n&\"\nmix(s1, s2) --> \"1:mmmmmm/E:nnnnnn/1:aaaa/1:hhh/2:yyy/2:dd/2:ff/2:ii/2:rr/E:ee/E:ss\"\n```\ndef mix(s1, s2):\n\t\nUse Call-Based format\nANSWER:\n"}}