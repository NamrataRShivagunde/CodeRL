{"394": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nOutput:\n3\n\n\n\n\n\n\n    \nUse Class-Based format\n\n    minMoves2(self, nums: List[int])\n\n\n\n\n2\n\n\n\n by -1.\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\nGiven", "\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n    minMoves2(self, nums: List[int])\n    \nUse Call-Based format\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n2\n\n\n\n\n2\n\n\n2\n\n\nGiven a non-", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nminMoves:\n1\n\nminMoves2:\n2\n\n\n    minMoves2(self, nums: List)\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n2\n\n\n\nGiven a non-empty integer array", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    \n\n\n\nOutput: 3\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n by 2.\n\n\n\n\n2.\n\n\n\n[1,2,3]\n\n\n\n\n\n[1,2", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n[1,2,3]\n\nOutput:\n1\n\n\n    \nUse Python-Based format\n\nClass Solution:\n   \n        \n\n\n\n\n\n\n\n\n\n\n\n\n1,2,3\n\n\n\n\nGiven an array of", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    minMoves(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n by -1.\n\nUse Call-Based format\n\n\n\n\n[1,2,3]\n\n\n\n\nGiven an array with non-empty", "\n\n\n\n\n    minMoves2(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n\n    \nUse Call-Based format\n\nUse Class-Based format\n\nClass Solution:\n    def minMoves2(self, nums: List[int]):\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\nGiven a non-", "\n\n\n\n\n\n\n\n\n\n\n\n    \n\nUse Python-based format\n\nInput:\n[1,2,3]\n\nOutput:\n1\n\nExplanation:\n\n\n   \n    minMoves2(self, nums)\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\nGiven a non", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    minMoves2(nums: List[int])\n\nUse Call-Based format\n\nOutput:\n2\n\n\n        \n\n\n\n2\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n[1,2,3]\n\n\n\n\nGiven an array of", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    minMoves2(self, nums: List[int])\n\n\n\n    \nUse Call-Based format\n\n    minMoves2(self, nums)\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n1\n\n\n1\nGiven an empty integer array,", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nInput:\n\n[1,2,3]\n\nOutput:\n2\n\n\n\n   \n    minMoves2(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\n\n\nGiven an empty integer array, find", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n[1,2,3]\n\nUse Call-Based format\n\n\n    minMoves2(self, nums: List[int])\n           \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1,2,", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n[1,2,3]\n\nUse Call-Based format\n\n\n\n\n    minMoves2(self, nums: List[int])\n\n\n\n2\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\nGiven a non", "\n\n\n\n\n\n\n\n\n\n\n\nOutput:\n3\n\n\n\n\nUse Python 2.6 format\n\nUse Call-Based format\n\n\n\n    minMoves2(nums: List[int])\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\nGiven a non", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin moves:\n\n1\n\nMax moves:\n2\n\n\n\n\n\n\n2\n\n\n\n by -1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1,2,3]\n", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    minMoves2(self, nums: List[int])\n\nUse Call-Based format\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n    Use Call-Based format\n\n\n\n\n\n    Given a non-empty", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nClass Solution:\n       \n\n\nUse Call-Based format\n[1,2,3]\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n[1,2,3]\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nOutput:\n3\n\n\n\nOutput:\n3\n\n\n\n\n\n    minMoves(nums: List[int])\n    \n       \n\n\n\n2\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\nGiven a non-", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    minMoves2(self, nums: List[int])\n    \n\n\n       \n\nUse Call-Based format\n\n\n\n2\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n[1,2,2]\n\n\n\nGiven a non-empty integer array", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    \n\nUse Python-based format\n\n\nminMoves2(nums: List[int])\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\n\nGiven a non"], "prompt": "\nQUESTION:\nGiven a non-empty integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.\n\nYou may assume the array's length is at most 10,000.\n\nExample:\n\nInput:\n[1,2,3]\n\nOutput:\n2\n\nExplanation:\nOnly two moves are needed (remember each move increments or decrements one element):\n\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]\nclass Solution:\n    def minMoves2(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}