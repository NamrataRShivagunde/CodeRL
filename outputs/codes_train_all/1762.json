{"1762": {"code": ["\n\n\n\n\n\n\n\n\n\n\n\nInvalid Arguments\n\n- `K` is a string representing a number of turn\n- `K` is a number of turn\n- `K` is a number of turn\n\nInvalid Examples\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nK = mouse_", "```\n\nOutput\n\n\n\n\n\n\n- Example A: An overhead view of a house in the future\n- Example C: A overhead view of a house in the future\n\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- Example C: A sh Tree Lane\n\n\n\n```\n\nThe above examples above", "\n\n\n\n\n\n\n\n\nInput\n\n\n```python\n\n\n\n\n\n\n- The path is a string representing a number of integers\n- The path is a number of integers\n- The path is a string representing a number of integers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n```python\n\n\n", "\n\n\n\n\n\n\n\n\nInput\n\n\nExample:\n\n```python\nmouse_path('left') # 49\n\nInvalidation Examples\n\nExample:\n\n\n\n\n\n\n-\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n- `1` for a fully plan of", "```\n\n\n\n\n\n\n\n\n\nThe following examples:\n\n- The function should return an integer representing the area of the given path\n-\n\n\n\n\nOutput Examples\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample:\n\n- Example B: Groupings\n\n- Example C:\n\n\n\n\n\n```", "```\n\n\n\n\n\n\n\n\n\n\n\n\n- The function can only be called once per minute.\n- The function can only be called once per minute.\n- The function can only be called once per minute.\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\narea = K", "\n\n\n\n\n\n\n\n\n\nInput\n\n- `K` is a string representing a string representing a string representation of a string\n- `K` represents a string representation of a string\n- `L` represents a number of points\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```python\n\nif valid", "\n\n\n\n\n\n\n\n\n\n- Example A:\n\n Example B:\n\nA:\n\n```python\nmouse_path('left') # 49\n```\n\nInvalidating overlap path fragment examples\n\nInvalidating overlap path fragment examples\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n", "\n\n\n\n\nNo Path\n\n\n\n\n\nHow are you looking for:\n\n-\n\n\n\n\n\n\n\n- K's path will always be a positive integer, if not given, return `null`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n```\n\n```\n\n", "\n\n\n\n\n\n\n\n\n\nInput\n\n- Example A:\n\n- Example B:\n\n An overhead view of a house in a loop\n- Example C:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n```\n\n```\n\n```\n\n", "\n\n\n\n\n\n\n\n\n\n- The function should return a number representing the area of the K's path\n- The function should return an integer representing the number of turns\n- The function should return a number representing the number of edges.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nK =", "\n\n\n\n\n\n\n\n\n\nInput\n\n\n- Example A:\n\n- Example B:\n\n\n\n\nOutput\n\n\n\n\n-\n\nExample:\n\n```python\n\n\n\n\n- Example C:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nExample:\n\n```python\n\n```", "\n\n\n\n\n\n\n\n\n\n\n- Example A: Ash Tree Lane\n- Ash Tree Lane\n- Ash Tree Lane\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n# Example A\n\nK = 0\n\n\n\n\n```", "```\n\n\n\n\n\n\n\n\nInput\n\n- distance traveled and directional turn\n- `L`/`R` represents the direction of the path\n\n\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n-\n\n\n```python\n\n\n```python\n\n- The following example shows the overhead view of a house on a sh Tree", "\n\n\n\n\n\n\n\n\n\n\n\n- Example C:\n\n\n- `...` can be used for a point, `...` is an empty string.\n\n\n- `...` is not a valid string\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n```\n\n```\n\n```\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput\n\n- Example A: The overhead view of the house.\n\n\n\n-\n\n- K is not a valid path\n- K is a valid path\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nalongside walls\n\n```\n\n- `", "\n\n\n\nExample:\n\n**Example**\n\n\n\n\n\n\n\n\n\n\n\n\nExample:\n\n\n\n\n- The function can be called with a string argument\n- The function can be called with a number of integers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n- Example A: Perpendic", "\n\n\n\n\n\nInput:\n\n\n\n\n\nOutput\n\nExample\n\n- Example A:\n\n---\n\nA\n\n\n\n\n\n\n\n\n\n\nExample:\n\nA:\n\n- Example A:\n\n```\n\n\n\n\n\n\n\n\n\n\n\n- Example A:\n\n\n\n```python\n\n```\n", "\n\n\n\n\n\n\n\nInvalid Intersection\n\nExamples:\n\n- A\n1:\n\nK(K)\n\n\nExample:\n\nOutput\n\n```python\n\nInvalid\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- Example A:\n\n-\n\n\n\n```python\n\narea_", "\n\nExample:\n\nExample A:\nExample B:\nExample C:\n\n\n\nExample C:\n\n\n\n\n\n\n\n\n\n\n- Path must be a string representing a distance and direction.\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n```\n\n- Example A: Perpend"], "prompt": "\nQUESTION:\nAbove: An overhead view of the house in one of the tests. The green outline indicates the path taken by K\nA mouse named K has found a new home on Ash Tree Lane. K wants to know the size of the interior of the house (which consists of just one room). K is able to measure precise distances in any direction he runs. But K is wary of open spaces and will only run alongside walls, as mice tend to do. In this house the walls always connect at right angles.\nK's plan is to run alongside the walls, traversing the entire perimeter of the room, starting and ending at K's mousehole. K memorizes the path as an alternating sequence of distance traveled and directional turn. Your task is to write a function that will find the area of the house interior when given K's path.\nInput\n\nYour function will receive a string as an argument. The string will consist of turns (`L` or `R`, for `left` and `right`, respectively) and positive integers, in an alternating sequence. `L`/`R` represents the turn direction made by K, and the integers mark the number of distance units to move forward.\n\nOutput\n\nYour function should return an integer representing the area of the house, based on K's path. If K's path is not a valid path, return `null` or `None`.\n\nInvalid Paths\n\nA path is invalid if it meets any of the following criteria:\n- the path intersects/overlaps itself (with the exception of the mousehole when completing the loop); see examples of path fragments below\n- the path doesn't complete the loop back to the mousehole\n- the mousehole is located along the straight path of a wall (K's mousehole must be located at a convex/concave corner position to be valid)\n\nInvalidating overlap path fragment examples\n\n\n\n\n- Example A: Perpendicular intersection `...5L2L3L4...`\n- Example B: Point of overlap `...2L2R3R2R3L2...`\n- Example C: Parallel overlap `...4L2R2R3R4R1L2...`\n\nTest Example\n\nThe circled K and green arrow indicate the starting position and direction as given in the example test below\n\n```python\nmouse_path('4R2L1R5R9R4R4L3') # 49\n```\n\nAdditional Details\n\n- K's path will always consist of fewer than `500` turns\n- The area of the house (when valid) will always be less than `2**32`\n- Full Test Suite: `12` fixed tests and `150` random tests\n- Use Python 3+ for the Python translation\n- For JavaScript, most built-in prototypes are frozen, except `Array` and `Function`\n- All inputs will be of valid type and pattern (that is, it will alternate between distance moved and directional turn)\n- NOTE: the random test generator may, on very rare occasions, throw an error (around 0.01% of the time, based on my observation); if you get an error pointing to the random test function, try running your solution again.\n- This kata was inspired by [Kafka](https://en.wikipedia.org/wiki/A_Little_Fable) and [Danielewski](https://en.wikipedia.org/wiki/House_of_Leaves)\n\nIf you enjoyed this kata, be sure to check out my other katas\ndef mouse_path(s):\n\t\nUse Call-Based format\nANSWER:\n"}}