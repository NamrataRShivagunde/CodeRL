{"1876": {"code": ["\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n       #\n#       #\n##  # ###\n#########\n\n\n\n\nExample 4:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#  # ###\n\n\nWe are given an elevation map", "\nUse Call-Based format\n\n##  # ###\n#########\n\n\nCall-Based format:\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#########\n\n\n\n\n\nWe are given an elevation map,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nWe are given an elevation map, heights[i] represents an elevation map at index i.\n\n\n\n\nExample 4:\n\n   \n\n\n\nExample 5:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an elevation map", "\nUse Call-Based format\n\n#   #\n##  # ###\n#\n\n\nUse Call-Based format\n\n\n\n\n\n\nExample 4:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#       #\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an elevation map, heights[", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nWe are given an elevation map, heights[i] represents an elevation map, heights[i] represents an elevation map.\n\n\n\n   \n\n\n\n\n\n\n\n#       #\n#       #\n\n\n\n\n\n\n\n\n\nWe are given an elevation map, heights", "\nUse Call-Based format\n\n##  # ###\n#####\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    def\n\n\n\n\n\n\n#       #\n#       #\n\n\n\n\n\n\n\n    #\n\n\n\nWe are given an elevation map", "\n\n\n#    # ###\n#\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\n\nExample 4:\n\n   \n\n\n\n\n\n    def pourWater(self, heights, V, K):\n\n\n\n\n\n\n\n\n\n\n\n\n\n#########\n###\n#####\n\n\nWe are given an", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nExample 4:\n\n    def pourWater(self, heights, V, K):\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#       #\n\n\n\n\n\n\n\nWe are given an elevation map\n\n\n\nWe are given an elevation map", "\nUse Call-Based format\n\n#       #\n#       #\n#########\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nNOTE:\n\n    Use Call-Based format\n\n\n\n\n\n\n\n   \n\n\n#       #\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote:\n\n    If you are", "\n\n\n#       #\n#       #\n#       #\n#       #\n#       #\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    def pourWater(self, heights: List[int], V: int, K: int) ->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an elevation map", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nExample:\n\n    def pourWater(self, heights, V, K):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#########\n\n\n\n\n\n\n\n\n\nWe are given an elevation map, heights", "\n\n\n#########\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nWe are given an elevation map, heights[i] represents an elevation map, heights[i] represents an elevation map.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an elevation map, heights[", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\nExample 4:\n\n    DefineWater(self, heights, V, K):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#########\n\n\n\n\n\n#       #\n#       #\n\n\nWe", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nExample 4:\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an elevation map, heights", "\nUse Call-Based format\n\n#       # ###\n#       #\n##  # ###\n#####\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def\n\n\n\n\n\n\n\n\n\n#       #\n##  # ###\n\n\n\n\n\n\n\n\n\nWe are given an elevation map", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nThe following examples:\n\n\n\n\n\n\n\n   \n\n\n#       #\n#       #\n\n\n\n\n\n\n\n\n\n\n\n##  # ###\n\n\nWe are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nExample 4:\n\n    from pycbc.solvers.solvers import Solution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n#\n\n\n\nWe are given", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nExample 4:\n\n    def pourWater(self, heights, V, K):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given an elevation map, heights[i]\n\n\n\n\nWe", "\nUse Call-Based format\n\n\n\nExample 3:\n\nInput: heights, V, K:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#  # ###\n###\n\n\nWe are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nWe are given an elevation map, heights[i]\n\n\n\n   \n\n\n\n\n\n\n#       #\n#       #\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n"], "prompt": "\nQUESTION:\nWe are given an elevation map, heights[i] representing the height of the terrain at that index.  The width at each index is 1.  After V units of water fall at index K, how much water is at each index?\n\nWater first drops at index K and rests on top of the highest terrain or water at that index.  Then, it flows according to the following rules:\nIf the droplet would eventually fall by moving left, then move left.\nOtherwise, if the droplet would eventually fall by moving right, then move right.\nOtherwise, rise at it's current position.\nHere, \"eventually fall\" means that the droplet will eventually be at a lower level if it moves in that direction.\nAlso, \"level\" means the height of the terrain plus any water in that column.\n\nWe can assume there's infinitely high terrain on the two sides out of bounds of the array.  Also, there could not be partial water being spread out evenly on more than 1 grid block - each unit of water has to be in exactly one block.\n\n\nExample 1:\n\nInput: heights = [2,1,1,2,1,2,2], V = 4, K = 3\nOutput: [2,2,2,3,2,2,2]\nExplanation:\n#       #\n#       #\n##  # ###\n#########\n 0123456    \n\n\nExample 2:\n\nInput: heights = [1,2,3,4], V = 2, K = 2\nOutput: [2,3,3,4]\nExplanation:\nThe last droplet settles at index 1, since moving further left would not cause it to eventually fall to a lower height.\n\n\n\nExample 3:\n\nInput: heights = [3,1,3], V = 5, K = 1\nOutput: [4,4,4]\n\n\n\nNote:\nheights will have length in [1, 100] and contain integers in [0, 99].\nV will be in range [0, 2000].\nK will be in range [0, heights.length - 1].\nclass Solution:\n    def pourWater(self, heights: List[int], V: int, K: int) -> List[int]:\n        \nUse Call-Based format\nANSWER:\n"}}