{"824": {"code": ["\n\n kill\n kill all\n kill all nodes\n\n\n\n\n\n\n\n\n\n   \n    no.\n\n\n    no.\n\n\n\n\n\n kill all\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    # Making a network with the network\n\n   \n\n    # The output is a food, which is just the network", "\n devises\n\n\n kill\n\n\n\n\n\n devises\n\n\n\n\n\n\n\n to be revealed:\n\n \n\n \n \n\n kill all nodes\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##\n\n\n\n\n\n\n\n\n\n\n", "\n\n kill\n kill\n devised\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTIP:\n\nThe corruption is about a short-term.\nThe corruption is about a short-term.\n\nTIP:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n kill all nodes in the network.\nGru devisves all nodes in the network.\nGru devisves all nodes in the network.\nGru devisves all nodes in the network.\n\nThe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n#\n# The officials are", "\n death\n kill\n\nGru death\n\nGru death\n\nGru death\n\nGru death\n\nGru death\n\n\nThe operation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n kill\n\n\n\n\n\n       \n       \n\n\n\n       \n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1$1$\n\n\n2$\n\n\n\n\n\n1$\n\n\n1$\n\n\n1$\n", "\n\n\n\n\n\n\n kill all nodes\n\n\n\n2\n\n\n\n\n\n on the top\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  * The numbered nodes are numbered\n * The nodes are number", "\n\n kill\n\n\n kill\n\n\n kill\n\n\n\n\n\n\n    :\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n   \n\n   \n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n    Topmost node:\n\n    Topmost level:\n    Topmost", "\n\n kill the network and all the nodes\n\n\n\n death the network.\n\nNote: kill the network and all the nodes\n\n\n\n be done by a bit lazy.\n\n\n kill the network and all the nodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    #\n\n\n   \n\n   \n\n    #\n\n    :return", "\n more recent\n\n kill all officials\n\n \n\n kill all officials\n\nHoly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n#\n# The officials are in the network.\n#\n#\n#\n#", "\n\n\n\n kill\n\n\n\n\n kill\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe corruption network can be deveveed and the most recent operation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  :param node", "\n\n\n\n\n\n kill the network\n\nYou can't use the corruption network, they are still the same.\nYou can't use the corruption network.\n\nYou can also use the corruption network.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n    Having the operation applied, the network is just which", "\n be\n\n \n \n\n kill his beloved network\n \n\n\n\n\n\n he needs to be revealed.\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n    NOTE:\n\n    This is a handy way to apply the corruption network\n\n\n    :param nodes: \n", "\n\n\n\n\n\n\n kill the official\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    1)\n\n\n\n2)\n\n\n\n\n3)\n\n#\n#\n#\n#\n", "\n kill all nodes\n\n kill all nodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n no.$no.$of$ components$components$\n\n\n\n kill all the branches\n\nhere:\n kill all the branches\n\nhere:\n\nThe network is overdue and overdue\n\nBrownian\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n kill\n kill\n\n death\n\n kill\n\n\n\n   \n   \n\n   \n \n \n kill\n\n\n\nNOTE:\n\n death\n\nNOTE:\n\n \n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n    For each node, it is a leaf and has no parent.\n\n    Then the number off", "\n kill all the\n\n\n\n kill all the\n\n\n\n\n\n\n\n0:\n\n \n   \n\n\n\n \n\n\n1:\n \n\n\n0:\n\n\n\n1:\n\n1:\n\n0:\n2:\n1$\n2:\n2:\n1:\n0:\n\n\n\n\n\n\n# No more", "\n\n\n kill all the nodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n death kill\n\nTODAY:\n\nThe network can be completed on the network.\n\nTODAY:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        N-1\n\n        N-2\n\n\n       \n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n    The"], "prompt": "\nQUESTION:\nCorruption is on the rise in the country of Freedonia, Gru's home. Gru wants to end this for good and for that he needs the help of his beloved minions.\nThis corruption network can be represented in the form of a tree having N$N$ nodes and N\u22121$N-1$ edges. The nodes are numbered from 1$1$ to N$N$, and the tree is rooted at node 1$1$. These nodes represent the corrupt officials and each corrupt official works under some other corrupt official except the Boss who is represented by node 1$1$.\nGru believes in divide and conquer and thinks that this network needs to be divided into as many sub-networks as possible.\nHe commands the minions to kill some of the corrupt officials in order to break the network into maximum sub-networks. But as you know, these corrupt officials are very sharp, and hence these assassinations need to be done very smartly and silently, without leaving any traces.  To achieve this Gru devises a strategy, in which he designs an operation, and that operation can be applied by the minions any number of times (even 0). \nIn one operation the minions can select any one leaf node official [that is an official who does not have any other official beneath him] in the graph and kill him along with all his ancestors$ancestors$ officials till the root$root$ of the tree in which the operation is applied (this is done to wipe all traces of the operation). This deleted all those nodes from the graph, and also, while doing so, all the associated edges/connections$edges/connections$ of the leaf node and its ancestors are also destroyed. Hence after applying this operation on any tree, it breaks into some connected components which are also trees, which are the new sub-networks.\nNow the minions are a bit lazy and will do the task someday, but they need to submit a report to Gru containing the number of the maximum$maximum$ connected$connected$ components$components$ that they could achieve by applying the operation any number of times. To do this, the minions require your help. So help the minions by finding out the maximum$maximum$ no.$no.$ of$of$ connected$connected$ components$components$ that can be achieved.\nNote: After each operation, the topmost node (node with the lowest level. It can be proved that there will always be a unique node with the lowest level in each tree) of each of the remaining trees becomes the root of that particular tree (that is, after the first operation it can be visualized that the graph converts into a forest of rooted trees)\n\n-----Input:-----\n- First line will contain N$N$, number of nodes in the tree. \n- Next N\u22121$N-1$ lines contains 2 integers U$U$, V$V$ denoting the endpoints of the ith$i^{th}$ edge.\n\n-----Output:-----\n- Print the maximum number of connected components you can obtain after doing the operation any number of times.\n\n-----Constraints-----\n- 1\u2264N\u2264106$1 \\leq N \\leq 10^6$\n- 1\u2264U,V\u2264N$1 \\leq U,V \\leq N$\n\n-----Sample Input:-----\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n\n-----Sample Output:-----\n2\n\n-----EXPLANATION:-----\nWe have 4 leaf nodes in this tree: 4 5 6 7. Suppose we delete node 5, then along with it we also delete node 2 and node 1. so after the deletion we are left with 2 trees, one consisting of only node 4 as the root node of that particular tree, and the other consisting of node 3,6,7 with node 3 as the root node. This can also be achieved by deleting any of the other leaf nodes and it can be proved that we cannot obtain more than 2 connected components in this example.\nUse Standard Input format\nANSWER:\n"}}