{"463": {"code": ["\nUse Call-Based format\n\n\n    maxValueAfterReverse(self, nums) -> int:\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\n        return 0\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\u00a0\n\nBy specifying the", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   :\n        pass\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\nYou are given an integer array nums.You", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\u00a0\n\n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\n\u00a0\nExplanation:\n\n\n\n\n\n\n\nYou are given an integer array nums.", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        \"\"\"\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\nUsage:\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\nYou are given", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\n\n   \n       ...\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\nYou are given an integer array nums.\n\n\n\nYou are given", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\n\n\n   \n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\nYou are given an integer array nums.\nBy", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\n\n\n   \n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an integer array nums.\n\n\nBy giving", "\nUse Call-Based format\n\n\n    maxValueAfterReverse(self, nums) -> int:\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\nYou are given an integer array nums.By", "\nUse Call-Based format\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\nYou are given an integer array nums.\n\n   \n        pass\n\n\n\n\n\n\n\n\n\nYou are given an integer array nums.\n\n\n\n\n\nYou are given an integer array", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nExplanation:\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n\n   \n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\nYou are", "\nUse Call-Based format\n\n\n    maxValueAfterReverse(self, nums): int\n\nUse Call-Based format\n\n\n\n\n   \n\nYou are given an integer array nums.\n\n   \n       \n\n\n\n\n\u00a0\n\n\nThe number of elements in the array is known.\n\n\n\n\n\n\n\n\n\nYou are given an integer array nums.", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\u00a0\n\n\nYou are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\nExplanation:\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\n\n\n\n\nYou are given an integer array", "\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\u00a0\nUse Call-Based format\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nyou are given an integer array nums\n\n\n\nYou are", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse = maxValueAfterReverse\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\nYou are given an integer array numsYou", "\n\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   \n        return self.maxValueAfterReverse(nums)\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nYou are given an integer array nums.\n\n\n\n\nYou are", "\nUse Call-Based format\n\n\nUse Call-Based format\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\nUse Call-Based format\n\n\n   \n\n\n\n   \n        pass\n\n\n\n\nExplanation: The maximum possible value is 10\n\n\n\u00a0\n\n\n\n\n\nYou are given an integer array nums.By", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums: List[int]) -> int:\n\n\n\n\n\n\n   \n\n\n\n   \n        return 1\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\nYou are given an integer", "\nUse Call-Based format\n\n\n    maxValueAfterReverse(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n    maxValueAfterReverse(self, nums) -> int\n\n\u00a0\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\nYou are given", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    maxValueAfterReverse(self, nums) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n   \n        pass\n\n\n\n\n\n\nYou are given an integer array nums.\n\n\u00a0\n\n\n\n\n\n\n\nYou are given an integer array nums."], "prompt": "\nQUESTION:\nYou are given an integer array nums. The value of this array is defined as the sum of |nums[i]-nums[i+1]|\u00a0for all\u00a00 <= i < nums.length-1.\nYou are allowed to select any subarray of the given array and reverse it. You can perform this operation only once.\nFind maximum possible value of the final array.\n\u00a0\nExample 1:\nInput: nums = [2,3,1,5,4]\nOutput: 10\nExplanation: By reversing the subarray [3,1,5] the array becomes [2,5,1,3,4] whose value is 10.\n\nExample 2:\nInput: nums = [2,4,9,24,2,1,10]\nOutput: 68\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 3*10^4\n-10^5 <= nums[i] <= 10^5\nclass Solution:\n    def maxValueAfterReverse(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}