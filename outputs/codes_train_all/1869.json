{"1869": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n# Definition for a binary tree node\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\nWe run a\ufffd", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\u00a0\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n\n\u00a0\n\u00a0\n", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\u00a0\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\n\nWe run a depth", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\n# Definition for a binary tree node\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\n\nWe run a depth first search on", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\nWe run a\u00a0preorder depth first search on the root of a binary tree.\n\n\n\n\nWe run a\u00a0depth first search on", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\nWe run", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\nWe run a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nWe run a preceding depth first search on the root of a binary tree.\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\nWe run a\u00a0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\nWe run a depth first search on the root", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n# Definition for a binary tree node\n\n\n\n\n\nWe run a depth first search on a root of a binary tree.\n\n\n\n\nWe run a depth first search on a", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n# Definition for a binary tree node.\n\n\n\u00a0\n\n\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\n\nWe run a depth first", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\n\n\n# Definition for a binary tree node.\n\n\n\n\nWe return the root of the binary tree.\n\n\n\n\nWe run a\u00a0depth first", "\nUse Call-Based format\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\nWe run a depth first search on a root of a binary tree.\n\n\n\n\n\nWe run a depth first search on", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\u00a0\n\n# Definition for a binary tree node.\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\nWe run a\u00a0depth first search on", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n# Definition for a binary tree node\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\nWe run a depth first search on the root of a", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\u00a0\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\n\nWe run a depth first search on the root", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n# Definition for a binary tree node\n# Definition for a binary tree node\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n# Definition for a", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\n\nWe run a depth first search on the root of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n# Definition for a binary tree node\n\n\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe run a depth first search on the root of a binary tree.\n\n\n\n\nWe run a", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\u00a0\n\n\n\n\nWe run a depth first search on a binary tree.\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\u00a0\u00a0\u00a0\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nS:\n    S ="], "prompt": "\nQUESTION:\nWe run a\u00a0preorder\u00a0depth first search on the root of a binary tree.\nAt each node in this traversal, we output D dashes (where D is the depth of this node), then we output the value of this node.\u00a0\u00a0(If the depth of a node is D, the depth of its immediate child is D+1.\u00a0 The depth of the root node is 0.)\nIf a node has only one child, that child is guaranteed to be the left child.\nGiven the output S of this traversal, recover the tree and return its root.\n\u00a0\nExample 1:\n\nInput: \"1-2--3--4-5--6--7\"\nOutput: [1,2,5,3,4,6,7]\n\n\nExample 2:\n\nInput: \"1-2--3---4-5--6---7\"\nOutput: [1,2,5,3,null,6,null,4,null,7]\n\n\n\u00a0\n\nExample 3:\n\nInput: \"1-401--349---90--88\"\nOutput: [1,401,null,349,88,90]\n\n\n\u00a0\nNote:\n\nThe number of nodes in the original tree is between 1 and 1000.\nEach node will have a value between 1 and 10^9.\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def recoverFromPreorder(self, S: str) -> TreeNode:\n        \nUse Call-Based format\nANSWER:\n"}}