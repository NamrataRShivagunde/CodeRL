{"2484": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\n\n\n           \nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nstr1\u00a0and str2\u00a0\n\nFor", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\n\nstr1\u00a0and str2\u00a0consist of\u00a0English uppercase letters.\n\n           \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nFor two strings s and t, we say \"", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\n\nstr1\u00a0 and str2\u00a0consist of English uppercase letters.\n\n   \n        pass\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t, we say", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\u00a0\n\n\n\n\n          \n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n1\u00a0and str2\u00a0\n\n\n\nFor two strings", "\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nReturns:\n\nn:\n   \n\n\n\n       \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n    self.gcdOfStrings(str1, str2)\n        \nUse Call-Based format\n\n\n       \n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= x <= x <=", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\n\n\n   \n    pass\n        \n\nt\u00a0divides s\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nFor two strings s and t, we say \"t\ufffd", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\nUse Call-Based format\n\n\n   \n        pass\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nFor two strings s and t, we say \"", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\n\n           \nUse Call-Based format\n\n\n\n\n\n\n\n\n\ns = t\nt = t\n\n\n\n\n\n\nFor two strings", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\n\nstr1\u00a0and str2\u00a0consist of English uppercase letters.\n\n          \n        \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t, we say", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\n\n\n   \n    pass\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nFor two strings s and t, we say \"", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n           \nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nFor two strings s and t, we", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\nUse Call-Based format\n\n   \n        pass\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t,", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\nstr1\u00a0and str2\u00a0consist of English uppercase letters.\n\n          \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t,", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\u00a0\nConstraints:\n\n1 <= str1 <= str2 <= 1\n\n\n\n\n\n   :                Input:\n\n\n\n\n\n\n\n\n\n\nFor two strings", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\nstr1\u00a0and str2\u00a0consist of\u00a0English uppercase letters.\n\n          \n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t, we say \"", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\n\nstr1\u00a0 and str2\u00a0consist of English uppercase letters.\n\n   :\n\n\n\n\n\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n\n\nFor two", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nReturns:\n\n\n\n\n   :\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nFor two strings s and t, we", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\n\n\nstr1\u00a0and str2\u00a0consist of English uppercase letters.\n\n          \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor two strings s and t, we", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\n\n   \n        pass\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n1\n\n\n\nFor two strings s and t, we"], "prompt": "\nQUESTION:\nFor two strings s and t, we say \"t divides s\" if and only if s = t + ... + t\u00a0 (t concatenated with itself 1 or more times)\nGiven two strings str1 and str2, return the largest string x such that x divides both\u00a0str1\u00a0and str2.\n\u00a0\nExample 1:\nInput: str1 = \"ABCABC\", str2 = \"ABC\"\nOutput: \"ABC\"\nExample 2:\nInput: str1 = \"ABABAB\", str2 = \"ABAB\"\nOutput: \"AB\"\nExample 3:\nInput: str1 = \"LEET\", str2 = \"CODE\"\nOutput: \"\"\nExample 4:\nInput: str1 = \"ABCDEF\", str2 = \"ABC\"\nOutput: \"\"\n\n\u00a0\nConstraints:\n\n1 <= str1.length <= 1000\n1 <= str2.length <= 1000\nstr1\u00a0and str2\u00a0consist of\u00a0English uppercase letters.\nclass Solution:\n    def gcdOfStrings(self, str1: str, str2: str) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}