{"1814": {"code": ["\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\nOutput:\n    [2, 1]\n\n\n\n\n\n\n\n\nOutput:\n    [3, 4]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExclusive time:\n\n\n\n\n    Input:", "\nUse Call-Based format\n\n\nCall-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven the running logs of n functions that", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nExplanation:\n\nOutput:\n\nExclusive time of function 0\n\nExplanation:\n\n\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n\nTrue :\nTrue", "\n\nUse Call-Based format\n\n\n    exclusiveTime(self, n, logs) -> List[int]:\n\n\n\n\n\n\n\nOutput:\n    [4, 6]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nInput:\n\n\n\n\n\ninput logs: \n", "\n\n\n    exclusiveTime(self, n, logs) -> List[int]\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis function can be called recursively.\n\n\n\n\n\n\n\n\n\n\nOutput", "\n\nUse Call-Based format\n\n\n\nCall-Based format:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n \n\n\n\n    exclusiveTime(self, n, logs)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation 1:\n\nExplanation 2:\n\n\n\n\n\n\n\n    Input:", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nOutput:\n\n0 + 1 + 2 + 3 + 4\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nExample 3:\n\n\n\n\n\n\n\n\n\n    Output:", "\n    def exclusiveTime(self, n, logs: List[str]) -> List[int]:\n        \"\"\"\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n \n\n\n\n\n\n\n\n\n\n\n   \n\n\n\nOutput:\n\n\n\n\nGiven the running logs of", "\n    Simple Function-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nExample 2:\n\nOutput: [3, 4]\n\nExplanation:\n\n\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExclusive time of a function:\n\n\nGiven the", "\n\nUse Call-Based format\n\n\nExample 2:\n\nInput:\n    n = 3\nlogs = \n[\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n    Input:", "\n\nUse Call-Based format\n\n\n\n\nCall-Based format\n\n\n\nOutput:\n    [3, 4]\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:\n\n\nOutput:", "\n\n\n\nUse Call-Based format\n\n\n\nOutput:\n[1, 3, 4]\n\nExplanation:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nOutput:\n[2, 4]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[0:start:0]\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nOutput:\n\n    exclusiveTime(self, n, logs)\n\n\n\n\n\n\n    exclusiveTime(self, n, logs)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \"\"\"\n    return [", "\n\nUse Call-Based format\n\n\n\nCall-Based format:\n\nUse Call-Based format\n\n\n\n\n\n\n\nExplanation:\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> from time import time\n", "\n    # Use Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nExample 2:\n\n   \n\n\n\n\nExample 2:\n\n    exclusiveTime(self, n, logs)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* Explanation:\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nOutput:\n    [3, 4]\n\n\n\n\n\n\n\n\n\n\nOutput:\n\n\n\n\n\n\n\n    exclusiveTime(self, n, logs)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the running logs of n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nOutput:\n\n1 - 2 - 3 - 4\n\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    exclusiveTime(self, n, logs)\n\n\n\n", "\n    def exclusiveTime(self, n: int, logs: List[str]) -> List[int]:\n        \"\"\"\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:\n\n\n\n\n\n\n\n\n    n = 2\nlogs", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nInput:\n    n = 1\nlogs = \n[\n    \"0:start:2\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Explanation:", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nNote:\n\n\n\n\n\n\n\n\nInput logs:"], "prompt": "\nQUESTION:\nGiven the running logs of n functions that are executed in a nonpreemptive single threaded CPU, find the exclusive time of these functions. \n\nEach function has a unique id, start from 0 to n-1. A function may be called recursively or by another function.\n\nA log is a string has this format : function_id:start_or_end:timestamp. For example, \"0:start:0\" means function 0 starts from the very beginning of time 0. \"0:end:0\" means function 0 ends to the very end of time 0. \n\nExclusive time of a function is defined as the time spent within this function, the time spent by calling other functions should not be considered as this function's exclusive time. You should return the exclusive time of each function sorted by their function id.\n\nExample 1:\n\nInput:\nn = 2\nlogs = \n[\"0:start:0\",\n \"1:start:2\",\n \"1:end:5\",\n \"0:end:6\"]\nOutput:[3, 4]\nExplanation:\nFunction 0 starts at time 0, then it executes 2 units of time and reaches the end of time 1. \nNow function 0 calls function 1, function 1 starts at time 2, executes 4 units of time and end at time 5.\nFunction 0 is running again at time 6, and also end at the time 6, thus executes 1 unit of time. \nSo function 0 totally execute 2 + 1 = 3 units of time, and function 1 totally execute 4 units of time.\n\n\n\nNote:\n\nInput logs will be sorted by timestamp, NOT log id.\nYour output should be sorted by function id, which means the 0th element of your output corresponds to the exclusive time of function 0.\nTwo functions won't start or end at the same time.\nFunctions could be called recursively, and will always end.\n1\nclass Solution:\n    def exclusiveTime(self, n: int, logs: List[str]) -> List[int]:\n        \nUse Call-Based format\nANSWER:\n"}}