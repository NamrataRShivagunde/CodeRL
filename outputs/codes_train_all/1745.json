{"1745": {"code": ["\n\n\n\n\n\n\n\n\n$(expression)\n\n### Notes\n\n### Conversions\n\n10**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**Expression**\n\n\n\n\n\n\n### Notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Notes\n\n### Logic:\n\n\n\n\n\n\n\n### Parameters", "\n\n\n\n\n\n\n\n\n### Example:\n\n### Formula:\n\n### Calculate\n\n### Simple Expression\n\n### References:\n\n### Explode\n\n### Number\n\n###\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$+ = add*", "\n\n\n\n\n\n\n\n\n### Note:\n\n**Example**\n\n### Logic:\n\n### Further Notes:\n\n### Number and mathematical expressions\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Evaluation:\n\n###\n\n\n\n\n\n\n\n\n\n\n### Test:\n\n\n1. Brackets e", "\n\n\n\n\n\n\n\n\n* Mathematical expressions are very complicated to handle\n* *\n* *\n* *\n* *\n* *\n*\n*\n\n**Examples:**\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n# An example of the usage below:", "\n### Parameters:\n\n\n\n\n\n\n\n\n\n\n\n## Evaluation\n\n### Pre-conditions\n\n**Expression**\n\n\n\n\n\n\n\n\t\n\n\n### References\n\n### Examples\n\n###\n\n\n\n\n### Note\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Returns\n\n\n\n1. The", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$1 + 2 + 3\n\n$2 + 3\n\n$3 + 4\n\n$4 = 5        \n$5 = 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Fallback:\n\n$1 = add\n\n\n1", "\n\n\n\n\n\n\n\n\n\ncalculate('a.b.c')\n\n# Parse:\n#\n\n#\n\n\n### Functions:\n#\n\n\n\n### Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### References:\n\n###\n\n\n## Example:", "\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format:\n\n1. No string formatting\n2. No string formatting\n3. No string formatting\n\n2. No string formatting\n\n4. No string formatting\n\n2. No string formatting\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1. Brackets", "\n\n\n\n\n### Example\n\n\n\n\n\n\n\n### Example\n\n# This calculator takes a string as input and calculates an expression\n###\n\n1. The number of digits\n\n1. The number of digits\n\n10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Brackets\n#\n\n$1 =", "\n\n\n\n\n\n\n\n\n\n\n### Formulas\n\n### Functions\n\n## Example\n\n### Functions\n\n### Functions\n\n### Performant expressions\n\n### Number\n\n###\n\n\n\n\n\n\n\n\n\n\n\n### Intermediate:\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Examples:\n\n### Add a", "\n\n\n\n\n\n\n\n\n\n$('$')\n\n# -\n\n$('')\n\n### Note:\n\n\n\n### References:\n\n### References:\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# References:\n\n###\n\n\n\n\n# +", "\n\n\n\n*\n\n* 10^9^3\n\n**Example**\n\n* 10^3^4^6^5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Formulas\n\n\n\n\n\n\n\n\n\n\n### Todo:\n\n### Error messages\n\n\n\n\n# Example 1", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* -* = add      \n* -* = subtract\n* * = subtraction\n* -$ = subtract\n* +$ = divide\n\n\n\n\n\n### Examples:\n\n###\n\n\n\n\n\n\n\n\n\n\n### Return\n\nreturn\n\n\n\n# Bracket", "\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n1. The number of operands\n\n2. The number of square root, log, or subtraction\n\n3. The number of divide\n\n**Examples:**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Note:\n\n1.", "\n\n### Prevention:\n\n\n\n\n\n\n\n\n\n\n### References:\n\n### Call-Based format\n\n### Calculate\n\n### Number\n\n1. Number\n\n2. Number\n\n3. Number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### References:\n\n### Number\n", "\n\n\n\n\n\n\n\n\n\n### Safety Note:\n\n### The following two examples:\n\n### References:\n\n**Examples:**\n\n**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### The other notes:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n\n10*2", "\n\n\n\n\n\n\n\n\n### Example:\n\n1. The calculate function is a Python function.\n2. The calculate function is a Javascript function.\n3. The calculate function is a function\n\n### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n###\n\n\n\n\n\n\n\n### The final challenge:\n\n\n\n\n\n\n\n###", "\n\n### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n# TODO:\n\n# Performance:\n\n\n\n\n\n\n# A more complicated calculator\n#\n\n### Example:\n\n###\n\n\n\n\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n### Notes:\n\n###\n\n\n###\n\n# Brackets", "\n\n\n\n\n\n\n### Formulas\n\n### Simple syntax\n\n### Performance:\n\n### Function-Based syntax\n\n### Simple syntax\n\n### Number syntax\n\n### Number syntax\n\n### Number syntax\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Function-Based syntax\n\n\n1.", "\n\n\n\n\n\n\n\n\n\n### Performance:\n\n### Treats\n\n### Simple mathematical expression:\n\n1. Treats number and string\n\n### Treats string\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Functions\n\n\n$1 = add"], "prompt": "\nQUESTION:\nThis calculator takes values that could be written in a browsers route path as a single string. It then returns the result as a number (or an error message).\n\nRoute paths use the '/' symbol so this can't be in our calculator. Instead we are using the '$' symbol as our divide operator.\n\nYou will be passed a string of any length containing numbers and operators:\n\n* '+' = add        \n* '-' = subtract  \n* '*' = multiply \n* '$' = divide   \n\nYour task is to break the string down and calculate the expression using this order of operations. (division => multiplication => subtraction => addition)\n\nIf you are given an invalid input (i.e. any character except `.0123456789+-*$`) you should return the error message:`'400: Bad request'`\n\n### Remember:\n\n1. Operations are infinite\n2. Order of operations is imperitive\n3. No `eval` or equivalent functions\n\n**Examples:**\n```python\ncalculate('1+1')     => '2'\ncalculate('10$2')    => '5'\ncalculate('1.5*3')   => '4.5'\n\ncalculate('5+5+5+5') => '20'\n\ncalculate('1000$2.5$5+5-5+6$6') =>'81'\n\ncalculate('10-9p')   =>  '400: Bad request'\n```\n\n### Further Notes - Parameters outside of this challenge:\n\n- Brackets e.g. 10*(1+2)\n- Square root, log, % or any other operators\n- Unary minus (10*-1)\n- Bad mathematical input (10**$10 or 5+5$)\n- You may have to deal with floats\n\nIf enjoy this and want something harder please see http://www.codewars.com/kata/evaluate-mathematical-expression/ for making a much more complicated calculator. This is a good kata leading up to that.\ndef calculate(expression):\n\t\nUse Call-Based format\nANSWER:\n"}}