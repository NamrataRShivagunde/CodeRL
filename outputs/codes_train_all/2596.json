{"2596": {"code": ["\n\n\n\n\n\n\n>>> print set(enumerate())\nset([])\n\n>>> print set(set())\n\n>>> print set([])\n\n>>> print set([])\n\n>>> print set([])\n\n>>>\n\n\n\n\n\n\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe first", "\n\n\nTotal Heights:\n1<N<100\n1<N<N<N>\n1<N<N>\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    average(array)\n\n\n\n\n\n\n\n\n\n\naverage([1,2,3,4,5,6,8,9])\n\n#", "\n\n\n\n\n\nset('HackerRank')\nset('HackerRank')\nset('HackerRank')\nset('HackerRank')\n\nQUESTION:\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n    for k in ['H','c','", "\n\n\n\n\n\n\n\n\n\n\nset()\n\nset(['Hacker','Rank'])\nset(['Hacker','Rank'])\nset(['Hacker','Rank'])\n\n print set()\n\n\n\n\n\n\n\n#\n\n\n\n\n\n\naverage(array)\n\n=====Output Format=====\n\n\n[3, 2,", "\n\n\n\n\n\nset('HackerRank')\nset(set('HackerRank', 'DOSHI'))\nset('HackerRank')\n\nquestion:\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\naverage(array)\n\n\n\n    average(array)\n\n=====Output", "\n\n\n\n\n\n\n\n>>> print set(set(['HackerRank', 'DOSHI', 'Rank']))\nset(set(set(range(9))))\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\nset('HackerRank')\nset('HackerRank')\n\n\n\n\n\n#", "\n\n\n\n\n\n\nset(['HackerRank', 'HackerRank', 'HackerRank', 'HackerRank', 'Rank', 'Rank', 'Rank'])\n\n\n\n\n\n\n\n\n\n\n\n\n1<N\u2264100\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\n\n\n    # the first line contains", "\n\n\n\n\n\n\nset()\n\n>>> print set()\nset()\n\n>>> print set()\n\n=====Problem Statement=====\n\n\n\n\n\n\n\n\n\n\n\n\n#     'HackerRank'\n#     'HackerRank'\n\n\n\n\n\n\n\n\n\n\n\n\n#     print sum(arr)\n#    ", "\n\n\n\n\n\n\nset([0,1,2,3,4,5])\nset(['HackerRank'])\n\nset(['HackerRank'])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    sum(array)\n\n>\n\n\n# 0<N<=", "\n\n\n\n\n\nset()\n\n=====Function Definition=====\nA set is a collection of numbers and the number of unique entries.\n\n=====Constraints=====\n\n\n\n\n\n\n\n\n\n\n\n\n>>> print set()\n\n>>> print set()\n\n>>>\n\n\n\n\n\n\n\n\n\n\n    average(arr[0])\n    print", "\n\n\n\n\n\n\nset([])\n\n>>> print set([])\n\n>>> print set([])\n\n>>> print set([])\n\n>>> print set([])\n\n>>> print set([])\n\n>>> print set([])\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Use the first line for the", "\n\n\n\nTotal Heights:\n\nTotal Heights:\n\nAverage = Sum of Distinct Heights\n\nTotal Heights:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[0,1,2,3,4,5]\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\n    average(array)\n\n>>> print", "\n\n\n\n\n\n\nset(['HackerRank', 'DOSHI', 'Rank', 'HackerRank', 'Rank', 'HackerRank', 'Rank', 'Rank', 'Rank'])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naverage(array)\n\n\n\n#  1)\n#", "\n\n\n\n\n\n\n>>> set([1, 2, 3, 4, 5, 6])\nset([1, 2, 3, 4, 5])\n\n>>> set([])\n\n>>> set()\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\ndef\n\n\n\n\n\n\n\n\n\n\n\n\n\n    for i in range(1,8", "\n\n\n\nA set is a collection of integers, integers and integers, integers, integers, integers, integers, integers\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naverage(array)\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Arguments=======\n\n1,2,3\n\n0<", "\n\n\n\n\nA set is an unordered collection of elements.\n\nset()\n\n=====Functions Description=====\nA set is an unordered collection of elements.\nA set is an unordered collection of elements.\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n0<N\u2264100\n\n\n    average(array", "\n\n\n\n\n\n\n>>> set('HackerRank')\nset('HackerRank')\nset('HackerRank')\nset('HackerRank')\n\n>>> set('HackerRank')\n\n>>>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# average()\n# average()\n#", "\n\n\n\n\nA set is a collection of numbers, integers, integers, integers, integers, integers, integers, integers, integers, integers, numbers, numbers, integers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naverage(array)\n\n\n\n\n\n\n\n\n\n\ntotal = 0\n\nsum = 0\n\nsum = 0\n\n\nsum = sum", "\n\n\n\n\n\n\n\n=====Description=======\nA set is an unordered collection of elements.\n\n=====Constraints=====\nA set is an unordered collection of elements.\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> print set(array)\n\n\n\n\n\n\n\n\n\n\n\n[0, 0]\n\n\naverage(arr)", "\n\n\n\n\n\nset('HackerRank')\n\n>>> print set('HackerRank')\nset('HackerRank')\n\n>>> print set('HackerRank')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>>\n\n\n\n\n\n\n\n\nset('HackerRank')\n\n>>> print set()\n\n\n\n"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nA set is an unordered collection of elements without duplicate entries.\nWhen printed, iterated or converted into a sequence, its elements will appear in an arbitrary order.\n\n=====Example=====\n>>> print set()\nset([])\n\n>>> print set('HackerRank')\nset(['a', 'c', 'e', 'H', 'k', 'n', 'r', 'R'])\n\n>>> print set([1,2,1,2,3,4,5,6,0,9,12,22,3])\nset([0, 1, 2, 3, 4, 5, 6, 9, 12, 22])\n\n>>> print set((1,2,3,4,5,5))\nset([1, 2, 3, 4, 5])\n\n>>> print set(set(['H','a','c','k','e','r','r','a','n','k']))\nset(['a', 'c', 'r', 'e', 'H', 'k', 'n'])\n\n>>> print set({'Hacker' : 'DOSHI', 'Rank' : 616 })\nset(['Hacker', 'Rank'])\n\n>>> print set(enumerate(['H','a','c','k','e','r','r','a','n','k']))\nset([(6, 'r'), (7, 'a'), (3, 'k'), (4, 'e'), (5, 'r'), (9, 'k'), (2, 'c'), (0, 'H'), (1, 'a'), (8, 'n')])\n\nBasically, sets are used for membership testing and eliminating duplicate entries.\n\n=====Problem Statement=====\nNow, let's use our knowledge of sets and help Mickey.\n\nMs. Gabriel Williams is a botany professor at District College. One day, she asked her student Mickey to compute the average of all the plants with distinct heights in her greenhouse.\n\nFormula used: \nAverage = Sum of Distinct Heights / Total Number of Distinct Heights\n\n=====Input Format=====\nThe first line contains the integer, N, the total number of plants.\nThe second line contains the N space separated heights of the plants.\n\n=====Constraints=====\n0<N\u2264100\n\n=====Output Format=====\nOutput the average height value on a single line.\ndef average(array):\n    # your code goes here\n\nif __name__ == '__main__':\n    n = int(input())\n    arr = list(map(int, input().split()))\n    result = average(arr)\n    print(result)\nUse Standard Input format\nANSWER:\n"}}