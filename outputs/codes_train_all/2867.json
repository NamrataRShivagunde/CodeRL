{"2867": {"code": ["\nUse Call-Based format\n\n\n\n\n\n# Input/Output\n\n  [input]\n\t\nUse Call-Based format\n\n\n\n\n\n# Task\n\n  [output]\n\t\n:\n# Task\n\n \n \n \n\n:\n\n\n\n\n\n\n\n\n\n# Task\n\n \n\n# Input/Output\n\n#", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n# Task\n\n  You are given an array of N integers.\n \nUse Call-Based format\n\n\n\n#\n\n\n\n:\n# Task\n\n \n\n\n\n# Input\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n# Task\n You", "\n\nUse Call-Based format\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n# Task\n\n\n\n\n\n# Task\n\n \n\t\n# Task\n\n# Input/Output\n\n \n\n\n\n# Task\n\n\n\n\n\n\n\n# Effect\n\n\n# Input/Output\n\n\n\n\n# Task\n\n# Task\n", "\nUse Call-Based format\n\n\n\n\n# Task\n\n\n# Output\n\n \n\n# Input/Output\n\n  Use Call-Based format\n\n \n\n# Input/Output\n\n \n\n\n\n# Task\n\n\n:\n# Task\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n# Task\n\n  The array", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n# Task\n\n  You are given an integer array `arr`.\n \n\n\n\n# Task\n\n \n\n\n\n# Task\n\n \n\n \n\n \n\n\n:\n\n \n\n\n\n \n\n\n\n# Task\n\n\n\n# Task\n\n# Task\n", "\nUse Call-Based format\n  Use Call-Based format\n\n  Fix progression\n\n  Fix progression\n\n  Fix progression\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n# Task\n\n\n\n\n\n\n\n\n# Input/Output\n\n\n# Task\n\n\n\n# Task\n You are given an", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n# Task\n\n  The array of integers.\n\n  The minimum number of elements to change.\n\n\n\n\n\n# Task\n\n \n\n# Task\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n\n# Task\n", "\n# Use Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n# Task\n\n  This function works with Java users.\n\n \n\n# Input/Output\n\n\n \n\n\n\n\n# Task\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n\n\n# Task\n\n  You are", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Task\n\n  Use Call-Based format\n\n\n\n\n\n# Input/Output\n\n \n\n\n\n:\n\n# Task\n\n \n\n\n\n# Task\n \n\n\n\n\n\n\n\n# Task\n\n\n # Output\n\n \n\n# Input\n\n\n# Task\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n# Examples\n\n\n \n  \n \n\n\n# Task\n\n \n\n\n# Task\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n\n# Task\n You are", "\nUse Call-Based format\n\n\n\n\n\n\n# Task\n\n\n\n# Input/Output\n\n \n\n# Task\n\n  You are given an array of integers\n  \n \n# Task\n\n\n \n \n\n# Task\n\n \n\n\n\n\n\n\n# Task\n\n \n\n# Output\n\n \n\n\n# Task\n You", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n    fix_progression(arr)\n\t\nUse Call-Based format\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n\n\n# Task\n\n\n \n\n# Task\n\n\n\n\n\n\n\n\n# Task\n\n   \n\n\n\n# Task\n\n\n# Task", "\n# Function-Based format\n\n\n\n\n\n\n# Input/Output\n\n\n\n# Task\n\n\n\n# Task\n\n# Task\n\n\n# Input/Output\n\n\n\n# Task\n\n\n:\n# Task\n\n\n\n\n\n\n\n\n# Task\n\n:\n# Task\n\n\n\n\n# Task\n\n\n\n# Task\n You", "\n\nUse Call-Based format\n\n\n\n \n\t\nUse Call-Based format\n\n\n\n\n# Task\n\n \n\n \n\n \n\n# Task\n\n \n\n\n \n\t\n\n# Task\n# Task\n\n \n\n\n\n\n \n\n\n# Task\n\n \n\n# Task\n\n \n\n\n\n#", "\n# Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Task\n\n \n\n\n# Task\n\n  The number of elements to change.\n\n:\n# Task\n\n\n \n\n:\n\n\n\n\n\n\n\n\n# Output\n\n# Task\n\n\n# Task\n\n\n# Task", "\nUse Call-Based format\n\n  fix_progression(arr)\n\n\n\n\n\n\n\n\n# Task\n\n \n\n\n\n# Task\n\n \n\n\n\n\n# Task\n\n \n# Task\n\n  \n\n\n\n\n\n# Todo\n\n\n\n# Input/Output\n\n\n \n\n# Task\n\n\n\n# Task", "\nUse Call-Based format\n\n\n\n\n# Input/Output\n\n\n# Task\n\n  Use Call-Based format\n\n\n  arr = [1, 2, 3, 4, 5, 6]\n\n\n\n\n\n\n# Task\n\n\n\n# Task\n \n\n\n\n\n\n\n\n# Task\n\n \n\n# Task\n\n  You", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n# Example\n\n  arr[0] = 0\n\n \n\n\n\n\n# Task\n\n\n\n\n\n\n# Output\n\n \n\n\n\n\n# Task\n\n\n\n\n\n\n\n\n\n\n# Task\n\n \n\n\n\n# Task\n You are given", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n# Input/Output\n\n\nUse Call-Based format\n\n\n\n# Task\n\n\n\n# Input/Output\n# Task\n\n\t\n\n#\n\n\n\n\n\n\n\n\n# Task\n\n\n# Task\n\n  The array is the input.\n\n \n\n\n# Task", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n# Example\n\n  FixProgression(arr)\n\nUse Call-Based format\n\n\n\n \n\n\n#\n\n# Task\n\n \n\n \n\n# Task\n\n\n\n\n\n\n\n\n\n# Output\n\n\n\n# Task\n\n\n# Task\n You"], "prompt": "\nQUESTION:\n# Task\n You are given an array of integers. Your task is to determine the minimum number of its elements that need to be changed so that elements of the array will form an arithmetic progression. Note that if you swap two elements, you're changing both of them, for the purpose of this kata.\n\n Here an arithmetic progression is defined as a sequence of integers such that the difference between consecutive terms is constant. For example, `6 4 2 0 -2` and `3 3 3 3 3` are arithmetic progressions, but `0 0.5 1 1.5` and `1 -1 1 -1 1` are not.\n\n# Examples\n\n  For `arr = [1, 3, 0, 7, 9]` the answer is `1` \n  \n  Because only one element has to be changed in order to create an arithmetic progression.\n    \n  For `arr = [1, 10, 2, 12, 3, 14, 4, 16, 5]` the answer is `5` \n \n  The array will be changed into `[9, 10, 11, 12, 13, 14, 15, 16, 17]`.\n\n# Input/Output\n\n\n - `[input]` integer array `arr`\n\n  An array of N integers.\n  \n  `2 \u2264 arr.length \u2264 100`\n  \n  `-1000 \u2264 arr[i] \u2264 1000`\n\n  Note for Java users: you'll have a batch of 100 bigger random arrays, with lengths as `150 \u2264 arr.length \u2264 300`.\n  \n\n - `[output]` an integer\n\n  The minimum number of elements to change.\ndef fix_progression(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}