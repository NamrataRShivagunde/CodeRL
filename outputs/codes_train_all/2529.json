{"2529": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nrows x cols\ncols == rows\n\n\nReturns:\nnumSpecial(self, mat)\n\n\n\n\n\n\n\n\n\n\n\n            \n\n\nUse Call-Based format\n\n\n\nGiven a rows x cols matrix,\nreturn the number of special positions.\n\n\n\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n    \n\n\n\n\n\n\n\n            \n\nUse Call-Based format\n\n\n\n\nGiven a rows x cols matrix, mat,\n\n\n\n\nGiven a\u00a0rows x cols", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\n\n\n\n\n   \n\n\n            \n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a\u00a0rows x cols\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n    def numSpecial(self, mat: List[List[int]]):\n        return mat[i][j]\n\nUse Call-Based format\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\nThe number of special positions is given by\n\n\n\nGiven a\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a rows x cols matrix, mat,\n\n\n\nGiven a\u00a0rows x cols", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n   \n    numSpecial(self, mat) -> int:\n\n\n\n\n\n\nUse Call-Based format\n            ]]\n\nOutput: 3\n\nUse Call-Based format\n\n\n\n\n\nrows == cols\n\n\nGiven a\u00a0rows x cols", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n    def numSpecial(self, mat):\n        return mat[0][0]\n        \n\n\n   \n\n\n            \n\n\n\n\n\n\n\n\nrows <= rows\ncols <= cols\n\n\n\nGiven a\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n   \n\n\n            \n\n\n\n\n\n\n\n\n\n\nrows * cols * mat.length\ncols\n\n\n\nGiven a\u00a0", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef\n\n\n\n   \n\n\n            ]]\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a\u00a0rows x cols x matrix, where a", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nrows == cols\ncols == rows\n\nExample 5:\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\u00a0\n\n\n\n\nGiven a matrix matrix,\n\nGiven a rows x cols x mat, where", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n        return mat[0].length\n\nUse Call-Based format\n\n\n\n\n   \n\n\n            \n\n\n\n\n\n\n\n\n\n\nrows, cols, 1, 1, 1, 1\n\n\n\n\nGiven a\ufffd", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\n\n\n\n\n\n\n             0, 0, 0]\n\u00a0\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a\u00a0rows x cols\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\ndef numSpecial(self, mat: List[List[int]):\n   \n\n\n\n\n\n\nUse Call-Based format            \n\n\n\n\n\n\nThe number of special positions in a matrix mat is 1 or 2.\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\nUse Call-Based format\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\nGiven a\u00a0rows x cols x matrix mat,\n\n\n\nGiven a\u00a0rows x", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nrows, cols, rows, cols\ncols == rows\nrows == cols\n\n\n    def numSpecial(self, mat):\n        return mat[i][j]\n\nUse Call-Based format\n\n\n\n\n\n        \n            \n\n\n\n\n\n\n\n\n\n\nGiven a\u00a0rows", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n    numSpecial(self, mat) -> int:\n\n\n            \n\n\nUse Call-Based format\n\n\n\nGiven a rows x cols matrix\u00a0mat,\n\n\n\nGiven a\u00a0rows x", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\ndef numSpecial(self, mat):\n    return mat[0].length\n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a\u00a0rows x cols\u00a0matrix\ufffd", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n    def numSpecial(self, mat: List[int]) -> int:\n\n\n\n\n\n\n\n\n            \n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nrows == cols\ncols == rows\n\n\n\nGiven a\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    def numSpecial(self, mat: List[List[int]]) -> int:\n\n\n\n\n   \n    numSpecial(self, mat)\n\n            \n\n\n\n\n\n\n\n\nrows x cols\ncols x rows\n\n\n\nGiven a\ufffd"], "prompt": "\nQUESTION:\nGiven a\u00a0rows x cols\u00a0matrix\u00a0mat,\u00a0where mat[i][j] is either 0 or 1,\u00a0return the number of special positions in mat.\nA position (i,j) is called special\u00a0if\u00a0mat[i][j] == 1 and all other elements in row i\u00a0and column j\u00a0are 0 (rows and columns are 0-indexed).\n\u00a0\nExample 1:\nInput: mat = [[1,0,0],\n\u00a0             [0,0,1],\n\u00a0             [1,0,0]]\nOutput: 1\nExplanation: (1,2) is a special position because mat[1][2] == 1 and all other elements in row 1 and column 2 are 0.\n\nExample 2:\nInput: mat = [[1,0,0],\n\u00a0             [0,1,0],\n\u00a0             [0,0,1]]\nOutput: 3\nExplanation: (0,0), (1,1) and (2,2) are special positions. \n\nExample 3:\nInput: mat = [[0,0,0,1],\n\u00a0             [1,0,0,0],\n\u00a0             [0,1,1,0],\n\u00a0             [0,0,0,0]]\nOutput: 2\n\nExample 4:\nInput: mat = [[0,0,0,0,0],\n\u00a0             [1,0,0,0,0],\n\u00a0             [0,1,0,0,0],\n\u00a0             [0,0,1,0,0],\n\u00a0             [0,0,0,1,1]]\nOutput: 3\n\n\u00a0\nConstraints:\n\nrows == mat.length\ncols == mat[i].length\n1 <= rows, cols <= 100\nmat[i][j] is 0 or 1.\nclass Solution:\n    def numSpecial(self, mat: List[List[int]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}