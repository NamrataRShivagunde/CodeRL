{"2775": {"code": ["\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\nThe above text is displayed next to such an item:\n\n```python\ndisplay_text = likes(\"like this\")\n```\n\n\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nExample:\n\t\nUse Call-Based format\n\nExample:\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n```python\n#!/usr/bin/env", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n# Example:\n#\n# Some people who like a item.\n#\n# Some people who like a", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\nNo people who like this.\n\nNote:\n\n\n\n\nYou probably know the \"like\" system from Facebook. You probably know the \"like\" system from Facebook.\n\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"like\" is the first name in your \"like\" system, and the \"other\" items in your \"like\" system are also like this:\n\n\n\n\n:\n\n\n\n\n\n", "\nUse Call-Based format\n\n\nNo name or number\n\nUse Call-Based format\n:\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n```python\nif all, and 2, then you have\n\n\n\n```python\nif all", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\nThe most common use case:\n\n```python\n\nno one likes this\n```\n\n\n\n\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n:\n\n\nNo items like this\n\nExample:\n\n```python\n\nno one likes this\n```\n\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n```python\n\nYou can also use the function `likes`\n\n\n\n```python\n\nno", "\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\nA function `likes(names) -> String` -> \"no one likes this\"\n\nThen\n\n\n\n:\n\n\n\n\n\n\n\n\n\nYou can also use the function `likes()`\n\n```python\n\n\n``", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nA function `likes :: [String] -> String`\n\n\n\n\n\n```python\n# doe\n", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n```python\nif names.count(\"Peter\") == 2:\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\nNo names or more names are provided.\nUse Call-Based format\n\n:\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n```python\n\nand 2 others :: 2 -> String\n\n:\n\n```python\n", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\nfor 4 or more names in [1, 2] -> [String] -> String\n\n\n\n\n:\n\n```python\n\n\n\n\n\n```python\n\nand 2", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nno one likes this\n\nFor 4 or more names, you can use the function `likes(names)`\nlike(names):\n\t\n\n\n\n:\n\n\n\n:\n\n\n\n\n:\n\n```python\n\n\n\n```python\n#python\n# [1]\n", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\nYou should be able to create a text that can be displayed next such an item.\n\n```python\nlike(names)\n\n\n\n\n:\n\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\n\n\nFor 4 or more names, you can use a function `likes(names)`\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n```python\n\nfor 4 or more names,\n\n\n```python\n\nif", "\nUse Call-Based format\n\n\n\n:\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n:\n\n\n\n:\n\nUse Call-Based format\n\n\n\nNote:\n\nPlease use `like` function from Facebook and other pages.\n\n```python\n\n\n\n\n\n\n\n```python\n\n", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\t:\n\nUse Call-Based format\n\n\nYou can see a list of names in the above format:\n\n```python\n\n\n\n\n\n\n\n\n\n```python\n\nif [String] ->", "\nUse Call-Based format\n\n\n\n:\n\nUse Call-Based format\n\nUse Call-Based format\n\nFor 4 or more names:\n\n```python\n\n\n\n:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n:\n\n\n```python\n\n\n```python\nfor item in [1, 2, 3]:\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\nor\n\n```python\n\nlike(['John', 'Mark', 'Max', 'Alex'])\n\n\n\n\n``"], "prompt": "\nQUESTION:\nYou probably know the \"like\" system from Facebook and other pages. People can \"like\" blog posts, pictures or other items. We want to create the text that should be displayed next to such an item.\n\nImplement a function `likes :: [String] -> String`, which must take in input array, containing the names of people who like an item. It must return the display text as shown in the examples:\n\n```python\nlikes([]) # must be \"no one likes this\"\nlikes([\"Peter\"]) # must be \"Peter likes this\"\nlikes([\"Jacob\", \"Alex\"]) # must be \"Jacob and Alex like this\"\nlikes([\"Max\", \"John\", \"Mark\"]) # must be \"Max, John and Mark like this\"\nlikes([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]) # must be \"Alex, Jacob and 2 others like this\"\n```\n\nFor 4 or more names, the number in `and 2 others` simply increases.\ndef likes(names):\n\t\nUse Call-Based format\nANSWER:\n"}}