{"16": {"code": ["\nS, Arkady's friend, Arkady's friend\n\n-----Output-----\n\n\n\n\n\n\n\n\n test cases\n\n-----Output-----\n\n\n\n test case\n\n-----Example-----\n\nThe first line of the test case\n test case\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT$\n\n-----\n\n second line of", "\n\n-----Output-----\n\n\n\n\n\n\n\n-----Example-----\n\nA lot of examples:\n\n-----Input-----\n\nIn your script:\n\nPolycarp, Arkady's friend\n\n\n\n\n\n\n\n\n\n\n test\n\n test\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n\n\n\n test are separated by", "\nTrain\n\n-----Output-----\n\n\n\n\n\n-----Output-----\n\ntrain the programming competition\n\n-----Input-----\n\nBrief:\nPolycarp, Arkady's friend\n\nPolycarp, Arkady's friend\n\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\nT$\n\n\n\n first", "\nContest\n\n-----Output-----\n\nSolving the problem\n\n-----Input-----\n\nAnother example:\n\nPolycarp, Arkady's friend\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\nT$\n\n\n test are done by", "\nRun, Arkady's friend, Arkady's friend, Arkady's friend\n\n-----Output-----\n\n\n\n-----Example-----\n\n\n\n\n\n\n\n test\n\n\n\n\n test\n\n test:\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n-----Example-----\n\n\n\nT$\n\n\n\n second line of", "\n-----Output-----\nkady's friend, Arkady's friend, Arkady's friend\n\n-----Example-----\n\n\n\n\n\n-----Input-----\n\n\n\n\n\n\n test case:\n\n\n\n test case:\n test case:\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\nT$\n\n\n first line of the", "\n-----Output-----\n\n\n\n\n-----Example-----\n\n\nTrain an issue of a problem:\n\nPolycarp solves a problem of the first time.\n\n-----Example-----\n\n\n\n\n\n problem\n\n\n\n\n test\n\n-----Example-----\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n test", "\n\n-----Output-----\n\ntrain, arkady, arkady, arkady, arkady\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n\n test\n\n\n\n test\n\n-----Output-----\n\n test\n\n\n\n\n\n\n\n-----Input-----\n\n\n\n\n\nT$\n\n\n second line of the", "\n#\n\n\n\n\n-----Output-----\n\ntrain, Arkady's friend, Arkady's friend, Arkady's friend, Arkady's friend, Arkady's friend\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n\n test are described by the above", "\n-----Output-----\ntrain, Arkady's friend, Arkady's friend,\n\n\n-----Error-----\ntrain\n\n-----Input-----\n\n\n\n\n test case\n\n\n\n test case:\n test case:\n\n-----Input-----\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\ns$\n\n\n test case:\n\n", "\n\n-----Output-----\n\n\n\n\n\n-----Error-----\n\nC, Arkady's friend\n\ntrain\n\n-----Input-----\n\nThe first line of the problem:\n\n\n\n\n\n\n\n\n\n\n\n test\n\n test\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\nT$\n\n-----\n\n test: $n", "\n-----Output-----\n\n solve one problem\n\n-----Input-----\n\nExample:\n\n-----Input-----\n\nRandomly solving a problem\n\n-----Input-----\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT$\n\n\n\n second line", "\n\n-----Output-----\n\n\n\n\n-----Example-----\n\n\ntrain, Arkady's friend, Arkady's friend, Arkady's friend, Arkady's friend, and Arkady's friend:\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\nT$\n\n-----Output-----\n second line of", "\n-----Output-----\n\n\n\n\n-----Input-----\ntrain the problem\n\n-----Example-----\n\nThe input is a line of the output.\n\n-----Example-----\n\nThe first line of the problem is a line of the output.\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n test is done as", "\nInterstitial:\n\n\n-----Output-----\n\nInterstitial:\n\n\ntrain:\n\n-----Input-----\n\nThe first line of the test is a series of problems.\n\nThe first line of the test is a series of problems.\n\n\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n", "\n-----Output-----\ntrain\n\n-----Input-----\n\ntrain\n\n-----Input-----\n\nEnvironment:\n\nPolycarp\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n test\n\n-----Output-----\n test:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT$\n\n\n\n-----Output-----\n test", "\nProceedings:\n\nTest cases\n\n-----Output-----\n\n\n\n-----Explanation-----\n\nExample:\n\ntrain for a contest\n\n-----Example-----\n\nA lot of examples:\n\nPolycarp, Arkady's friend,\n\n\n\n\n\n\n\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n test are an integer", "\n\n-----Output-----\n\n\n\n\n-----Info-----\n\n\ntrain\n\nYou can start solving the first problem.\n\n-----Proceeding-----\n\nQuestion:\n\nPolycarp, Arkady's friend\n\n\n\n\n\n\n\n\n test\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n second", "\n-----Output-----\nSolving\n\n-----Description-----\n\n train\n\n-----Input-----\n\nThe first line of the test\n\nThe second line of the test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n test\n\n-----Output-----", "\n\n-----Output-----\n Problems\n\n-----Input-----\n train the problem\n\n-----Input-----\n\nEVER:\n\nPolycarp\n\n\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n test case\n\n test case\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT$\n\n\n\n first line"], "prompt": "\nQUESTION:\nPolycarp, Arkady's friend, prepares to the programming competition and decides to write a contest. The contest consists of $n$ problems and lasts for $T$ minutes. Each of the problems is defined by two positive integers $a_i$ and $p_i$\u00a0\u2014 its difficulty and the score awarded by its solution.\n\nPolycarp's experience suggests that his skill level is defined with positive real value $s$, and initially $s=1.0$. To solve the $i$-th problem Polycarp needs $a_i/s$ minutes.\n\nPolycarp loves to watch series, and before solving each of the problems he will definitely watch one episode. After Polycarp watches an episode, his skill decreases by $10\\%$, that is skill level $s$ decreases to $0.9s$. Each episode takes exactly $10$ minutes to watch. When Polycarp decides to solve some problem, he firstly has to watch one episode, and only then he starts solving the problem without breaks for $a_i/s$ minutes, where $s$ is his current skill level. In calculation of $a_i/s$ no rounding is performed, only division of integer value $a_i$ by real value $s$ happens.\n\nAlso, Polycarp can train for some time. If he trains for $t$ minutes, he increases his skill by $C \\cdot t$, where $C$ is some given positive real constant. Polycarp can train only before solving any problem (and before watching series). Duration of the training can be arbitrary real value.\n\nPolycarp is interested: what is the largest score he can get in the contest? It is allowed to solve problems in any order, while training is only allowed before solving the first problem.\n\n\n-----Input-----\n\nThe first line contains one integer $tc$ ($1 \\le tc \\le 20$)\u00a0\u2014 the number of test cases. Then $tc$ test cases follow.\n\nThe first line of each test contains one integer $n$ ($1 \\le n \\le 100$)\u00a0\u2014 the number of problems in the contest.\n\nThe second line of the test contains two real values $C, T$ ($0 < C < 10$, $0 \\le T \\le 2 \\cdot 10^5$), where $C$ defines the efficiency of the training and $T$ is the duration of the contest in minutes. Value $C, T$ are given exactly with three digits after the decimal point.\n\nEach of the next $n$ lines of the test contain characteristics of the corresponding problem: two integers $a_i, p_i$ ($1 \\le a_i \\le 10^4$, $1 \\le p_i \\le 10$)\u00a0\u2014 the difficulty and the score of the problem.\n\nIt is guaranteed that the value of $T$ is such that changing it by the $0.001$ in any direction will not change the test answer.\n\nPlease note that in hacks you can only use $tc = 1$.\n\n\n-----Output-----\n\nPrint $tc$ integers\u00a0\u2014 the maximum possible score in each test case.\n\n\n-----Examples-----\nInput\n2\n4\n1.000 31.000\n12 3\n20 6\n30 1\n5 1\n3\n1.000 30.000\n1 10\n10 10\n20 8\n\nOutput\n7\n20\n\n\n\n-----Note-----\n\nIn the first example, Polycarp can get score of $7$ as follows:  Firstly he trains for $4$ minutes, increasing $s$ to the value of $5$;  Then he decides to solve $4$-th problem: he watches one episode in $10$ minutes, his skill level decreases to $s=5*0.9=4.5$ and then he solves the problem in $5/s=5/4.5$, which is roughly $1.111$ minutes;  Finally, he decides to solve $2$-nd problem: he watches one episode in $10$ minutes, his skill level decreases to $s=4.5*0.9=4.05$ and then he solves the problem in $20/s=20/4.05$, which is roughly $4.938$ minutes. \n\nThis way, Polycarp uses roughly $4+10+1.111+10+4.938=30.049$ minutes, to get score of $7$ points. It is not possible to achieve larger score in $31$ minutes.\n\nIn the second example, Polycarp can get $20$ points as follows:  Firstly he trains for $4$ minutes, increasing $s$ to the value of $5$;  Then he decides to solve $1$-st problem: he watches one episode in $10$ minutes, his skill decreases to $s=5*0.9=4.5$ and then he solves problem in $1/s=1/4.5$, which is roughly $0.222$ minutes.  Finally, he decides to solve $2$-nd problem: he watches one episode in $10$ minutes, his skill decreases to $s=4.5*0.9=4.05$ and then he solves the problem in $10/s=10/4.05$, which is roughly $2.469$ minutes. \n\nThis way, Polycarp gets score of $20$ in $4+10+0.222+10+2.469=26.691$ minutes. It is not possible to achieve larger score in $30$ minutes.\nUse Standard Input format\nANSWER:\n"}}