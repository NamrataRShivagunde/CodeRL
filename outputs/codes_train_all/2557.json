{"2557": {"code": ["\nproduct()\n\n\nitertools.product()\n\n=====Function Descriptions=====\nitertools.product()\n\n=====Function Descriptions\nitertools.product()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunction Descriptions=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=Output Format=====\n0<A", "\n=====Function Definition=====\nitertools.product()\n\n\n\n\n\n\n\n\n0<A<30\n0<B<30\n0<A<30\n0<B<30\n0<B<30]\n\n\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n=Output Format=====\n[A", "\nproduct(A,B)\n\n\nitertools.product()\n\n\n\nproduct([A,B])\n\n\n\n\n\n\nA,B\n\nB\n\n\n\n\nA,B\n0<B<30\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n0<A<30\n0<B<30\n\n=", "\nProduct\n\nproduct(A,B)\n\nExample:\nitertools.product([A,B])\n\nExample:\nitertools.product(A,B)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0<A<30\n0<B<30\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=Output Format=====", "product(A,B):\n\"\"\"\n\n\nproduct(A,B)\n\n\n\n\n\nA[0]\nB[0]\n\nA<A<B<B>\nB<B<30\n\n\nA<B<30\n=Examples\n\n\n\n\n\n\n\n\n\n\n\nA[0]\nB[0]\n\n\n=Output", "\n=====Experimental Description=====\nitertools.product()\n\n\n\n\n\n\n\n\nA,B,AxB\n\n=====Function Description=====\nitertools.product()\n\n\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = [2, 4]\n\n=Output Format=====", "\n\n\nproduct([1,2,3],[1,2,3])\n\n\n\nproduct(A,B)\n\n\n\n\n\n\n1<A<2<5<8<9>\n1<B<9>\n\n\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n\n=Output Format=====\n0<A<", "\nproduct()\n\nproduct(A,B)\n\n\nproduct(A,B)\n\n\n\n\n\n0<A<30\n0<B<30\n0<A<30\n0<B<30]\n\n\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n=Function Descriptions=====\nitertools.", "]\n\n\nproduct(A,B)\n\n\n\nproduct([A,B])\n\n\n\n\n\n\nA,B\n\n\n\nA,B\n\n\n\nA<30\nB<30\n=Output Format=====\nB\n\n\n\n\n\n\n\n\n\n\n\nA,B\n\n\n\n\n0<A<30\n0<=", "\n\n\nproduct(A,B)\n\n=====Function Descriptions=====\nitertools.product()\n\nproduct(A,B)\n\n\n\n\n\n\n\n\n\nA,B\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA,B\n\n\n=Variables Description=====\nA[0", "1<5>\n3<5>\n3<5>\n\n\n\n\n\n\n\n\n1<A<5>\n1<B<5>\n2<A<5>\n3<B<5>\n\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\nA<B<30\n=Output Format=====", "\nproduct([A,B],[3,4,5])\n\n=Function Descriptions=====\n\n\n\n\n\n\n\n\nA\nA[0]\nB[0]\n\n\n\n0<A<30\n0<B<30\n\n=\n\n\n\n\n\n\n\n\n\n\nA<A<B<B<0<0<=Output", "\nproduct(A,B)\n\n\n\nitertools.product()\n\n\n\n\n\nA,B,AxB,AxB\n\n\nproduct(A,B)\n\nB\nB\n0<A<30\n0<B<30\n\n\n\n=\n\n\n\n\n\n\n\n\n\n\n\n\n0<A<30\n0<B=", "\nfunction product(A,B):\n\nproduct([A,B])\n\n\n\n\n\n\n\n\n1<A<3<B<3>\n2<A<2<B<3>\n3<B<3>\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n=Results=======\n0<A", "\nproduct()\n\n\nproduct(A,B)\n\n=====Function Description=====\nitertools.product(A,B)\n\n\n\n\n\n\n\n\nB\n\n\n\n\nA<A<B<B<\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n=Problem Statement=====\n1<A<5<7\n", "\nproduct\n\n\nproduct([A,B],repeat = 2)\n\n\nproduct([A,B])\n\n\n\n\n\n\n\n1<A<2<3<4<5>\n\n\n\n\n1<A<2<3<4>\n\n=\n\n\n\n\n\n\n\n\n\nA<B<30\n=Output Format=====\n[", "\nproduct(A, B)\n\n\nproduct([1,2,3],[1,2,3])\n\n\n\n\n\n\n\n1<A<2<3<4>\n1<B<3>\n\n=\n\n\n\n=Function Description=====\n\n\n\n\n\n\n\n\n\n\n\nA<B<30\n=Output Format=====", "product()\n\n\nitertools.product()\n\n=====Function Description=====\nitertools.product()\n\n=====Example Description=====\n\n\n\n\n\n\n\n2\n\n\n\n0<A<30\n0<B<30\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\n\n=Function Descriptions=====\nA[", "\n=====Functions=====\nitertools.product()\n\n\n\n\n\n\n\n\n\n1<A<2<3<4<5<7>\n1<B<3<5>\n1<B<3>\n\n=\n\n\n=Outputs\n\n\n\n\n\n\n\n\n\n\n\nA,B,AxB\n\n=Output Format=====", "\nA, B, AXB = [(1,2),(3,2),(3,4)]\n\n\n\n\n\n\n\n\n\n1<A<2<B<3>\n1<B<3>\n\n\n\n\n=Output Format=====\n\n\n\n\n\n\n\n\n\n\n\nA<B<30\n0<A<=Outputs"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nitertools.product()\n\nThis tool computes the cartesian product of input iterables.\nIt is equivalent to nested for-loops.\nFor example, product(A, B) returns the same as ((x,y) for x in A for y in B).\n\nSample Code\n\n>>> from itertools import product\n>>>\n>>> print list(product([1,2,3],repeat = 2))\n[(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3), (3, 1), (3, 2), (3, 3)]\n>>>\n>>> print list(product([1,2,3],[3,4]))\n[(1, 3), (1, 4), (2, 3), (2, 4), (3, 3), (3, 4)]\n>>>\n>>> A = [[1,2,3],[3,4,5]]\n>>> print list(product(*A))\n[(1, 3), (1, 4), (1, 5), (2, 3), (2, 4), (2, 5), (3, 3), (3, 4), (3, 5)]\n>>>\n>>> B = [[1,2,3],[3,4,5],[7,8]]\n>>> print list(product(*B))\n[(1, 3, 7), (1, 3, 8), (1, 4, 7), (1, 4, 8), (1, 5, 7), (1, 5, 8), (2, 3, 7), (2, 3, 8), (2, 4, 7), (2, 4, 8), (2, 5, 7), (2, 5, 8), (3, 3, 7), (3, 3, 8), (3, 4, 7), (3, 4, 8), (3, 5, 7), (3, 5, 8)]\n\n=====Problem Statement=====\nYou are given a two lists A and B. Your task is to compute their cartesian product AXB.\nExample\nA = [1, 2]\nB = [3, 4]\n\nAxB = [(1, 3), (1, 4), (2, 3), (2, 4)]\nNote: A and B are sorted lists, and the cartesian product's tuples should be output in sorted order.\n\n=====Input Format=====\nThe first line contains the space separated elements of list A.\nThe second line contains the space separated elements of list B.\nBoth lists have no duplicate integer elements.\n\n=====Constraints=====\n0<A<30\n0<B<30\n\n=====Output Format=====\nOutput the space separated tuples of the cartesian product.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}