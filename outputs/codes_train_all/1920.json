{"1920": {"code": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n    Input: inputs = [string, int, float, int, int, float, float, int, int, int, int, int, int, int, int, int, int]\n\n:\n\n\n \n\n\n \n\n\n\n\n\n\n\n    \"\"\"\n\n   \n       ", "\n\n\n\n\n\n\n\n\n \u00a0\n\n\n\n\n\nExample 1:\n\n    Input: inputs = [string key, int timestamp, int timestamp_prev, int timestamp_prev, int timestamp_prev]\n\nExample 2:\n\n\n\n:\n\n       \n\n  \n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n        \"\"\"", "\n\n\n\n\n\n\n\n\u00a0\nNote:\n\n\n\n\n\n\n\nExample 2:\n\nInput: inputs = [\"TimeMap\"]\nInput: inputs = [\"TimeMap\"]\nOutput: [null,null]\n\n\u00a0\n\n\n\n\n       \n\n \n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n\n\n       ", "\n\n\n\n\n\n\n\n\n\u00a0\nNote:\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\u00a0\nInput: inputs = [string, string, string, string]\n\n\u00a0\n\n\n\n\n\n       \n\n\n\n\n\n\n\n \u00a0\n\n\n\n\n\n\n\n\n\n\n        \"\"\"\n       ", "\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\nExample 1:\n\nInput: inputs = [\"TimeMap\"]\n    inputs = [[],[],[],[],[],[],[],[],[],[]\n\n\u00a0\n\n   \n\n \n\n\n \n\n\n\n\n \n\n\nExample\n\n        \"\"\"", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput: inputs = [\"foo\", \"bar\", \"bar2\", \"bar2\",\"bar2\",\"bar2\",\"bar2\"]\n\nExample:\n\n\n\n\n   \n       \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n        \"\"\"", "\n\n\n\n\n\n\n\n\n\n\n\u00a0\nNote:\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\nExample 1:\n\nInput: inputs = [1,2,3,4,5,2]\n\nOutput:\n\n\n\n       \n \n\n\n\n \n\n\n\n\n\n\n\n\n   \n        \"\"\"\n", "\n\n\n\n\n\n\n\n\n\n\n\n\nInput: inputs = [\"TimeMap\"]\nInput: inputs = [\"TimeMap\"]\n\nExample:\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n       \n\n        Example 3:\n        Input", "\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\nNote:\n\n\n       \n\n\n\nOutput: [null,null,null,null]\n\n\u00a0\n\n\n\n\n\n       \n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \"\"\"\n       ", "\n\n\n\n\n\n\n\n\n\n\n\nInput: inputs = [[\"TimeMap\",\"set\",\"set\",\"get\",\"get\",\"get\",\"get\",\"get\",\"get\",\"get\", 1]]\n\n\n\n   \n   \n       \n\n \u00a0\n\n\nExample 3:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n        \"\"\"", "\n\n\n\n\n\n\n\n\u00a0\nNote:\n\nExample 1:\n\nInput: inputs = [string, string, string, string, string]\nExample 2:\n\nInput: inputs = [string, string]\n\n\n\n\n\n\n\n\n   \n       \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n\n", "\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\nExample 1:\n\nInput: inputs = [\"foo\", \"bar\", \"set\", \"get\"]\n\nExample 2:\n\nInput: inputs = [\"foo\", \"bar\"]\n\nExample 1:\n\n\n\n\n\n\n\n\n\n\n  \n\n \n\n\n\n\n\n\n\n\n        \"\"\"", "\n\n\n\n\n\n\n\n\n\n   \n    \"\"\"\n\n\n       \n   \n   \n   \n       \n\n\n\n    Example 3:\n\n    Input: inputs = [\"TimeMap\",\"set\",\"get\",\"get\",\"set\",\"get\",\"set\",\"get\",\"get\",\"get\"]\n\n   \n\n\n\n \u00a0\n\n\n\n\n\n\n\n\n\n        \"\"\"", "\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\u00a0\nNote:\n\n\n       \n\n\n\n\n\n\u00a0\n\n        \"\"\"\n        \"\"\"\n\n\n       \n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n        \"\"\"\n\n        inputs = [[],", "\n\n\n\n\n\n\n\n\n\nset(string key, string value, int timestamp)\nget(string key, int timestamp)\n\n\u00a0\n\nExample:\n\n\n\n\n\nExample 2:\n\nExample 1:\n\nInput:\n\n   \n       \n\n\n\n\n\n \n\n\n\n\n\n\n\n\nExample 1:\n\n\n\n       ", "\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n       \n       \n\n\nExample 3:\n    Input: inputs = [\"TimeMap\", \"set\",\"get\",\"get\",\"set\",\"get\",\"get\",\"get\"]\n       \n\n\n       :\n\n       \n \n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n\"\"\"\n", "\n\n\n\n\n\n\n\n\nset(string key, string value, int timestamp)\nget(string key, int timestamp)\n\n\u00a0\n\n\n\n\n\nExample 1:\nInput: inputs = [string key, string value]\n\nExample 2:\n\n:\n\n\n \n\n\n  \n\n\n\n\n\n\n\nExample 2:\n\n\n       ", "\n\n\n\nExample 1:\n\nInput: inputs = [\"TimeMap\",\"set\",\"get\",\"get\",\"get\",\"set\",\"get\"]\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n   \n   :\n\n       \n \n\n\n\n \u00a0\n\n\n\n\n\n\n\n\n\n\n        \"\"\"\n       ", "\n\n\u00a0\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n       \n        \"\"\"\n        \"\"\"\n\n       \n\n\n\n\u00a0\nNote:\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n\n\n   \n\n\n        \"\"\"", "\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\u00a0\nNote:\n\n\n\n\u00a0\n\n\n\nExample 1:\n\n    Input: inputs = [\"TimeMap\"]\n\nOutput: []\n\n\n\u00a0\n\n\n\n\n   \n       \n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n        \"\"\"\n       "], "prompt": "\nQUESTION:\nCreate a timebased key-value store class\u00a0TimeMap, that supports two operations.\n1. set(string key, string value, int timestamp)\n\nStores the key and value, along with the given timestamp.\n\n2. get(string key, int timestamp)\n\nReturns a value such that set(key, value, timestamp_prev) was called previously, with timestamp_prev <= timestamp.\nIf there are multiple such values, it returns the one with the largest timestamp_prev.\nIf there are no values, it returns the empty string (\"\").\n\n\u00a0\n\nExample 1:\nInput: inputs = [\"TimeMap\",\"set\",\"get\",\"get\",\"set\",\"get\",\"get\"], inputs = [[],[\"foo\",\"bar\",1],[\"foo\",1],[\"foo\",3],[\"foo\",\"bar2\",4],[\"foo\",4],[\"foo\",5]]\nOutput: [null,null,\"bar\",\"bar\",null,\"bar2\",\"bar2\"]\nExplanation: \u00a0 \nTimeMap kv; \u00a0 \nkv.set(\"foo\", \"bar\", 1); // store the key \"foo\" and value \"bar\" along with timestamp = 1 \u00a0 \nkv.get(\"foo\", 1);  // output \"bar\" \u00a0 \nkv.get(\"foo\", 3); // output \"bar\" since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 ie \"bar\" \u00a0 \nkv.set(\"foo\", \"bar2\", 4); \u00a0 \nkv.get(\"foo\", 4); // output \"bar2\" \u00a0 \nkv.get(\"foo\", 5); //output \"bar2\" \u00a0 \n\n\n\nExample 2:\nInput: inputs = [\"TimeMap\",\"set\",\"set\",\"get\",\"get\",\"get\",\"get\",\"get\"], inputs = [[],[\"love\",\"high\",10],[\"love\",\"low\",20],[\"love\",5],[\"love\",10],[\"love\",15],[\"love\",20],[\"love\",25]]\nOutput: [null,null,null,\"\",\"high\",\"high\",\"low\",\"low\"]\n\n\n\n\u00a0\nNote:\n\nAll key/value strings are lowercase.\nAll key/value strings have\u00a0length in the range\u00a0[1, 100]\nThe timestamps for all TimeMap.set operations are strictly increasing.\n1 <= timestamp <= 10^7\nTimeMap.set and TimeMap.get\u00a0functions will be called a total of 120000 times (combined) per test case.\nclass TimeMap:\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n    def set(self, key: str, value: str, timestamp: int) -> None:\n    def get(self, key: str, timestamp: int) -> str:\n# Your TimeMap object will be instantiated and called as such:\n# obj = TimeMap()\n# obj.set(key,value,timestamp)\n# param_2 = obj.get(key,timestamp)\nUse Call-Based format\nANSWER:\n"}}