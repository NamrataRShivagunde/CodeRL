{"345": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n+---------------\n\n+---------------\n", "\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    splitArray(self, nums, m):\n       \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        Example:\n\n    S:\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n   \n    splitArray(self, nums, m):\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an array which consists", "\n\n\n\n\n\n\nUse Call-Based format\n\n18\n\n\n\n\nUse Call-Based format\n\n    splitArray(self, nums, m):\n\nUse Call-Based format\n\n\n   \n    pass\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array which consists non", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n18\n\n\n\n\n\n\n\n\n    splitArray(self, nums, m)\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array which consists of non-negative integers", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n2\n\n\n\n\n\n\n\n       pass\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nnums = [7,2", "\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n    splitArray(self, nums, m):\n       \nUse Call-Based format\n\n\n   \n    splitArray(self, nums, m)\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array which consists of non-negative integers and m\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven an array which consists of non-", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n18\n\n\n\n    splitArray(self, nums, m):\n        \nUse Call-Based format\n\n\n\n   \n       \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array which consists of non-", "\nUse Call-Based format\n\n\n\n\n\n\n18\n\n\n18\n\n\n\n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n       pass\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven an array containing non-negative integers and", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n18\n\n\n\n\n\n\n\n\n   \n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven an array which", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n18\n\n\n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n   \n    splitArray(self, nums, m)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nM:\n[", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n18\n\n\nUse Call-Based format\n\nOutput:\n20\n\n\nExplanation:\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an array which consists non", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nOutput:\n18\n\n\n\n    pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n**\n\n**\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n18\n\n\n\n\nUse Call-Based format\n\nInput:\n\n\n\n\n\n   \n        pass\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array which consists of non-negative integers and", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n18\n\n\n\n18\n\n\n\n    splitArray(self, nums, m):\n        \nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    Given an array which", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n       splitArray(self, nums, m):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSplit array into two subarrays\n\n\n\n\nGiven an array which consists", "\nUse Call-Based format\n\n\n\n\n18\n\n\n\n18\n\n\n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n\n   \n    splitArray(self, nums, m)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array which consists of non-negative integers,", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    splitArray(self, nums, m)\n    return 0\n\n\n\n   \n        def splitArray(self, nums, m) -> int:\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an array which consists non-", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n18\n\n\n\n    splitArray(self, nums, m)\n\nUse Call-Based format\n\n\n          \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample:\n\n"], "prompt": "\nQUESTION:\nGiven an array which consists of non-negative integers and an integer m, you can split the array into m non-empty continuous subarrays. Write an algorithm to minimize the largest sum among these m subarrays.\n\n\nNote:\nIf n is the length of array, assume the following constraints are satisfied:\n\n1 \u2264 n \u2264 1000\n1 \u2264 m \u2264 min(50, n)\n\n\n\nExamples: \n\nInput:\nnums = [7,2,5,10,8]\nm = 2\n\nOutput:\n18\n\nExplanation:\nThere are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8],\nwhere the largest sum among the two subarrays is only 18.\nclass Solution:\n    def splitArray(self, nums: List[int], m: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}