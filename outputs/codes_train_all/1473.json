{"1473": {"code": ["\n-----Note-----\nExample-----\nExample:\n\n-----Input-----\n\n5\n4 5 6 6\n\n-----Example-----\n\n5\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nExample:\n\n\n\n\n\n-----Example-----\n\nT5", "\nExample-----\n\nExample-----\n\nInput:4\n5 10 6\n5 10 6\n\n-----Constraints-----\n\n- T \u2264 T \u2264 T\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\nExample:\n4\n\n\n\nChef:T", "\nExample-----\nInput:4\n5 10 6\n\n-----Constraints-----\n- 1 \u2264 T \u2264 K \u2264 J\n\n\n\n\n\n\n\n\nExample:4\n\n\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nOutput:2\n4 5 10 6\n\n\n- 1 ", "\nExample-----\nExample:\n1 5 10 3 6\n1\n\nExample:\n1 5 10 6\n1 5 10 6\n\n\n\n\n\nOutput:4\n4 5 10 4 6\n\n\n\n-\n\n-----Notes-----\n\n\n\n\n\n\n\n\n\nOutput:4\n5 10 4 6\n\n-----Example-----\n\n\n\n1 5 10 6\n", "\nExample-----\nExample:\n4 10 10 6\n\n\n\n\nExample:\n4 5 10 6\n\n-----Constraints-----\n- T \u2264 T \u2264 T \u2264 T\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Notes-----\n\nExample:\n\n\n\n\n-----Notes-----\n- 1 \ufffd", "\n\n-----Example-----\nExample:\n\nInput:4\n4 5 6\n\n\n\n\n\nExample:\n\n-----Constraints-----\n- 1 \u2264 T \u2264 K \u2264 J\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:3\n4 5 6\n\n\n\n- 2 T", "\n-----Examples-----\nExample:\n\n-----Example-----\nExample:\n4\n5 6 6\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\n\n\n\n\n\n- 1 \u2264 1 \u2264 1\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nExample:\n\n\n\nT:4", "\nExample-----\nInput:4\n4 6 6\n\n-----Constraints-----\n- 1 \u2264 1 \u2264 1\nInput:2\n\n\n\n\n\n\n\n\nExample:4\n5 10 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nOutput:4\n4 5 5 6\n\n\n\n\nExample:", "\nExample-----\nOutput:4\n4 5 6\n5 6 6\n\n-----Constraints-----\n\n\n\n\n\n\n\n1 3 2 3 3 1\n\nExample:4\n4 5 10 4 6\n\n\n\n-----Example-----\nExample:4\n\n\n\n\n\n\n\n- 3 5 6\n\n-----Example-----\nExample:4\n\n-----Example-----\nOutput:", "\n-----Example-----\nExample:\n\nInput:4\n5 5 6\n\n-----Constraints-----\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints-----\n\nT \u2264 T \u2264 T\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nOutput:4\n4 5 5 6\n\n\n\n\nExample:", "\n-----Description-----\n\nWhat to do?\n\n\n\n\n\n\n\n\n- 1 \u2264 1 \u2264 2\n- 1 \u2264 3 \u2264 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:5\n5 5 6\n\n-----Example-----\n\n\nExample:4\n5 5 10", "\nExample-----\nOutput:4\n4 5 5 6\n\n-----Constraints-----\n- T \u2264 T \u2264 T \u2264 T\n\n\n\n\n\n\n\n\nExample:4\n\n\n\n\n\n\n-----Notes-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nExample:4\n4 5 6\n\n\n\n- 1", "\nExample-----\nExample:\n4\n5 6 10 6\n\n-----Constraints-----\n- 1 \u2264 T \u2264 C \u2264 K\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nExample:\n4\n\n\n\n\n\n\n\n\n\n\n-----Notes-----\n\n\n\nChef's about", "\n-----Examples-----\nExample:\n4\n5 10 4 6\n\n\n\n\n\nExample-----\nOutput:3\n4 10 5 6\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nExample:5\n4 5 6\n\n\n\n\n\n\n\n\n\n\n-----Example-----\nOutput:4\n4 5 5 6\n\n\n-", "\nExample-----\n\nExample:\n\n- T 10 6\n10 5 6\n\n-----Constraints-----\n- 1 \u2264 T \u2264 T\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Examples-----\nExample:\n\n\n\n\n\n\n\n\n\nOutput:4\n5 5 10 6\n\n-----Example-----\n\n\n- 1", "\n-----Notes-----\nExample-----\n\n-----Constraints-----\n\n- T \u2264 1 \u2264 2 \u2264 3\n\n\n\n\n\n\n\n\nExample:3\n\n\n\n\n-----Example-----\n\n\n\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Notes-----\n\n\n\nOutput:2\n6 10", "\n-----Description-----\n\nThe first paragraph of the example:\n\n\n\n\nExample-----\n\nExample:\n4\n5 10 6 6\n\n-----Constraints-----\n\n\n-----Example-----\n\nExample:\n4\n5 10 5 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:4\n5 10 6 6\n\n\n\n\n- 2J", "\nExample-----\n\nInput:\n4\n5\n6\n5\n4\n2\n3\n\n\n\n\n\n\n\n\n- T T T\n5 10 10 6\n5\n5\n\n-----Examples-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:4\n5 5 5 6\n\nConstraints-----\n- 1\n\n\nFor each", "\nExample-----\n\n-----Example-----\n\nInput:4\n5 10 6\n\n\nExample:\n\n\n\n\n\n\n-----Constraints-----\n\n- T \u2264 T \u2264 T \u2264\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput:2\n5 6 10 4 6\n\n\n\n-----Example-----\nOutput:6", "\nExample-----\nExample:\n4 5 5 6\n\n-----Constraints-----\n- T \u2264 T \u2264 T\n\n\n\n\n\n\n\n\n-----Example-----\nExample:\n4\n\n\n\n\n\n\n-----Examples-----\nExample:\n\n\n\n\n\n\n\n\n\n\n-----Notes-----\n\n\n\n\n-----Example-----\nOutput:6"], "prompt": "\nQUESTION:\nMany things in this first paragraph are references to some pretty famous YouTube stars, so be careful about rephrasing. Thanks! \nMichael, Kevin and Jake are sharing a cake, in celebration of their Webby award. They named it VCake. Unlike other cakes they considered, this one has finite volume and surface area. It's shaped as a normal rectangular cake with dimensions R centimeters by C centimeters. For the purposes of this problem, we can forget about three dimensions and think of a cake as just a 2D rectangle.\nChef will now cut the cake into three pieces, one for each person. However, the cake's shape and Chef's really old tools pose a few restrictions:\n\n- Chef can only cut the cake, or a cake piece, across a line parallel to one of its sides. \n- Chef can only cut the cake, or a cake piece, from end to end. That is, she cannot cut the cake partially. \n- Chef can only cut the cake, or a cake piece, such that the sides of the resulting pieces (which will be rectangular in shape) are integers. \n\nIn addition, Michael, Kevin and Jake also have a few preferences of their own:\n\n- They want their pieces to be connected (in one piece), and rectangular in shape.\n- Michael wants his piece to have an area exactly M square centimeters. (Again, forget about a third dimension.)\n- Kevin wants his piece to have an area exactly K square centimeters.\n- Jake wants his piece to have an area exactly J square centimeters.\n\nWith these restrictions, Chef is at a loss. Is it possible for Chef to accomplish this task? Please note that the entire cake should be used. There should be no leftover cake.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nEach test case consists of a single line containing five space separated integers R, C M, K and J.\n\n-----Output-----\nFor each test case, output a single line containing either \u201cYes\u201d or \u201cNo\u201d (without quotes), denoting whether Chef can accomplish the task or not.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 105\n- 1 \u2264 R, C \u2264 109\n- 1 \u2264 M, K, J \u2264 1018\n\n-----Example-----\nInput:4\n4 5 10 4 6\n4 5 6 10 4\n4 5 4 6 10\n2 2 2 2 2\n\nOutput:Yes\nYes\nYes\nNo\n\n-----Explanation-----\nExample case 1. In this case, Chef can accomplish the task by doing the following slicing.  \npre tt\n_ _ _ _ _       _ _ _ _ _       _ _ _ _ _       _________ \n|         |     |         |     |         |     |M M M M M|\n|         | -- |_ _ _ _ _| -- |_ _ _ _ _| -- |M_M_M_M_M|\n|         |     |         |     |     |   |     |J J J|K K|\n|_ _ _ _ _|     |_ _ _ _ _|     |_ _ _|_ _|     |J_J_J|K_K|\n/tt /pre\nI'll make an image if I have time \nExample case 4. Here, Michael, Kevin and Jake each wants a piece with area 2, but the total area of the cake is only 2\u00d72 = 4. This means the task is impossible.\nUse Standard Input format\nANSWER:\n"}}