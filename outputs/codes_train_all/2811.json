{"2811": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format\n\n\n\n\n\n\n 0\n\n\n\n\n\n 0000 0000 0 0000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nSend:\n\t\nSend message with call-based format\n\nData:\n\t\n\n\n 0000 0000 0000 0000\n\n\n\n\n\n\n\n 0000 0 0000 0 0\n\n\n\n\n\n\n\n\n0 0 -", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nQUESTION:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0000 0000 0000 0\n\n\n\n\n\n\n\n\n0 0 0 0 0 0 0\n\n\n0 0 0", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\t\n\n\n\n 0 0000 0 0000 0 0 0000 0 00\n\n\n\n\n\n 0 0 0 0 0 0 0 0\n\n\n\n\n\n\n\n\n\n\n\n0 0 0 0 0 0 0 0 0 0", "\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n 0000 0000 0000 0 0000 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 - one single 1\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nSend message\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nNote:\n 0 0000 0 0 0000 0 0\n\n\n\n\n\n\n\n\n00 0 0000 0 000 0 0", "\nUse Call-Based format\nANSWER:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBinary with 0 and 1 is good.\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n0 0 - one single 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tExample:\n", "\nUse Call-Based format\nREQ:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nREQ:\n\n\n\n\n\t\n\n\n\n 0 0000 0 0000 0 00 0000 0 0 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n00 0 0 0000 0 000 0 0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nCALL-Based format\n\nSEND:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 - one single 1\n\n\n\n\n\n\n\n\n\n0 0 - one", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\t\nUse Call-Based format\n\nSEND:\n\t\nSend binary data\n\nSEND:\n\n\n\n\n\n\n\n\n0 0 - one 1\n\n\n\n\n\n\n\n\n\n\nRules\n\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nSEND:\n\t\nUse Call-Based format\n\nSEND:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 0 0 0 0\n\n\n\n\n\n    1", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nSEND:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n 0 0000 0000 0\n\n\n\n\n\n\n 0 0 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 - one single", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExamples:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 0000 0000 0 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe first block consists of", "\nUse Call-Based format\nREQ:\n\nUse Call-Based format\nOUT:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nThe number of blocks is 0 and 1:\n\n0 0 - one single 1\n\n\n\n\n\n\n\n\n\n0 0 0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nSend message\n\n\n\n\n\n\n\n\n 0000 0000 0000 0000 0\n0 0000 0000 0 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 0000 0 000 0 0000 0", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nCOMMA:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n 0000 0000 0000 0000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 0 0", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nBinary with 0 and 1 is good.\n\n\n\n\nUse Call-Based format\n\n\n 0000 0000 0 0000 0 0000 0 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 - one single 1\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nBinary:\n\n0 0 0 0 0 0 0 0 0 0 0\n\n\n\n\n\n\n\n\n\n\n\n 0 0 0 0 0 0 0 0 0 0 0\n\n\n\n\n\n\n\n\n\n0 0 - one", "\nSend message\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\nSEND:\n\n\t\nSend message\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 0 0 0 0 0 0 0 0\n\n\n\n\n\n\n\n"], "prompt": "\nQUESTION:\nBinary with 0 and 1 is good, but binary with only 0 is even better! Originally, this is a concept designed by Chuck Norris to send so called unary messages.\n\nCan you write a program that can send and receive this messages?\n\nRules\n\nThe input message consists of ASCII characters between 32 and 127 (7-bit)\nThe encoded output message consists of blocks of 0\nA block is separated from another block by a space\nTwo consecutive blocks are used to produce a series of same value bits (only 1 or 0 values):\n\nFirst block is always 0 or 00. If it is 0, then the series contains 1, if not, it contains 0\nThe number of 0 in the second block is the number of bits in the series\n\n\nExample\nLet\u2019s take a simple example with a message which consists of only one character (Letter 'C').'C' in binary is represented as 1000011, so with Chuck Norris\u2019 technique this gives:\n\n0 0 - the first series consists of only a single 1\n00 0000 - the second series consists of four 0\n0 00 - the third consists of two 1\n\nSo 'C' is coded as: 0 0 00 0000 0 00\nSecond example, we want to encode the message \"CC\" (i.e. the 14 bits 10000111000011) :\n\n0 0 - one single 1\n00 0000 - four 0\n0 000 - three 1\n00 0000 - four 0\n0 00 - two 1\n\nSo \"CC\" is coded as: 0 0 00 0000 0 000 00 0000 0 00\nNote of thanks\nThanks to the author of the original kata. I really liked this kata. I hope that other warriors will enjoy it too.\ndef send(s):\n\t\nUse Call-Based format\nANSWER:\n"}}