{"53": {"code": ["\n\n\n\n\n\n\nTest:\n\nA test is a string of length $n$\n\nA test case is a string of length $n$\n\nA test case is a string of length $n$\n\nA test case is a string of length $n$\n\n\n\n\n-----\n-----\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n", "\n\nTest cases\n\n-----Input-----\n\nThe quiz is made about a test case\n\nThe quiz is made about a test case\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n-----\n\n\n\n-----\n\n-----\n\n\n\n\n\n\n\n\n\n\nOutput-----\n\n\n-----\n\n\n\n\n\n-----\n\nThe", "\n\nTest cases:\n\n-----Input-----\n\nTest cases are in the order of their number\n\n-----Test cases-----\n\nTest cases are in the order of their number\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n-----\n\n\n\n\n-----\n\n-----\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nif", "\n\n\n\n\n\n-----Usage-----\n\n\n\nTest:\n\nGildong has the most practical advantages:\n\nGildong has the same output as Gildong.\n\nThe quiz is\n\n\n\n\n\n-----\n\n-----\n\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\n", "\n\n\n\n\n\n\n\nExamples\n\nTest cases\n\nTest cases\n\nQUESTION:\n\nGildong\n\nTest cases\n\nQUESTION:\n-----\n\n-----\n\nGildong\n\n\n\n-----\n\n-----\n\n\nTest case:\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nThe first line is composed of", "\n\n\n\n\n\n\n\nTestCase-----\n\nTest cases\n\n    1)\n\n    2)\n\n   \n\n-----\n\n-----\n\n\n-----Output-----\n\nA test is for two or more test cases\n\n\n\n\n-----\n\n-----\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nThe first line is", "\n\n\n\n\n-----Usage-----\n\nThe Gildong code for making a quiz.\n\n-----Example-----\n\n\n\n\n\nQUESTION:\n\nGildong code for making a quiz.\n\n\n\n\n\n-----\n\n-----\n\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nA", "\n\nTest case:\n\nTested in Gildong.\n\nTested in Gildong.\n\nTested in Gildong.\n\n\n\n\n\n\n\n\n\n\n\n-----\n-----\n\n\n\n\n-----\n\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n-----\n\nThe first line is the first test case", "\n\n\n\n\n\n\nTest case:\n\nGildong's algorithm:\n\nGildong's algorithm:\n\nGildong's algorithm:\n\nGildong's algorithm is a\n\n\n\n-----\n\n-----\n\n\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nTodo:", "\n\n\n\n\n\n\nExample:\n\n-----Input-----\n\nYour code is shown that the number of test cases is 1 or 2.\n\nThe test case is 1 or 2.\n\nThe test case is 2.\n\n\n\n\n\n-----\n\n-----\n\n\n\n-----\n\n-----\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n-----\n", "\n\n\nTest case:\n\nGildong is not available.\n\nTest case:\n\n\n\nOutput:\n\nGildong is available for a lot of test cases.\n\n\n\n\n-----\n\n-----\n\n\n\n\n\n-----\n\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n-----\n\nThe first line is the", "\n\n\n\n\n\n\nTest cases:\n\n    The test is done here\n\n    The test case is done here\n\n   \n\n\n\n-----\n\n-----\n\n\n-----Example-----\n\nThe first line of your input is\n\n\n\n\n-----\n-----\n\n\n\n-----\n\n\n\n\n\n-----\n\n\n\n-----\n\nThe first line is the", "\n\n\n-----Test Examples-----\n\nThe test is a thing to do.\n\n-----Test Examples-----\n\n\n\n\n\n\n\n\nInput-----\n\nThe test is a thing to do.\n\n\n\n-----\n\n-----\n\n\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n-----\n\nA test with the", "\n\n\n\n\n-----Info-----\n\n\n\nTest:\n\nGildong is a linguistic test case.\n\nGildong is a linguistic test case.\n\n\n\n\n\n\n-----\n-----\n\n\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nGildong", "\n\n\n\n\n\n\n\n-----Error-----\n\nThe test is not implemented.\n\nThe test case is implemented.\n\n\n-----Input-----\n\nThe test is not implemented.\n\n\n\n\n\n\n-----\n-----\n\n\n\n\n\n-----\n-----\n\n\n\n\n-----\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n\nif you can", "\n\n\n\n\n\n\n\nTest cases:\n\n\n-----Input-----\n\nThe number of test cases\n\n$n$\n\n$t$\n\n\n\n\n\n-----\n-----\n\n\n\n\n-----\n-----\n\n\nTest case:\n\n\n\n\n\n\n\n\n-----Test cases-----\n\nThe test case:\n\n\n\n\n\n\n-----\n", "\n\n\n\n\n\n\nInput-----\n\nThe test is made up of a sequence of length $n$.\n\nThe test case is identified by the number of test cases.\n\nThe test case is classified as a string consisting of an integer.\n\n\n\n\n-----\n-----\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n-----\n\n\n\n\n-----\n", "\n\n\n\n\n\n\nCode:\n\nGildong recently learned how to find a string of length $n$.\n\nThe quiz is for a test case:\n\nGildong recently learned how to find a string of length $n$.\n\n\n\n\n\n-----\n-----\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n\n\n\n-----", "\n\n\n\n\n\n\nInput-----\n\nYou have no questions.\n\n\n-----Example-----\n\nThe quiz is explained with your input.\n\nYou can find a sequence of length $n$ and $i$-1$.\n\n\n\n\n\n\n-----\n\n-----\n\n\n-----\n-----\n\n\n\n\n\n\n\n\n-----\n\n\n-----\n", "\n\n\n\n\n\n\n\n\nInput-----\n\nTest cases for a quiz.\n\nTest cases for a quiz are:\n\nGildong\n\nTest cases for a quiz\n\nTest cases for a quiz\n\nTest cases for a quiz\n\nTest cases for a quiz\n\n\n\n-----\n-----\n\n\n\n\n-----\n-----\n\n\n\n-----\n\n\n\n"], "prompt": "\nQUESTION:\nGildong recently learned how to find the longest increasing subsequence (LIS) in $O(n\\log{n})$ time for a sequence of length $n$. He wants to test himself if he can implement it correctly, but he couldn't find any online judges that would do it (even though there are actually many of them). So instead he's going to make a quiz for you about making permutations of $n$ distinct integers between $1$ and $n$, inclusive, to test his code with your output.\n\nThe quiz is as follows.\n\nGildong provides a string of length $n-1$, consisting of characters '<' and '>' only. The $i$-th (1-indexed) character is the comparison result between the $i$-th element and the $i+1$-st element of the sequence. If the $i$-th character of the string is '<', then the $i$-th element of the sequence is less than the $i+1$-st element. If the $i$-th character of the string is '>', then the $i$-th element of the sequence is greater than the $i+1$-st element.\n\nHe wants you to find two possible sequences (not necessarily distinct) consisting of $n$ distinct integers between $1$ and $n$, inclusive, each satisfying the comparison results, where the length of the LIS of the first sequence is minimum possible, and the length of the LIS of the second sequence is maximum possible.\n\n\n-----Input-----\n\nEach test contains one or more test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$).\n\nEach test case contains exactly one line, consisting of an integer and a string consisting of characters '<' and '>' only. The integer is $n$ ($2 \\le n \\le 2 \\cdot 10^5$), the length of the permutation you need to find. The string is the comparison results explained in the description. The length of the string is $n-1$.\n\nIt is guaranteed that the sum of all $n$ in all test cases doesn't exceed $2 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case, print two lines with $n$ integers each. The first line is the sequence with the minimum length of the LIS, and the second line is the sequence with the maximum length of the LIS. If there are multiple answers, print any one of them. Each sequence should contain all integers between $1$ and $n$, inclusive, and should satisfy the comparison results.\n\nIt can be shown that at least one answer always exists.\n\n\n-----Example-----\nInput\n3\n3 <<\n7 >><>><\n5 >>><\n\nOutput\n1 2 3\n1 2 3\n5 4 3 7 2 1 6\n4 3 1 7 5 2 6\n4 3 2 1 5\n5 4 2 1 3\n\n\n\n-----Note-----\n\nIn the first case, $1$ $2$ $3$ is the only possible answer.\n\nIn the second case, the shortest length of the LIS is $2$, and the longest length of the LIS is $3$. In the example of the maximum LIS sequence, $4$ '$3$' $1$ $7$ '$5$' $2$ '$6$' can be one of the possible LIS.\nUse Standard Input format\nANSWER:\n"}}