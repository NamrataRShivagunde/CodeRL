{"2428": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\n\n        return self.singleNumber(nums)\n\n\n\n\n\nUse Call-Based format\n\nClass Solution:\n   \n\n:\n\n\n\n   \n\n\n\n       \nUse Call-Based format\nUse Call-Based format\n\n\n\n\nGiven a non-empty\u00a0array of integers\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n   \n\nUse Call-Based format\nNote:\n:\n\n    pass\n    __call__(self, nums: List[int]) -> int:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n2\n\nExample 3:\n\n\n\nGiven a non-", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n       \n\n\n2:\n\n\n\n   \n        return self.singleNumber(nums)\n\n\n\n       \nUse Call-Based format\nUse Call-Based format\n\n\n\nGiven an array of integers,\n\n1:\n\n\nGiven a non-", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n        return nums[0]\n\n\n\n   \n\n:\n\n\n   \n        return nums[0]\n\nGiven a non-empty\u00a0array of integers\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a non-empty\u00a0array of", "\nUse Call-Based format\n\n\n        \n\n\n\n\n:\n   \n\n\n\n1:\n\n\n\n        pass\n\n\n   \n        return nums.count(1)\n\nThe number of elements that appears twice except for one.\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n2\n\nExample 3:\n\n\nGiven a non", "\nUse Call-Based format\n\n        \nUse Call-Based format\n\n\n\n\n\n       \n\n\n2:\n\n\n\n   \n        \nUse Call-Based format\nGiven a non-empty array of integers, every element appears twice except for one. Find that one.\nNote:\n\n\n    \n\n\n\n\n\n\n1\n\nExample 3:\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n:\n\n   \n\n\n\n\n\n        pass\n\n   \n        return self.singleNumber(nums)\n\nGiven a non-empty\u00a0array of integers:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n2\n\n\n\nGiven a non-empty", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\n    def\n\n\n\n\n       \n        \nUse Call-Based format\nGiven a non-empty\u00a0array of integers, every element appears twice except for one. Find that one.\n\nNote:\n\n\n    \n\n\n\n\n\n\n2\n\nExample 3:\n\n\n\nGiven a non", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n       \nNote:\n\n3:\n\n\n   \n        return 1\n\nGiven a non-empty\u00a0array of integers, every element appears twice except for one.\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers,", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n       \n\n 2:\n\n   \n        return nums[0]\n\nGiven a non-empty\u00a0array of integers, every element appears twice except for one.\n\nNote:\n\n\n    \n\n\n\n\n\n\n\nExample 3:\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n:\n\n\n\n        pass\n   \n        pass\n\nGiven a non-empty array of integers, every element appears twice except for one. Find that single one.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an empty\u00a0", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n       \n\n\n\n   :\n        return 1\n\nGiven a non-empty array of integers, every element appears twice except for one.\nNote:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a non", "\nUse Call-Based format\n\n\n        \nUse Call-Based format\n\n\n\n\n   \n\n2:\n\n\n   \n        \nUse Call-Based format\nGiven a non-empty\u00a0array of integers, every element appears twice except for one.\nNote:\n\n\n\n\n\n\n\n\n\n\n\n1\n\nExample 3:\n\n\nGiven a non", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n   \n\n2:\n\n\n        return 1\n\n\n   \n        pass\n        \nGiven a non-empty array of integers, every element appears twice except for one.\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of integers, every element", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\n:\n\n\n    def\n        \nUse Call-Based format\nGiven a non-empty\u00a0array of integers, every element appears twice except for one.\n\nNote:\n\n\n\n\n\n\n\n\n\n\n2\n\n\nGiven a non", "\nUse Call-Based format\n\n\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n:\n\n\n       \n        return nums[0]\n\nGiven an array of integers, every element appears twice except for one. Find that one.\n\nNote:\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a non-empty", "\nUse Call-Based format\n\n\n    \n\nUse Call-Based format\n\n\n\n       \n\n\n\n\n       \n       \nGiven a non-empty\u00a0array of integers, every element appears twice except for one. Find that one.\nNote:\n\n\n    \nUse Call-Based format\n\n\n\n\n\n\n\nExample 3:\n\n\nGiven a non-", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n       \n\n\n\n\n       \n        return 1\n        \nUse Call-Based format\nGiven a non-empty\u00a0array of integers, every element appears twice except for one. Find that one.\n\nNote:\n\n    \n\n\n\n\n\n\nGiven an empty\u00a0array of integers\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\nExample:\n    class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n:\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n2\n\nExample 3:\n\n\nGiven a non", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n       \n\n:\n\n\n\n        pass\n\n   \n\nUse Call-Based format\n\n       \n\nUse Call-Based format\nUse Call-Based format\n\n\n\nGiven a non-empty\u00a0array of integers\n\n\n\n\nGiven a non-"], "prompt": "\nQUESTION:\nGiven a non-empty\u00a0array of integers, every element appears twice except for one. Find that single one.\n\nNote:\n\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n\nExample 1:\n\n\nInput: [2,2,1]\nOutput: 1\n\n\nExample 2:\n\n\nInput: [4,1,2,1,2]\nOutput: 4\nclass Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}