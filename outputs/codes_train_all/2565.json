{"2565": {"code": ["Use Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n#Lorem Belt\nfor i in range(thickness+1):\n>>> print 'HackerRank'.ljust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====\nIn", "\nUse Standard Input format\n\n\n\nUse Standard Input format\n\n\n\n\n\nljust(width,5)\nrjust(width,5)\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Standard Input format\n__thickness\n\n>>> width = input()\n\n>>>\n\n\n\n\n\n\n=====Function Descriptions====", "\nUse Standard Input format\n\n\n\nUse Standard Input format\n\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Python code\n\n\n\n\n\n=====Function Descriptions=====\nUse Python code\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Problem Descriptions=====\n\n\n\n=====Function Descriptions=====\nIn Python\n", "Use Standard Input format\n\n\n\n\n\n\nUse Standard Output format\n\n>>> width = int(input())\n>>> print 'HackerRank'.ljust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function Descriptions=====\nIn Python\n", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_____\n\n\n\n\n______\n\n\n\nThe task is given a function description\n\n>>> width = int(input())\n>>> c = 'H'\n>>> width = int(input())\n\n\n\n\n\n=====Function Descriptions=====\n", "\nUse Standard Input format\n\n__(thickness)\n\nUse Standard Output format\n\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n\n#No function descriptions\n\n#No function descriptions\n\n__input()\n\n>>> width = int(input())\n>>>__\n=====Function Descriptions", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> width = 20\n>>> print 'HackerRank'.ljust(thickness,'-')\n\n>>> width = 20\n\n\n\n\n\n\n\n\n\n\n\n\nTBD:\n\n\n\n\ninput()\n\n#Top Belt\nfor i in range(thickness):", "\n\n\n\nUse Standard Input format\n\n\n\n\n\n>>> width = int(input())\n>>> width = int(input())\n\n>>> width = int(input())\n>>> width = int(input())\n\n>>> width = int(input())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nIn Python", "\nUse Standard Input format\n\n\n\n\n\n\n\n\nljust(width)\nljust(width)\n\nljust(width)\n\njustify(width)\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n==> Function Description ==\n\n=====Function Descriptions=====", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n.ljust(width,'-')\n\n>>> print 'HackerRank'.rjust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nIn Python, you must use standard input format\n\n\n\n\n\n    Note:\n", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Python code.\n\n\n\n\n\n\n.ljust(3)\n\n.rjust(3)\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n=====Function Descriptions=====\nIn Python\n", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n>>> width = 20\n>>> print 'HackerRank'.ljust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n==\n\n\n=====Function Descriptions=====\nIn Python\n>>> print 'HackerRank", "\nUse Standard Input format\n\n\n\nUse Standard Input format\n\n\n\n\n\n\n=Function Descriptions=====\n\n\n>>> width = 20\n>>> print 'HackerRank'.rjust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Problem Descriptions=====\n\n\n\n=====Function Descriptions=====\nIn Python", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> width = 20\n>>> print 'HackerRank'.rjust(width,'-')\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Python code.\n\n>>> width = 20\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nIn Python", "\nUse Standard Input format\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n.ljust(width,'-')\n\n>>> print 'HackerRank'.rjust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe function description is in Python\n\n\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n__\n\n______\n\n>>> print 'HackerRank'.rjust(thickness)\n\n>>> print 'HackerRank'.ljust(thickness)\n\n\n\n\n\n\n\n\n=====Function D", "\nUse Standard Input format\n\n\n\nUse Standard Input format\n\n\n\n\n\n.ljust(width)\n\n>>> print 'HackerRank'.rjust(width,'-')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Python format\n\n\n\n\n=====Function Descriptions=====\nIn", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe function description can be used in Python\n\n\n\n\n\n\n__(thickness-1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nThe function description can be used in Python\n\n>>> width = int(", "\n\n\n>>> print 'HackerRank'.rjust(thickness,'-')\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nA function of text can be replaced with rjust or ljust\n\n\n\n\n=====Function Descriptions", "\nUse Standard Input format\n\n\n\nUse Standard Input format\n\n\n\n\n\n>>> print 'HackerRank'.rjust(width,'-')\n----------HackerRank-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\nUse Python\n\n\nthickness = 50\n\n\n\n=====Function Descriptions"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\nIn Python, a string of text can be aligned left, right and center.\n\n.ljust(width)\n\nThis method returns a left aligned string of length width.\n\n>>> width = 20\n>>> print 'HackerRank'.ljust(width,'-')\nHackerRank----------  \n\n.center(width)\n\nThis method returns a centered string of length width.\n\n>>> width = 20\n>>> print 'HackerRank'.center(width,'-')\n-----HackerRank-----\n\n.rjust(width)\n\nThis method returns a right aligned string of length width.\n\n>>> width = 20\n>>> print 'HackerRank'.rjust(width,'-')\n----------HackerRank\n\n=====Problem Statement=====\nYou are given a partial code that is used for generating the HackerRank Logo of variable thickness.\nYour task is to replace the blank (______) with rjust, ljust or center.\n\n=====Input Format=====\nA single line containing the thickness value for the logo.\n\n=====Constraints=====\nThe thickness must be an odd number.\n0 < thickness < 50\n\n=====Output Format=====\nOutput the desired logo.\n#Replace all ______ with rjust, ljust or center. \n\nthickness = int(input()) #This must be an odd number\nc = 'H'\n\n#Top Cone\nfor i in range(thickness):\n    print((c*i).______(thickness-1)+c+(c*i).______(thickness-1))\n\n#Top Pillars\nfor i in range(thickness+1):\n    print((c*thickness).______(thickness*2)+(c*thickness).______(thickness*6))\n\n#Middle Belt\nfor i in range((thickness+1)//2):\n    print((c*thickness*5).______(thickness*6))    \n\n#Bottom Pillars\nfor i in range(thickness+1):\n    print((c*thickness).______(thickness*2)+(c*thickness).______(thickness*6))    \n\n#Bottom Cone\nfor i in range(thickness):\n    print(((c*(thickness-i-1)).______(thickness)+c+(c*(thickness-i-1)).______(thickness)).______(thickness*6))\nUse Standard Input format\nANSWER:\n"}}