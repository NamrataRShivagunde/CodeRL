{"1789": {"code": ["\n```\n\n\n\n\n\n\n\n\n\npython\ngenerate_bc(\"mysite.com/pictures\", \" \") == 'HOME / PICTURES / PICTURES'\ngenerate_bc(\"mysite.com\", \" \") == 'HOME'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "\n```\n\n\n\n\n\n\n\nThe title:\n\n\ngenerate_bc(\"mysite.com\", \" \") == 'HOME / Mysite\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\ngenerate_bc(\"mysite.com\", \" \")", "\n```\n\n\n\n\npython\ngenerate_bc(\"mysite.com\", \" \") == 'HOME'\n```\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\nThe other example is:\n```\ngenerate_bc(\"mysite.com\", \" \") == 'HOME\nbreadcrumb", "\n```\n\n\n\n\n\n\n\nEasy examples:\n\n```python\ngenerate_bc(\"mysite.com\", \" \") == 'HOME'\n\n\n\n\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n\n#a-b-c-a-b-", "\n\n\n\n\n\n\n\nE.g.:\n\npython\ngenerate_bc(\"mysite.com\", \" \") == 'HOME * ITERS'\n\npython\ngenerate_bc(\"mysite.com\", \" \") == 'HOME * ITERS'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n", "\n```\n\n\n\n\n\n\n\nTodo:\n\nAnother example:\n\n```\n\nGenerate a breadcrumb from a function:\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n```\n\n\n\n#a-b-b-c-a-", "\n```\n\n\n\n\n\n\n\nReturns:\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\ngenerate_bc(\"mysite.com/very-very-very-very\", \" \") == 'HOME'\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n```\n\n\n\n\n", "\n```\n```\n\n```\n\npython\n\npython\n```\n\nHow much more, you can also use a function for getting a breadcrumb from your function:\n```\ngenerate_bc(\"\", \" \") == 'HOME / home'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Taken for", "\n```\n\n\n\n\n\n\n\n\nYou can also use a URL as a template\n\n```\n\nGenerate a breadcrumb by adding a new URL:\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\nBreadcrumb for a specific url:\n```\n\n\n\n\n\n", "```\nbreadcrumb men\u00f9s\nbreadcrumb men\u00f9s\n```\n\npython\n\npython\n\npython\n\n\npython\n\n\n\n\n```\n\n\n\n\npython\ngenerate_bc(\"mysite.com\", \" \")\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n```\n\nif you'd like", "```\n```\n\nExample:\n\n\n\n\n\n\n\nWelcome to the wiki:\n```\n\nWelcome to the wiki:\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n```\n\nEIP:\n\n\n\n\n\n\n\n```\n\n```\n\n\n\n\n\n\n\n\n\n\n\n", "\n```\nbreadcrumb men\u00f9s\n\nBreadcrumb men\u00f9s:\n\n\n```\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\nBreadcrumb:\n```\ngenerate_bc(\"mysite.com/very-very-very-very.html\",\")``", "\n```\n\n\n\n\n\n\n\n\n\n\n\nTodo:\n\n\n\n\n```\n\nI'll keep it for you.\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n    You", "\n```\n\n\n\n\n\n\n\nE.g.:\n\ngenerate_bc(\"mysite.com/breadcrumb/pictures/breadcrumb.html\", \" \") == 'HOME / Breadcrumb / Breadcrumb';\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```\n\nThe most part is just `", "\n```\n\n\n\n\n\n\n\n\n\n\n\ngenerate_bc(\"mysite.com/girc\", \" \") == 'HOME'\ngenerate_bc(\"mysite.com\", \" \") == 'HOME'\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n", "\n```\n\n```\n\nWelcome:\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\npython\ngenerate_bc(\"mysite.com/kata-example.html\", \" \") == 'HOME'\n\n\n\n\n\n```\n\n```\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n", "\n```\n\npython\nbreadcrumb_man\n```\n\npython\n\npython\n\n```\n\npython\ngenerate_bc(\"mysite.com/index.html\", \" \") == 'HOME';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n```\n\n    This will", "\n\n\npython\n\n\n\n\n\n\n\ngenerate_bc(\"mysite.com/pictures/holidays.html\", \" \") == 'HOME / Pictures / Holidays';\n\n\n\n\n\n\n\npython\n\n\n\n\n```\n\n\n\n\n\n\n\npython\n\n\n\n\n\n```\n\n\n\n```\n\nif you", "\n```\n```\n\n\n\n\n\n\n\n\n\n\nBreadcrumb\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npython\ngenerate_bc(\"mysite.com/lame\", \" \") == 'HOME'\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\nThe first example is", "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngenerate_bc(\"mysite.com/blogs/blogs.html\", \" \") == 'HOME / BLOGS'\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n"], "prompt": "\nQUESTION:\nAs [breadcrumb men\u00f9s](https://en.wikipedia.org/wiki/Breadcrumb_%28navigation%29) are quite popular today, I won't digress much on explaining them, leaving the wiki link to do all the dirty work in my place.\n\nWhat might not be so trivial is instead to get a decent breadcrumb from your current url. For this kata, your purpose is to create a function that takes a url, strips the first part (labelling it always `HOME`) and then builds it making each element but the last a `` element linking to the relevant path; last has to be a `` element getting the `active` `class`.\n\nAll elements need to be turned to uppercase and separated by a separator, given as the second parameter of the function; the last element can terminate in some common extension like `.html`, `.htm`, `.php` or `.asp`; if the name of the last element is `index`.something, you treat it as if it wasn't there, sending users automatically to the upper level folder.\n\nA few examples can be more helpful than thousands of words of explanation, so here you have them:\n```python\ngenerate_bc(\"mysite.com/pictures/holidays.html\", \" : \") == 'HOME : PICTURES : HOLIDAYS'\ngenerate_bc(\"www.codewars.com/users/GiacomoSorbi\", \" / \") == 'HOME / USERS / GIACOMOSORBI'\ngenerate_bc(\"www.microsoft.com/docs/index.htm\", \" * \") == 'HOME * DOCS'\n```\nSeems easy enough?\n\nWell, probably not so much, but we have one last extra rule: if one element (other than the root/home) is longer than 30 characters, you have to shorten it, acronymizing it (i.e.: taking just the initials of every word); url will be always given in the format `this-is-an-element-of-the-url` and you should ignore words in this array while acronymizing: `[\"the\",\"of\",\"in\",\"from\",\"by\",\"with\",\"and\", \"or\", \"for\", \"to\", \"at\", \"a\"]`; a url composed of more words separated by `-` and equal or less than 30 characters long needs to be just uppercased with hyphens replaced by spaces.\n\nIgnore anchors (`www.url.com#lameAnchorExample`) and parameters (`www.url.com?codewars=rocks&pippi=rocksToo`) when present.\n\nExamples:\n```python\ngenerate_bc(\"mysite.com/very-long-url-to-make-a-silly-yet-meaningful-example/example.htm\", \" > \") == 'HOME > VLUMSYME > EXAMPLE'\ngenerate_bc(\"www.very-long-site_name-to-make-a-silly-yet-meaningful-example.com/users/giacomo-sorbi\", \" + \") == 'HOME + USERS + GIACOMO SORBI'\n```\n\nYou will always be provided **valid url** to webpages **in common formats**, so you probably shouldn't bother validating them.\n\nIf you like to test yourself with actual work/interview related kata, please also consider this one about building [a string filter for Angular.js](http://www.codewars.com/kata/number-shortening-filter).\n\n_Special thanks to [the colleague](http://www.codewars.com/users/jury89) that, seeing my code and commenting that I worked on that as if it was I was on CodeWars, made me realize that it could be indeed a good idea for a kata_ :)\ndef generate_bc(url, separator):\n\t\nUse Call-Based format\nANSWER:\n"}}