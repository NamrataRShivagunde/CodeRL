{"2232": {"code": ["\n\n\n\n\n-----Info-----\n\nThe number on the screen is at level k \n\n\n\n\n\n\n\n\n\nPrint n non-negative integers at level i\n\n\n\n\n\n\n\n \n \n pressing the '$\\sqrt{}$' button at level i. \n\nYOUR CODE:\nZS \n\n\n\n\n\n\n\n\n\nZS the C", "\nStart at level i\n\nBackwards:\n\nZS the Coder is playing a game.\n\nZS the Coder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n\n\n\n \n\n\n\n\nZS the Coder is playing a game. \n\n\n\n\n\n\nZS the Coder is", "\n\n\n\n\nZS the Coder is playing a game. \n\n\nZS the Coder is playing a game. \n\nQUESTION:\nZS the Coder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n\n\n\n\n\n\n\n\n\n\nCoder is playing a game. \n\nZS the Coder is", "\n\n\n\n\nZS the Coder is playing a game. \n\n\nZS the Coder is playing a game.\n\nZS the Coder is playing a game. \n\nZS the Coder is playing a game. \n\nZS the Coder is playing a game.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n", "\n\n\n\nCoder:\n\nCoder:\n\nCoder:\n\nCoder:\n\nCoder:\n\nCoder:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n \n\n\n \n \n \n\nZS the Coder is playing a game. \n\n\n\n\n\n\n\n $\\", "\nStart at level 0\n\n\n\n\n\n-----Preparation-----\n\n\n\n\nZS the Coder is playing a game. \n\n\n\n\n\nPrint the number on the input. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nZS the Coder is playing a game. \n\nZS the Coder is playing a\n \\n", "\n\n \n\n\n\n\n\n\n\n\n-----Help-----\n\nThis game needs a game, he needs a game. \n\nExample:\n\nZS the Coder is playing a game\n\n\n\n\n\n\n\n\n \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n-----Exit-----\n\nEOF\n\n\n-----Error-----\n\n\n\n\n\\", "\n Enter a number between 0 and 100. \n\n\n\n\n-----Help-----\n\nPrint the number on the screen. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n-----Input-----\n\n\nPrint the number on the screen. \n\nZS the Coder is playing a game. \n\n\n \n\n\n\n\n\n''')\n\n", " \n play a game. \n\n\n\n\n\n\n\nCoder:\n\nZS Coder is playing a game.\n\nZS Coder is playing a game. \n\nQUESTION:\nZS Coder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''')\n\nZS", "\n\n\n\n\n-----Help-----\n Play a game.\n\n-----Input-----\n\nPrint the number of non-negative integers at the level i\n\n-----Help-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\nZS the Coder is playing a game. \n\n\n \n\nZS the", "\n\n-----Help-----\n\n\n\n\n-----Help-----\n\n\n\nZS the Coder is playing a game.\n\nZS the Coder is playing a game.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Help-----\n\nA number on the output is not a positive integer. \n + '", "\n\n\n\n\n-----Help-----\n\nShow the number on the screen\n\n-----Info-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nA number on the output can be greater than 10^18. \n\nZS the\n\n\n$\\", "\n\n\n\n\n\nCoder the Coder is playing a game.\n\nQUESTION:\n\nZS the Coder is playing a game. \n\nQUESTION:\n\nZS the Coder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInput-----\n\n\n\n\n\n\n\n-----Workaround-----\n\nWhen", "\nCoder is playing a game. \n\n\n\n\nCoder is playing a game. \n\nCoder is playing a game. \n\nQUESTION:\nZS the Coder is playing a game. \n\nCoder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Exit-----\n\n", "\nCoder is playing a game.\n\nCoder is playing a game.\n\nQUESTION:\nZS the Coder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n \n\n\n\n\nInput-----\n\n\n\nZS the Coder is playing a game.\n\n\n\n\nZS the Coder", "\n\n-----Help-----\n Enter a game. \n\n-----Input-----\n\nPrint a number on the screen. \n\n-----Output-----\n\nPrint a number on the screen. \n\n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n''',\n\n''\n\n", " \n\n-----Help-----\n Enter the game for the number. \n\n-----Input-----\n\nPrint the number on the screen at level k. \n\n\n\n\n-----Help-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoder can move the game. \n\n\n\n''')\n\n", "\nStart at level k\n\nCoder at level k\n\n\n-----Input-----\n\nPrint the number of non-negative integers.\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\nZS the Coder is playing a game.\n\nZS the Coder is playing a game \n\n\n\n\n", "\n\n\n\n\n\n\nZS the Coder is playing a game. It will be the first line of the input.\n\nQUESTION:\n\nZS the Coder is playing a game. \n\nZS the Coder is playing a game. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nZS the", "\n\n-----Help-----\n\nPrint the number on the screen. \n\n\n\n-----Notes-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n-----Help-----\n\n\n\n\n\n\n\n\n\n\n\n\nCoder is playing a game. \n\nZS the Coder is playing a game. \n\n\n\n\n\n"], "prompt": "\nQUESTION:\nZS the Coder is playing a game. There is a number displayed on the screen and there are two buttons, ' + ' (plus) and '$\\sqrt{}$' (square root). Initially, the number 2 is displayed on the screen. There are n + 1 levels in the game and ZS the Coder start at the level 1.\n\nWhen ZS the Coder is at level k, he can :  Press the ' + ' button. This increases the number on the screen by exactly k. So, if the number on the screen was x, it becomes x + k. Press the '$\\sqrt{}$' button. Let the number on the screen be x. After pressing this button, the number becomes $\\sqrt{x}$. After that, ZS the Coder levels up, so his current level becomes k + 1. This button can only be pressed when x is a perfect square, i.e. x = m^2 for some positive integer m. \n\nAdditionally, after each move, if ZS the Coder is at level k, and the number on the screen is m, then m must be a multiple of k. Note that this condition is only checked after performing the press. For example, if ZS the Coder is at level 4 and current number is 100, he presses the '$\\sqrt{}$' button and the number turns into 10. Note that at this moment, 10 is not divisible by 4, but this press is still valid, because after it, ZS the Coder is at level 5, and 10 is divisible by 5.\n\nZS the Coder needs your help in beating the game\u00a0\u2014 he wants to reach level n + 1. In other words, he needs to press the '$\\sqrt{}$' button n times. Help him determine the number of times he should press the ' + ' button before pressing the '$\\sqrt{}$' button at each level. \n\nPlease note that ZS the Coder wants to find just any sequence of presses allowing him to reach level n + 1, but not necessarily a sequence minimizing the number of presses.\n\n\n-----Input-----\n\nThe first and only line of the input contains a single integer n (1 \u2264 n \u2264 100 000), denoting that ZS the Coder wants to reach level n + 1.\n\n\n-----Output-----\n\nPrint n non-negative integers, one per line. i-th of them should be equal to the number of times that ZS the Coder needs to press the ' + ' button before pressing the '$\\sqrt{}$' button at level i. \n\nEach number in the output should not exceed 10^18. However, the number on the screen can be greater than 10^18.\n\nIt is guaranteed that at least one solution exists. If there are multiple solutions, print any of them.\n\n\n-----Examples-----\nInput\n3\n\nOutput\n14\n16\n46\n\nInput\n2\n\nOutput\n999999999999999998\n44500000000\n\nInput\n4\n\nOutput\n2\n17\n46\n97\n\n\n\n-----Note-----\n\nIn the first sample case:\n\nOn the first level, ZS the Coder pressed the ' + ' button 14 times (and the number on screen is initially 2), so the number became 2 + 14\u00b71 = 16. Then, ZS the Coder pressed the '$\\sqrt{}$' button, and the number became $\\sqrt{16} = 4$. \n\nAfter that, on the second level, ZS pressed the ' + ' button 16 times, so the number becomes 4 + 16\u00b72 = 36. Then, ZS pressed the '$\\sqrt{}$' button, levelling up and changing the number into $\\sqrt{36} = 6$.\n\nAfter that, on the third level, ZS pressed the ' + ' button 46 times, so the number becomes 6 + 46\u00b73 = 144. Then, ZS pressed the '$\\sqrt{}$' button, levelling up and changing the number into $\\sqrt{144} = 12$. \n\nNote that 12 is indeed divisible by 4, so ZS the Coder can reach level 4.\n\nAlso, note that pressing the ' + ' button 10 times on the third level before levelling up does not work, because the number becomes 6 + 10\u00b73 = 36, and when the '$\\sqrt{}$' button is pressed, the number becomes $\\sqrt{36} = 6$ and ZS the Coder is at Level 4. However, 6 is not divisible by 4 now, so this is not a valid solution.\n\nIn the second sample case:\n\nOn the first level, ZS the Coder pressed the ' + ' button 999999999999999998 times (and the number on screen is initially 2), so the number became 2 + 999999999999999998\u00b71 = 10^18. Then, ZS the Coder pressed the '$\\sqrt{}$' button, and the number became $\\sqrt{10^{18}} = 10^{9}$. \n\nAfter that, on the second level, ZS pressed the ' + ' button 44500000000 times, so the number becomes 10^9 + 44500000000\u00b72 = 9\u00b710^10. Then, ZS pressed the '$\\sqrt{}$' button, levelling up and changing the number into $\\sqrt{9 \\cdot 10^{10}} = 300000$. \n\nNote that 300000 is a multiple of 3, so ZS the Coder can reach level 3.\nUse Standard Input format\nANSWER:\n"}}