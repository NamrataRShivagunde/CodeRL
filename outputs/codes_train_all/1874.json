{"1874": {"code": ["\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n    |\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nGiven a directed, acyclic graph\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n|    |\nv    v\n|    v\n|    v\n\n\n\n\nGiven a directed, acyclic graph of N nodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a directed, acyclic", "\nUse Call-Based format\n\n\n\n\n\n\n    |    |\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Python format\n\nUse Python-based format\nUse Python-Based format\n\n\nUse Call-Based format\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\nGiven a directed, acy", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n    |    |\n\n\n\n\n\n\n   \n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nGiven a directed, acyclic graph of N nodes\n\n\n\nGiven a directed", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n|    |\nv    v\n\n\nUse Call-Based format\nGiven a directed, acyclic graph of N nodes.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a directed, ac", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a directed, acyclic graph of N nodes\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a directed, acy", "\nUse Call-Based format\n\n\n\n\n\n\n    |\nv    v\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Python-based format\n\n\nUse Call-Based format\nUse Python-Based format\n\n\n\n\n\n\nGiven a directed, acyclic graph of N nodes\n\n\n\nGiven a directed,", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n    |\n\n2--->2\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Python-based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Python-Based format\n\n\n\n\nA directed, acyclic graph of N nodes\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n    |    |\nv    v\n|    |\nv    |\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a directed, acyclic", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    |\n    |\n    |    |\n    |    v\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a directed, acyclic graph of N nodes\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n    |\n    |\nv    v\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a directed, ac", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    |\nv    v\n\n2--->2\n\n\n\nGiven a directed, acyclic graph of N nodes\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a directed, acyclic graph\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n    |\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Python Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a directed, acyclic graph", "\nUse Call-Based format\n\n\n\n\n\n\n\n|    |\nv    v\n|    v\n\n\n|    |\nv    v\n|    v\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n    |\n    v    v\n\n\n\n\nGiven a directed, acyclic graph of N nodes.\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    N-1 -> N-2\n\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n    v    v\n\n\n\nUse Call-Based format\nGiven a directed, acyclic graph of N nodes.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a directed, acy", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nv    v\nv    v\n\n\n|    |\nv    v\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nv    v\nv\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a directed, ac", "\nUse Call-Based format\n\n\n\n\n\n\n\nv    v\n\n\n\n\nGiven a directed, acyclic graph of N nodes.\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a directed, ac", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nGiven a directed, acyclic graph of N nodes, find all possible paths from the first to last.\n\n\n\n\n\n\n\nGiven a directed, acyclic graph of N nodes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a directed, acyclic", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n    |    |\nv    v\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nGiven a directed,"], "prompt": "\nQUESTION:\nGiven a directed, acyclic graph of N nodes.\u00a0 Find all possible paths from node 0 to node N-1, and return them in any order.\n\nThe graph is given as follows:\u00a0 the nodes are 0, 1, ..., graph.length - 1.\u00a0 graph[i] is a list of all nodes j for which the edge (i, j) exists.\n\n\nExample:\nInput: [[1,2], [3], [3], []] \nOutput: [[0,1,3],[0,2,3]] \nExplanation: The graph looks like this:\n0--->1\n|    |\nv    v\n2--->3\nThere are two paths: 0 -> 1 -> 3 and 0 -> 2 -> 3.\n\n\nNote:\n\n\n       The number of nodes in the graph will be in the range [2, 15].\n       You can print different paths in any order, but you should keep the order of nodes inside one path.\nclass Solution:\n    def allPathsSourceTarget(self, graph: List[List[int]]) -> List[List[int]]:\n        \nUse Call-Based format\nANSWER:\n"}}