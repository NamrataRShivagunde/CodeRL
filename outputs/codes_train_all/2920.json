{"2920": {"code": ["\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n##Task:\n\n\n\n##Pattern:\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n   \n\t\n\n##Task:\n\n\n\n\n\n##Task:\n\n\n\n\n\n##Pattern:\n\n\n##Task:\n\nYou have", "\n##Data:\n\n##Pattern:\n\n##Data:\n\n##Pattern:\n\n\n\n\n\n\n##Data:\n\n##Task:\n\n##Task:\n\n\n\n\n\n`\n\n\n\n\n\n\n\n\n\n\n##Data:\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n##Task:\n\n##\n\n", "\n#\n#\n\n\n#\n\n\n##Task:\n\n# Tasks\n#\n\n\n\n\n\n\n\n\n#\n##Task:\n\n#\n\n##Examples:\n\n\n\n\n\n\n\n#\n#\n\n\n\n   \n\t\n\n\n\n\n   \n\n##Example:\n\n\n\n\n\n##Example:\n\n\n\n#", "\n\n\n\n\n\n\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n##Pattern:\n\n\n##Task:\n\n\n\n\n\n\n\n##Task:\n\n\n##Task:\n\n\n\n\n\n\n\n   ................\n   ..................\n\n\n\n##Rows:\n\n\n\n\n\n\n##Task", "\n\n# Task\n\n\n   ...\n   ...\n   ...\n   ...\n   ...\n   ...\n   ...\n   ...\n   ...\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n#\n\n\n\n\n\n\n   \n   \n\n\n##Return:\n\n\n\n\n   \n\n\n\n###", "\n# Task\n# Task\n\n\n\n# Pattern\n#\n# Pattern\n\n# Task\n\n\n\n\n\n\n\t\n##Task:\n\n# Task\n# Pattern\n#\n\n\n\n\n\n# Task:\n#\n# Task:\n\n\n\n\n\n\n\n   \n\n\n\n##Results:\n\n\n\n##\n\n\n\n\n\n##", "\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n##Pattern:\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n##Task:\n\n##Task:\n\n\n\n\n\n\n\n\n##Task", "\n\nUse Call-Based format\n\n\n\n\n\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n##Task:\n\n##Task:\n\n\n\n\n\n\t\n##Task:\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n##Pattern:\n\n\n\n", "\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n##Pattern:\n\n\n##Task:\n\n\n\n\n\n\n\n##Task:\n\n\n##Task:\n\n\n\n\n\n\n\n\n   \n\n\n##Task:\n\n\n\n\n##Pattern:\n\n\n\n##", "\n##Task:\n\nA task to run\n\n\n\n\n##Task:\n\nA task to run\n##Task:\n\nA task to run\n\n\n\n\n\n\n\n\n##Task:\n\n\n`\n\n\n##Task:\n\n##Task:\n\n\n\n\n\n\n   \n   \n\n\n##Results:\n\n\n\n\n\n\n##", "\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n\n##Data:\n\n##Task:\n\n##Data:\n\n##Data:\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\nThe function **", "\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n##Hint:\n\n\n\n\n\n##Task:\n\n##Example:\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Output:\n\n\n\n\n\n##Output:\n\n\n\n", "\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n##Pattern:\n\n##Task:\n\n\n\n\n\n\n\t\n##Task:\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n##Task:\n\n##Task:\n\n\n   \n\n\n\n", "\n##Name:\n\nName:\n##Pattern:\n##Task:\n##Pattern:\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n##Name:\n\n\n\n\n\n\n\n##Task:\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n#Example:\n##Pattern:\n\n\n\n##", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n##Task:\n\n##Pattern:\n\n\n\n   \n\t\n\n\n\n   ................\n   ..................\n   ................\n\n##Example:\n\n\n\n\n\n\n\n\n\n\n##Task", "\n##Task:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n##\n\n\n\n`\n\n\n##Task:\n\n\n##Task:\n\n\n\n\n\n##Task:\n\n\n\n##Task:\n\n\n\n\n\n\n\n##Example:\n\n\n\n\n\n\n\n\n##Line:\n\n\n\n\n\n##Task", "\n##Task:\n\nUse Call-Based format\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n##Pattern:\n\n\n##Task:\n\n\n\n\n\n\n\n##Task:\n\n\n##Task:\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n\n##Pattern:\n\n\n##Task:\n", "\n##Task:\n\nUse Call-Based format\n\n\n\n##Task:\n\n\n##Task:\n\n\n\n\n\n\n\n##Task:\n\n##Task:\n\n##Task:\n\n\n\n\n\n\n##Task:\n\n\n##Task:\n\n\n\n\n\n\n\n\n\n\n\n\n##Pattern:\n\n\n\n\n\n\n##", "\n\n\n\n   \n   ....................\n   ....................\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n\n##Task:\n\n##Pattern:\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Examples:\n\n##Examples:\n\n\n\n\n\n\n\n##Task:\n", "\n\n\n\n\n\n\n##Task:\n\n##Pattern:\n##Pattern:\n##Task:\n##Task:\n##Task:\n##Task:\n##Task:\n##Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##Task:\n\n\n\n\n\n#Task:\n\n##Task:\n"], "prompt": "\nQUESTION:\n##Task:\n\nYou have to write a function **pattern** which creates the following pattern upto n number of rows. *If the Argument is 0 or a Negative Integer then it should return \"\" i.e. empty string.*\n\n##Pattern:\n\n    (n)\n    (n)(n-1)\n    (n)(n-1)(n-2)\n    ................\n    .................\n    (n)(n-1)(n-2)....4\n    (n)(n-1)(n-2)....43\n    (n)(n-1)(n-2)....432\n    (n)(n-1)(n-2)....4321\n    \n##Examples:\n\npattern(4):\n\n    4\n    43\n    432\n    4321\n    \npattern(6):\n \n    6\n    65\n    654\n    6543\n    65432\n    654321\n\n\n\n```Note: There are no blank spaces```\n\n```Hint: Use \\n in string to jump to next line```\ndef pattern(n):\n\t\nUse Call-Based format\nANSWER:\n"}}