{"2421": {"code": ["\nUse Call-Based format\nUse Call-Based format\n       \n\n\n\n\n\n\n   \n\n\n\n\n        return nums.index(self.majorityElement)\n\n\n   :\n        return self.majorityElement(nums)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 times n\n\n\n\n\nGiven an array of size", "\n\n\n\n\n        \nUse Call-Based format\n\n\n\n\n\n:\n        return 2\n\nuse Call-Based format\n\nclass\n\n\n\n\n        return 2\n\n    majorityElement(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of size n, find the", "\nUse Call-Based format\nUse Call-Based format\n\n       ...\n\n\n\n\n\n   \n        \n\n\n\n   :\n \u2014 Use Call-Based format\n\n\n   ...\n\n\nn > 2\n\n\nUse Call-Based format\n    n = 3\n\nUse Call-Based format\n\n\n\n   \n\n\nGiven an array of size", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n   \n        return nums[0]\n\n\n\n\n  , nums: List[int]\n\n    - n/2\n\n\n\n\nUse Call-Based format\n\n\n\n\nn = 2\n\n\n\n\nGiven an array of size n, find", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n:\n    \n   \n\n\n\n\n   \n        return nums[0]\n\n        :param nums:\n\n\n\n    n = 2\n\n\n\n\n\n\nA majority element of n is found in the array\n\n\n\n\n\n\nGiven an array of size n", "\nUse Call-Based format\n\n\n\n        return majorityElement(self, nums)\n\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n   \n        return nums[0]\n\n\n\nUse Python-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = 2\n\nn/2:\n\n\nGiven", "\nUse Call-Based format\nUse Call-Based format\n\n       ...\n\n\nUse Call-Based format\n\n\n\n       \n\n\n\n\n\n   \n        \"\"\"\n\n\n    1:\n\n\n       \n\n\nn/2:\n\n\n\n\nThe array is sorted in descending order of their length.\n\n\n\n\n\n\n\nGiven an array of size", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n        pass\n\n\n\n:\n        return 2\n\n   \n\n\n\n\n       (self, nums: List[int]) -> int:\n        \n\n\n\n\n\n\n\n\n\nn = 2\nn = 1\n\n\nUse Call-Based format\n\nExample 3:\n\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n:\n        return 2\n\nUse Call-Based format\n\nclass Call:\n   \n\n\n\n\n    majorityElement(self, nums: List[int]) -> int:\n        \n\n\n\n\n\n\n\n\n\nIf the array is not empty:\n\n\n\n\nclass\n\nGiven an array", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n       \n\n\n\n\n\n        return nums[0]\n\nUse Python-based format\n\nclass majorityElement(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given an array of size n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n       \n\n\n\n   \n        return nums[0]\n\n\n    -> int:\n        \n\n  1:\n\n1:\n  2\n\n3:\n\n\n\n\n\n\n\n\n\nn = 2\n\nThe majority element is the second element in the array\n\nclass\n\nGiven", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n   \n        return nums[0]\nGiven an array of size n, find the majority element\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of size n, find", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n       \n\n\n\n\n\n        return 3\n\n    *nums:\n        \nUse Call-Based format\n\n    >>> array = Solution()\n\n\n\n\n\n\n\n\nn = len(array)\n\n\n\n\n\n\n\nGiven an array of size n, find", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n        \n\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n       \n        return nums[0]\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n2 times\n\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n  , nums: List[int]):\n       \n\nGiven an array of size n, find the majority element\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven an array of size n, find the element\n\nclass\nGiven an", "\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\n    \n\n   \n\n\n\n\n        return self.majorityElement(nums[0])\n    majorityElement(self, nums: List[int]) -> int:\n\n\n\n\n\n\n \u230a n/2 times.\n\n\n\n\n\n\n\nGiven an array of size n", "\n\n\n\n\n        pass\n\n\n\n\n\n\n       \n\n\n\n\n\n\n        return nums[0]\n\n   \n        pass\n\n        See \"The majority element\"\n\n    See \"The majority element\" method\n       \n\n\n\n\n\nn/2 = 2\n\nn/2 = 3\n\n\n\n\n\nGiven an array of", "\n\nUse Call-Based format\n\nUse Call-Based format\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n   :\nGiven an array of size n, find the majority element\nUse Call-Based format\n\n\n\nn/2:\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Given an array of size n, find", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n              \n\n\n\n\n\n        pass\n\n    # noqa: E501\n\n    >>> majorityElement(nums)\n    3\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven an array of size n:\n\nGiven an array", "\nUse Call-Based format\n\n\n        pass\n\n\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n        return 2\n\n\nclass\n        return 2\n\n\n       1.2\n\n\n\n\n1. 2 n/2 times\n\n\n\n\n1. 2 n/2 elements found\n\n\n\n\n\n\n1. 2 n/"], "prompt": "\nQUESTION:\nGiven an array of size n, find the majority element. The majority element is the element that appears more than \u230a n/2 \u230b times.\n\nYou may assume that the array is non-empty and the majority element always exist in the array.\n\nExample 1:\n\n\nInput: [3,2,3]\nOutput: 3\n\nExample 2:\n\n\nInput: [2,2,1,1,1,2,2]\nOutput: 2\nclass Solution:\n    def majorityElement(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}