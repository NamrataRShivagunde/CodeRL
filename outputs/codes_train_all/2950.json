{"2950": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef\n\n\n\n```\n\ndef\t\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n```\n[1, 2", "\n\n\n\n\nUse Call-Based format\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\n```\n\narr = [arr]\n\n```\n\n\n\n\n\n\n\ndef\n\t\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n```\n[1, 2, 3],", "\nUse Call-Based format\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef\t:\n\n\n\ndef\n\t\n\n\nIn this Kata, you will return the number of arithmetic progressions of size `3` that were possible from that list.\n\n\n\n\n\n\n\n\n\n\n\n\n\t```\n[", "\n\n\n\n\n\nUse Call-Based format\n\n\n\ndef solve(arr):\n\n\t\nUse Call-Based format\n\ndef solve(arr):\n\n\n\n\n```\n\n[1, 2, 3, 5, 7, 9]\n\n\ndef):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n```\n", "\n\n\n\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\n\n```\nprint solve(arr)\n```\n\nUse Python-Based format\n\n```\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n[1, 2,", "\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\nUse List-Based format\n\n```\n\narr =\n\n\n\n\ndef\n\n\n\n\n\n\nUse Call-Based format\n\n\n// [2, 3, 5, 9]\n\n\n\n\n\n\nIn this Kata", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\ndef solve(arr):\n\n\ndef\n\n\n\n```\n\n[1, 2, 3]\n\n\ndef\n\n\n\n\n\n\nUse Kata format\n\n\n\n\n\n```\n[1, 2, 3] ==> 5\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef\n\t\n\n\n\n```\n#\n\n\n\nIn this Kata, you will be given an array of integers of integers\n\n\n\n\n\n\n\n\n\n\n\n[1, 2, 3] ==> 2\n//\n\n\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\ndef solve(arr):\n\t\n\ndef\n\t\n\n\n```\n#\ndef\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n```\n[2, 3, 5]\n\n```\n\n\n\n[1, 2, 3]\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\n\n\n\n```\n[1, 2, 3, 5, 7, 9]\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n[1, 2, 3]\n\n\n\nIn this Kata, you", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\ndef\n\t\nUse Call-Based format\n\n\n\ndef\t\n\n\n\n\n\n\n\n\n, [3, 5, 7, 9]\n\n\n\n\n\n[1, 2, 3]\n[1, 2, 3]\n\n\n\nIn this Kata,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ndef solve(arr):\n\n\ndef\n:\n\n\n```\n\n[1, 2, 3]\n```\n\n\ndef\n\t\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n[1, 1, 3]\n//\t\nIn this", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\ndef\t\n\n\n\n```\n\n3 ==> 5\n\n\ndef):\n\t\nUse Call-Based format\n\n\n\n\n\n\n, and [3, 5, 7, 9]\n\n\n\n\n\n\nUse Kata:\n\n```\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\n\n```\n\ndef solve(arr):\n\t\nUse Call-Based format\n\n****\n\n\n\n\n\n```\n\n\ndef\n\t\n\n\n\n\n\n\n\n// [3, 5, 7, 9]\n\n\n\n\n\n\n\n\t\n\n```\n[1, 2,", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef\n\t\n\n\n```\n\n\n\t\n\n\n\n\n\n\n\n// [2, 3, 5, 7, 9]\n\n\n\n\n\n\n\n\n```\n[1,", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\ndef\n\t\nUse Call-Based format\n\n\n```\n[1, 2, 3] ==> 1\n\n\ndef\n\t\n\n\n\n\n\n\n\n\n\n\n\n```\n[1, 2, 3] ==> 1\n\n\n\n\n\n```\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\nfunction solve(arr):\n\n\t\nUse Call-Based format\n\nfunction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n[1, 2, 3]\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\n```\n#\n```\n\n\n\n\n```\n\n\n\n\t\n\n\n\n\n\n\n\n```\n\n[1, 1, 2] ==> 1\n\n\n\n\n\n\n\n\n```\n[1", "\nUse Call-Based format\n\n\n\n\n\n\n\n\ndef solve(arr):\n\nUse Call-Based format\n\ndef sort(arr):\n\t\nUse Call-Based format\n\t\nSort and\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, 2, 3, 4, 5, 9]\n\n\n\n\nIn this K", "\n\n\n\n\n\n\n\n\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef solve(arr):\n\t\nUse Call-Based format\n\ndef\n\t\nUse Call-Based format\n\n\ndef\n\t\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n[3, 7, 9]\n\n\nIn"], "prompt": "\nQUESTION:\nIn this Kata, you will be given an array of integers and your task is to return the number of arithmetic progressions of size `3` that are possible from that list. In each progression, the differences between the elements must be the same.\n\n```\n[1, 2, 3, 5, 7, 9] ==> 5\n// [1, 2, 3], [1, 3, 5], [1, 5, 9], [3, 5, 7], and [5, 7, 9]\n```\n\nAll inputs will be sorted. More examples in test cases. \n\nGood luck!\ndef solve(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}