{"2912": {"code": ["\n:\nUse Call-Based format\nUse Call-Based format\n\n:\n\n\n\nUse Call-Based format:\n\nIn this simple exercise, you will build a program that will build a program that returns a list of all possible multiples up to a value\n\n\t:\n:\n\n\n:\n\n\t\nUse Simple Example format\n:\n\n\n\n\n    The first", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\n\n,\n\t\n\n:\n\nUse Simple format\nIn this simple exercise, you will build a program\n\n:\n\n:\n\n:\n\n\n\n\n# Example 2:", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Simple Call-Based format\n\n\n\n\n\nUse Call-Based format:\n\nIn this simple exercise, you will build a program that will build a program that returns a list of the multiples up to another value\n\n\n:\n\t\t:\n\n:\n:\n\n\n\n\n    #", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\nUse Simple Function Format\n\nUse Call-Based format\nABSOLUTE:\n\n\n\n:\n\n\n\n\t\n\t\nUse Call-Based format:\n:\n\n\n:\n\n\n\n:\n\n\n\n\n\n\n\t\tIn this simple exercise, you will build", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\nIn this simple exercise, you will build a program that uses a Call-Based format\n\n\t\n\t\nUse Call-Based format\n:\n\nIn this simple exercise, you will build a program\n\t\n:\n\n:\n\n:\n\n\n\n\n\n\tinteger", "\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\t\n\n:\n\nIn this simple exercise, you will build a program that will build a program that will return a list of multiples up to another value.\n\n\t\n:\n\n\n:\n\n\t\nUse Call-Based format\n:\n\n\n\n\tIn this", "\n\t\nUse Simple Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\t\nUse Call-Based format\n\n:\n\nIn this simple exercise, you will build a program\n,\n\t\nUse Call-Based format\n:\nIn this simple exercise, you will build a program\n\n\n:\n\n\t\n\n:\n\n\n\n\n\t# The", "\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format:\n\nIn this simple exercise, you will build a program using the call-based format\n,\t:\n:\n\n\n:\n\n\n\n   \n\n\n\n\n\n\n   .. code-block:: python\n\n       ", "\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\t\n\n\t\nUse Call-Based format:\n\n\n\n\t\n\n\t\n:\n\n\n\n\n\nUse Simple format:\n\n\n\n\n:\n\n\n\n\n\nIn this simple exercise, you", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\nUse Call-Based format:\n\nIn this simple exercise, you will build a program that will build a program that can be called with the `integer` and `limit` parameters\n\n::\n\t\t:\n\n\n\n:\n\n\n\n\n\n\n```\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\t\nUse Call-Based format\ndef find_multiples(integer, limit):\n\t\nUse Call-Based format\n\n\n\n\n\t\n\n:\n\n\t:\n\n:\n\n\n\n\n\n\n\n\t# Example\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Simple Call-Based format\n\n\n\n\n\t\nUse Call-Based format:\n\nIn this simple exercise, you will build a program\n\n,\t\n:\n\n\n:\n\n\n\n\n:\n\n\n\n\n\t>>> #doctest\n   ", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\t\nUse Call-Based format\ndef find_multiples(integer, limit):\n\t\nUse Call-Based format\n\n:\n\n\n\t\n\t:\n:\n\n\t\n:\n\n:\n\n:\n\n\n\n\n\n\nIn this simple exercise, you", "\nUse Call-Based format\t\n\n\n\nUse Call-Based format\n\nUse Simple Call-Based format\n\nUse Call-Based format\n\n\n\n\n:\n\n\n\n,\n\t\nUse Call-Based format\n:\n\nIn this simple exercise, you will build a program\n\t\t:\n\n\n\n:\n\n\n\n\nThe example above shows that you can", "\n:\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\nIn this simple exercise, you will build a program using a call-based format\n,\n\t\nUse Call-Based format:\n:\n\nIn this simple exercise, you will build a program\n\t\n:\n\n:\n:\n\n\n\n\n\t>>> #", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\t\n\t\nUse Call-Based format\n:\n\n\nUse Call-Based format\n:\n\nUse Simple Example format\n\n\t\nUse Call-Based format\n:\n\n\n\n\tfor i", "\n\n\n\n\nUse Call-Based format\n\nUse Simple Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format:\n\nIn this simple exercise, you will build a program using the\n\n\t\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n:\n\n\n\n\n\n    See the example above for a full", "\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format:\n\nIn this simple exercise, you will build a program using the function's standard format\n\n\n\n\t\n:\n\n\n\n:\n\n\n\nUse Simple Format\n\n:\n\n\n\n\n\n    This example", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n:\n\nUse Call-Based format\n\nIf you can use the call-based format, use the Call-Based format\n\n\n\n\n:\n\n\n\n\n\t\n:\n:\n\n\n\t:\n\n\n\n\n\n\n:\n\n\n\n\n\n\n    #!python\n   ", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\t\n:\n\n\n\n\n,\n\n\n:\n\n\nIn this simple exercise, you will build a program that will build a program\n\n\t\n:\n\n\t\n\n:\n\n\n\n\n\n\n\n## Examples"], "prompt": "\nQUESTION:\nIn this simple exercise, you will build a program that takes a value, `integer `, and returns a list of its multiples up to another value, `limit `. If `limit` is a multiple of ```integer```, it should be included as well. There will only ever be positive integers passed into the function, not consisting of 0. The limit will always be higher than the base.\n\nFor example, if the parameters passed are `(2, 6)`, the function should return `[2, 4, 6]` as 2, 4, and 6 are the multiples of 2 up to 6.\n\nIf you can, try writing it in only one line of code.\ndef find_multiples(integer, limit):\n\t\nUse Call-Based format\nANSWER:\n"}}