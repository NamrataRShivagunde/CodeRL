{"69": {"code": ["\n\n\n\n-----Note-----\n\nThe example of the test case was not executed.\n\n-----Note-----\n\n\n\n\n\n\n-----Output-----\n\nBertown's security service discovered\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n2", "\n\n-----Note-----\n\n\n\n\n\n\nExample:\n\nBertown's security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2", "\n\n\nExample:\n\nBertown's security service discovered that the security service is not known yet\n\nExample:\n\nBertown's security service discovered that the security service was known\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n2\n1\n2\n5\n6\n\n\n\n-----Note-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n-----Note-----\n\nThe test case starts with two positive integers $t$\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe", "\n\n-----Note-----\n\n\n\n\n\nNote\n\nBertown's security service discovered that the test case was not specified\n\n-----Input-----\n\nThe first line contains a string containing a string containing the number of mines\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe", "\nNote-----\n\n\n\n\n\n\n-----Note-----\n\n\n\n2\n2\n1\n3\n\n2\n6\n\n-----Note-----\n\n\n\n\n5\n1\n\n2\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\nNote\n\n\n-----Note-----\n\n\n1\n2\n\n", "\n\n-----Note-----\n\n\n\n\n\n\nNote-----\n\n\n\n\n\n-----Note-----\n\n\n\n\n2\n10\n2\n4\n5\n5\n5\n10\n1\n\n1\n2\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote-----\n\n\n1\n0\n\n\n-----Note-----\n\n", "\nNote\n\nExample-----\n\nThe second test case is for a line of a short word.\n\nNote:\n\nBertown is a city with a short word.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n", "\n\n-----Note-----\n\n\n\n\n\n\nExample:\n\nBertown's security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the security service discovered that the field was\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2", "\n\n\n\n\n-----Note-----\n\nThe test case consists of three lines:\n\n\n\n\n\n\n-----Note-----\n\nThe test case consists of two lines:\n\n\n-----Input-----\n\n2\n1\n2\n3\n4\n5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n-----Note-----\n\n\n\n\n\n\n\n1 1\n0101101\n1 1\n1\n1\n1\n1\n1\n2\n3\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe", "\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n2\n1\n2\n2\n3\n1\n4\n\n2\n3\n1\n2\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n2\n1\n1\n1\n1\n\n\n\n\n\n\n\n\n\n2\n3", "\nNote-----\n\nThe test case is not supported.\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n1\n2\n5\n1\n\n\n-----Note-----\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----", "\n\n\n\n\n-----Note-----\n\nThe mines can be used to activate a mine under a buildings.\n\n\n\n\n\n\n2\n4\n3\n4\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Note-----\n\n", "\nNote-----\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n2\n3\n\n\n-----Note-----\n\n\n2\n3\n\n\n-----Note-----\n\n\n\n2\n5\n1\n\n5\n1\n1\n2\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\nThe second", "\n\nExample:\n\n-----Input-----\n\nThe first line contains a map of mines.\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\nThe second line", "\n\n\n\n\n-----Note-----\n\n\nBertown's security service is not able to carry out a coins.\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n1 1\n", "\nNote-----\n\n\n\n\n-----Note-----\n\n\n\n\n\n-----Input-----\n\nThe first line contains two positive integers $n$ and $i$.\n\nThe second line contains two positive integers $b$.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n", "\n\n\n\n\n-----Note-----\n\n\n\n\n\n1\n2\n3\n4\n5\n\n\n\n-----Note-----\n\nBertown's security service is a security service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n2\n3\n\n\n-----Note-----\n\n\n", "\n\n-----Note-----\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n2\n3\n1\n2\n3\n2\n4\n5\n5\n5\n5\n6\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Note-----\n"], "prompt": "\nQUESTION:\nBertown is a city with $n$ buildings in a straight line.\n\nThe city's security service discovered that some buildings were mined. A map was compiled, which is a string of length $n$, where the $i$-th character is \"1\" if there is a mine under the building number $i$ and \"0\" otherwise.\n\nBertown's best sapper knows how to activate mines so that the buildings above them are not damaged. When a mine under the building numbered $x$ is activated, it explodes and activates two adjacent mines under the buildings numbered $x-1$ and $x+1$ (if there were no mines under the building, then nothing happens). Thus, it is enough to activate any one mine on a continuous segment of mines to activate all the mines of this segment. For manual activation of one mine, the sapper takes $a$ coins. He can repeat this operation as many times as you want.\n\nAlso, a sapper can place a mine under a building if it wasn't there. For such an operation, he takes $b$ coins. He can also repeat this operation as many times as you want.\n\nThe sapper can carry out operations in any order.\n\nYou want to blow up all the mines in the city to make it safe. Find the minimum number of coins that the sapper will have to pay so that after his actions there are no mines left in the city.\n\n\n-----Input-----\n\nThe first line contains one positive integer $t$ ($1 \\le t \\le 10^5$)\u00a0\u2014 the number of test cases. Then $t$ test cases follow.\n\nEach test case begins with a line containing two integers $a$ and $b$ ($1 \\le a, b \\le 1000$)\u00a0\u2014 the cost of activating and placing one mine, respectively.\n\nThe next line contains a map of mines in the city\u00a0\u2014 a string consisting of zeros and ones.\n\nThe sum of the string lengths for all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, output one integer\u00a0\u2014 the minimum number of coins that the sapper will have to pay.\n\n\n-----Example-----\nInput\n2\n1 1\n01000010\n5 1\n01101110\n\nOutput\n2\n6\n\n\n\n-----Note-----\n\nIn the second test case, if we place a mine under the fourth building and then activate it, then all mines on the field are activated. The cost of such operations is six, $b=1$ coin for placing a mine and $a=5$ coins for activating.\nUse Standard Input format\nANSWER:\n"}}