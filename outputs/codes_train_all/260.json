{"260": {"code": ["\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nA sequence of numbers is called a wiggle sequence if the first two elements are negative and the last two elements are positive.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n   ", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nANSWER:\n\n\n\nA sequence of numbers is called a wiggle sequence if it is not already a wiggle sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe sequence of numbers is called a", "\nUse Call-Based format\n\n    wiggleMaxLength(self, nums: List[int]) -> int\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    if all(nums[0", "\n\nUse Call-Based format\n\n\n\n\n\nExamples:\n\nInput: [1,3,4,5,3,6]\nOutput: 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n    wiggleMaxLength(nums) -> int\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    nums = [int(num)", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nA sequence of numbers is called a wiggle sequence.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence.\n\n\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nOutput: 2\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    >>> from rez.", "\nUse Call-Based format\n\n\n\n    wiggleMaxLength(self, nums)\n\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\nA wiggle sequence is called a wiggle sequence if there are two positive and negative negative numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    if len(nums)!= self.", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nThe first two elements are the first two elements of the sequence.\n\nOutput: 7\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumElements: The number of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nANSWER:\n\n\n\nA sequence of numbers is called a wiggle sequence\n\nExamples:\n\nInput:\n\nOutput: 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of", "\nUse Call-Based format\n\n\n\nCall-Based format\n\nUse Call-Based format\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    A sequence of numbers", "\n\nUse Call-Based format:\n\n\n\nUse Call-Based format:\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format:\n\nUse Call-Based format\n\nExample:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n", "\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence if the first two elements are both positive and negative.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called", "\nUse Call-Based format\n\n\nInput: [1,7]\nOutput: 7\n\nUse Call-Based format\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\nIf", "\nUse Call-Based format\n\n\n    wiggleMaxLength(self, nums: List[int])\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n    nums: List[int", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nA sequence of numbers is called a wiggle sequence if the first two elements are negative.\n\nOutput: 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The first", "\nUse Call-Based format\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence if the number of differences between successive numbers are strictly positive or negative.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe length of a sequence is returned\n\n\n\n\n\n\n\n    Args:", "\nUse Call-Based format\n\n    wiggleMaxLength(self, nums: List[int]) -> int\n\n\nNOTE:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA sequence of numbers is called a wiggle sequence\n\n\n\n\n\n\n\n", "\n    wiggleMaxLength(self, nums: List[int]) -> int\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    def wiggleMaxLength(self, nums: List[int]) -> int\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput: 6\n\nReturns"], "prompt": "\nQUESTION:\nA sequence of numbers is called a wiggle sequence if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence. \n\nFor example, [1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3) are alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.\n\nGiven a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.\n\nExamples:\n\nInput: [1,7,4,9,2,5]\nOutput: 6\nThe entire sequence is a wiggle sequence.\n\nInput: [1,17,5,10,13,15,10,5,16,8]\nOutput: 7\nThere are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].\n\nInput: [1,2,3,4,5,6,7,8,9]\nOutput: 2\n\n\n\nFollow up:\nCan you do it in O(n) time?\n\n\nCredits:Special thanks to @agave and @StefanPochmann for adding this problem and creating all test cases.\nclass Solution:\n    def wiggleMaxLength(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}