{"2929": {"code": ["\n\nThe code below is just for fun and is basically a function.\n\n\n\n\n\n\n\n\n\n### Note:\n\n### References:\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Answer:\n\n### Task:\n\n\n\n\n\n\n#### Task:\n\n\n", "\n\n## Example:\n\n## This code is based on Call-Based format\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n## Task:\n\n\n\n\n\n\n\n### Example:\n\n\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n#### Task:\n\n\n\n\n\n\n```python\n", "\n\n### Create a function to implement your function.\n\n### The function is called `factors`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n\n\n\n### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n####\n\n\n####\n\n# The factors", "\n`\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n#### Task:\n\n\n### Call-Based\n\n\n\n## Example:\n\n\n\n\n\n\n#### Task:\n\n\n\n\n\n#### Example:\n\n\n\n\n\n\n\n#### Examples:\n\n```python\n\n\n\n\n\n\n\n\n\n\n```python", "\n\n### Example\n\n\n\n\n\n\n\n\n\n\n# Example\n\n### Example\n\n\n### Task:\n\n## Example\n\n\n\n\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n\n\n\n\n\n\n\n### Example:\n\n#### Task:\n\n\n\n\n\n\n", "\n## Example:\n\n## Regarding\n\n\n\n\n\n\n\n\n### Example:\n\n# Replaying\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### The answer:\n\n```python\n\n# Samples:\n\n\n\n\n\n\n\n\n```", "\n\n### Example:\n\n### Functions\n\n###\n\n\n\n\n\n### A bunch of examples:\n\n### This function is called `factors`\n\n### HALRANGER:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Some examples:\n\n```", "\n\n\n\n### All of the functions are implemented here:\n\n### This function should take the number of factors to generate the factors for.\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### The examples below:\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n```python\n\nsq(", "\n## Note:\n\n\n\n\n\n\n\n# Description:\n\n## Examples:\n\n#### This example:\n\n#### This example is a two part function.\n\n## Usage:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n\n\n\n\n###\n\n\n###\n\n## Examples:\n\n**", "\n\n\n\n\n\n\n## Examples\n\n#### Example:\n\n---\n\nThe method `factors`\n\n## Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n#### Example:\n\n\n\n\n\n\n\n\n```python\n", "\n### Example:\n\n## Arguments\n\n\n\n\n\n\n\n\n### This is a very long description of your job.\n\n\n\n\n\n\n\n\n\n\n\n\n## Arguments:\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n# This is an example:\n\n\n\n\n\n\n\n\n\n### This is an example:", "\n\n\n\n\n\nThe factors function is called `factors(int)`\n\n#### Example:\n\n### Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n### Example:\n\n\n\n\n\n``", "\n## Example:\n\n## Example:\n\n## Use Call-Based format\n\n## Example:\n\n### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Examples:\n\n#### Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n#### Example:\n\n## Functions\n\n#\n\n\n#-------------------------------------------------------------------\n\n\n\n\n\n#### Example:\n\n#### Task:\n\n###\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Notes:\n\n### Task:\n\n\n\n\n\n\n\n\n### Tasks:\n", "\n\n### Formats\n\n\n\n\n\n## Note:\n\n\n\n\n\n\n\n\n## Example:\n\n\n\n### A function called `factors`\n\n### Task:\n\n### Issue:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n## This is a example\n\n\n\n\n\n\n```python", "\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n## Example:\n\n#### Examples:\n\n###\n\nThis job is just a function of factors.\n\n###\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n\n#### Example:\n\n\n\n\n\n\n\n###\n\n# The factors", "\n```\n\n\n\n\n\n\n\n\n### The code here is the actual code here.\n\n### Another example:\n\n### Task:\n\n### Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Note:\n\n#### Task:\n\n\n\n\n\n\n### The code here is the", "\n\n\n\n\n\n\n\n\n\n### Example\n\n### The function `factors` is a function that takes an integer `n` and returns a list of factors.\n\n### Example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Tasks:\n\n#### Example:\n\n\n\n\n\n```", "\n\n\n  # The code here is the output of the original function `factors`\n \n\n\n\n\n\n\n\n\n#\n\n\n\n#### Example:\n\n### Example code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Description:\n\n#### Example:\n\n#### Example:\n\n\n\n\n\n\n\n##", "\n\n\n\n---\n\nNote:\n\n#### Description:\n\n#### Example:\n\n#### Examples:\n\n#### This example is a Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Examples:\n\n#### Examples:\n\n###\n\n\n\n#### Examples:\n\n"], "prompt": "\nQUESTION:\n#### Task:\n\nYour job here is to implement a function `factors`, which takes a number `n`, and outputs an array of arrays comprised of two\nparts, `sq` and `cb`. The part `sq` will contain all the numbers that, when squared, yield a number which is a factor of `n`,\nwhile the `cb` part will contain all the numbers that, when cubed, yield a number which is a factor of `n`.  Discard all `1`s\nfrom both arrays.\n\nBoth `sq` and `cb` should be sorted in ascending order.\n\n#### What it looks like:\n\n```python\nfactors(int) #=> [\n  sq (all the numbers that can be squared to give a factor of n) : list,\n  cb (all the numbers that can be cubed   to give a factor of n) : list\n]\n```\n\n#### Some examples:\n\nAlso check out my other creations \u2014 [Keep the Order](https://www.codewars.com/kata/keep-the-order), [Naming Files](https://www.codewars.com/kata/naming-files), [Elections: Weighted Average](https://www.codewars.com/kata/elections-weighted-average), [Identify Case](https://www.codewars.com/kata/identify-case), [Split Without Loss](https://www.codewars.com/kata/split-without-loss), [Adding Fractions](https://www.codewars.com/kata/adding-fractions),\n[Random Integers](https://www.codewars.com/kata/random-integers), [Implement String#transpose](https://www.codewars.com/kata/implement-string-number-transpose), [Implement Array#transpose!](https://www.codewars.com/kata/implement-array-number-transpose), [Arrays and Procs #1](https://www.codewars.com/kata/arrays-and-procs-number-1), and [Arrays and Procs #2](https://www.codewars.com/kata/arrays-and-procs-number-2).\n\nIf you notice any issues or have any suggestions/comments whatsoever, please don't hesitate to mark an issue or just comment. Thanks!\ndef factors(n):\n\t\nUse Call-Based format\nANSWER:\n"}}