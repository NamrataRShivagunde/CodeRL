{"2408": {"code": ["\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    return self.firstUniqChar(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ->:\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n   \n        \n\n        return firstUniqChar(self, s)\n        \nUse Call-Based format\n\n\n\n        firstUniqChar(self, s: str):\n        \n\n\n\n\n\n\n\n\n\n\n\nGiven a string, find the first non-repeating character\n\n\nGiven a string", "\nUse Call-Based format\n\n\n\n\n\n\n    def firstUniqChar(self, s: str) -> int:\n        \n    def __call__(self, s: str):\n               \n\n  , print(s)\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a string,\n\n\n\nGiven a", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n       \n        \nUse Call-Based format\n\n\n\n\n\n        return firstUniqChar(self, s: str)\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a string, find the first non", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n    def firstUniqChar(self, s: str):\n        \n   \n        \n\n\n\n\n\n\n        __call__(self, s: str) -> int:\n        \n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string,\n\n\n\nGiven a string", "\n\n\n\nUse Call-Based format\n\n\n\n\n    def __call__(self, s: str):\n        \n\n   \n        pass\n        \nUse Call-Based format\n\n\n\n        __call__(self, s: str):\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string, find the", "\nUse Call-Based format\n\n\n\n\n\n   \n        return 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n  ,\n       \n\n\n\n\n\n\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n   \n   \n        pass\n\n\nGiven a string, return the character's index.\n\nExample:\n\ns = \"leetcode\"\nreturn 1.\n\n\n\n        __call__:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string,\n\nGiven a string", "\n\n\n\n\n\nUse Call-Based format\n\n\n    pass\n        \n\n   \n       \n\n\n\n pass\n    firstUniqChar(self, s: str):\n        \nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string,\n\n\nGiven a string, find the", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n    def firstUniqChar(self, s: str) -> int:\n           \n        \n\n\n    # noqa: E501\n    firstUniqChar(self, s: str):\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string\n\nGiven a string,", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n       \n        \nUse Call-Based format\n\n\n   \n        pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a string,\n\n\nGiven a string", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n   \n       \n        \n\n\n\n\n\n        pass\n\n    __call__(self, s: str)\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a string, find the first non-repeating character\n", "\nUse Call-Based format\n\n\n    return self.firstUniqChar(s)\n        \nUse Call-Based format\n\n\n\n   \n   \n        \nUse Call-Based format\n\n\n  s: str:\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a string, find", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n       \n        \nUse Call-Based format\n\nGiven a string, find the first non-repeating character in it.\n\nExamples:\n\ns = \"leetcode\"\nreturn -1.\n\n, __call__(self):\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def firstUniqChar(self, s: str) -> int:\n        \n\n        return 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n:\n\n\n :\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    def firstUniqChar(self, s: str) -> int:\n        \nUse Call-Based format\n\n        \n\n\n\n        __call__(self, s: str):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a string", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n        \nUse Call-Based format\n   \n        \nUse Call-Based format\n\n\n\n        __call__(self, s: str) -> int:\n        \n\n\n\n\n\n\n\n\n\n\nGiven a string,\n\n\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ,:\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n   \n        \nUse Call-Based format\nclass\n       \n\n\nGiven a string, find the first non-repeating character in it.\n\nExamples:\n\ns = \"leetcode\"\nreturn 1.\n\n\n        __call__\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n        return self.firstUniqChar(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  , __call__(self):\n\n\n\n\n\n\n\n\n\n\n\nGiven a string, find the first non\n\n\n\n\nGiven a string, find the first non-repeating character\n\n\nGiven a string, find"], "prompt": "\nQUESTION:\nGiven a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.\n\nExamples:\n\ns = \"leetcode\"\nreturn 0.\n\ns = \"loveleetcode\",\nreturn 2.\n\n\n\n\nNote: You may assume the string contain only lowercase letters.\nclass Solution:\n    def firstUniqChar(self, s: str) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}