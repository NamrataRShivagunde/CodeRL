{"1898": {"code": ["\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n],[3],[4,5]\n\n\u00a0\nExample 2:\n\nInput: root = [1,2]\n\n\n\n],[\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n      A root node in the binary tree is", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n],[3,5]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n],[3,5]\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven the root of a binary tree, each node in", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n,[5,6,7]\n\n\u00a0\nExample 2:\n\n\n\n],[3],[5]\n\n\n\n\n\n\n\n\nThe root of a binary tree is null.\n\n\u00a0\nExample 2:\n\n\n\n\n[]]\n\n\u00a0\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n],[3,4,5]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n],[3]\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\nExample 2:\n\n\nExample 3:\n\n\n\n\n\u00a0\n\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n,null,null]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n],[3,4]\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\nExample 2:\n\n\nInput:", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n], [3,5,6,7]\n\nExample 2:\n\nInput: root = [1,2,3]\n\n\n\n],[2],[3]\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\nExample 2\n", "\nUse Call-Based format\n\n\n\n\n\n\n,[1,2,null,4]\n\n\u00a0\nExample 2:\n\nInput: root = [1,2,3,4,5]\n\n\n\n],[\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n# Definition for a binary tree node", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n], [3,4,5]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n],[5]\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven the root of a binary tree,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n], [3,5]\n\nExample 2:\n\n\nUse Call-Based format\n\n],[null],[null]\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\u00a0\nExample 2:\n\nInput: root = []\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n,null,null]\n\n\nUse Call-Based format\n\n],[3],[5],[6],[7]\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\nExample 2:\n\n\nUse Call-Based format\n\n\n\n\nGiven the root", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n],[3,5]\n\n\u00a0\nExample 2:\n\n\n\n],[3],[5],[6],[7]\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    Given a root", "\nUse Call-Based format\n\n\n\n\n\n\n,[3,5,6,7]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n],[3,5,null,null,6]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\nExample 2:\n\nInput: root = []\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n],[3,5]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n],[3]\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a root of a binary tree, each node in", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n],\n[3,4]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\n\n],[3]\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n[3,5,6,7]\n\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n], [3]\n\n\u00a0\nExample 2:\n\nInput: root = [1,2,null,4]\n\n\n\n],[3]\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nroot = [1,2", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n,[3,5]\n\n\u00a0\nExample 2:\n\n\nUse Call-Based format\n\n],[3],[5]\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\u00a0\nExample 2:\n\nInput:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n], [3]\n\n\u00a0\nExample 2:\n\nInput: root = [1,2]\n\u00a0\nOutput: [null]\n\n\u00a0\nConstraints:\n\n\n\n],\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nroot = [1,", "\nUse Call-Based format\n\n\n\n\n\n\n,null,null,null]\n\n\u00a0\nExample 2:\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n],[3]\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\u00a0\n\n\n\n\n    root = [1,2,3]", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n,null,null]\n\n\u00a0\nExample 2:\n\nInput: root = [1,2]\n\u00a0\nConstraints:\n\n\n\n],[\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\u00a0\nExample 2:\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n], [3,5]\n\n\u00a0\nExample 2:\n\n\nUse Call-Based format\n\n],[3,5]\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n[3,5,null,null]\n\nGiven the root"], "prompt": "\nQUESTION:\nGiven the root\u00a0of a binary tree, each node in the tree has a distinct value.\nAfter deleting\u00a0all nodes with a value in to_delete, we are left with a forest (a\u00a0disjoint union of trees).\nReturn the roots of the trees in the remaining forest.\u00a0 You may return the result in any order.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,5,6,7], to_delete = [3,5]\nOutput: [[1,2,null,4],[6],[7]]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the given tree is at most 1000.\nEach node has a distinct value between 1 and 1000.\nto_delete.length <= 1000\nto_delete contains distinct values between 1 and 1000.\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def delNodes(self, root: TreeNode, to_delete: List[int]) -> List[TreeNode]:\n        \nUse Call-Based format\nANSWER:\n"}}