{"1645": {"code": ["\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\t\n\n\n1  1  1  1  1  1  1\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nThe task is simply stated\n\n\n\n\n\n\nSum of squares is a function of the", "\n\nUse Call-Based format\n\n\n\n\n\n\n\nn\n\nUse Call-Based format\n\nUse Call-Based format\n\ndef sum_of_squares(n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\tn = 10^9\n", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\nThe task is simply stated.\n\n\n\nThe task is simply stated.\n\nThe task is simply stated.\n\n\n\n\n\n\n\n\t\n\n\n\t\tThis task is", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nThe task is simply stated\n\n\n\n\n\n\n\n\n\n```if:c#``", "\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\nThe task is just stated.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\tn = 17\n\t\nNB", "\nUse Call-Based format\n\n\n\n\n\n\n\nThe task is simply stated\n\n\n\n\n\n\nn = 9 + 4 + 1 + 1 + 1\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nThe task is simply stated.\n\nThe task is simply stated\n\n\n\n\n\t\n\n\t# The task is simply", "\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe task is simply stated\n\n\n\n\n\n\n\n\tn = 3  3  4", "\n\nif:\n\n\tfor i in range(n):\n\t\tprint i\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif:c#\n5 random maximally hard test cases: 1\n\n\t", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\nUse Call-Based format\n\n\nCall-Based format\n\n\n\n\n\n\n\nn = 2  n = 2 + 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    This function is simply called for the task \"", "\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\n\n\nn < 3\n\n\n\n\n\n\nThe task is just stated.\n\n\n\n\n\n\n\n\n\n\nThe task is simply stated.\n\n\nThe task is simply stated.\n\n\n\n\n\n\n\tn = [3", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n```if:c#```", "\nUse Call-Based format\n\n\n\n\n\n\nif:python\n\n\n\t\nUse Call-Based format\n\nNB:\n\t\nUse Call-Based format\n\nNB:\n\t\n\n\n\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\t\n\n\n\n    >>> from pycbc.utils", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\t\n\n\nUse Call-Based format\n\n\n\n\n\n1.2\n1.3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = 2 * 3 * 3\n\n```if:", "\nUse Call-Based format\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nn = 8\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nThe task is simply stated\n\n\n\n\n\t\n\n\n```if:java\n350  random", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\nReturns:\n\nn\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = 10^9\n\n#if n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\t\n\n\n\nn < 15000\n\n\n\n\t\nUse Call-Based format\n\n\nThe task is simply stated\n\n\n\n\n\n\n\n\n\n\n\n\nif:c#\n\n\n\n\tn = 10^(9)\n", "\n\t\nUse Call-Based format\n\t\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\t\n\n\n\n\n\n\n\n\n\nThe task is simply stated\n\n\n\n\n\n\n\nif:c#\n350 random maximally hard test cases: 1e9\n\n\n", "\nUse Call-Based format\n\t\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\t\tn = 1\n\t\t\nUse Call-Based format\n\n\n\t\n\n\n\n\t\n\n\n\nThe task is just stated\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```if:c#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif:java\n5 maximally hard test cases: n < 20\n\n\n", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nExample:\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe task is simply stated.\n\n\n\n\n\n\n\nif n < 3:\n "], "prompt": "\nQUESTION:\nThe task is simply stated. Given an integer n (3 < n < 10^(9)), find the length of the smallest list of [*perfect squares*](https://en.wikipedia.org/wiki/Square_number) which add up to n. Come up with the best algorithm you can; you'll need it!\n\nExamples:\n\nsum_of_squares(17) = 2  17 = 16 + 1 (4 and 1 are perfect squares).\nsum_of_squares(15) = 4  15 = 9 + 4 + 1 + 1. There is no way to represent 15 as the sum of three perfect squares.\nsum_of_squares(16) = 1  16 itself is a perfect square.\n\nTime constraints:\n\n5 easy (sample) test cases: n < 20\n\n5 harder test cases: 1000 < n < 15000\n\n5 maximally hard test cases: 5 * 1e8 < n < 1e9\n\n```if:java\n300 random maximally hard test cases: 1e8 < n < 1e9\n```\n```if:c#\n350 random maximally hard test cases: 1e8 < n < 1e9\n```\n```if:python\n15 random maximally hard test cases: 1e8 < n < 1e9\n```\n```if:ruby\n25  random maximally hard test cases: 1e8 < n < 1e9\n```\n```if:javascript\n100 random maximally hard test cases: 1e8 < n < 1e9\n```\n```if:crystal\n250 random maximally hard test cases: 1e8 < n < 1e9\n```\n```if:cpp\nRandom maximally hard test cases: 1e8 < n < 1e9\n```\ndef sum_of_squares(n):\n\t\nUse Call-Based format\nANSWER:\n"}}