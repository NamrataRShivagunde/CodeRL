{"2494": {"code": ["\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str):\n        \nUse Call-Based format\n\nUse Call-Based format\n\n\n   ) -> str:\n\nUse Call-Based format\n\n   \n\n\n\n\n\n\n\n\n\n\nGiven a valid (IPv4) IP address, return a defanged version\n\n\n\nGiven", "\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str) -> str:\n\n\nUse Call-Based format\n\n\n   ) -> str:\n        return address\n\nUse Call-Based format\n\n          \ndefangIPaddr()defangIPaddr()\n\n\n\n\n\n\n\n\n\n\n\nA valid (IPv4) IP", "\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n\n\n\n\n\n   :\n        pass\n\nUse Call-Based format\n\n   \n\nUse Call-Based format\n\nThe address of the IP address is invalid\n\n\n\n\n\n\n\nUse Call-Based format\n\n\u00a0\n\n\n\n\nGiven a valid (IPv", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def:\n        \nUse Call-Based format\nUse Call-Based format\n\n    def       \n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n1[.]1[.]1\n\n\n\nGiven a valid (", "\nUse Call-Based format\n\n    pass\n        \nUse Call-Based format\n\n\n\n\n   ) -> str:\n\n\nUse Call-Based format\n\nInput: address = \"1.1.1.1.1\"\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a valid IP address:\n\n\n\nGiven a valid (IPv", "\nUse Call-Based format\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n        \nUse Call-Based format\n\n\n\n\n   :\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a valid (IPv4) IP", "\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str):\n        \nUse Call-Based format\n\n\n\n\n   :\nUse Python format\n\n   \n\nUse Python format\nUse Python format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nGiven a valid IP address, return a defanged\n\nGiven a", "\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str) -> str:\n    \nUse Call-Based format\n\nUse Call-Based format\n\n\n   ) -> str:\n        \nUse Call-Based format\n\n           \n\n\n\n\n\n\n\n\n\n\n\nGiven a valid IP address, return the address\n\n\nGiven a", "\nUse Call-Based format\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n\n\nUse Call-Based format\n\n\n   :\nUse Call-Based format\n\n   \n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nUse call-based format\n\n\n\n\nGiven a valid (IPv4", "\nUse Call-Based format\nUse Call-Based format\n    defangIPaddr(self, address: str):\n\n\nUse Call-Based format\n\n\n\n\u00a0\n):\n        \nUse Call-Based format\n\n          \n\ndefang IPaddr\n\n\n\n\n\n\n\n\n\n\nThe address is not defanged.\n\n\n\nGiven a valid (", "\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str):\n\nUse Call-Based format\n\n\n\n\n   ) -> str:\n        \nUse Call-Based format\n\n\n\nUse Call-Based format\n\nConstraints:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a valid (IPv", "\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n   ):\n        \nUse Call-Based format\n\n\n\nUse Call-Based format\n\nConstraints:\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a valid (IPv4)", "\n\n\n\n\n\n1\n    pass\n\nUse Call-Based format\n\nConstraints:\n   ) -> str:\n\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n\nUse Call-Based format\n\n\u00a0\nConstraints:\n        \n\n\n\n\n\n\n\n\n\n\n\u00a0\n\nGiven a valid (IPv4", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n    def:\n        return address\n        \nUse Call-Based format\n\n\u00a0\nUse Call-Based format\n\n          \nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nA defanged IP address is returned.\n\n\n\n\n\nGiven a valid", "\nUse Call-Based format\n\n    defangIPaddr(self, address: str) -> str:\n\n\n\n\n\n\n\u00a0\nUse Call-Based format\nclass Solution:\n   :\nUse Call-Based format\n\n          \nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a valid (IPv4) IP address\n\n\nGiven a", "\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str):\n        \nUse Call-Based format\n\n\n\n\n   ) -> str:\nUse Python-Based format\n\n       \n\nUse Python-Based format\nUse Python-Based format\n\n\n\n\n\n\n\nThe address must be a valid IPv4 address\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n    defangIPaddr(self, address: str) -> str:\n\nUse Call-Based format\n\n\n\n\n   ) -> str:\n\nUse Call-Based format\n\n\n\n\u00a0\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a valid IP address,\n\n\n\nGiven a valid", "\nUse Call-Based format\n\n\n\n\nAddress must be a valid IPv4 address.\n\n\n    def:\n        \nUse Call-Based format\nUse Call-Based format\n\nOutput: address\n\n\u00a0\n\n    \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nA valid IP address is required.\n\n\n\nGiven a valid (", "\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n\nUse Call-Based format\n\n\n\n\n   :\n        \nUse Call-Based format\nUse Call-Based format\n\n       \n\nUse Call-Based format\ndefang\n\n\n\n\n\n\n\n\nA defanged IP address is returned.\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n    defangIPaddr(self, address: str):\n    \nUse Call-Based format\n\n\n\n\n   ) -> str:\n        \nUse Call-Based format\nUse Call-Based format\n\n           \n\ndefangIPaddr()\n\n\n\n\n\n\n\n\nThe defanged IP address\n\n\n\nGiven a valid ("], "prompt": "\nQUESTION:\nGiven a valid (IPv4) IP address, return a defanged version of that IP address.\nA defanged\u00a0IP address\u00a0replaces every period \".\" with \"[.]\".\n\u00a0\nExample 1:\nInput: address = \"1.1.1.1\"\nOutput: \"1[.]1[.]1[.]1\"\nExample 2:\nInput: address = \"255.100.50.0\"\nOutput: \"255[.]100[.]50[.]0\"\n\n\u00a0\nConstraints:\n\nThe given address is a valid IPv4 address.\nclass Solution:\n    def defangIPaddr(self, address: str) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}