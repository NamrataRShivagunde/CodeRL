{"328": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\nIf there is a single number, then\n\n\n\nGiven a sequence", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a sequence of n integers a1,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a sequence of n integers a1,", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven a sequence of n integers a1,...\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,..., an, a3,..., an:\n\n   :\n    pass\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a sequence of n integers a1,...,\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,..., an,\n\nGiven a", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\nGiven a sequence of n integers a1, a2,..., an, a3,..., an, a4,..., an, a5,..., a6,..., a7\n:\n:\n\nGiven\n\n\n\n\n\n\n\n\n\nGiven a sequence", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n    \nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe sequence of n integers a1, a2,..., an\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,...,\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n        \nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,Given", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\n\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a sequence of n integers", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    pass\n\n\n\nIf an 132 pattern is not found, returns False.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,..., an, a, and an:\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n    def find132pattern(self, nums: List[int]) -> bool:\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,..., an, a3,..., an, a4,..., an, a5,...\n\n   :\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a sequence of n", "Use Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a sequence of n integers a1, a2,..., an, a,\n\n\n\n:\n    pass\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a sequence of n integers:\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    pass\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven a sequence of n integers a1,...,\n\nGiven a"], "prompt": "\nQUESTION:\nGiven a sequence of n integers a1, a2, ..., an, a 132 pattern is a subsequence ai, aj, ak such\nthat i < j < k and ai < ak < aj. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.\n\nNote: n will be less than 15,000.\n\nExample 1:\n\nInput: [1, 2, 3, 4]\n\nOutput: False\n\nExplanation: There is no 132 pattern in the sequence.\n\n\n\nExample 2:\n\nInput: [3, 1, 4, 2]\n\nOutput: True\n\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\n\n\n\nExample 3:\n\nInput: [-1, 3, 2, 0]\n\nOutput: True\n\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\nclass Solution:\n    def find132pattern(self, nums: List[int]) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}