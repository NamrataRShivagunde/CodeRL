{"279": {"code": ["\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n\n\n\n\n    def:\n\n\nUse Call-Based format\n\n\n\n\n\n\nThe set [1,2,3,...,n] contains a total of n! unique permutations.\n\n\n\n\nThe set [1,2,3", "\nUse Call-Based format\n\n    pass\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n       \n        pass\n\n\n\n   :\n\n\nUse Call-Based format\n\n\n\nUse Set-Based format\n\n\n\n\nThe set [1,2,3,...,n] contains a total of n!\n\n\n\n\nn", "\n\n\n    def getPermutation(self, n: int, k: int) -> str:\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n   :\nThe set [1,2,3,...,n] contains a total number of unique permutations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    The set [1,2,", "\n\n\n\n\n    def getPermutation(self, n: int, k: int) -> str:\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   :\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,3,...,n] contains\n\n\n\nThe set", "\nUse Call-Based format\n\n    def getPermutation(self, n: int, k: int) -> str:\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,3,...,n] contains\n\n\nThe", "\nUse Call-Based format\n\n    def getPermutation(self, n: int, k: int):\n\nUse Call-Based format\n\n\n\n   \n   \n\n\n\n   :\n\n\nThe set [1,2,3,...,n] contains a total of n! unique permutations\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n       \n\n\n\n   :\nThe set [1,2,3,...,n] contains a total of n! unique permutations\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nThe set [1,2,3", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n   \n       ...\n\n\n\n -> str:\n        -> str:\n\n\n\nThe set [1,2,3,...,n] contains a total of 1! unique permutations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,3", "\nUse Call-Based format\nUse Call-Based format\n    pass\n\n\n\n\n\n\n   \n\n\n\n\n   :\n    pass\n\nUse Class-Based format\nThe set [1,2,3,...,n] contains a total of n! unique permutations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,3", "\nUse Call-Based format\nUse Call-Based format\n    def getPermutation(self, n: int, k: int):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   :\n\n\n\n\nUse Set-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,", "\n\nUse Call-Based format\n\n    def getPermutation(self, n, k: int):\n        \nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n   :\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,3,...,n] contains a total\n\n\nThe", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n   :\n\n\nThe set [1,2,3,...,n] contains a total of n! unique permutations.\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe set [1,2", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n       \n\n\n      \n:\n\n\nUse Call-Based format\n\n\n\n\nThe set [1,2,3,...,n] contains a total of n! unique permutations.\n\n\n\n\n\n\n\n\n\nThe set [1,2,3,", "\nUse Call-Based format\n\n\n    def getPermutation(self, n: int, k: int) -> str:\n\n\n\n\n   \n   \n\n\n\n   :\n    pass\n\nUse Set-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe set [1,2,", "\nUse Call-Based format\nUse Call-Based format\n    def getPermutation(self, n: int, k: int):\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   :\nUse Call-Based format\n\n\n\nUse Set-Based format\n\n\n\n\nUse Set-Based format\n\n\n\n\nThe set [1,2", "\n\nUse Call-Based format\n    def getPermutation(self, n, k: int) -> str:\n\n\nUse Call-Based format\n\n\n   \n\n\n\n   :\nThe set [n,k] contains a total number of unique permutations\n\n\n\n\n\n\n\n\nThe set [1,2,...,n] contains\n\n\n\n\nThe", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n   \n       \n\n\n\n\n\n   :\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n [1,2,3,...,n,...,k] contains a total number of permutations.\n\n\n\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\n      \nUse Call-Based format\n\n   :\n\nThe set [1,2,3,...,n] contains a total number of unique permutations.\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nThe set [1,2", "\n\n\n    def getPermutation(self, n: int, k: int):\n        \nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\nUse Set-Based format\n\n\n\nThe set [1,2,3,...,n] contains a total of n!\n\n\n\n\n", "\nUse Call-Based format\nUse Call-Based format\n    def getPermutation(self, n, k: int) -> str:\n\nUse Call-Based format\n\n\n   \n   \n\n\n\n   :\n\nUse Method-Based format\n\n\nUse Set-Based format\n\n\n\n\n\n\n\n\n\n\nThe set [1,2,3,..."], "prompt": "\nQUESTION:\nThe set [1,2,3,...,n] contains a total of n! unique permutations.\n\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\n\n       \"123\"\n       \"132\"\n       \"213\"\n       \"231\"\n       \"312\"\n       \"321\"\n\n\nGiven n and k, return the kth permutation sequence.\n\nNote:\n\n\n       Given n will be between 1 and 9 inclusive.\n       Given\u00a0k\u00a0will be between 1 and n! inclusive.\n\n\nExample 1:\n\n\nInput: n = 3, k = 3\nOutput: \"213\"\n\n\nExample 2:\n\n\nInput: n = 4, k = 9\nOutput: \"2314\"\nclass Solution:\n    def getPermutation(self, n: int, k: int) -> str:\n        \nUse Call-Based format\nANSWER:\n"}}