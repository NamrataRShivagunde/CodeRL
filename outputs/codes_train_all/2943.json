{"2943": {"code": ["\n\n\n\n\n\nUse Call-Based format\n\n\n__Definition:__\nUse Call-Based format\n\n__Output:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 3:__\n\n\n\n\n__Output 1:__\n\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\nQUESTION:\n\n\n\n\n\n\n```\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 2:__\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n```\n\n\n\n\n \\\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 3:__\n\n\n\n\n\n\n\n\n\n\n\n__Definition:", "\n\n\n\n\n\t\n\n\n\nUse Call-Based format\n\n\n\n\n__Definition:__\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n \\\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n\n__Definition:__\n\n__", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n__Definition:__\nUse Call-Based format\n\n\n\n__Definition:__\n\n\n\n\n\n\n \\     / \\\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 3:__\n\n\n\n\n\n__Definition:", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n__Output:__\n\n\n\n\n__Output 1:__\n\n__Output 2:__\n\n\n\n\n\n\n__Definition:__\n\n \\\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 2:__\n\n\n\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\n\n__Definition:__\n\n\n\n\n\n__Definition:__\n\n \\\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n", "\n\n\n\n\nUse Call-Based format\n\n\n__Definition:__\nThe following is an example:\n\n```\n\n\n\n\n__Output:__\n\n\n\n__Definition:__\n\n \\\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n\n``", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\n\n\n__Output 1:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n__Output 1:__\n\n\n\n\n\n\n__Definition:", "\n\n\n\n__Output:__\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\nINPUT:__\n\n```\n    1\n\n    2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output:__\n\n\n\n\n\n", "\n\n\nUse Call-Based format\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\nDEFINE:\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n__Definition:__", "\n\n\n\n\n\n\n\nUse Call-Based format\n\nCOMPARE:\n\n   a.complete_binary_tree(a)\n\nCOMPARE:\n\n\n\n\n\n\n\n\n\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n__Definition:__", "\n\n\n    Use Call-Based format\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\nQUESTION:\n\n   \n\n\n__Output:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 1:__\n", "\n\nUse Call-Based format\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\nQUESTION:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \\\n\n\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__", "\nUse Call-Based format\n\n\n\n\n\n\n\n_\n\n\n_\n\n\n\n\n\n\n__Input 1:__\n\n\n\n\n\n\n\n\n\n \\\n\n\n\n\n\n__Definition:__\n\n\n\n\n\n\n\n\n\n\n\n\n__Example 3:__\n\n\n\n\n\n\n__Input 1:__\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n```\n\n\n\n\n\n\n\n```\n \\\n\n\n```\n\n\n```\n\n \\\n \\\n\n\t\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n__Output 3:__\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition", "\n\nUse Call-Based format\n\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\n```\n\n\n__Output:__\n\n\n\n\n\n\n```\n \\\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 1:__\n\n\n__Definition:__\n", "\n\t\nUse Call-Based format\n\n\n\n\n\n__Definition:__\n\nUse Call-Based format\n\nANONYMOUS:\n\n\n\n\n\n\n\n\n__Output:__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Definition:__\n\n__", "\n\t\nUse Call-Based format\n\n\n\n\n\n\n__Definition:__\n\n\n\n\n__Definition:__\n\n\n \n\n\n\n_Definition:__\n\nUse Call-Based format\n\n\nDEFINE:\n\n\n\n \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 3:__\n\n\n\n\n\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n```\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n \\\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n__Output 3:__\n\n\n\n\n```\n\n\n\n"], "prompt": "\nQUESTION:\n__Definition:__ According to Wikipedia, a [complete binary tree](https://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees) is a binary tree _\"where every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible.\"_\n\nThe Wikipedia page referenced above also mentions that _\"Binary trees can also be stored in breadth-first order as an implicit data structure in arrays, and if the tree is a complete binary tree, this method wastes no space.\"_\n\nYour task is to write a method (or function) that takes an array (or list, depending on language) of integers and, assuming that the array is ordered according to an _in-order_ traversal of a complete binary tree, returns an array that contains the values of the tree in breadth-first order.\n\n__Example 1:__\nLet the input array be `[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`. This array contains the values of the following complete binary tree. \n\n\n```\n          _ 7_\n        /      \\\n       4        9\n     /   \\     / \\\n   2      6   8   10\n  / \\     /\n 1   3   5\n```\nIn this example, the input array happens to be sorted, but that is _not_ a requirement.\n\n__Output 1:__ The output of the function shall be an array containing the values of the nodes of the binary tree read top-to-bottom, left-to-right. In this example, the returned array should be:\n\n```[7, 4, 9, 2, 6, 8, 10, 1, 3, 5]```\n\n\n__Example 2:__\nLet the input array be `[1, 2, 2, 6, 7, 5]`. This array contains the values of the following complete binary tree. \n\n\n```\n        6\n      /   \\\n    2       5\n   / \\     /\n  1   2   7\n \n```\nNote that an in-order traversal of this tree produces the input array.\n\n__Output 2:__ The output of the function shall be an array containing the values of the nodes of the binary tree read top-to-bottom, left-to-right. In this example, the returned array should be:\n\n```[6, 2, 5, 1, 2, 7]```\ndef complete_binary_tree(a):\n\t\nUse Call-Based format\nANSWER:\n"}}