{"2556": {"code": ["\n=====Error Format=====\n\n\n\n\n\n\ngroup()\n\ngroupdict()\ngroupdict()\ngroupdict()\ngroups()\ngroupdict()\ngroups()\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n>>> import re", "\n\n\ngroupdict()\ngroupdict()\ngroupdict()\ngroups()\ngroupdict()\ngroups()\ngroups()\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroups()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n====", "\n\ngroupdict()\n{'user': 'hackerrank', 'website': 'com'}\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\n\n\n\n\n'hackerrank'\n\n\n\n\n\n\n\ngroupdict()\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n====", "\nUse Standard Input format\n\n\ngroupdict()\ngroups()\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\ngroups()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\ngroupdict()\n\ngroupdict()\n\n\n\n=====Function", "\n\n\ngroupdict()\ngroups()\ngroupdict()\ngroupdict()\n\ngroupdict()\ngroups()\n\ngroupdict()\n\ngroupdict()\ngroups()\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n\n\n\n\n\n\n\ngroupdict()\n\n=====Input Format=====\n\n\n====", "\n\n\ngroupdict()\ngroupdict()\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroups()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n=====Function Descriptions=====\n\n", "\nUse Standard Input format\n\n\n\n\n\n\ngroup()\ngroupdict()\ngroups()\ngroupdict()\n\ngroupdict()\ngroupdict()\ngroups()\n\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\n\n\n\n=====Function Descriptions=====\n\n", "\n=====Input Format=====\ngroupdict()\ngroups()\ngroupdict()\n\n\n\n\n\n\ngroupdict()\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function", "\nUse Standard Input format\n\n\n\ngroupdict()\ngroups()\ngroupdict()\n\n\n\ngroupdict()\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\n\n\n\n\n====", "\n\n\ngroup()\ngroupdict()\ngroupdict()\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n=====Problem Description=====\n", "\n\n\n\n\n\ngroup()\ngroupdict()\ngroupdict()\ngroupdict()\ngroups()\ngroups()\ngroupdict()\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\ngroupdict()\n\n\n=====Function Descriptions====", "\n\n\ngroupdict()\ngroups()\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n=====Function Descriptions=====\ngroups()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function", "\n\ngroupdict()\n{'username@hackerrank'}\n\n\n\n\ngroup()\n\ngroupdict()\n\n\n\n=====Function Descriptions=====\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n=====Function Descriptions====", "\n\n\n\n\n\n\n\n\n'username@hackerrank.com'\n\n\n\n=====Function Descriptions=====\ngroup()\n\ngroupdict()\n\ngroupdict()\n\ngroups()\n\ngroups()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n=====Function", "\nUse Standard Input format\ngroup()\ngroupdict()\ngroupdict()\ngroupdict()\ngroups()\ngroupdict()\n\nFunction Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\n\n\n\n=====Function", "\nUse Standard Input format\n\n\n\n\n\n\ngroups()\ngroupdict()\ngroupdict()\n\ngather()\n\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\ngroupdict()\n\n\n\n=====Function Descriptions", "\n=====Standard Input format\n\n\n\n\n\ngroupdict()\ngroupdict()\n\ngroups()\n\ngroups()\n['username']\n\ngroupdict()\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\ngroupdict()\n\n\n\n\n\ngroupdict()\ngroupdict()\n\n\n=====Function Descriptions", "\n\n\ngroupdict()\ngroups()\ngroupdict()\ngroupdict()\ngroupdict()\n\nquestion:\n=====Function Descriptions=====\ngroups()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=========", "\n\ngroupdict()\n{'user', 'website', 'extension'}\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\n\ngroupdict()\ngroups()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n=====Function Descriptions", "\n=====Function Descriptions=====\ngroup()\ngroupdict()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroup()\ngroupdict()\ngroupdict()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=====Function Descriptions=====\ngroupdict()\n\n\n\n===="], "prompt": "\nQUESTION:\n=====Function Descriptions=====\ngroup()\n\nA group() expression returns one or more subgroups of the match.\nCode\n\n>>> import re\n>>> m = re.match(r'(\\w+)@(\\w+)\\.(\\w+)','username@hackerrank.com')\n>>> m.group(0)       # The entire match \n'username@hackerrank.com'\n>>> m.group(1)       # The first parenthesized subgroup.\n'username'\n>>> m.group(2)       # The second parenthesized subgroup.\n'hackerrank'\n>>> m.group(3)       # The third parenthesized subgroup.\n'com'\n>>> m.group(1,2,3)   # Multiple arguments give us a tuple.\n('username', 'hackerrank', 'com')\n\ngroups()\n\nA groups() expression returns a tuple containing all the subgroups of the match.\nCode\n\n>>> import re\n>>> m = re.match(r'(\\w+)@(\\w+)\\.(\\w+)','username@hackerrank.com')\n>>> m.groups()\n('username', 'hackerrank', 'com')\n\ngroupdict()\n\nA groupdict() expression returns a dictionary containing all the named subgroups of the match, keyed by the subgroup name.\nCode\n\n>>> m = re.match(r'(?P<user>\\w+)@(?P<website>\\w+)\\.(?P<extension>\\w+)','myname@hackerrank.com')\n>>> m.groupdict()\n{'website': 'hackerrank', 'user': 'myname', 'extension': 'com'}\n\n=====Problem Statement=====\nYou are given a string S.\nYour task is to find the first occurrence of an alphanumeric character in (read from left to right) that has consecutive repetitions. \n\n=====Input Format=====\nA single line of input containing the string S.\n\n=====Constraints=====\n0<len(S)<100\n\n=====Output Format=====\nPrint the first occurrence of the repeating character. If there are no repeating characters, print -1.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}