{"480": {"code": ["\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    return self.numWays()\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n   \n\nThis is a call-based format\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\nYou", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def numWays(self, steps: int, arrLen: int):\n        return steps * arrLen\n\n\u00a0\nConstraints:\n\nReturns:\n\n\n\n\n   \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n   \n        return self.numWays(steps, arrLen)\n\n\n\n    def numWays(self, steps, arrLen):\n        return 7\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an array of", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\nYou have a pointer at index 0 in an array of size arrLen\n\n\n   \n       ...\n\n\n\n\n\n\nYou have a pointer at index 0 in an array of size arrLen\n\n\n\n\n\n\n\n\nyou have a pointer at index 0 in an array of", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    pass\n\n\n\n\n   \n        pass\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\nYou have an answer at index 0 in an array of size arrLen.\n\n\n\n\n\nYou have a pointer at index 0.\n\n\n\n\nyou have", "\n\n\n\nUse Call-Based format\n\n\n\n\n    def numWays(self, steps: int, arrLen: int) -> int:\n\n\n\n\n\n   \n        pass\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an array", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    numWays(self, steps, arrLen):\n        return self.numWays(steps, arrLen)\n\n\n\n   \n       ...\n        \n\nYou have an answer.\n\n\n\n\n\n\n\n\nYou have a pointer at index 0.\n\n\n\n\nYou have a pointer", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def numWays(self, steps: int, arrLen: int) -> int:\n        return 7\n\n\n\u00a0\nConstraints:\n\nConstraints:\n\n\n\n\n   \n                \n\n                \n\n\n\n\n\n\n\nYou have a pointer at index 0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    def numWays(self, steps, arrLen: int):\n        return self.numWays(steps, arrLen)\n\nUse Call-Based format\n\n\n\n\n   \n                \n\n        \n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in", "\nUse Call-Based format\n\n\n    numWays(self, steps, arrLen):\n       \nUse Call-Based format\n\n\n\n\n   \n\n\n\n   \n   ...\n\n\nYou have an answer at index 0 in an array of size arrLen.\n\n\n\n\n\n\n\nYou have a pointer at index 0.\n\n\n\n\nYou have a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n    return self.numWays()\n    \n\n\n   \n        \n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nYou have a pointer at index 0.\n\nYou have", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    pass\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\nyou have a pointer at index 0", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n    def numWays(self, steps, arrLen):\n        return steps\n\n\u00a0\nConstraints:\n\nUse Call-Based format\n\n\n\n\n   \n                \n\n\n\n\n\n\n\n\nYou have a pointer at index 0\n\n\n\n\n\nYou have a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n   \n\nYou have an answer at index 0 in an array of size arrLen\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    numWays(self, steps, arrLen)\n\n\n\n   \n        return self.numWays()\n\n\nYou have an answer at index 0\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\nYou have a", "\nUse Call-Based format\n\n\n\n\n\n\n\n    def numWays(self, steps: int, arrLen: int):\n        \nUse Call-Based format\n\nConstraints:\n\n\u00a0\nConstraints:\n\n\u00a0\nExplanation:\n\n\n\n\n   \n                \n\n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def numWays(self, steps: int, arrLen: int) -> int:\n        \nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\nYou", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n   ) -> int:\n        \n\nYou have a pointer at index 0 in an array of size arrLen\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a pointer at index 0 in", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\nUse Call-Based format\nYou have a pointer at index 0 in an array of size arrLen\n\n\u00a0\nExplanation:\n\n\n   \n        pass\n        \n\n\n\n\n\n\n\n\nThis is a call-based format\n\n\n\n\nYou have a pointer at index 0 in an", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n   \n    return self.numWays(steps, arrLen)\n\n\n\n   \n       ...\n\nYou have a pointer at index 0 in an array of size arrLen.\n\n\n\n\n\n\n\n\n\n\nYou have an answer at index 0.\n\n   \n\nIf you"], "prompt": "\nQUESTION:\nYou have a pointer at index 0 in an array of size arrLen. At each step, you can move 1 position to the left, 1 position to the right\u00a0in the array or stay in the same place\u00a0 (The pointer should not be placed outside the array at any time).\nGiven two integers\u00a0steps and arrLen, return the number of\u00a0ways such that your pointer still at index 0 after exactly steps\u00a0steps.\nSince the answer\u00a0may be too large,\u00a0return it modulo\u00a010^9 + 7.\n\u00a0\nExample 1:\nInput: steps = 3, arrLen = 2\nOutput: 4\nExplanation: There are 4 differents ways to stay at index 0 after 3 steps.\nRight, Left, Stay\nStay, Right, Left\nRight, Stay, Left\nStay, Stay, Stay\n\nExample 2:\nInput: steps = 2, arrLen = 4\nOutput: 2\nExplanation: There are 2 differents ways to stay at index 0 after 2 steps\nRight, Left\nStay, Stay\n\nExample 3:\nInput: steps = 4, arrLen = 2\nOutput: 8\n\n\u00a0\nConstraints:\n\n1 <= steps <= 500\n1 <= arrLen\u00a0<= 10^6\nclass Solution:\n    def numWays(self, steps: int, arrLen: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}