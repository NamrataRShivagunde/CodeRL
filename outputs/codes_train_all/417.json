{"417": {"code": ["\n\n\n    \nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n    findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nThere are two sorted arrays\n\n\n\nThere are two sorted arraysThere are", "\n\n\n\n\nUse Call-Based format\n\n\n\n   \n       \n\n\n\n\n   \n        pass\n\n\nThe two sorted arrays are in Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\nThe two sorted arrays are in the same order as the two sorted arrays are\n\n\n\n\nThere are two sorted arrays nums", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n   \n   \n\n\n\n\n\n   \n        \"\"\"\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\nThe following two sorted arrays are the same in the call-based format\n\n\n\nThere are two sorted arrays of size m and n respectively\n\n\n\nThere", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n    def:\n\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\nThere are two sorted arrays of size m and n respectively.\n\n\n\n\n\nThere are two sorted arrays nums", "\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def:\n\n\nThis is a Python-based solution for the C++ implementation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe two sorted arrays are of size m and n respectively.\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n   \n   \n\n\n1 + 3/2 = 2.5\n\n\n    __call__(self):\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThere are two sorted arrays", "\n\n\n\n\n\nUse Call-Based format\n\n\n   \n\nUse Method-Based format\n\n\n\n\n\n    def:\n\nThe two sorted arrays are in the same order as the two sorted arrays were passed to the function.\n\n    print(self)\n\n\n\n\n\n\n\n\n\n\n\nThere are two sorted arrays\n\nUse Function format\n\n\n", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\n\n   \n   :\nUse Python-based format\n\nThis function uses a Python-based format\n\n\n\n\n\n\n\n\n\nThere are two sorted arrays of size m and n respectively.\n\nUse Call-Based format\n\n\n\n\n\nThere are two sorted arrays", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n    def:\nUse Call-Based format\n\n\n    # Call-Based format\n\n\n\n\n\nThe overall run time complexity should O(log n).\n\n\n\n\n\n\n\n\nThere are two sorted arrays with size m and nThere", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n    def:\nUse Call-Based format\n\nUse Python-Based format\n\n    \"\"\"\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe two sorted arrays are the same size m and n respectively.\n\n\n\n\n\n\n\nThere are", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n       :\n        \n\nThis method is in Call-Based formatThe two sorted arrays are of size m and n respectively.\n       \n\n\n\nUse Call-Based format\n\n\n\nThere are two sorted arrays of size m and n respectively.\n\n\n\n\nThere are two sorted", "\n\n\n\n\n\nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\n   \n\n\n\n\n\n\nThe two sorted arrays are of size m and n respectively.\n\nUse Call-Based format\n\n\nThe median is O(log m)\n\n\nThe two sorted arrays are of size m and n respectively.\n\n\n\n\n\nThere are two", "\nUse Call-Based format\n\n\n\n\n\n\n   \n   \n\n\n\n\n        __call__(self):\n\nThe two sorted arrays are in the Call-Based format.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nThe two sorted arrays are in the same order\n\nThere are two sorted arrays\n\n\n\n\n\nThere are two sorted", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n   \n   \n\n\n\n\n    __call__(self) -> float:\n        \nUse Call-Based format\n\n\n\n\n\nThe results of the following questions are not stable\n\n\n\n\n\n\nThere are two sorted arrays of size m and n respectively.\n\n\n\n\nThere are", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n   :\n\n\nThis is a python-call-based version of the original Python implementation.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nThere are two sorted arrays with size m and n respectively.\n\n\nThere", "\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n    def\n\n\n\n\n   \n        \nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nThis is a quick and dirty version of the following code:\n\n\n\n\n\nThere are two sorted arrays nums1 and nums", "\nUse Call-Based format\n\n\n\n\n\n\n   \n   \n\n\nThe median is 1.0\n\n\n       :\n       ...\n\nThere are two sorted arrays of size m and n respectively.\n\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nThere are two sorted arrays nums1 and nums", "\nUse Call-Based format\n\n    \n\n\n\n   \n       \n\n\nThe median of two sorted arrays is 2.0\n\n\n\n    def:\n\nThis method is a very simple solution to the original implementation\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nThere are two sorted arrays of size m and n respectively.\n\n\n\nThere are two sorted", "\nUse Call-Based format\n\n\n\n\n\n\n   \n\n   \n\n\n\n\n\n   :\n\n\nUse Python-Based format\n\n    findMedianSortedArrays(self, nums1, nums2)\n\nUse Python-Call-Based format\n\n\n\n\nThis function uses Python-based sort.\n\n\n\n\n\n\nThere are two sorted arrays nums", "\nUse Call-Based format\n\n\n\n\n\n\n   \n       \n\n\n\n    def:\n\nThe two sorted arrays are of size m and n respectively.\n\nUse Call-Based formatThe two sorted arrays are of size m and n respectively.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are two sorted arrays\n\nUse Solution:\n\nThere are"], "prompt": "\nQUESTION:\nThere are two sorted arrays nums1 and nums2 of size m and n respectively.\n\nFind the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\n\nExample 1:\n\nnums1 = [1, 3]\nnums2 = [2]\n\nThe median is 2.0\n\n\n\nExample 2:\n\nnums1 = [1, 2]\nnums2 = [3, 4]\n\nThe median is (2 + 3)/2 = 2.5\nclass Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        \nUse Call-Based format\nANSWER:\n"}}