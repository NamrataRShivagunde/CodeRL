{"1070": {"code": ["\n\nAnother work:\n\n-----Input-----\n\nThe task is to find out which cats will be eaten by the same time.\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTodo:\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\nq_i = N", "\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nA example that can be used as a task:\n\n\n\n\n\n\n-----Description-----\n\nThe following inputs are valid:\n\n\n\n\n-----Description-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif (a_i < s_i", "\nExample:\n\n-----Input-----\n\nA cat and a rat.\n a rat can't be eaten by any other cat.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n a_i$s_i$\n\n\n\n\n\n\n\n\n\n\n\n    if t_i = s_i + |a_", "\n\n\n\n\n\n\n\n\n\n\n-----Header-----\n\n\n\n-----Description-----\n\n\n\n\n\nThe function is called by Bengali.\n\n-----Example-----\n\nThe task is asleep\n\n-----Description-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t# The \"hiding\" case is", "\n\nExample:\n\n-----Input-----\n\nA cat and a rat are both sleeping and hidden.\nThe cat and rats are now in the same line.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### End of docs\n\n\n-----Output-----\n\n\n\n\n\nif a cat", "\n\nAnother example:\n\n-----Input-----\n\nThe task is for each cat and the rat.\nThe cat can be eaten by the same time.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Input-----\n\n\n\n    This task is from Bengali", "\n\nRating:\n\nA rat can be eaten by any of the following:\n\n-----Input-----\n\nA rat can be eaten by any of the following:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n\n```\n\n\nThe tamil and tamil manifold", "\n\nTest 1$2$\n\n-----Output-----\n\nThe t-a-a-a-b-a-b-b-b-b-a-b-b-a-b$\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n-----Output-----\n\n\nIf", "\n\n\n-----Input-----\n\nThe task is to find out which cats are in a line.\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_i$i$\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n###\n\n\n\n-----Input-----\n\n\n", "\n\nRats:\n\n-----Output-----\n\nThe same time\n\n-----Input-----\n\nThe task is used to find out which cats and their rat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n### Example\n\n\n# The first", "\n\nRats:\n\n-----Input-----\n\nA cat and a rat\n\nThe categories are all ordered.\n\nThe categories are ordered by the numbered categories.\n\nThe categories are ordered by the numbered categories.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n", "\n\n-----Notes-----\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n-----Test-----\n\n\n\n\n-----Example-----\n\nA cat and a rat can be eaten by the same category at the same time.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n-----Note-----\n\n\n", "\n\nLabel:\n\n-----Input-----\n\nA task for finding out which cats are the same.\nThe task for finding out which cats are the same.\n\n-----Input-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n        a = [\n        {\n         ", "\n\n-----Input-----\n\nThe cat can be found at the same time.\n\n-----Input-----\n\nThe cat can be found at the same time.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Example:\n\n\n    1) A cat and a rat can be eaten.\n\n\n\n", "\n\n-----Header-----\n\n\n\n\n\n-----Note-----\n\n\n\n\n\n\n\n\n-----Description-----\n\n\n\n\n\n\n\nThe following is a sample:\n\n-----Example-----\n\nThe example is the example\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\nN", "\n\n\n-----Description-----\n\nWe have a bengali and bengali.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n-----Output-----\n\nThe same\n\n-----Example-----\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\n \u2015\n\n\n\n\nfor", "\n\n\nTechnical tasks:\n\n-----Input-----\n\nThese are the three cats.\nThe one can be used to detect the rat.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_i$i$\n\n\n\n\n\n\n\n    <pre>\n\n    The \"a\" example shows:\n\n    1)", "\n\n-----Output-----\n\n\n\n\n\n hides, hides, hides, hides and hides.\n\n-----Test-----\n\nThe task is asleep.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \u2015\n\n\n\n\n\n\n \u2015\n\n-----Input-----\n\nN$", "\n\n\n-----Output-----\n\n\n-----Error-----\n\n\n\n\n-----Description-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nThe following input is valid:\n\n-----Output-----\n\n\n\n\n\n\n\n\n\n_i$\n\n\n\n\n\n\n\n\n-----Input-----\n\n\n\n\n\n\n### Example 1:", "\n\nA cat and a rat.\nThe cats are in the order that they are in the line.\n\n-----Input-----\n\nThe task is asleep\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Output-----\n\n\n\n\n\n\n\n\n-----Output-----\n\n\nThe task is asleep:\n\n"], "prompt": "\nQUESTION:\nand Bengali as well.\nThere are N$N$ cats (numbered 1$1$ through N$N$) and M$M$ rats (numbered 1$1$ through M$M$) on a line. Each cat and each rat wants to move from some point to some (possibly the same) point on this line. Naturally, the cats also want to eat the rats when they get a chance. Both the cats and the rats can only move with constant speed 1$1$.\nFor each valid i$i$, the i$i$-th cat is initially sleeping at a point a_i$a_i$. At a time s_i$s_i$, this cat wakes up and starts moving to a final point b_i$b_i$ with constant velocity and without any detours (so it arrives at this point at the time e_i = s_i + |a_i-b_i|$e_i = s_i + |a_i-b_i|$). After it arrives at the point b_i$b_i$, it falls asleep again.\nFor each valid i$i$, the i$i$-th rat is initially hiding at a point c_i$c_i$. At a time r_i$r_i$, this rat stops hiding and starts moving to a final point d_i$d_i$ in the same way as the cats \u2015 with constant velocity and without any detours, arriving at the time q_i = r_i + |c_i-d_i|$q_i = r_i + |c_i-d_i|$ (if it does not get eaten). After it arrives at the point d_i$d_i$, it hides again.\nIf a cat and a rat meet each other (they are located at the same point at the same time), the cat eats the rat, the rat disappears and cannot be eaten by any other cat. A sleeping cat cannot eat a rat and a hidden rat cannot be eaten \u2015 formally, cat i$i$ can eat rat j$j$ only if they meet at a time t$t$ satisfying s_i \\le t \\le e_i$s_i \\le t \\le e_i$ and r_j \\le t \\le q_j$r_j \\le t \\le q_j$.\nYour task is to find out which rats get eaten by which cats. It is guaranteed that no two cats will meet a rat at the same time.\n\n-----Input-----\n- The first line of the input contains a single integer T$T$ denoting the number of test cases. The description of T$T$ test cases follows.\n- The first line of each test case contains two space-separated integers N$N$ and M$M$.\n- N$N$ lines follow. For each i$i$ (1 \\le i \\le N$1 \\le i \\le N$), the i$i$-th of these lines contains three space-separated integers a_i$a_i$, b_i$b_i$ and s_i$s_i$.\n- M$M$ more lines follow. For each i$i$ (1 \\le i \\le M$1 \\le i \\le M$), the i$i$-th of these lines contains three space-separated integers c_i$c_i$, d_i$d_i$ and r_i$r_i$.\n\n-----Output-----\nFor each test case, print M$M$ lines. For each valid i$i$, the i$i$-th of these lines should contain a single integer \u2015 the number of the cat that will eat the i$i$-th rat, or -1$-1$ if no cat will eat this rat.\n\n-----Constraints-----\n- 1 \\le T \\le 10$1 \\le T \\le 10$\n- 0 \\le N \\le 1,000$0 \\le N \\le 1,000$\n- 1 \\le M \\le 1,000$1 \\le M \\le 1,000$\n- 1 \\le a_i, b_i, s_i \\le 10^9$1 \\le a_i, b_i, s_i \\le 10^9$ for each valid i$i$\n- 1 \\le c_i, d_i, r_i \\le 10^9$1 \\le c_i, d_i, r_i \\le 10^9$ for each valid i$i$\n- all initial and final positions of all cats and rats are pairwise distinct\n\n-----Example Input-----\n2\n8 7\n2 5 1\n1 4 1\n9 14 10\n20 7 9\n102 99 1\n199 202 1\n302 299 3\n399 402 3\n6 3 1\n10 15 10\n100 101 1\n201 200 1\n300 301 5\n401 400 5\n1000 1010 1020\n8 8\n2 8 2\n12 18 2\n22 28 4\n32 38 4\n48 42 2\n58 52 3\n68 62 1\n78 72 3\n3 6 3\n13 19 3\n21 25 3\n31 39 3\n46 43 4\n59 53 2\n65 61 4\n79 71 2\n\n-----Example Output-----\n1\n4\n5\n6\n7\n8\n-1\n1\n2\n3\n4\n5\n6\n7\n8\nUse Standard Input format\nANSWER:\n"}}