{"1650": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\nSum of digits value: `12`\n\nAmount of digits value: `12`\n\n* Amount of digits between `2` and `17`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n```python\n", "\n\n\n\nUse Call-Based format\n\n\n\n\n* Number of tests: `8`\n* Amount of digits between `2` and `17``\n\n*\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n```python\n\n\n\n\n\n\n\n```", "\n\nUse Call-Based format\n\n\n\n\n\nThe number of possible numbers is one of the following:\n\n1 - the total number of possible numbers\n2 - the amount of digits\n3 - the minimum number\n\n```python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three", "\nUse Call-Based format\n\nfind_all()\n\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n\n* Number of tests: `9`\n\n* Amount of digits: `2`\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n``", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n```python\nfind_all(10, 3) == []```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe function is called ``find_all(", "\n\nfind_all(sum_dig, digs):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\nWe want to generate all the possible numbers of three digits.\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\npython\nfind_all(3, 4) == []\n\n\n\n\n", "\n\nfind_all(sum_dig, sum_dig)\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits where:\n\n- the sum of digits value is equal to 10.\n\n-\n\n\n\n\n\n", "\n\n\n\n\n\nWe want to generate all the numbers of three digits.\n\n\n\n\n\n\nWe want to generate all the numbers of three digits.\n\n\n\n\npython\nfind_all(0, 1) == [1, 2, 3]\n```\n\n\n\n\n\n\n\n\n\nWe want to generate three digits\n\n\n\n\n\n\n``", "\n\n\nfind_all(sum_dig, digs)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits where:\n\n-\n\n\n\n\n\n* The sum of digits value is equal", "\nUse Call-Based format\nfind_all(10, 3)\n\nUse Call-Based format\nANSWER:\n\n\n\n\n\n\n\n\n\n\n* Number of tests: `4`\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\nION:\n\n\n\n\n    We want to generate all the numbers", "\n\nfind_all\n\nUse Call-Based format\n\n\n\n\n\n\nfind_all(sum_dig, digs)\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\npython\nfind_all(2)\n\n\nWe want", "\n\n\nfind_all()\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits where:\n\n-\n* Amount of digits between `2` and `17``\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n```python\nfind_all()```\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n```", "\n\nfind_all(1, 3)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits where:\n\n- sum of digits value == 10\n\n- amount of digits == 10\n\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\npython\nfind_all(10, 3) == [123, 118, 234]```\n\n\n\n\n\n\n\n\n\nWe want to generate all possible numbers\n\n\n\n\n\n\n\n", "\nUse Call-Based format\nfind_all(sum_dig, digs)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nWe want to generate all the numbers of three digits\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the possible numbers\n\n\n\n\n```", "\nUse Call-Based format\n\n\n\n\n\nWe want to generate all the possible numbers of three digits\n\n\n\n\n\nWe want to use call-based format\n\npython\nfind_all(sum_dig, digs)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\nWe want to", "\n\n\nfind_all(sum_dig, digs)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe want to generate all the numbers of three digits where:\n\n1 - the total number of possible numbers\n\n2\n\n\n\n", "\nUse Call-Based format\nfind_all(sum_dig, digs) == [1, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\t\nNB:\n\n\tWe want", "\nUse Call-Based format\n\nfind_all(sum_dig, digs)\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n*\n\t\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\nWe want to generate all the numbers of three digits\n\n\n\n\n\n\n\n"], "prompt": "\nQUESTION:\nWe want to generate all the numbers of three digits where:\n\n- the sum of their digits is equal to 10.\n\n- their digits are in increasing order (the numbers may have two or more equal contiguous digits)\n\nThe numbers that fulfill the two above constraints are: ```118, 127, 136, 145, 226, 235, 244, 334```\n\nMake a function that receives two arguments:\n\n- the sum of digits value \n\n- the desired number of digits for the numbers\n\nThe function should output an array with three values: \\[1,2,3\\]\n\n1 - the total number of possible numbers\n\n2 - the minimum number\n\n3 - the maximum number\n\nThe example given above should be:\n\n```python\nfind_all(10, 3) == [8, 118, 334]\n```\n\nIf we have only one possible number as a solution, it should output a result like the one below:\n\n```python\nfind_all(27, 3) == [1, 999, 999]\n```\n\nIf there are no possible numbers, the function should output the empty array.\n\n```python\nfind_all(84, 4) == []\n```\n\nThe number of solutions climbs up when the number of digits increases.\n\n```python\nfind_all(35, 6) == [123, 116999, 566666]\n```\n\nFeatures of the random tests:\n\n* Number of tests: `112`\n* Sum of digits value between `20` and `65`\n* Amount of digits between `2` and `17`\ndef find_all(sum_dig, digs):\n\t\nUse Call-Based format\nANSWER:\n"}}