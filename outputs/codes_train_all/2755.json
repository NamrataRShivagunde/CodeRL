{"2755": {"code": ["::\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n[-22, -6, -1, 1, -7, -9, -2, -3] =>  [-6, 1, 1]\n\n,,\n\n[-,,\n\n:\nReturn a", "::\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format, [-6, -5, -8, -9, 1, -11, -2]\n,, [-56, -18,]\n\n[-\n\n,\n\n:\nReturn", "::\n\n\n\n:\n\n\n\n\n\t\n:\n:\n\n\n\n:\n\n:\n\n\n\n[1, -1, -6, -2, -3, -7, -1, -1, -1]\n\n\n,, 22, -6, -11],\n[-]\n[-56,\n,\n:\nReturn a new", ":\n:\n\n\n\n:\n\n\n\n\n\t\n:\n\n\n\n\n\t\nUse Call-Based format:\n:\n\nreturn a new array with elements which are multiple of their own index in input array.\n\n\n\n[-8, -1, 1] =>  [-1, 1],,,\n\n[-,,\n\n:\n\n```\n", "::\n\n\n\n:\n\n\n\n\n\t\n:\n\n:\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n[0, 1]\n\n\n\n\n[-21, -6, -6, -1, -6, -2, 0, 1]\n,,\n\n[-56,,,\n\n:\nReturn a", ":\n:\n\n\n\n:\n\n\n\n\n\n\t\nUse Call-Based format\n\n```\n\n:\n\n:\n\n\n\n\n:\n\n:\n\n\n\n] => [-1, 0, 0]\n\n\n\n] =>  22\n,] => [-56, 0, 0]\n\n[-]\n[-,,\n:\nReturn a", "::\n\n\n\n:\n\n\n\n\n:\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n-\n\n[-25, -6, -1, -1, -7, -2, -1] =>  [-2, -1, -7]\n\n,,\n\n\n[-] => [-56]\n\n,\n:\n", "\n:\n\n\n\n:\n\n\n\n\n:\n:\n\n\n\nUse Call-Based format:\n:\n\n\n\n\n[-2, -3, -2, -2, -4, -5] => [-2, 0, -4]\n\n,] => [-56, -21, 0]\n\n[-]\n[-\n\n\n[\n:\n", "::\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n[-9,-6, 0,] => [-22, 0, 0]\n,] => [-56, -21, 0, 68]\n\n[-56,]\n[-\n,\n\n:\n", "\n:\n\n\n\n:\n\n\n\n\n\t\n:\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n[0, -4, -5, -7, -2, -3, -2, -5, -2, -7] => [0, 4]\n,,\n,\n\n,\n:\nReturn", "\n:\n\n\n\n:\n\n\n\n\t\n:\n:\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n[-5, -6, -1, -3, -4, -7, -6, -1] => [-5, -6, -4]\n\n,,\n\n[-,,\n:\nReturn a new array containing elements", "::\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n:\n\n\n\n\n:\n:\n\nUse Call-Based format\nreturn [-1, 1]\n\n```\n\n\nUse Call-Based format,] => [-21, 22]\n,, -72, 0]\n[-]\n\n[-,,\n:\nReturn a new", "::\n\n\nUse Call-Based format\n:\n\n\n\n\n\n:\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\n\n[-11, -7, -6, -3, -9, -4, -5, 1, -2, -4, -8]\n,,\n,\n\n,\n:\nReturn", "::\n\n\n\n:\n\n\n\n\n\t\n:\n:\n\n\n\nUse Call-Based format:\n:\n\n\n\n[-55, -6, -1, -1, -6, -2, -7, -9, -9] => [-6, -6, -7]\n,,\n\n[-,,\n:\nReturn a new array", "::\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\nUse Call-Based format\n[-24, -6, -6,] => [-22, -6, 0, 23]\n,, 0, 1]\n[-56,]\n[-\n,\n\n:\nReturn", "::\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n:\n\n\n\t\nUse Call-Based format:\n:\n\n[22, -6, 32, 82, 9, 25] => [-6, 32, 25]\n\n,, -21, -26, 0]\n,,\n\n[-56,]\n\n,\n:\nReturn", "\n:\n\n\n:\n\n\n\n\n\n:\n\n:\n\n\n\t\nUse Call-Based format:\n:\n\n \n\nUse Call-Based format, [-6, -6, -5, -7, -1, 1, -9, -8, -11]\n\n,,\n\n[-]\n\n[-,\n:\nReturn a new array", "::\n\n\n\n\n:\n\n\n\n\n\n\n:\n\n\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n\n\n[0, 1, -6, 32, 0, -6, -1, -1] => [ 0, 1 ]\n\n,,\n\n\n[-,,\n\n:\n\nReturn a new array", "::\n\n\n\nUse Call-Based format:\n\n:\n\n\n\n\n:\n:\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n\n\n[-56, -26, -2, -1, -7, 1, -2, 1, 1]\n,,,\n\n[-,,\n:\nReturn a new array consisting", "::\n\n\n\n:\n\n\n\n\n\t\nUse Call-Based format:\n:\n\n\n\n\t\nUse Call-Based format:\n\n:\n\n\n\n\n\nUse Call-Based format,, 22] =>  [-22, 0, 0, -7]\n,] => [-56, 0]\n\n[-]\n[-,,\n:\nReturn"], "prompt": "\nQUESTION:\nReturn a new array consisting of elements which are multiple of their own index in input array (length > 1).\n\nSome cases: \n\n```\n[22, -6, 32, 82, 9, 25] =>  [-6, 32, 25]\n\n[68, -1, 1, -7, 10, 10] => [-1, 10]\n\n[-56,-85,72,-26,-14,76,-27,72,35,-21,-67,87,0,21,59,27,-92,68] => [-85, 72, 0, 68]\n```\ndef multiple_of_index(arr):\n\t\nUse Call-Based format\nANSWER:\n"}}