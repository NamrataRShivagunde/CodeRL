{"730": {"code": ["\n\n\n\n\n\n\nA game is being played.\n\nA game is played by a number of test cases.\n\nA game is played by a number of test cases.\n\nA game is played by a number of test cases.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2264  N ", "\n\n\n\n\n\n\n\n\n\n\nT - 1 - 2\nT - 1 - 1\nT - 1 - 1\nT - 1\nN - 1\n\n\n-----Constraints and Subtasks-----\n\n\n\n\n\n\n\n 100  \n\n 100  \n\n\n\n\n\n\n\n\n\n\n\n\n\n1 : (20 points)\n\n N - 1 ", "\n\n\n\n\n\n\n\n\nT - 1 - 1\n\nT - 1 - 1\n\nT - 1 - 1\n\nT - 1 - 1\n\nT - 1 - 1\n\nT - 1\n\n\n\n\n\n\n\n\n\n\n\n 100  \n\n\n\n\n\n\n\n\n\n\n\n\u2264 N \u2264 100  \n-", "\n\n\n\n\n\n\n\n\n\n\nT, N, c[i], type[i], type[i], c[i], c[i][j]\n\n-----Constraints and Subtasks-----\n\n\n\n\n\n 100  \n\n   100  \n\n\n\n\n\n\n\n\n\n\n\n\n\u2264 T \u2264 N \u2264", "\n\n\n\n\n\n\n\n\nT = 3  # the number of friends, N = 3  # the number of friends\n\n-----Constraints and Subtasks-----\nSubtasks #2 : \n\n\n\n\n\n\n\n 100  \n\n 100  \n\n\n\n\n\n\n\n\n\n\n\n\n\u2264 N \u2264 100  \n- 1 ", "\n\n-----Language and Subtasks-----\n\nLanguage:\n\nLanguage:\n\nLanguage:\n\nLanguage:\n\nLanguage:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  100  \n\n 100  \n\n-----Subtasks-----\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\u2264 N \u2264 100  \n-", "\n\n\n\n\n\n\nA number of test cases for a Friday game is 1:\n\n- 1 \u2264 T \u2264 N \u2264 100 \n\n\n\n\n\n\n\n\n\n 100  \n 100  \n\n-----Test Examples-----\n\n\n\n\n\n\n\n\n\n\n\n\u2264 1 \u2264 N \ufffd", "\n\n\n\n\n\n\n\n\n\n\n[1]\n\nA rule:\n\n- 1 \u2264 T \u2264 N \u2264 100  \n\n- 1 \u2264 type[i][j]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \u2264  N \ufffd", "\n\n\n\n\n\n\n\n\nT \u2264 N \u2264 100 \n\nConstraints and Subtasks-----\nSubtasks #3 : (20 points)\n\n\nConstraints and Subtasks-----\n\n\n\n\n\n\n  100  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Subtasks-----\n\nFriday Chef and his N ", "\n\n\n\n\n0:\n\n-----Input-----\n\nThe first line of input contains a single integer T denoting the number of test cases. \n \n\n\n\n\n\n\n\n\n\n\n  100  \n\n 100  \n\n-----Constraints and Subtasks-----\n\n \n\n\n\n\n\n\n\n\n\n\n\u2264 c[i] \u2264  100", "\n\n\n\n\n\n---\n\n\n\n\n\n\nT - 1 - 1 - 1\n\nT - 1 - 1 - 1\n\n---\n\nThe last line of output is the number of test cases\n\n---\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nT - 1 - 1\n\n-----Constraints and Subtasks-----\n\n ", "\n\n\n\n\n\n\n\n\n\nT - N - 1\nT - 1\nT - 1\nT - 1\n\n-----Constraints and Subtasks-----\n\nThe first line of input contains a single integer T denoting the number of test cases.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \u2264 N \u2264 100", "\n\n\n\n\n\n\n\n\n\nT - 1\nT - 1\nT - 1\nT - 1\nT - 1\nT - 1\n\n-----Constraints and Subtasks-----\n\nThe input is separated by spaces \n\n-\n\n\n\n\n\n\n 100  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2264 N \u2264 T", "\n\n\n\n\nFriday\nFriday\nFriday!\nFriday!\n\nFriday!\n\nFriday!\n\n\n\n\n\n\n\n\n\n\n\n 100  \n\n-----Constraints and Subtasks-----\n \n\n\n\n\n\n\n\n\n\n\n-----Constraints and Subtasks-----\n\n\u2264 N \u2264 T", "\n\n\n\n\n-----Constraints and Subtasks-----\n\n\n\n\n\nT - 1\n\nT - 1\n\nT - 1\n\nT - 1\n\nT - 1\n\nT - 1\n\nT - 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints and Subtasks-----\n\n\n \u2264", "\n\n\n\n\nFriday\nFriday\n\nFriday\n\nFriday\n\nFriday\n\nFriday\n\nFriday\n\n\n\n\n\n\n\n\n\n\n\n\n 100  \n\n 100  \n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Constraints and Subtasks-----\n\n\u2264 N \ufffd", "\n\n\n\n\nThe first line of input contains a single integer T denoting the number of test cases.\nThe second line of input contains a single integer N denote the number of storage players. \n\n\n\n\n\n\n\n\n\n\n 100  \n 100  \n\n\n\n\n\n\n\n\n\n\n\n# Proceeding with the above:\n\n- 1 \u2264", "\n\n\n\nA simple example:\n\nT = 1\nN = 3\n\nA simple example:\n\nT = 2\n\nA simple example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 100  \n 100  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2264 100  \n- 1 \ufffd", "\n\n\n\n\n\n\n\n\n\nT \u2264 T \u2264 T \u2264 N \u2264 N  \n\nConstraints and Subtasks-----\n\nA test case is used for each player. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2264 N \u2264 100  \n", "\n\n\n\n\nFriday,\nFriday,\nFriday,\nFriday,\n\n\n\n\n\n\n\n\n\n\n\n\n 100  \n\n 100  \n\n-----Constraints and Subtasks-----\n\nThe first line of input contains a single integer T denoting the number of test cases.\n\n\n\n\n\n\n\n\n\n\n\n \ufffd"], "prompt": "\nQUESTION:\nEvery Friday Chef and his N - 1 friends go for a party. At these parties, they play board games. This Friday, they are playing a game named \"Boats! Boats! Boats!\". In this game players have to transport cookies between Venice and Constantinople. Each player has a personal storage. The players are numbered from 1 to N, Chef is numbered 1. Rules for determining a winner are very difficult, therefore Chef asks you to write a program, which will determine who is a winner. \n\nThere are 6 types of cookies. For each cookie in the storage player gets 1 point. Also player gets additional points if he packs his cookies in some boxes as follows: \n\n- A box containing 4 different types of cookies fetches 1 additional point.\n- A box containing 5 different types of cookies fetches 2 additional points.\n- A box containing 6 different types of cookies fetches 4 additional points.\n\nObviously a cookie can be put into a single box.\n\nFor each player, you know the number of cookies in his storage (denoted by c[i]), also the types of cookies in the storage given denoted by type[i][j].\n\nYour task is to determine the winner of this game. Output \"tie\" if there are two or more players with same maximum score, \"chef\" if only Chef has a maximum score, winner's index in all other cases.\n\n-----Input-----\n\nThe first line of input contains a single integer T denoting the number of test cases. This will be followed by T test cases.\nThe first line of each test case contains an integer N denoting the number of players.\nThe second line of each test case contains an integer c[i] denoting the number of cookies in the i-th storage, followed by c[i] space-separated integers type[i][j] which denote the type if j-th cookie in the storage i-th.\n\n-----Output-----\nFor each test case, output a single line containing the answer as specified in the statement.\n\n-----Constraints and Subtasks-----Subtask #1 : (20 points)  \n\n- 1 \u2264 T \u2264 10 \n- 1 \u2264  N  \u2264 100  \n- 1 \u2264  c[i]  \u2264  100  \n- 1 \u2264  type[i][j]  \u2264  3   \nSubtask #2 : (80 points)  \n\n- 1 \u2264 T \u2264 10 \n- 1 \u2264  N  \u2264 100  \n- 1 \u2264  c[i]  \u2264  100  \n- 1 \u2264  type[i][j]  \u2264  6  \n\n-----Example-----\nInput:\n3\n2\n6 1 2 3 4 5 6\n9 3 3 3 4 4 4 5 5 5\n2\n5 2 3 4 5 6\n7 1 1 2 2 3 3 4\n3\n4 1 1 2 3\n4 1 2 2 3\n4 1 2 3 3\nOutput:\nchef\n2\ntie\n\n-----Explanation-----\nExample case 1.\nChef has total 6 cookie, so he gets 6 points for that. Also, he can put all his cookies (as they are all distinct) in a bag of size 6. It will fetch him additional 4 points. So, Chef's total points will be 10.\nThe second player has 9 cookies, he gets 9 points for that. Other than this, he can't create a bag with either 4, 5 or 6 distinct cookies. So, his final score is 9.\n10 > 9 - Chef wins.\nExample case 2.\nChef has 5 + 2 (a bag with 5 different cookies) = 7.\nThe second player has 7 + 1(a bag with 4 different cookies) = 8.\n7 < 8 - the second player wins.\nExample case 3.\nEvery player has 4 cookies and can't create any bag of sweets. So, it's a tie.\nUse Standard Input format\nANSWER:\n"}}