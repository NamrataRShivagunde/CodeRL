{"1639": {"code": ["```\n```\n\n```\n\n\n```\n\n\n\n\n\n\n...        ..\n[1, 5, 6, 2, 7, 4, 3, 5, 6, 7]\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n, 2, 7, 3, 4, 7, 2, 5", "```\n```\n\n```\n\n```\n\nEXAMPLE:\n```\n\n```\n\n\n\n\n.......\n\n     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n         2  # arrays with three terms(510 different arrays)\n[1, 5, 6, 2, 7, 4]\n\n\n, 2, 3", "```\n\n\n\n\n\n\n\n\n\n\n\n\n\n    1                    2    3\n    2                      4\n    3\n    5                    6\n\n\n\n\nNOTE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, 5, 6, 2, 7, 2, 3]\n\n, 7, 2, 4, 3, 5,", "```\n\n\n\n\n\n\n\n\n\n...                 ..\n[1, 5, 6, 2, 3, 7]     ..\n\n.......             ..\n[1, 5, 6, 2, 3]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, 1, 7, 2, 3, 4, 7, 1,", "\n\n\n\n\n\n\n\n\n\n[1, 6]\n               1  # arrays with two terms(1110 different arrays)\n[1, 7, 2, 3, 4]\n\n.......\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.....\n[1, 6, 2, 3, 7]\n         5 #", "\n\n\n\n\n\n\n\n\n\n\n.......\n[1, 5, 6, 2, 7, 2, 3]```\n\n\n\n\n\n         2  # arrays with five terms(210 different arrays)\n[1, 5, 6, 2, 7]\n\n\n\n\n\n\n\n\n\n\n\n, 7]      9  # arrays with six", "\n\n\n\n\n\n\n\n\n\n[1, 5, 6, 7, 2, 3, 4]```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1]                    1 # arrays with two terms(310 different arrays)\n[1]                   2\n\n\n, 6, 2,", "\n\n..\n\n\n\n\n\n\n1, 2, 3, 4, 7, 3, 2, 4, 7, 7, 7, 6\n\n..........\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, 2, 7, 3, 4, 5, 6, 2, 7, 4, 7,", "``````\n```\n```\n```\n```\n\n```\n\nWow:\nWe have three numbers:\n```\nWe have three numbers:\n`\n\n\n\n...\n```\n```\n```\n\n\n\n\n\n\n\n\n\n\n[1, 5, 6]\n\n, 2, 7, 4]      11", "\n\n\n\n\n\n\n\n\n\n```\n\n\n...             ..\n[1, 5, 6, 2, 7, 3, 4, 5, 6, 7, 2, 7, 4, 5]\n\n\n\n\n\n\n\n\n\n\n\n\n\n...\n           ...\n\n\n```\n\n\n, 7, 2, 3, 4, 5,", "```\n```\n\n```\n\n```\n\n```\n\n\n\n[1, 5, 6, 2, 3, 4, 7, 3]\n\n\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nThe example below:\n\nThe list with 9 numbers:\n\n, 2, 3", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, 5, 6, 3, 4, 7]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, 2, 7, 4, 5, 3, 4, 6, 7, 2, 3, 4, 7, 3, 5, 6, 2, 3, 4, 7,", "```\n```\n```\n\n```\n\n\n\n\n\n\n...               ..\n[1, 5, 6, 2, 3, 7, 2, 3, 4]\n\n```\n\n```\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n[1, 5]\n     \n, 3, 4, 7, 2, 5", "```\n\n```\n\n\n\n\n\n\n\n\n\n...........           ..\n[1, 5, 6, 2, 7]\n...           ..\n\n........               ..\n```\n\n\n\n\n\n```\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n, 2, 3, 7, 4]\n[", "```\n```\n```\n\n```\n```\n\n```\n\n\n\n\n```\n\n.......        ..\n[1, 5, 6, 2, 3, 7]\n\n```\n\n```\n```\n\n```\n\n\n\n\n\n\n\n\n\n...............        ..\n[1]\n, 2, 7", "\n\n\n\n\n\n\n\n\n\n\n\n[1, 5, 6, 2, 3, 4]     ...  # arrays with four terms(310 different arrays)\n[1, 5, 6, 2, 7]     ... \n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, 5]\n\n, 3, 4, 6, 2, 7", "```\n```\n```\n```\n```\n```\n\n\n\n\n\n         ..\n[1, 5, 6, 2, 7, 3]\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ...\n\n\n```\n\n\n\n, 7, 2, 3, 4, 5, 6, 2", "```\n```\n\n```\n\n```\n\n```\n\n```\n```\n\n```\n\n\n\n\n        \n\n\n```\n\n\n```\n\n```\n\n\n\n\n\n\n\n```\n\n\n\n\n\n```\n\n\n\n               2  # arrays with two terms\n[1]\n, 2", "\n```\n```\n```\n\nEXAMPLE:\n```\n```\n\n```\n```\n\nThe list is not sorted and will be sorted by the number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, 7, 2, 3, 4, 5, 7, 2, 3", "\n\n\n\n\n\n\n\n\n\n\n\n...         1  # arrays with four terms(410 different arrays)\n[1, 5, 6, 2, 7, 3]      1  # arrays with four terms(410 different arrays)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n, 2, 7, 4, 2, 3,"], "prompt": "\nQUESTION:\nWe have three numbers: ```123489, 5, and 67```.\nWith these numbers we form the list from their digits in this order ```[1, 5, 6, 2, 7, 3, 4, 8, 9]```.  It shouldn't take you long to figure out what to do to achieve this ordering.\n\nFurthermore, we want to put a limit to the number of terms of the above list.\n\nInstead of having 9 numbers, we only want 7, so we discard the two last numbers.\n\nSo, our list will be reduced to ```[1, 5, 6, 2, 7, 3, 4]``` (base list) \n\nWe form all the possible arrays, from the list above, and we calculate, for each array, the addition of their respective digits.\n\nSee the table below: we will put only some of them\n```\narray for the list      sum (terms of arrays)\n[1]                      1 # arrays with only one term (7 different arrays)\n[5]                      5\n[6]                      6\n[2]                      2\n[7]                      7\n[3]                      3\n[4]                      4\n\n[1, 5]                   6 # arrays with two terms (42 different arrays)\n[1, 6]                   7\n[1, 2]                   3\n[1, 7]                   8\n[1, 3]                   4\n[1, 4]                   5\n\n.....                   ...\n[1, 5, 6]               12 # arrays with three terms(210 different arrays)\n[1, 5, 2]                8 \n[1, 5, 7]               13 \n[1, 5, 3]                9 \n........                ...\n[1, 5, 6, 2]            14 # arrays with four terms(840 different arrays)\n[1, 5, 6, 7]            19 \n[1, 5, 6, 3]            15 \n[1, 5, 6, 4]            16 \n............            ..\n[1, 5, 6, 2, 7]         21 # arrays with five terms(2520 different arrays)\n[1, 5, 6, 2, 3]         17 \n[1, 5, 6, 2, 4]         18 \n[1, 5, 6, 7, 2]         21 \n...............         ..\n[1, 5, 6, 2, 7, 3]      24 # arrays with six terms(5040 different arrays)\n[1, 5, 6, 2, 7, 4]      25 \n[1, 5, 6, 2, 3, 7]      24 \n[1, 5, 6, 2, 3, 4]      21 \n..................      .. \n[1, 5, 6, 2, 7, 3, 4]   28 # arrays with seven terms(5040 different arrays)\n[1, 5, 6, 2, 7, 4, 3]   28   # arrays of max length = limit\n[1, 5, 6, 2, 3, 7, 4]   28 \n[1, 5, 6, 2, 3, 4, 7]   28 \n:::::::::::::::::::::::::::\nGreatT0talAdditions 328804 (GTA).(The total addition of the sum values corresponding to each permutation). A total 0f 13706 arrays, all of them different.\n```\nSo we say that for the three numbers, ```123489, 5, and 67``` with a limit = ```7```, the GTA value is ```328804```.\n\n\nLet's see now a case where we have digits occurring more than once. If we have a digit duplicated or more, just continue for the corresponding digit in turn of the next number. The result will be a list with no duplicated digits.\n\nFor the numbers: ```12348, 47, 3639 ``` with ``` limit = 8```  we will have the list ```[1, 4, 3, 2, 7, 6, 9, 8]``` (base list)\n\nWe should not have duplications in the permutations because there are no duplicated\ndigits in our base list.\n\nFor this case we have:\n```\nnumber of different array      number of terms the array has\n              8                                  1 \n             56                                  2 \n            336                                  3\n           1680                                  4\n           6720                                  5\n          20160                                  6\n          40320                                  7\n          40320                                  8\nGTA = 3836040 with a limit of eight terms\n```\nThe challenge: create the function ```gta()```, that receives a number that limits the amount of terms for the base list, ```limit```, and an uncertain number of integers that can have and will have different amount of digits that may have digits occuring more than once.\n\nJust to understand the structure of the function will be like: ```gta(limit, n1, n2, ...nk)```\n\nLet's see our functions with the examples shown above.\n``` python\n# case1\ngta(7, 123489, 5, 67) == 328804 # base_list = [1, 5, 6, 2, 7, 3, 4]\n\n# case2\ngta(8, 12348, 47, 3639) == 3836040 # base_list = [1, 4, 3, 2, 7, 6, 9, 8]\n```\nYou may assume that ```limit``` will be always lower or equal than the total available digits of all the numbers. The total available digits are all the digits of all the numbers. (E.g.the numbers ```12348, 47, 3639 ```have 8 available digits.)\nYou will always be receiving positive integers in an amount between 2 and 6.\n\nFor the tests ```limit <= 9``` (obviously).\n\nEnjoy it!!\n\n(Hint: the module itertools for python may be very useful, but there are many ways to solve it.)\n\n(The arrays [1, 5, 6] and [1, 6, 5] have the same elements but are different arrays. The order matters)\ndef gta(limit, *args):\n\t\nUse Call-Based format\nANSWER:\n"}}