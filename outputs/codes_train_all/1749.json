{"1749": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\nUSE Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n#n! = num\n\t#base! = base\n\n\n\n\n\n\n\n#base! = 2\n\n\n\n\n\n\n\n#base! = 2\n#num! = 2\n#base! = 2\n\n", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou should use a call-based format\n\n\n\n#base! = 2\n\n\n\n\n\n\n\n#base! = 2\n\n\n\n#num! = 2\n\n\n\n```python", "\nUse Call-Based format\n\n\n\n\n\n\n\n#num! = 10\n#base! = 2\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\ntrailing_zeros(10, base) == 4\n\nThe number of trailing zeros will be an even number of leading zeros.\n\n\n\n\n\n\n\n\n\n```python\n#", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of trailing zeros of a large number will have the same number of trailing zeros.\n\n\n\n\n\n\n\n\n\n#num! = 1\n#base! = 2\n#num! = 10\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nnum! = 1 * 2 * 3 * 4 *... * n-3 * n-1 * n\n\n\n\n", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n#num! = 1307674368000 * n-1 * n-2 * n-1 * n\n#num! = 2\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# HINT:\n\n# The following code", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n#7! = 0b1b1b1b1b1b1b\n\n\n\n\n\n\n\n\n\n\n# The first example is", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of trailing zeros can be used to determine the number of trailing zeros of a factorial\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```python\n#if 0", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnum = 3\n\nbase = 2\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n```python\ntrailing_zeros(num, base) == 6 * trailing_zeros(num, base)```\n\n\n\n\n\n\n\n\n\n```", "\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n#7! = 0b1\n\n\n\n\n\n\n\n#7! = 1b1b1b1b1b1b1b1b1b1\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n#10 * 10 * 10 * 10\n\n#7! = 1\n#10! = 1\n\n#base! = 1\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\nnum = 2\nbase = 2\n\n\n\n\n\n```", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n#! = 0\n\n\n\n\n\n```\n\n\n\n\n\nThis function returns the number of trailing zeros, in any given base.\n\nThis is a function that calculates the number of trailing zeros.\n\n\n\n\n\n\n\n\n\n\n\n```", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nn = 1\n#n! = 1\n#n! = 0b1\n\n\n\n\n\n```python\n#if", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\\n\\n\n\n\n\n\n```\n\n\n\nUse Call-Based format\n\n\ntrailing_zeros(num, base) == 4\n\nThe function returns a number of trailing zeros.\n\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n#10! = 0b0101010101010101010101\n\n\n#n! = 1\n\n\n\n\n\n\n\n\n\n\n\nThe number of trailing zeros is not complete.\n\n\n\n\n\n\n# This is a free base:", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n\n\n\n```python\ntrailing_zeros(n, base) == 4\n```\n\n\n\n\n\n\n\n\n\n\n\n```python\n#if base", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n#n! = 0b10011101101101101\n\n```python\ntrailing_zeros(n, 10) == 6```\n\n\n\n\n\n\n\n\n\n\n\n\n```python", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nnum! = 1307674368000\nbase! = 2\n#num! = 2\n\n#base! = 2\n\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n#num! = 1\n#base! = 2\n\n\n\n``", "\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n#\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n#base! = 2\n\n\n\n\n\n\n\n\n#num! = 0x1000101011\n\n\n\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nnum! = 1\n#num! = 2\n\n```\n\n\n\n\n"], "prompt": "\nQUESTION:\nA factorial (of a large number) will usually contain some trailing zeros.\nYour job is to make a function that calculates the number of trailing zeros, in any given base.\n\nFactorial is defined like this:\n```n! = 1 * 2 * 3 * 4 * ... * n-2 * n-1 * n```\n\nHere's two examples to get you started:\n\n```python\ntrailing_zeros(15, 10) == 3\n#15! = 1307674368000, which has 3 zeros at the end\n\ntrailing_zeros(7, 2) == 4\n#7! = 5030 = 0b1001110110000, which has 4 zeros at the end\n```\n\nYour code should be able to handle some very large numbers, so write some smart code.\n\nNote: ```num``` will be a non-negative integer, ```base``` will be an integer larger or equal to two.\n\nHINT: Should you not make any headway after trying a long time, you should try [this kata](https://www.codewars.com/kata/number-of-trailing-zeros-of-n) first.\ndef trailing_zeros(num, base):\n\t\nUse Call-Based format\nANSWER:\n"}}