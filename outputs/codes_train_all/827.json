{"827": {"code": ["\nUse Standard Input format\nANSWER:\n1\n2\n\n\n3\n\n\n3\n\n\n1\n\n\n3\n2\n3\n\nLimak has a string S.\nabcB\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\n- 1 \u2264 1 \u2264 1\n\nLimak has a", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n- 1\n5\n\n\nLimak is a string S, the number of subsequences \"ab\" and \"abc\" are repeated\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 3\n2\n\n\n\nLimak is a string S.\n\n1 N 2\n2 K", "\nUse Standard Input format\nANSWER:\n\n\n\n\n-----Example-----\n\n\n\n\n\n\nLimak has a string S and K.\n\nLimak has a string S and K.\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\nLimak was created with the same number of test cases.\n\nLimak", "\n\n\n3\n2\n1\n\n1\n2\n0\n2\n0\n\n\n\n\n\n\n\nLimak\n\n\n- abcbAbc\n- abcbAbc\n- abcbAbcb\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\nLimak A\n\n-----Example-----\n\n\n1 0 2 3 4", "\nUse Standard Input format\nANSWER:\n\n\n\n\n\n\n\n\n\nLimak\nLimak\n\n- 2\n- 3\n- 2\n- 2\n\n- 1 \u2264 1 \u2264 1\n\n\n\n\n\n\n\n\n\n\n1\n\n\n2\n\n\n\nLimak\n\nLimak\n\nT =", "\nUse Standard Input format\nANSWER:\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1\n1 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n- 1 \u2264 2 \u2264 1\n\n\n\n\n\n\n2\n2\n2 \u2264", "\n\n\n\n\n\n\n\n\n2\n3\n4\n5\n3\n2\n\n\n- 1\n1\n\n2\n\n\n\n- AyzB\n- AyzB\n- aB\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n-----Example-----\n\n\n\nT 3\na2\n3", "\nUse Standard Input format\n\n\n\n6\n1\n2\n3\n\n1\n2\n4\n3\n3\n\n\n\n\n\n\n\n\n- 1 \u2264 T \u2264 1\n- 1 \u2264 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\nLimakLimak has an", "\n\n\n2\n\n\n\n2\n2\n3\n5\n2\n6\n5\n\n\n\n1\n1\n2\n2\n2\n3\n\n\n\n\n- Abcbabcb\n- abcbAbcb\n- abcbAbc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n2\n6\n1\n2\n", "\n\n\n1 2 3 2 3 2 3 2 2 1 3 2 3 2 1\n1 1 2 2 3 3 2 2 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nT 1 2 3\n\n\n\n\n\n-----Example-----\n\nUse Standard Output format\n\n\n\n\n2 1\n2 2\n1\n\n1 2 N K 2", "\nUse Standard Input format\n\n\n1\n\n\n\n\n\n1\n2\n3\n1\n1\n1\n2\n1\n2\n3\n\n1\n2\n3\n2\n1\n2\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\nLimak\n1 1\n2\n\n-----Example-----\nT 2", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\nABcb\n- abcbAbc\n- abcbAbcB\n- abcbAbcB\n\n-----Explanation-----\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nUse Standard Output format\n\n\n\n\n\n\n- N \u2264 K \u2264", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\nLimak has a string S, which is a lowercase English letter.\nLimak then created a new string:\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n\n\n\n1\n2\n1\n\n1\n2\n1\n\n-----Example-----\n\n\n\n\n2 \ufffd", "\nUse Standard Input format\n\n\n\n1 2\n\n\n\n\n1 2\n2\n1 2\n3\n1\n2\n2\n1\n\n\n5\n\n\n\n- 1 \u2264 1 \u2264 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\nLimak is repeated the string S,", "\nUse Standard Input format\nANSWER:\n\nabcb\n\n\n\n\n\n\n\n\n\n\n\nLimak has a string S, the number of subsequences \"ab\" and K.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\nUse Standard Output format\n\n\n\n\nT = 2\nT", "\n\n\n\n\n\n\n\n\n\n\nLimak has a string S, the number of test cases\n- N \u2264 K \u2264 1\n- abcbAbcb\n\n\n\n\n1\n2\n3\n\n\n\n\n\n\n\n\n\n\n\n\n- 2\n- 1\n\n-----Example-----\n\n\nLimak has an integer", "\n\nUse Standard Input format\nANSWER:\n\nabcb\n\n\n\n\n\n\n\n\n\n\n5\n5\n\n\n\n\n\n\n- abcbabcb\n- abcbabcb\n- abcbabcb\n- abcbabcb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLimak\n\n\n\n-----Explanation-----", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\nLimak has a string S, and there are 2 consecutive indices in the input.\n\nabcb\n- abcbabcb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 1 2 2\n\n\n\n\n\n\n4 3 2 1\n\n6 1 2 2\n\n\nT 1", "\n\n\n\n2\n1\n2\n2\n1\n2\n1\n3\n2\n2\n\n\n\n\n\n\n\n\n\n- 1 \u2264 N \u2264 K \u2264 109\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example-----\n\n\nLimak is not repeated, you got:\n\nT 01", "\n\n\n\n1\n2\n3\n6\n3\n4\n2\n2\n\n\n\n\n\n\n\n\n\n- AbcB\n- abcAb\n- abcbAb\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\nAyzB\n\n-----Example-----\n\nLimak has a string S:\n1 2\n"], "prompt": "\nQUESTION:\nLimak has a string S, that consists of N lowercase English letters.\nLimak then created a new string by repeating S exactly K times.\nFor example, for S = \"abcb\" and K = 2, he would get \"abcbabcb\".\nYour task is to count the number of subsequences \"ab\" (not necessarily consecutive) in the new string.\nIn other words, find the number pairs of indices i < j, such that the i-th and j-th characters in the new string are 'a' and 'b' respectively.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two integers N and K, denoting the length of the initial string S and the number of repetitions respectively.\nThe second line contains a string S.\nIts length is exactly N, and each of its characters is a lowercase English letter.\n\n-----Output-----\nFor each test case, output a single line containing one integer \u2014 the number of subsequences \"ab\" in the new string.\nFor the given constraints, it can be proved that the answer fits in the 64-bit signed type.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- 1 \u2264 N \u2264 105\n- 1 \u2264 N * K \u2264 109 (in other words, the new string has length up to 109)\n\n-----Example-----\nInput:\n3\n4 2\nabcb\n7 1\naayzbaa\n12 80123123\nabzbabzbazab\n\nOutput:\n6\n2\n64197148392731290\n\n-----Explanation-----\nTest case 1. Limak repeated the string \"abcb\" 2 times, and so he got \"abcbabcb\". There are 6 occurrences of the subsequence \"ab\":\n- ABcbabcb (the two letters marked uppercase)\n- AbcBabcb\n- AbcbaBcb\n- AbcbabcB\n- abcbABcb\n- abcbAbcB\nTest case 2. Since K = 1, the new string is equal to the given S (\"aayzbaa\"). There are 2 occurrences of the subsequence \"ab\" in this string: AayzBaa and aAyzBaa.\nUse Standard Input format\nANSWER:\n"}}