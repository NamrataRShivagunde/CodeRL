{"1238": {"code": ["\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 \u2264 T \u2264 N \u2264 N \u2264 10\n\n\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n\n\nAB\n\n\n\n\n\n* A\n", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nB\n\n\n6 \u2264 \u2264\n5 \u2264\n\n\n\n\n\u2264 A \u2264 B \u2264 B\n\n\n\n\n\n\n\n\n\n\n\n\nACDFGHIJKLNPQRSTUVW\n\n", "\nUse Standard Input formatUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 10\n- 1 \u2264 9\n\n\n\n\n-\u2264 10\n\n\n\n\n\n\n\n\n\n\n\nA\n\nAB\n\nACDFGHIJKLNPQRST", "\nUse Standard Input formatUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 N \u2264 10\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\nAB\n\n\n\n-----Explanation-----\n-", "\nUse Standard Input formatUse Standard Input format\n\n\n\n\n\n\n\n\n\nACDFGHIJKLNPQRSTUVWW\n\nAB\n\nACDFGHIJKLNPQRSTUVW\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nB\n\n\n\n-----Explanation-----\n- T \ufffd", "\nUse Standard Input formatUse Standard Input format\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\nACDFGHIJKLNPQRSTUVWW\n\n\n\n\n\nA\nAB\n\n\n\n\u2264 10\n\n-----Constraints-----\n-\u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n- 1", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAB\nAB\n\nAAB\nAAB\n\nACDFGHIJKLNPQRSTUVWW\nAB\n\n\n\n\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n- T \ufffd", "\nUse Standard Input format\n\n\n\n\n\n\n\n\nA\nAB\n\n\n\n\n\n6 \u2264 0\n5 \u2264 9\n\n\n\n\n\u2264 1 \u2264 2 \u2264 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\nThe first line of the input is not used\n\n", "\nUse Standard Input format\n\n\n\n\n\n\n\n\nA\nAB\n\n\n\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 N \u2264 10\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\nACDFGHIJKL", "\nUse Standard Input format\n\n\n\n\n\n\n\n\n\nAB\n\n\nACDFGHIJKLNPQRSTUVWW\n\nAN\n\n\n\n\nAB\n\nA\nB\n\nAB\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\nThe first line of output", "\nUse Standard Input formatUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n- 1 \u2264 T \u2264 N \u2264 11\n- 1 \u2264 17\n\n\n\n\n\n\n\u2264 N \u2264 11\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\n\n\nTomorrow", "\nUse Standard Input formatUse Standard Input format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n6\n\n\nAB\n\n\n\nAB\n\nACDFGHIJKLNPQRSTUVW\n\nAB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n5\n6\n9\n\n\n\n456\n5\n", "\nUse Standard Input formatUse Standard Input format\n\n\n\n\n\n\n\n\n\n\nACDFGHIJKLNPQRSTUVW\n\nACDFGHIJKLNPQRSTUVW\n\n\n\n\n\n\n\n\u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\nACDFGHIJKLNPQRSTUVW", "\nUse Standard Input formatUse Standard Input format\n\n\n\n\n\n\n\n\n\nACDFGHIJKLNPQRSTUVW\n\nACDFGHIJKLNPQRSTUVW\n\n\n\n\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\n\n\nA\nAB\nACDF", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- 1 \u2264 T \u2264 4 \u2264 5 \u2264 11\n- 1 \u2264 7 \u2264 6 \n\n\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\n\nChef", "\n\n\n\n\n\nUse Standard Input format\n\n\n\n\n\n\nA\nAB\n\n\n6\n5\n66\n\n\n\nA\nB\n\n\n\u2264 T \u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n1 - 1 - 1\n\n2 - 1\n\n2 - 1\n5\n\n4\n\n5\n\n", "\n\n\n\nUse Standard Input format\n\n\n\n\n\n\n\nA\nB\nCDFGHIJKLNPQRSTUVWW\n\n\n\nA\nAB\n\n\nA\n\nA\u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\nChef likes to play with two digits. \n\nToday", "\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\nACDFGHIJKLNPQRSTUVWW\n\nAB\n\nACDFGHIJKLNPQRSTUVW\n\n\n\n\n\n\n\u2264 10\n\n\n\n\n\n\n\n\n\n\n\n\nA\nB\n\n\n\nA\nAB\n\nACDFGH", "\n\n\n1 \u2264 T \u2264 N \u2264 A\n2 \u2264 B\n3 \u2264 Z\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA B B B Z Z\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation-----\n\n\n\n\n    A B B Z Z Z Z Z", "\nUse Standard Input format\n\n\n\nUse Standard Output format\n\n\n\n\n\n\n\n\n\nACDFGHIJKLNPQRSTUVWW\n\n\n\n\n\nA\nAB\n\nACDFGHIJKLNPQRSTUVW\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAB\n\n\nA\nAB\nACDFGH"], "prompt": "\nQUESTION:\nChef likes to play with big numbers. Today, he has a big positive integer N. He can select any two digits from this number (the digits can be same but their positions should be different) and orders them in any one of the two possible ways. For each of these ways, he creates a two digit number from it (might contain leading zeros). Then, he will pick a character corresponding to the ASCII value equal to this number, i.e. the number 65 corresponds to 'A', 66 to 'B' and so on till 90 for 'Z'. Chef is only interested in finding which of the characters in the range 'A' to 'Z' can possibly be picked this way. \n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases.\nThe first line of the input contains an integer N. \n\n-----Output-----\nFor each test case, output a string containing characters Chef can pick in sorted order If the resulting size of string is zero, you should output a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- 1 \u2264 N \u2264 10100000\n\n-----Subtasks-----\n- Subtask #1 (40 points) N \u2264 1010\n- Subtask #2 (60 points) Original Constraints\n\n-----Example-----\nInput:\n4\n65\n566\n11\n1623455078\n\nOutput:\nA\nAB\n\nACDFGHIJKLNPQRSTUVW\n\n-----Explanation-----\nExample case 1. Chef can pick digits 6 and 5 and create integers 56 and 65. The integer 65 corresponds to 'A'.\nExample case 2. Chef can pick digits 6 and 5 and create 'A' as it equals 65. He can pick 6 and 6 (they are picked from position 2 and position 3, respectively) to create 'B' too. Hence answer is \"AB\".\nExample case 3. It's not possible to create any character from 'A' to 'Z'. Hence, we just print a new line.\nUse Standard Input format\nANSWER:\n"}}