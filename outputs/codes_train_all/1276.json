{"1276": {"code": ["\nExplanation:\n\n\n\n\n\n-----Explanation section-----\n\n1 0 2\n1 2 3\n1 1 2\n1 2\n1 1\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\n1\n2 2\n3 2\n\n\n\n\n\n2 2", "\n\n\n\n\n-----Explanation section-----\n\n\n\n-----Explanation constraints-----\n\n\n1 0 1\n\n-----Explanation constraints-----\n1 0 1\n\n-----Sample Sections - 1-----\n1 0 1\n\n-----Sample Sections - 1-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation - 1-----\n", "\n\n-----Example code-----\n\n\n\n\n\n-----Sample code-----\n\nWon\u201d\n\n-----Sample description section-----\n\n\n\n\n1 1\n\n1 2\n1 1\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Example constraint-----\n\n\n\n\n\n-----Sample input section-----\n\n\n\n\nExplanation - 1", "\n\n-----Explanation section-----\n\n\n\n\n\n\n-----Explanation section-----\n\nvoid recurse ( array a, int n ) {\n\tprint(\u201cWon\u201d );\n\t\n\n\n\nplanation section-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\nExplanation - 1", "\n\n-----Explanation section-----\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n-----Explanation constraints-----\n\n2 2 2\n3 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\n\n\n1 1\n2 2\n\n1\n\n\n1\n2", "\n\n\n\n-----Explanation section-----\n\n\n\n-----Explanation constraints-----\n\n1\n1\n2\n3\n4\n\n-----Explanation constraints-----\n1\n2\n3\n4\n3\n1\n2\n3\n2\n1\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nOutput section-----\n\n\n\n\n\n-----Explanation section-----\n\n-----Sample Explanation - 1-----\n1\n2\n3\n1\n\n-----Explanation constraints-----\n1\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\n-----Sample constraints-----\n\n\n\n\n\n\n", "\n\n\nChef Tobby\nChef Tobby\nChef Tobby\n\nChef Tobby\n\nChef Tobby\n\n\n\n\n\n-----Sample section-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 1\n\n2\n\n\n\n2 2\n3", "\n\nExplanation:\n\n\n\n\n\n-----Explanation section-----\n\nA = a[]\nb = b[]\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\n2 2\n3 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraint-----\n\n\n\n\n-----Explanation constraint-----\n\n\n\n\n\n1\n", "\n\n\n\n\n\n-----Explanation section-----\n\nHey Chuin\n\n\n\n1\n2\n3\n4\n\n\n\n-----Explanation section-----\n\n1\n\n\n\n2\n3\n1\n\n\n\nplanation section-----\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraint-----\n\n\n\n\n\n\nExplanation - 1", "\n\n\n\n\n-----Output section-----\n\n\n\n\n1 0 1 1 1\n2 2 1\n3 2 1\n\n-----Sample section-----\n1 1 2 1\n\n-----Sample output - 1-----\n1 1\n\n-----Sample output - 1-----\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 2\n3\n\n1", "\n\n\n\n\n-----Explanation section-----\n\nExplanation:\n\n\n\n-----Explanation constraints-----\n\n\n\n1 2 3\n1 2\n2 2\n3 2\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\nExplanation -", "\n\n\n\n\n\n\n\n\n-----Explanation section-----\n\n1\n1\n\n-----Explanation constraints-----\n1\n\n2 2\n3 1\n\n1\n1\n2 2\n3 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation constraints-----\n1\n\n\n\n\n\n\n\nExplanation constraints-----\n1\n2 2\n", "\nTobby\n\n-----Explanation section-----\n\n\n\n\n\n-----Explanation section-----\nA[i] = 0x0\n\n-----Explanation constraints-----\n0x0\n\n-----Sample Input section-----\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Sample constraints-----\n\n\n\n\n\nExplanation -", "\n\n\n\n\nChef Tobby\n\nChef Tobby\n\nA\n\n\n\n1 1 1 1 1 1 1 1 1 1\n2 1 2 1 1 1 1 1\n\n\nOutput section-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation section-----\n\n\n\n\n\nExplanation - 1-----\n", "\n\n\n\n\n-----Explanation section-----\n\nThe manuscript is generated by the Bhuvan algorithm\n\n-----Explanation constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation section-----\n\n\n-----Sample constraints-----\n\n\n\n\n\n2", "\n\n\n\n\n\n\n\n\n-----Explanation section-----\n\n1 1 2 1 1\n1 1 1 1 1\n1 1 1 1\n1 1 1\n\n-----Explanation constraint-----\n1 1 1\n1 1\n2 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 1 2\n2 1\n\n\n\n\nExplanation -", "\nExplanation :\n\n\n\n\n\n\n-----Explanation section-----\n\n-----Explanation constraints-----\n1 \u2264 1 \u2264 1 \u2264 1\n\n-----Explanation constraints-----\n\n\n\n\n\nplanation constraints-----\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation - 1-----\n1\n", "\n-----Explanation section-----\n\n\n\n\n\nExplanation section-----\n\n-----Explanation constraints-----\n1 \u2264 T \u2264 10\n1 \u2264 K \u2264 20\n\n\n\nplanation\n\n\n\n\nplanation section-----\n\n\n\n\n\n\n\n\n\n-----Explanation constraints-----\n\n\n\n\n\nExplanation - 1", "\n\n\n\n\n\n\n\n\n-----Explanation section-----\n\n1 1 2 1\n\n1 1 1 1 1 1 1 1 1 1 1\n\n-----Explanation constraint-----\n1 1 1 2 1 1\n1 1 1\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----Explanation section-----\n\n\n\n\nExplanation - 1-----"], "prompt": "\nQUESTION:\nChef Tobby is trying to run a code given to him by Bhuvan for an experiment they want to include in the manuscript to be submitted to a conference. The deadline to submit the manuscript is within a couple of hours and Chef Tobby needs to finish the experiments before then.\nThe code given by Bhuvan is the following which runs given an array of N integers and another integer K :\nvoid recurse ( array a, int n )\n{\n\t// n = size of array\n\tdefine array b currently empty\n\tconsider all 2^n subsets of a[]\n\t{\n\t\tx = bitwise OR of elements in the subsets\n\t\tadd x into \"b\" if it is not present yet\n\t}\n\tif (sizeof( b ) == 1 << k)\n\t{\n\t\tprintf(\u201cWon\u201d);\n\t\treturn;\n\t}\n\trecurse ( b, sizeof( b ) );\n}\n\nChef Tobby tried to run an experiment with only one integer in the array with value 2 and K = 3. To his horror, he found out that the algorithm is resulting in an infinite loop. He is livid with the possibility that the algorithm can lead to infinite loops for certain cases. On closer inspection he determines that it might be possible to insert additional elements in the initial array to subvert the problem. Since time is very less, Chef Tobby would like to insert the minimum number of elements.\nChef Tobby has to finish writing the paper, so he asks his graduate student Leamas to fix it. Leamas has no idea how to fix the problem so he asks you for help.\n\n-----Input section-----\nThe first line contains T, the number of test cases.\nEach test case consists of 2 lines. The first line contains 2 integers N and K, denoting the number of elements in the array and parameter mentioned in problem statement.\nNext line contains N space separated integers, denoting the elements of the array.\n\n-----Output section-----\nOutput the minimum number of elements that need to be inserted so that inifinite loop can be avoided.\n\n-----Input constraints-----\n1 \u2264 T \u2264 10\n1 \u2264 Sum of N over all test cases \u2264 105\n1 \u2264 K \u2264 20\n0 \u2264 A[i] \u2264 2K-1, where A[i] denotes the ith element of the array.\n\n-----Sample Input - 1-----\n1\n2 2\n3 1\n\n-----Sample Output - 1-----\n1\n\n-----Explanation - 1-----\nYou can win the game by inserting the element 2 into the array.\n\n-----Sample Input - 2-----\n1\n7 3\n3 7 5 4 6 2 1\n\n-----Sample Output - 2-----\n0\n\n-----Explanation - 2-----\nThe initial array will result will terminate in the first step of algorithm only. Thus there is no need to insert any new element.\nUse Standard Input format\nANSWER:\n"}}