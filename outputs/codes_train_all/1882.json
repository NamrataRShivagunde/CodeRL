{"1882": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven 1->2->3->4, swap every two adjacent nodes and return its head.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  1->1->2->", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven 1->2->3->4, swap every two adjacent nodes and return the head.\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n1->2->3->4\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n# Definition for linked list\n# Definition for call-based list\n\n\n\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a\u00a0linked list", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a\u00a0linked list, swap every two adjacent nodes.\n\nGiven 1->2->3->4.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\nGiven a\u00a0", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a linked list,\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\nGiven 1->2->3->4, swap every two adjacent nodes and return its head.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a\n\nGiven a\ufffd", "\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a linked list, swap every two adjacent nodes.\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a\n\n\nGiven 1", "\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n# Definition for linked list\nUse Call-Based format\n\n\nGiven a linked list, return its head.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  1->2->3", "\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\nGiven a linked list,\n\n\n\n\n\n\n\n\n.\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a linked list\n\nGiven", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nGiven a linked list, swap every two adjacent nodes and return the head.\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a linked\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nList of nodes:\n\n\n\nUse Call-Based format\n\n\n\nGiven 1->2->3->4->5.\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nGiven a\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven a linked list, swap every two adjacent nodes and return the head.\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a linked list,\n\n\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven 1->2->3->4.\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven a\u00a0", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\nGiven a\u00a0linked list, swap pairs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#\n\n\nGiven a\ufffd", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nGiven a linked list, return its head\n\nGiven 1->2->3->4, swap every two adjacent nodes and return its head.\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a\n\n\nGiven", "\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nGiven a\u00a0linked list, swap every pair and return its head.\n\nExample:\n\n\n\nGiven 1->2->3->4.\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nGiven a linked list\n\n\n", "\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\nGiven a linked list, return its head.\n\nUse Call-Based format\n\n\n\nGiven\n\n\n\n\n\n\n\n\n\n\n\nGiven a linked list\n\nGiven", "\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nGiven 1->2->3->4 and swap every two adjacent nodes and return its head.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a linked list:\n\n\nGiven", "\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\nGiven 1->2->3->4.\n\n\n\n\n\n\n\n\n\n->4.\n\n\n\n\n\n\n\n\nGiven a linked list\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nGiven 1->2->3->4.\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a linked list:\n\n\nGiven"], "prompt": "\nQUESTION:\nGiven a\u00a0linked list, swap every two adjacent nodes and return its head.\n\nExample:\n\n\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\n\nNote:\n\n\n       Your algorithm should use only constant extra space.\n       You may not modify the values in the list's nodes, only nodes itself may be changed.\n# Definition for singly-linked list.\nclass ListNode:\n    def __init__(self, val=0, next=None):\n    self.val = val\n    self.next = next\nclass Solution:\n    def swapPairs(self, head: ListNode) -> ListNode:\n        \nUse Call-Based format\nANSWER:\n"}}