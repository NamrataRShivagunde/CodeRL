{"1810": {"code": ["\n\n\n\nExample 2:\n\nExample 3:\n\n\nExamples:\n\nExample 4:\n\n\n\n\nExample 5:\n\n\n\n\n\n\n\n:\n1:\n\n\"\"\n\n:\n\n\"]\nOutput: []\n\n:\n\n\n\n\",\"gta\"]\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta", "\n\nExample:\n\nExample 3:\n\nInput: names\nExplanation:\n\n\n\n\n\n\n\n\nExample:\n\nInput: names\nExplanation:\n\n\n\n:\n\n\n\n\n:\",\"wta\",\"wta\",\"wta\"]\n\n\n\n\n\"\n\n\n\n\n\n\n\n\nExample 6:\n\n\n\",\"wta\",\"w", "\"\"\n\n\n\n\n\n\n\n\n\n\nName:\nName of folder\n\nExplanation:\n\nName:\nName of folder\n\n\nExplanation:\n:\n:\n\n\n\nExplanation:\n\n\n:\"]\n\n\n\n\n\"\n\n\n\n\n\n\n\nExplanation:\n\nExplanation:\n\n\n\n\",\"wta(1", "\n\n\n\n\n\n\n\n\n\"onepiece\"\n\n\"onepiece(1)\"\n\"onepiece(2)\"\n\nExample 2:\n\nExplanation:\n\n:\n:\n\n\n\"onepiece\"\n\nExplanation:\n\n\n:\"]\n\n\n\n\"]\n\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta(", "\n\n\n\nExplanation:\n\n\nOutput:\n\n\n\n\n\nExample 1:\nInput: names = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"g\",\"e\"]\nExplanation:\n\n\n\n:\n:\n:\n\n:\",\"\"]\n\n\n\",\"\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta", "\nExplanation:\n\n\n\n\n\nOutput:\n\nReturns an array of strings of size n\nReturns the actual folder names.\n\nExample:\n\nExample 1:\n\nInput: names\n\n\n\n:\n:\n\n:\n\n\n\n\n\"\"]\nOutput:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta(1", "\n\n\n\n\n\n\n\nExample 3:\nInput: names = [\"fifa\",\"fifa\",\"gta\",\"gta\",\"gta\"]\nExplanation:\n\n\n\n\n:\n:\n\"\n:\"]\nExplanation:\n\n\n\",\"k\",\"k\"]\n\n\n\n\n:\n\"k\" --> k\n\n\n\",\"wta\",\"wta(", "\n\n\n\n\n\nExample 5:\n\nInput: names\nExplanation:\n\n\n\n\n\n\nExplanation:\n\nExplanation:\n\n\n\nExplanation:\n\n\n:\n\nExplanation:\n\n\n\n\n\"]\n\n\n\n\n\n\",\"fifa\",\"gta\"]\n\n\n\n\n\n:\n\n\n\",\"wta\",\"wta", "\n\n\n\n\nExample 1:\nInput: names = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"a\"]\n\n\n\n\n\n\n:\n:\n\"\"\",\"wta\",\"wta\",\"wta\"]\n:\n\",\"wta\",\"wta\"]\n\n\n\n\n\n\n\n\n\n\n\n\n\",\"k\",\"k\",\"k\"]\nOutput", "\n\nExample 1:\nInput: names = [\"pe\",\"pe\",\"pe\"]\nOutput: [\"pe\",\"pe\",\"pe\"]\n\nExample 2:\n\n\n\n\n\n\n\n:\n:\n\"\n\n\n:\",\"wta\",\"wta\",\"wta\"]\n:\n\n\n\"]\n\n\n\n\n2:\n\n\n\",\"wta\",\"wta\",\"wta(", "\n\n\n\n\nExample:\n\n\n\n\n\n\n\"onepiece\"\n\"onepiece(1)\"\n\"onepiece(2)\"\n\nExplanation:\n\n:\n:\n\nExample 1:\n\nExample 2:\n\n\n\nExample 3:\n\n\n\"]\n\n\n\n\"\n\n\n\n\n\n\n\n\n\n\n\",\"k\",\"k\"]\n", "\nExplanation:\n\n\n\n\n\nExplanation:\n\n\n\n\nExample 0:\n\nInput: names = [\"k\",\"k\",\"k\"]\nExplanation:\n\n\n:\n:\n\"\n\", \"k\",\"k\",\"k\"]\n\", \"k\", \"k\"]\n\n\n\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta(", "\n\n\n\n\n\n\n\n\n\n\n\n\n\nName:\n\nExplanation:\n\nName:\n\n\n\nName:\n\nExplanation:\n\n\n:\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta\"]\n\n\",\"\"]\n\nExample 6:\n\n\n\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta(1", "\n\n\n\n\n\n\n\n\n\n\nName:\n\nName:\n\nExample:\nName:\n\nName:\n\nQuestion:\n\nExample:\nName:\n\nQuestion:\n\nQuestion:\n\nQuestion:\n\n\nExample 4:\n\n\n\n\",\"\",\"\n\n\",\"gta\"]\n\n\n\n1:\n\n\n\n\",\"wta\",\"wta", "\n\n\n\n\n\n\n\n\n\n\nInput: names\n\nExplanation:\n\nExample 1:\n\nExample 2:\n\nExample 3:\n\n\nInput: names\n\nExplanation:\n\n\n\n\n\nExample 4:\n\n\n\n\n\n\"]\n\n\n\n\"]\n\n\n\n\n\n\n3:\n\n\n\n\",\"wta\",\"wta", "\n\n\n\n\n\n\n\n\n\n\n\nOutput:\n\nReturns an array of strings of size n\nReturns:\n\nReturns an array of strings of size n\n\n\n:\n:\n\n\nExample 1:\n\nExample 2:\n\n\nExample 3:\n\n\n\",\"\",\"\"]\n\",\"\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta(1", "\n\n\n\n\n\n\n\n\n\nInput: names = [\"a\",\"b\",\"c\",\"d\",\"e\",\"e\",\"e\",\"e\",\"e\"]\n\nExplanation:\n\n\n:\",\"gta\",\"gta\",\"gta\"]\n\nExplanation:\n\n\n\n:\",\"\",\"\n\n\",\"k\"]\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta", "\n\n\n\n\n\n\n\n\n\n\nName:\n\nName:\nName:\n\nExample:\n\nName:\nName:\n\nExample 1:\n\nOutput:\n\n\n:\n1:\n\n\nExample 2:\n\nExample 3:\n\n\n\"]\n\n\n\n\",\"\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta(", "\n\n\n\n\n\n\n\n\n\nExample 1:\n\n    Input: names\n\n    Output:\n\n    ans\n\n   \n\n\n\n\n:\n\"\"\n\nExample 2:\n\n   \n\n\n\",\"wta\",\"wta\"]\n\n\nExample 3:\n\n\n\n\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta", "\"\n\u00a0\n\n\n\n\n\n\n\n\n\nExample 3:\n\nExample 4:\n\nExample 5:\n\nInput: names\n\nExample 5:\n\n:\n\n\"\n\",\"wano\",\"wta\",\"wta\"]\n\nExample 6:\n\n\"]\n\n\n\n\"]\n\n\n\n\n\n\n\n\",\"wta\",\"wta\",\"wta("], "prompt": "\nQUESTION:\nGiven an array of strings names of size n. You will create n folders in your file system such that, at the ith minute, you will create a folder with the name names[i].\nSince two files cannot have the same name, if you enter a folder name which is previously used,\u00a0the system\u00a0will have a suffix\u00a0addition to its name in the form of (k),\u00a0where,\u00a0k is the smallest positive integer such that the obtained name remains unique.\nReturn an array of strings of length n where ans[i] is the actual name the system will assign to the ith folder when you create it.\n\u00a0\nExample 1:\nInput: names = [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\nOutput: [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\nExplanation: Let's see how the file system creates folder names:\n\"pes\" --> not assigned before, remains \"pes\"\n\"fifa\" --> not assigned before, remains \"fifa\"\n\"gta\" --> not assigned before, remains \"gta\"\n\"pes(2019)\" --> not assigned before, remains \"pes(2019)\"\n\nExample 2:\nInput: names = [\"gta\",\"gta(1)\",\"gta\",\"avalon\"]\nOutput: [\"gta\",\"gta(1)\",\"gta(2)\",\"avalon\"]\nExplanation: Let's see how the file system creates folder names:\n\"gta\" --> not assigned before, remains \"gta\"\n\"gta(1)\" --> not assigned before, remains \"gta(1)\"\n\"gta\" --> the name is reserved, system adds (k), since \"gta(1)\" is also reserved, systems put k = 2. it becomes \"gta(2)\"\n\"avalon\" --> not assigned before, remains \"avalon\"\n\nExample 3:\nInput: names = [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece\"]\nOutput: [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece(4)\"]\nExplanation: When the last folder is created, the smallest positive valid k is 4, and it becomes \"onepiece(4)\".\n\nExample 4:\nInput: names = [\"wano\",\"wano\",\"wano\",\"wano\"]\nOutput: [\"wano\",\"wano(1)\",\"wano(2)\",\"wano(3)\"]\nExplanation: Just increase the value of k each time you create folder \"wano\".\n\nExample 5:\nInput: names = [\"kaido\",\"kaido(1)\",\"kaido\",\"kaido(1)\"]\nOutput: [\"kaido\",\"kaido(1)\",\"kaido(2)\",\"kaido(1)(1)\"]\nExplanation: Please note that system adds the suffix (k) to current name even it contained the same suffix before.\n\n\u00a0\nConstraints:\n\n1 <= names.length <= 5 * 10^4\n1 <= names[i].length <= 20\nnames[i] consists of lower case English letters, digits and/or round brackets.\nclass Solution:\n    def getFolderNames(self, names: List[str]) -> List[str]:\n        \nUse Call-Based format\nANSWER:\n"}}