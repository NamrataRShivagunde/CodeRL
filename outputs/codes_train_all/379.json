{"379": {"code": ["\n\n\n\n\n\n\n\n\n    0 <= nums1 <= 10^5\n\n    1 <= nums2 <= 10^5\n\n\n\n\n\n    maxSum(self, nums1, nums2)\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n    maxSum = Solution(maxSum)\n\n\n    MaxSum =", "\n\n\n\n\n\n\nOutput: 0\nExplanation: 10^5\n\nExplanation: 10^7\n\nExample 5:\n\nInput: nums1 = 10^5\nOutput: 60\n\nExample 6:\n\n\n\n\n:\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    maxSum(self, [2, 3", "\n\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1, nums2) -> int\n\n    \"\"\"\n\n\n\n\n        maxSum(self, nums1, nums2) -> int\n        \n\n\n\n\n\n\n\n\n1 = [2,3,4,8]\n2 = [3]\n\n\n\n\n    Max", "\n\n\n\nExample:\n\nInput: nums1 = [1, 2, 3]\nOutput: 100\n\nExplanation:\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\nOutput: 100\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n    def maxSum(self, nums1:", "\n\n\n\n\n\n\n\n\n   \n    maxSum = maxSum\n\nExplanation:\n\n    maxSum(self, nums1, nums2)\n\n\n\nExplanation:\n\n\n    maxSum(self, nums1, nums2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def maxSum(self, nums1: List", "\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1: List[int], nums2: List[int]) -> int:\n    MaxSum(self, nums1, nums2)\n\n\n\n   \n    maxSum = Solution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def maxSum(self, nums1", "\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1: List[int], nums2: List[int]) -> int\n\n\n\n   \n    maxSum(self, nums1, nums2) -> int\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 5:\n\n    nums1 = [1]\n\n    nums", "\n\n\n\n\n\n\n\n\n\n    def maxSum(self, nums1: List[int], nums2: List[int]) -> int:\n   \n\n    maxSum(self, nums1, nums2) -> int\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def maxSum(self, nums1", "\n\n\n\n\n\n\n\nInput: nums1\nOutput: 40\nExplanation: 10^9 + 7\n\nExample 2:\n\nInput: nums2\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nmaxSum(nums1, nums2):\n\n\n\n    def", "\n\n\n\n\n\n\nExplanation:\n\u00a0A number of paths is given.\n\nExplanation:\n\u00a0The number of paths is given.\n\nExample 5:\n\nInput: nums1 = [4]\nOutput: 1\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    maxSum =", "\n\n\n\n\n\n\n\n\n   \n        return maxSum(self, nums1, nums2)\n\n\n\nOutput: 80\n\nExplanation:\n\n\n\n\n    def maxSum(self, nums1, nums2):\n        return 80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    nums1 = [1,2,3]", "\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1: List[int], nums2: List[int]) -> int:\n\n\n\n\n\n\n\n    maxSum(self, nums1, nums2)\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n    def maxSum(self, nums1:", "\n\n\n\nExplanation:\n\n\u00a0The function maxSum is defined as follows:\n\n\n\n\n\n\n\n\n\n\n\n    maxSum = maxSum\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\nOutput: 100\n\nExplanation:\n\n\n\n\n    def score(", "\n\n\n\n\n\n\n\n\n   \n        maxSum(self, nums1, nums2) -> int:\n        return 1\n        \n\nOutput: 0\n\n\n\n    maxSum(self, nums1, nums2) -> int\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\n    maxSum(self, nums1", "\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1, nums2):\n        return self.maxSum(nums1, nums2)\n\n\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= 2 <= 3 <= 4 <= 5\n\n\n\n\n\n\n    def maxSum(self, nums1", "\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1, nums2) -> int:\n        return 1\n\n\u00a0\n\n\n\n\nExplanation:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    nums1 = [1,2,3,4,5,9,10,", "\n\n\n\n\n\n\n\n\n\n   \n    maxSum(self, nums1, nums2) -> int\n\n\n\n    maxSum(self, nums1, nums2) -> int\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 < 0\n\n\n\n\n\n    maxSum(self, nums1, nums2)\n\n\n    def array", "\n\n\n\n\n\n\n\n\n\n    0 <= maxSum(self, nums1, nums2) <= 10^5\n\n\n\n    maxSum(self, nums1, nums2)\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Example 2:\n\n    Args:\n        nums1:\n       ", "\n\n\n\n\n\n\n\n\n\nExplanation:\n\nmaxSum(self, nums1, nums2) -> int\n\nExplanation:\n\n\n\n    maxSum(self, nums1, nums2):\n       ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n\n\n\n    \"\"\"\n    return maxSum", "\n\n\n\n\n\n\nExplanation:\n\nmaxSum(self, nums1, nums2)\n\nExplanation:\n\nMax sum is obtained with the score of the two arrays.\n\nExample 1:\n\nInput: nums1 = 3\nOutput: 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def"], "prompt": "\nQUESTION:\nYou are given two sorted arrays of distinct integers nums1 and nums2.\nA valid path is defined as follows:\n\nChoose\u00a0array nums1 or nums2 to traverse (from index-0).\nTraverse the current array from left to right.\nIf you are reading any value that is present in nums1 and nums2\u00a0you are allowed to change your path to the other array. (Only one repeated value is considered in the\u00a0valid path).\n\nScore is defined as the sum of uniques values in a valid path.\nReturn the maximum score you can obtain of all possible\u00a0valid\u00a0paths.\nSince the answer\u00a0may be too large,\u00a0return it modulo\u00a010^9 + 7.\n\u00a0\nExample 1:\n\nInput: nums1 = [2,4,5,8,10], nums2 = [4,6,8,9]\nOutput: 30\nExplanation:\u00a0Valid paths:\n[2,4,5,8,10], [2,4,5,8,9], [2,4,6,8,9], [2,4,6,8,10],  (starting from nums1)\n[4,6,8,9], [4,5,8,10], [4,5,8,9], [4,6,8,10]    (starting from nums2)\nThe maximum is obtained with the path in green [2,4,6,8,10].\n\nExample 2:\nInput: nums1 = [1,3,5,7,9], nums2 = [3,5,100]\nOutput: 109\nExplanation:\u00a0Maximum sum is obtained with the path [1,3,5,100].\n\nExample 3:\nInput: nums1 = [1,2,3,4,5], nums2 = [6,7,8,9,10]\nOutput: 40\nExplanation:\u00a0There are no common elements between nums1 and nums2.\nMaximum sum is obtained with the path [6,7,8,9,10].\n\nExample 4:\nInput: nums1 = [1,4,5,8,9,11,19], nums2 = [2,3,4,11,12]\nOutput: 61\n\n\u00a0\nConstraints:\n\n1 <= nums1.length <= 10^5\n1 <= nums2.length <= 10^5\n1 <= nums1[i], nums2[i] <= 10^7\nnums1 and nums2 are strictly increasing.\nclass Solution:\n    def maxSum(self, nums1: List[int], nums2: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}