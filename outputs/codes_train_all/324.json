{"324": {"code": ["\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n:\n        return n\n\n\n\n\u00a0\n\n       \n\n\n\n\n\n  , n: int):\n        return n\n\n\n\n   \n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe following will be equivalent to\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n -> int:\n\n          \n\n\n\u00a0\n\n\u00a0\n\n\n\n\n   :\n        pass\n        \n\n\n\n\n\nand.\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nn > 1\n\n\n\n\nGiven a positive 32-", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n:\n        return n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n\n       \n\n\n\n\n   ):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe smallest positive 32-bit integer was found.\n\n\n\nGiven a positive", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n        return n\n        \nUse Call-Based format\n   \n\n\n\n\n   ):\n        return n\n\n\n\n\n\n\n\nUse Call-Based formator less than n.\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive 32-bit integer n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n:\n        return self.nextGreaterElement(n)\n\n          \n\n\n\n\n   \n        return n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive 32-bit", "\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n:\n        return n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n       \n\n\n\n\n\n   :\n        return n\n\n\n\n\n\nUse Call-Based format\nand.\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a positive 32-", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n       \n        \n\n\n\n\n   :\n\n\n\n\n\n\nUse Call-Based format\nand\n\nUse Call-Based format\nExample 1:\n\nInput: 12\nOutput: 21\n\n\n\u00a0\n\n\u00a0\n\n\n\n\n   ...\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n -> int:\n\n          \n\n\n\n\n        return n\n\n\n\n   ):\n        return n\n\n\n\n\n\nin.\n\nReturns:\n-1\n\n\n\nUse Call-Based format\n\n\nn > 2\nn < 3\nn > 2\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n        return n\n        \n\n\n\n\u00a0\n\n\n\u00a0\n\n\n       \n\n\n\n   :\n\n\n\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive 32-bit integer n, you need", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n:\n        return n + 1\n\n\n          \n\n\n\n\n   ) -> int:\n        \n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nn = 1\n\n\n\n\u00a0\n\n\n\n\n\n\nn = 2", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n        return n + 1\n\n\n   \n\n\n\n\n   :\n\nUse Python-based format\n\n\n\nUse Call-Based format\n\n\nGiven a positive 32-bit integer n, you need to return n.\n\n\n\n       \nGiven a", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n        return n + 1\n\n\n\n\n       \n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 3:\n\n\nExample 4:", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n:\n        return n + 1\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn = 1\nn", "Use Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n:\n        return n + 1\n\n\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\n\n       \n\n\n\n  ,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n:\n        return n + 1\n\n          \n       \n\n\n\n\n\n\n   :\n       ...\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive 32-bit integer n, you", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n        return self.nextGreaterElement(n, self.nextGreaterElement(n, self))\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n        \n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n:\n        return self.nextGreaterElement(n)\n\n\n\u00a0\n\n\n\u00a0\n\n\n\u00a0\n\n       \n\n\n\n   :\n\n\n\n\n\nand\n\n\n\n\nExample 2:\n\n\n\n\n\nGiven a positive 32-bit integer n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n        return n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n       \n\n\n\n\n\n   :\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nThe following questions are available:\n\n\n\n\n\n\n\n\n\nExample 3:\n\n\n       \nGiven a positive", "\nUse Call-Based format\n\n\n\n\n\n\n -> int:\n        return self.nextGreaterElement(n)\n\n\nUse Call-Based format\n       \n        \nUse Call-Based format\n\n\n\n   :\n\n\n   \n   ...\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a positive 32-bit integer n, you need", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n -> int:\n        \n          \n\n\n\n\n  -> int:\n   :\n\n\n\n\n\n\n\nUse Call-Based formator less than n.\n\n\n\nUse Call-Based format\n\n\nn = -1\n\nExample 3:\n\n       \n\n    If"], "prompt": "\nQUESTION:\nGiven a positive 32-bit integer n, you need to find the smallest 32-bit integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive 32-bit integer exists, you need to return -1.\n\nExample 1:\n\n\nInput: 12\nOutput: 21\n\n\n\u00a0\n\nExample 2:\n\n\nInput: 21\nOutput: -1\nclass Solution:\n    def nextGreaterElement(self, n: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}