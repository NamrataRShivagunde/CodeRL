{"1947": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n   \n\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA and B should be lists of strings of lowercase letters and multiplicity.\n\n\n\n\n\nWe are given", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n    return self.wordSubsets(A,B)\n\n\n\n   \n        pass\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = [a,b]\n\nB = [", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nA[i] == b[i]\nB[i] = a[i]\n\n\n\n\n\n\n\n\n   \n    pass\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nWe are given two arrays A and B of words. A", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n   \n    return self.wordSubsets(A, B)\n\n\n\n\n   \n        pass\n\n\n\n\n\n\n\n\n\n\n\nWe are given two arrays A and B of words.\n\n\n\n\n\nWe are given two arrays A and B of", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n    return self.wordSubsets(A, B)\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA and b are two arrays A and B\n\n\n\nA and B are lists of words\n\n\nA = [\"", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n   \n    return self.wordSubsets(A, B)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA is a list of lowercase letters, b is a string of lowercase letters.\n\n\nA", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given two arrays A and B of words.\n\n\n\n\nWe are given two arrays A and B of", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n   \n    pass\n        \n\n\n\n   \n    return self.wordSubsets(A,B)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    A = [\"ar\",\"e\",\"o\",\"w", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n   \n    return self.wordSubsets(A, B)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = [\"foo\", \"bar\", \"zoo\"]\nB = [\"foo\"]\n\n\n\nA", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    return self.wordSubsets(A, B)\n\n\n\n\n\n    return self.wordSubsets(A, B)\n\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA[i] < B[i]\n\n\n\nWe are given", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\n\n\n\nA = [a,b]\nB = [a,b]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = A[i]\nB = B[i]\n\n\n\nA", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n   \n\n\n\n\n    We are given two arrays A and B of words.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA is a subset of b\n\nB is a subset of a\n\n\n\n\n\n\nWe are given two", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    def wordSubsets(self, A: List[str], B: List[str]):\n        return A\n\n\n\n\n\n   \n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = A + B\n\n\n\n\n\n\nA =", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        self.wordSubsets(A, B)\n        \n\n\n\n\n   \n        pass\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA[i] < b[i]\n\n\n\n\nA[i] < b", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n    return self.wordSubsets(A, B)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA, B = self.wordSubsets(A, B)\n\n\n\nA", "\n\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n   \n        return self.wordSubsets(A, B)\n        \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA[i] = b\n\nB[i] = a\n\n\n\n   ", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n    def wordSubsets(self, A: List[str], B: List[str]):\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    A = [\"aaa\",\"bb", "\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n    Use Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nA[i] is a subset of word", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n    return self.wordSubsets(A, B)\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given two arrays A and B\n\n\n\n\n\n\n\n\n\n\n\n\nWe are given two arrays A and B of words.", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def wordSubsets(self, A, B):\n        return self.wordSubsets(A, B)\n        \n\n\n\n\n   \n        \n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\nA = A[i]\nB"], "prompt": "\nQUESTION:\nWe are given two arrays A and B of words.\u00a0 Each word is a string of lowercase letters.\nNow, say that\u00a0word b is a subset of word a\u00a0if every letter in b occurs in a, including multiplicity.\u00a0 For example, \"wrr\" is a subset of \"warrior\", but is not a subset of \"world\".\nNow say a word a from A is universal if for every b in B, b\u00a0is a subset of a.\u00a0\nReturn a list of all universal words in A.\u00a0 You can return the words in any order.\n\u00a0\n\n\n\nExample 1:\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"e\",\"o\"]\nOutput: [\"facebook\",\"google\",\"leetcode\"]\n\n\nExample 2:\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"l\",\"e\"]\nOutput: [\"apple\",\"google\",\"leetcode\"]\n\n\nExample 3:\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"e\",\"oo\"]\nOutput: [\"facebook\",\"google\"]\n\n\nExample 4:\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"lo\",\"eo\"]\nOutput: [\"google\",\"leetcode\"]\n\n\nExample 5:\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"ec\",\"oc\",\"ceo\"]\nOutput: [\"facebook\",\"leetcode\"]\n\n\u00a0\nNote:\n\n1 <= A.length, B.length <= 10000\n1 <= A[i].length, B[i].length\u00a0<= 10\nA[i] and B[i] consist only of lowercase letters.\nAll words in A[i] are unique: there isn't i != j with A[i] == A[j].\nclass Solution:\n    def wordSubsets(self, A: List[str], B: List[str]) -> List[str]:\n        \nUse Call-Based format\nANSWER:\n"}}