{"1948": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n    return self.numPoints(points, r)\n\n\nYou have a very large square wall and a circular dartboard placed on the wall and a circular dartboard.\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a very large square wall", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nThe function numPoints() is used to determine the number of points.\n\n\n\n\n   \n\n\nYou have a very large square wall and a circular dartboard placed on the wall and a circular dartboard.\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\nyou have a very large", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard.\n\n\n   \n\n\nYou have a very large square wall and a circular dartboard.\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a very large square wall and", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n    return numPoints(self, points, r)\n    \nUse Call-Based format\n\n\n\n\n   \n\n\n1,2,4,8]\n\n\n\n\n\n\n\nYou have a very large square wall.\n\n\n\n\nYou have a very", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n    numPoints(self, points, r):\n\n    return numPoints(self, points, r)\n\nUse Call-Based format\n\n\n\n   :        \n\n\n\n\n\n\n\n\n\n\n1 <= r <= 1000\n\n\n\nIf you", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard.\n\n\n\n   \n        return points.length\n\n\n\n   \n        return self.numPoints(points, r)\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a very large square wall.\n\n\n\nYou have", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard placed on the wall.\n\n\n\n   \n       ...\n\n\nYou have a very large square wall and a circular dartboard placed on the wall.\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a very large", "\n\nUse Call-Based format\n\n\nUse Call-Based format\nYou have a very large square wall and a circular dartboard placed on the wall and a circular dartboard.\n\n\n\n   \n        pass\n\n\n\n   :\n\n\n\n\n\n\n\n\n\nYou have a very large square wall and a circular dartboard.\n\n\n\n\nyou have", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\nYou have a very large square wall and a circular dartboard placed on the wall.\n\n\n\n   \n\n\n\n   \n       ...\n\n2,2]\n\n\n\n\n\n\n\nYou have a very large square wall and a circular dartboard\n\n\n\nYou", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard.\n\n\n\n   \n    numPoints(self, points, r) -> int\n\n\n\n   :\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n\n\n1 <= r <= 10^4\n\nIf you", "\n\n\n\nUse Call-Based format\nUse Call-Based format\nYou have a very large square wall and a circular dartboard placed on the wall.\n\n\n\n\n   \n\n\n\n\nReturns:\n\n\n\n\n0,0]\n\n\n\n\n\n\n\n\n\nYou have a very large square wall and a circular dartboard.\n\n\n\nyou", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nYou have a very large square wall and a circular dartboard.\n\n\n\n   \n\n\n\n   \n        return self.numPoints(points, r)\n\n\n\n\nUse Call-Based format\n\n\n\n\nYou have a very large square wall and a circular dartboard.\n\n\nYou", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n    numPoints(self, points, r):\n        return len(points)\n\nUse Call-Based format\n\n\n\n\n   \n       ...\n        \n\n\n\n\n\n\n\n\nYou have a very large square wall and a circular dartboard.\n\n\n\n\nYou have a", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard placed on the wall.\n\n\n\n   \n\n\n\n   :\n       ...\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <= points[0].length <= 2\n\n\nYou have a very", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nYou have a very large square wall and a circular dartboard placed on the wall.\n\n\n\n\n   \n\n\n\n   \n        pass\n\n\n1,4]\n\n\n\n\n\n\nUse Call-Based format\n\n1\n\n\nYou have a very large square wall and", "\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n   \n\n\n\n   \n       ...\n\n\n\nYou have a very large square wall and a circular dartboard.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of points on a circular d", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard placed on the wall and a circular dartboard.\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\nYou have a very large square wall and a circular dartboard.\n\n\n\n\nYou have", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n   \n\nYou have a very large square wall and a circular dartboard placed on the wall and a circular dartboard placed on the wall.\n\n\n   :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou have a very large square wall and a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nReturns:\n\n1 <= r <= 5000\n\n\nExample 5:\n\nreturn points.length\n\nExample 6:\n\n\n\n\n   :\n\n2,0]\n\n\n\n\n\n\n\n\n\nYou have a very large square wall.\n\n\n\nYou have a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nYou have a very large square wall and a circular dartboard placed on the wall and a circular dartboard placed on the wall.\n\n\n\n   \n\n\n\n   :\n\n\n\n\n\n\n\n\n\u00a0\nUse Call-Based format\n\n\n\n\nYou have a very large square wall"], "prompt": "\nQUESTION:\nYou have a very large square wall and a circular dartboard placed on the wall.\u00a0You have been challenged to throw darts into the board blindfolded.\u00a0Darts thrown at the wall are represented as an array of\u00a0points on a 2D plane.\u00a0\nReturn\u00a0the maximum number of points that are within or\u00a0lie\u00a0on\u00a0any circular dartboard of radius\u00a0r.\n\u00a0\nExample 1:\n\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 2\nOutput: 4\nExplanation: Circle dartboard with center in (0,0) and radius = 2 contain all points.\n\nExample 2:\n\nInput: points = [[-3,0],[3,0],[2,6],[5,4],[0,9],[7,8]], r = 5\nOutput: 5\nExplanation: Circle dartboard with center in (0,4) and radius = 5 contain all points except the point (7,8).\n\nExample 3:\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 1\nOutput: 1\n\nExample 4:\nInput: points = [[1,2],[3,5],[1,-1],[2,3],[4,1],[1,3]], r = 2\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 100\npoints[i].length == 2\n-10^4 <= points[i][0], points[i][1] <= 10^4\n1 <= r <= 5000\nclass Solution:\n    def numPoints(self, points: List[List[int]], r: int) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}