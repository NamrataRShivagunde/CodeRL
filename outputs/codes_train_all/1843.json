{"1843": {"code": ["\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\n\n\n\u00a0\n\u00a0\u00a0\u00a0\n\n\n\n\n\n\n\n\n\n\u00a0\n 2\n\n 2\n\n\n\n\n\u00a0\n\n\u00a0\n\n\n\u00a0\n1.,\n\n 2 tweets", "\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\u00a0\n\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\n 2\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\u00a0 2\n\n\n\n\n 2 tweets,", "\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\n\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\u00a0\n\n\n\u00a0\u00a0\n\u00a0\n\n\n 2]\n 2]\n\n 2\n\n\n\n\n\n\n\n\n\u00a0\u00a0\u00a0\n,,\n\n 2 tweets,", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\u00a0\n\n\u00a0\n\n\n\n\n\u00a0\u00a0\n 2\n\u00a0\n\n\n\n\u00a0\n\n\n\u00a0\n\u00a0\n\n 2 tweets", "\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\n\n\u00a0\n\u00a0\u00a0\u00a0\n\n\n\u00a0\n\n\n\u00a0\n\n\u00a0\u00a0\n\n\n\n\n\n\n\n\n\n 2]\n\n 2]\n\n 2]\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n\n 2 tweets.\n\n\n 2 twe", "\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\u00a0\n\n\n\n\n 2\n\n 2\n\n\n\n\n\n\n\u00a0\n\n\n\u00a0\u00a0\n\n,\n\n 2 tweets", "\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\n\u00a0\u00a0\n\n\u00a0\n\n\n\n\n 2 tweets.\n\n 2 tweets.\n\n\u00a0\u00a0\n\n\n\n\n\n\u00a0\n1.,,\n\n 2 tweets, and", "\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\n\n\n\n\u00a0\n\u00a0\n\n\n 2\n\n 2\n\n\u00a0\n 2\n\n\n\n\n\n\u00a0\n\n\n\u00a0\n 2\n\n\u00a0\n 2 tweets", "\n\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\u00a0\u00a0\n\n\n\n\u00a0\u00a0\n\n\n\n\n\u00a0 2 tweets\n\n\n\n\n\n\u00a0\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\n 2", "\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\n\u00a0\n\n\u00a0\n\n\n\n 2 tweets.\n\n 2,\n\n\n\n\u00a0\n\n\n\n\n\n,\n\n 2 tweets, and 2)", "\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\n\n\n\u00a0\n\n\n\n 2 tweets.\n\n 2\n\n\n\n\n\n\n\u00a0\n\n\u00a0\n\u00a0\n\n\n\u00a0\n 2 twe", "\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\u00a0\u00a0\n\n\u00a0\n\n\n\u00a0\n\n\n\n 2\n\n 2\n\n\n\n\n\n\u00a0\u00a0\n\n\n\u00a0\u00a0\n,,\n\n 2 tweets", "\n\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\n\n\n\u00a0\u00a0\n\n\n\n 2\n 2\n\n\n\n\n\n\u00a0\n\n\n1. 2\n\n\u00a0\u00a0\n 2 tweets", "\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\n\u00a0\u00a0\n\u00a0\u00a0\n\n\u00a0\n\u00a0\u00a0\n\u00a0\n\n\n\n 2\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\n\n\n 2\n\n\u00a0\n 2 twe", "\n\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\n\n\n\u00a0\u00a0\n\n\n\n\u00a0\u00a0\u00a0\n 2\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\u00a0\u00a0\n\n\u00a0\n\n 2 twe", "\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\n\n\n 2.\n\n \u00a0\n\n\n\u00a0\n\n\n1. 2,\n 2]\n\n 2 tweets", "\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\n\n\n\n\u00a0\u00a0\n\u00a0\u00a0\n\n\n\n 2 tweets.\n 2 tweets.\n\n\n\n\n\n\u00a0\n\n\u00a0\u00a0\n\n\n\n\n\u00a0 2", "\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\n\u00a0\n\n\u00a0\u00a0\n\n\u00a0\u00a0\n\u00a0\u00a0\n\n\n\n\u00a0\u00a0\n\n 2\n\n\u00a0\n\n\n\u00a0\n\n\n1. 2\n\n\n\n\n 2 tweets,", "\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\n\u00a0\n\n\u00a0\u00a0\n\n\n\u00a0\u00a0\n\n\n\n 2 tweets.\n\n\u00a0 2 tweets\n\n\n\n\u00a0\n\n\u00a0 2 tweets.\n\u00a0\n 2 twe", "\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\u00a0\n\u00a0\u00a0\n\n\n\n\u00a0\n\u00a0\n\n\n\n\u00a0\u00a0\n\n\u00a0\n 2\n\n\n\n\n\n\n\n\n\n\n\u00a0\u00a0\n\u00a0\n\n\n 2 tweets"], "prompt": "\nQUESTION:\nImplement the class TweetCounts that supports two methods:\n1. recordTweet(string tweetName, int time)\n\nStores the tweetName at the recorded time (in seconds).\n\n2. getTweetCountsPerFrequency(string freq, string tweetName, int startTime, int endTime)\n\nReturns the total number of occurrences for the given tweetName per minute, hour, or day (depending on freq) starting from the startTime (in seconds) and ending at the endTime (in seconds).\nfreq is always minute, hour\u00a0or day, representing the time interval to get the total number of occurrences for the given\u00a0tweetName.\nThe first time interval always starts from the startTime, so the time intervals are [startTime, startTime + delta*1>, \u00a0[startTime + delta*1, startTime + delta*2>, [startTime + delta*2, startTime + delta*3>, ... , [startTime + delta*i, min(startTime + delta*(i+1), endTime + 1)> for some non-negative number i and delta (which depends on freq).\u00a0\u00a0\n\n\u00a0\nExample:\nInput\n[\"TweetCounts\",\"recordTweet\",\"recordTweet\",\"recordTweet\",\"getTweetCountsPerFrequency\",\"getTweetCountsPerFrequency\",\"recordTweet\",\"getTweetCountsPerFrequency\"]\n[[],[\"tweet3\",0],[\"tweet3\",60],[\"tweet3\",10],[\"minute\",\"tweet3\",0,59],[\"minute\",\"tweet3\",0,60],[\"tweet3\",120],[\"hour\",\"tweet3\",0,210]]\n\nOutput\n[null,null,null,null,[2],[2,1],null,[4]]\n\nExplanation\nTweetCounts tweetCounts = new TweetCounts();\ntweetCounts.recordTweet(\"tweet3\", 0);\ntweetCounts.recordTweet(\"tweet3\", 60);\ntweetCounts.recordTweet(\"tweet3\", 10);                             // All tweets correspond to \"tweet3\" with recorded times at 0, 10 and 60.\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 59); // return [2]. The frequency is per minute (60 seconds), so there is one interval of time: 1) [0, 60> - > 2 tweets.\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 60); // return [2, 1]. The frequency is per minute (60 seconds), so there are two intervals of time: 1) [0, 60> - > 2 tweets, and 2) [60,61> - > 1 tweet.\ntweetCounts.recordTweet(\"tweet3\", 120);                            // All tweets correspond to \"tweet3\" with recorded times at 0, 10, 60 and 120.\ntweetCounts.getTweetCountsPerFrequency(\"hour\", \"tweet3\", 0, 210);  // return [4]. The frequency is per hour (3600 seconds), so there is one interval of time: 1) [0, 211> - > 4 tweets.\n\n\u00a0\nConstraints:\n\nThere will be at most 10000\u00a0operations considering both recordTweet and getTweetCountsPerFrequency.\n0 <= time, startTime, endTime <=\u00a010^9\n0 <= endTime - startTime <= 10^4\nclass TweetCounts:\n    def __init__(self):\n    def recordTweet(self, tweetName: str, time: int) -> None:\n    def getTweetCountsPerFrequency(self, freq: str, tweetName: str, startTime: int, endTime: int) -> List[int]:\n# Your TweetCounts object will be instantiated and called as such:\n# obj = TweetCounts()\n# obj.recordTweet(tweetName,time)\n# param_2 = obj.getTweetCountsPerFrequency(freq,tweetName,startTime,endTime)\nUse Call-Based format\nANSWER:\n"}}