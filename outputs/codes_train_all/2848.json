{"2848": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ndef\n\nuse Call-Based format\n\n\n\n\n\ndef all(arr,n):\n\t\nUse Call-Based format\n\n\n:\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell`\nfind([3", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ndef\n\n\nuse Call-Based format\n\n# Use Call-Based format\n\n#\n\n\nUse Call-Based format\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n```\n\n[3", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ndef find(arr,n):\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\ndef\n\t\nUse Call-Based format\n:\n\n\n\nUse Call-Based format\n,\n\n\n\n\n\n\n\n\n\n\nIf you are not using the", "\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nfind([3,6,9,12])\nfind([3,6,9,12]) = 5.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Python format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n```\n\nHaskell", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nHaskell:\n\n\tfor i in range", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\ndef\n\n\nUse Call-Based format\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nfind([3,6,9,12,12],12) = 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n", "\n\n\n\nUse Call-Based format\n\nUse Call-Based format\ndef sum(arr,n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nHaskell\nfind(arr,4) = 4\n\n\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\ndef\n\ndef sum(arr,n):\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nUse Array-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n[3,6,9,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\n\t\nUse Python-Based format\n\nUse Python-based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Python-based format\n\n\nUse Python-based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\nfind([3,6", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\ndef find(arr,n):\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\ndef\n\n:\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n,,\n\n\n\n,\n\n\n\n\n\n\n```Kata", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\ndef __call__(self,arr,n):\n\n\n\n\n\n\n\n\t\n:\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\n# Example:\n\n\n# Example 2\n# Example 3:\n#", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\ndef find(arr,n):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nHaskell:\n\n```Hask", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\ndef\n\nfind(arr,n)\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n```\n\nHaskell\nfind(arr,12)\n\n", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format50004\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\n\t\nUse Call-Based format\n\n\n\n\n\nUse Array-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n\n---\n\n# Examples\n", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\ndef\n\ndef find(arr,n):\n\nUse Call-Based format\n\n\n\n\n\t\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\nHaskell\nfind([3", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe number `n` can be given to this function. \n\n\n\n\n\n\n\n[3", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format50001\n\n\ndef find(arr,n):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n```Haskell\nfind([3,6", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\ndef\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n```Haskell\nfind([", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\ndef find(arr,n):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n\n\n,\n\n\n\n\n\n\n\n\n\n\n\n```Haskell \nfind([3"], "prompt": "\nQUESTION:\nConsider the array `[3,6,9,12]`. If we generate all the combinations with repetition that sum to `12`, we get `5` combinations: `[12], [6,6], [3,9], [3,3,6], [3,3,3,3]`. The length of the sub-arrays (such as `[3,3,3,3]` should be less than or equal to the length of the initial array (`[3,6,9,12]`).  \n\nGiven an array of positive integers and a number `n`, count all combinations with repetition of integers that sum to `n`. For example: \n```Haskell\nfind([3,6,9,12],12) = 5.\n```\n\nMore examples in the test cases. \n\nGood luck!\n\nIf you like this Kata, please try:\n\n[Array combinations](https://www.codewars.com/kata/59e66e48fc3c499ec5000103)\n\n[Sum of prime-indexed elements](https://www.codewars.com/kata/59f38b033640ce9fc700015b)\ndef find(arr,n):\n\t\nUse Call-Based format\nANSWER:\n"}}