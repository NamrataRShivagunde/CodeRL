{"2880": {"code": ["\n# Example:\n# Use Call-Based format\n# Example:\n# Example:\n\n\n\n# Function:\n# Example:\n# Example:\n\n\n\n\n\n# Function:\n#\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n# Task:\n#\n\n\n1 -\n\n1 -\n\n# Task:\n#", "\n# Example:\n\n\n\n\n# Call-Based format\n#\n\n\n\n# Tests:\n#\n1 - `m` should be an integer\n#\n2 - `m` should be an integer\n3 - `m`\n#\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n", "\n# Call:\n#\n\n\n\n# Call-Based:\n# Call-Based format\n# Call-Based format\n# Call-Based format\n# Call-Based format\n# Task:\n# Task:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n# Task:\n\n\n\n# Task:\n", "\n# Arguments:\n#\n\n\n# Functions:\n#\n\n# The task:\n#\n\n\n# Todo:\n#\n#\n# Task:\n#\n\n\n\n# Example:\n#\n\n\n\n\n\n\n\n# A Task:\n# Task:\n\n\n\n\n\n# Task:\n# Task:\n#\n\n\n\n# Task", "\n# Example:\n# Example:\n# Example:\n#\n\n\n\n\n\n# Note:\n# Example:\n# Example:\n# Example:\n# Example:\n# Example:\n# Example:\n#\n\n##\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n# Task:\n\n\n\n# Task:\n", "\n# Call-Based format\n\n\n\n\n# Main:\n\n# Examples:\n\n#\n\n# Task:\n\n#\n\n\n# Example:\n#\n\n\n\n\n\n# Task:\n\n\n\n\n\n# Task:\n\n\t\n\n\n\n\n\n\n\n\n# Other:\n\n#\n\n\n# Task:\n\n# [7", "\n# Example:\n#\n\n\n\n# Function:\n#\nUse Call-Based format\n# Function:\n# Function:\n# Function:\n# Function:\n# The number of steps\n#\n# Note:\n\n\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Result:\n\n\n\n\n\n# Task:\n# The", "\n# User:\n\n# Command:\n\n#\n\n\n\n# Task:\n\n# Example:\n\n# Examples:\n\n\n\n## Call-Based:\n#\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Note:\n\n# Test:\n\n## Example:\n\n\n\n\n\n# Task:\n\n\n\n\n\n##", "\n\n# This is a function.\n# The function is called by the user.\n#\n\n\n# Function:\n\n\n\n# The function:\n#\n\n\n\n# Example:\n#\n\n\n\n\n\n\n\n\n# Task:\n\n# Example:\n# Task:\n\n\n\n# Task:\n\n\n\n2\n\n\n2 - `m", "\n# Note:\n# Example:\n#\n\n# Task:\n#\n\n# Task:\n#\n\n\n# Task:\n#\n\n\n# Task:\n#\n\n\n# Task:\n#\n\n\n\n\n\n## Result:\n#\n\n\n\n\n\n# Task:\n#\n\n\n# Task:\n#\n\n\n# -----------\n", "\n# Call-Based format\n\n\n\n\n# Return:\n\n#\n\n\n\n# Task:\n\n#\n\n\n# Task:\n\n\n\n\n\n\n\n\n\n## Function:\n\n## Return:\n\n# Call-Based format\n\n\n\n\n\n# Task:\n\n# Task:\n\n\n\n\n3\n\n\n\n# Task:", "\n# Function:\n# Use Call-Based format\n# Use Call-Based format\n# Call-Based format\n# Function:\n\n\n\n\n\n\n\n\n# Task:\n#\n\n\n\n\n\n\n\n\n\n\n## Call-Based:\n# Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n#\n# Step 1", "\n# Call-Based format:\n#\n#\n\n\n# Call-Based format:\n#\n\n# Return:\n#\n\n\n# Task:\n#\n\n\n\n## Note:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n#\n\n\n\n\n\n# Task:\n\n\n\n\n\n## Returns:", "\n# Note:\n# Use Call-Based format\n# Note:\n\n\n\n# Example:\n#\n\n\n# Call-Based format\n# Note:\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Example:\n# Example:\n# Example:\n# Example:\n## Example:\n\n\n\n3\n\n\n# Examples:\n", "\n# Syntax:\n#\n\n\n# Example:\n#\n\n# Example:\n# Call-Based format\n# Example:\n# Use Call-Based format\n\n\n\n# Task:\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Result:\n# Result\n\n2 -\n\n\n\n\n\n# Task:\n# Task:\n\n##", "\n# About:\n# Use Call-Based format\n# Note:\n\n\n\n# Call-Based:\n#\n\n\n\n\n\n# Example:\n#\n\n\n\n\n\n\n\n\n\n\n\n\n# The same as above:\n\n\n\n# Task:\n#\n\n\n# Task:\n#\n\n# Task:\n#\n# - `", "\n# Main:\n\n# Step:\n# Step 1\n# Step 2\n\n# Step 3\n\n\n\n\n\n\n\n# Functions:\n# Functions\n# Functions\n# Functions\n#\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Note:\n\n# Test:\n\n\n\n\n\n\n\n\n# Task:\n# Task1:", "\n# Note:\n# Use Call-Based format\n# Note:\n# Note:\n# Note:\n\n\n\n\n\n# Description:\n#\n\n\n# Example:\n\n2 -\n\n#\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n# Task:\n\n\n\n\n\n3\n\n\n# Task:\n#", "\n# Note:\n# Use Call-Based format\n\n\n\n# Run-Based:\n# Use Call-Based format\n# Call-Based:\n\n\n\n\n\n## Return:\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n#\n\n# Task:\n#\n\n\n# Task:\n\n\n\n# Task:", "\n# Syntax:\n\n\n#\n\n\n\n# Example:\n# Step:\n#\n\n# Function:\n#\n\n# Number:\n#\n\nA number m of the form 10x + y\n\n#\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Task:\n\n\n\n\n\n\n\n\n# Task:\n#\n# A"], "prompt": "\nQUESTION:\nA number m of the form 10x + y is divisible by 7 if and only if x \u2212 2y is divisible by 7. In other words, subtract twice the last digit \nfrom the number formed by the remaining digits. Continue to do this until a number known to be divisible or not by 7 is obtained; \nyou can stop when this number has *at most* 2 digits because you are supposed to know if a number of at most 2 digits is divisible by 7 or not.\n\nThe original number is divisible by 7 if and only if the last number obtained using this procedure is divisible by 7. \n\nExamples:\n\n1 - `m = 371 -> 37 \u2212 (2\u00d71) -> 37 \u2212 2 = 35` ; thus, since 35 is divisible by 7, 371 is divisible by 7. \n\nThe number of steps to get the result is `1`.\n\n2 - `m = 1603 -> 160 - (2 x 3) -> 154 -> 15 - 8 = 7` and 7 is divisible by 7. \n\n3 - `m = 372 -> 37 \u2212 (2\u00d72) -> 37 \u2212 4 = 33` ; thus, since 33 is not divisible by 7, 372 is not divisible by 7. \n\nThe number of steps to get the result is `1`.\n\n4 - `m = 477557101->47755708->4775554->477547->47740->4774->469->28` and 28 is divisible by 7, so is 477557101. \n\nThe number of steps is 7.\n\n# Task:\nYour task is to return to the function ```seven(m)``` (m integer >= 0) an array (or a pair, depending on the language) of numbers, \nthe first being the *last* number `m` with at most 2 digits obtained by your function (this last `m` will be divisible or not by 7), the second one being the number of steps to get the result.\n\n## Forth Note:\nReturn on the stack `number-of-steps, last-number-m-with-at-most-2-digits `\n\n## Examples:\n```\nseven(371) should return [35, 1]\nseven(1603) should return [7, 2]\nseven(477557101) should return [28, 7]\n```\ndef seven(m):\n\t\nUse Call-Based format\nANSWER:\n"}}