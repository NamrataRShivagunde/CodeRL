{"342": {"code": ["\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n...X\nXXXX\n...X\n\n\n\n\nCount how many battleships are in the board\nX\nX\nXXXX\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\nThe following code shows how to use the board\n\n\n\n\nGiven an 2D", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\nCount battleships in a boardX\nXXXX\n...X\nXXXX\n\n...X\nXXXX\n\n\n\n\n\n\n\n\n\n\n\n\nThis function counts how many battleships are in a board\n\n\n\n\nGiven a", "\nUse Call-Based format\nX\nXXXX\nXXXX\nXXXX\n...X\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n...X\n\n\n\n\nCount how many battleships are in the board\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    The number of b", "\nUse Call-Based format\n\n\n\n\n\n\n\n...X\nXXXX\n...X\n...X\nXXXX\n...X\n\n\n\nUse Call-Based format\nX\n...X\nXXXX\n...X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCount how many battleships are in a board\n\n\n\n\n\nGiven an 2D", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n...X\n...X\nXXXX\n...X\n\n\n\nUse Call-Based format\nX\nX\n\n\nUse Call-Based format\n\n\n\n\n\ncountBattleships(self, board):\n\n\n\n\n\n\n\n\n\n\nGiven a 2D board, count", "\n\n\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nX\nXXXX\n...X\n\n\n\n\nX\nXXXX\n...X\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nThe number of battleships in a 2D board is counted\n\n\n\n\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n...X\nXXXX\nXXXX\n...X\n\n\n\n\ncountBattleships(self, board):\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis example shows how many battleships are in it\n\n\n\n\nGiven", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\nX..X\n...X\nXXXX\n\n...X\n\n\n...X\n\n\n\n\n\n\n\n\n\n\n\n\nNo valid board given\n\n\n\n\n\n\n\n\n\nThe countBattleships function", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven an invalid board, count how many battleships are in it\n\nUse Call-Based formatX\n...X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe board is 2D.\n\n\n\n\n\n\n\n\n## Examples:\n\n...", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nX..X\n...X\nXXXX\n...X\n\n\n\nUse Call-Based format\n\nX\nXXXX\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\ncountBattleships()\n\n\n\n\nGiven a 2D", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n...X\nXXXX\n...X\n\n...X\nXXXX\n...X\nXXXX\n\n\n\n\n\n\nCount the number of battleships in a board\n\n\n\n\n\n\nCount the number of battleships in the board\n\n\n\n\nGiven an 2D", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\nX\n...X\nXXXX\n...X\n\n\n\nUse Call-Based format\n...X\nXXXX\n...X\n\n\n\n\n\nCount the number of battleships\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a 2D board,", "\n\n\n\n\nUse Call-Based format\n\n\n\nX\n...X\nXXXX\n...X\n\n\n\n\nYou received an invalid board\nX\n...X\nXXXX\n\n...X\n...X\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n1D board\n2D board\n\n\n\n\n\n\nGiven an 2D board,", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nThis function counts the number of battleships in a board\n\n\n\n\n...X\n...X\n...X\n\nX\n\n\n\n\nCount how many battleships are in a board\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a 2D board, count", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\nX\n...X\n...X\n\n...X\nXXXX\nXXXX\n\n\n\n\nCall-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven an 2D board,", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nThis method will return the number of battleships in the given board\n\nX\n\n\n\n\n\n\n\n\n\nThis method is not call-based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a 2D board", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nXXXX\n\n\n\nA Python 2D board with 2D boardsX\nXXXX\n...X\nX\n...X\nXXXX\n...X\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe above board contains 2", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nCount how many battleships are in a 2D board\n\n\n\n\n\nCount how many battleships are in a 2D boardX\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou received 2D boards\n\n\n\n\n\n\nGiven an 2D board, count", "\nUse Call-Based format\n\n\n\n\n\n\n\nXXXX\n...X\nXXXX\n...X\n\n...X\nXXXX\n\n\n\n\n...X\nXXXX\n...X\nX\nXXXX\n...X\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCount battleships\n\n\n\n\n\n\n\n\n\n\n* Parameters:\n*", "\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nThis function will count how many battleships are in the given boardX\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis function counts the number of battleships in a board\n\n\n\n\nGiven a 2D"], "prompt": "\nQUESTION:\nGiven an 2D board, count how many battleships are in it. The battleships are represented with 'X's, empty slots are represented with '.'s. You may assume the following rules:\n\n\nYou receive a valid board, made of only battleships or empty slots.\nBattleships can only be placed horizontally or vertically. In other words, they can only be made of the shape 1xN (1 row, N columns) or Nx1 (N rows, 1 column), where N can be of any size.\nAt least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.\n\n\nExample:\nX..X\n...X\n...X\n\nIn the above board there are 2 battleships.\n\nInvalid Example:\n...X\nXXXX\n...X\n\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\n\nFollow up:Could you do it in one-pass, using only O(1) extra memory and without modifying the value of the board?\nclass Solution:\n    def countBattleships(self, board: List[List[str]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}