{"2725": {"code": ["::\n\n\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\t\nUse Call-Based format\n\n\nThe Kata Kata Kata is a part of the Kata Kata. Kata\n\n\n\n\n\n\n\n\n\n\n\n\t* This Kata Kata is part of", "::\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n    gimme([2, 3, 2, 1, 2, 3, 2, 2, 2, 1, 1, 2]) => 0\n1 => 2\n\n\n\n\n\n\n\n\n\n    Use a function that when provided", "::\n\n\n\n:\n\n\n\n:\n\nIf you want to use a call-based format, use a call-based format\n\n\n\t\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif input_array is not a list:\n\n\nif you want to use a function that when", ":\nUse Call-Based format:\n\nUse Call-Based format\n\n:\n:\n\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n:\n\nUse Function-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n Kata, you can create a function that can be provided with a triplet of 3 elements\n\n\n\n\nAs", ":\nUse Call-Based format:\nUse Call-Based format\n\n:\n:\n\n\n\n:\n\n\n\n\n\n\nUse Kata-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n2* is a number that fits between *2* and *10* in the input array, and *2* is a number.\n\n\n\n\nAs", "::\nUse Call-Based format\n\n:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\nUse Call-Based format\n\n\n\n\n\n\n\nUse Kata to create a function that is a function that returns the index of the numerical element that lies between two consecutive numbers.\n:\n\ndef\n\n\tAs a", "::\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\n\n\n\t\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nThe index of the numerical element that fits between two elements in the input array is the index of the two elements in the input array.\n\n:\n\n\n\n\n\nAs", ":\nUse Call-Based format:\n\n\nUse Call-Based format:\n:\nUse Call-Based format\n\ndef\n\t\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t# Use Call-Based format\n\n\n# Use Kata format\n\n\n\n\n#\n\n* The Kata code is based on K", "::\n\nUse Call-Based format\n\n\n:\n\n\n\n\n:\n\nThe index of the numerical element in the input array will be the index of the corresponding function in the input array.\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nAs a part of this Kata, you need to create a", ":\n:\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\t\n\n\n\n\n\n\nUse Call-Based format\n\nIf you are using the Kata Kata, you have a function that takes an input array of three distinct numbers and returns the index of the corresponding numerical element.\n:\n\n:\n\n\n\n\nAs a part of", "::\nUse Call-Based format\n\nUse Call-Based format\n:\n\n\n\n:\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\nUse Kata:\nUse Kata format\nUse Kata format\n:\n\n\n\n\n\n\t# This Kata part of K", "::\n\nUse Call-Based format\n\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    # Example:\n\n    #gimme([2, 10, 2, 1])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* The Kata", ":\nUse Call-Based format:\n\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n   \n\n\n\n\nUse Call-Based format\n\n    gimme([1, 2, 3], [5, 10, 15]) => 1\n\n\n\n\n\n\n\n\n\n\nAs", "::\n\n\n\nUse Call-Based format\n:\n\ndef\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\tIf the index of a numerical element is not in the input array, the index of the first element in the input array is 0.\n:\n\n\n\n\n", ":\n\nUse Call-Based format:\n\n\n:\n\n:\n\n\n\n\n\n:\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    gimme([2, 2, 1]) => 0\n\n    gimme([5, 10, 11]) => 1\n\n\n\n\n\n\n\n\n\n\t\n\t", ":\nUse Call-Based format:\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n    gimme(input_array, (2, 3, 1)) => 0\n\n\n\n\n\n\n\n\n\n\n    Gimme in a function, returns the index of the", "::\nUse Call-Based format\n\n\n:\nUse Call-Based format\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n    gimme([5, 10, 5], [3, 1]) => 0\n\n    gimme([5, 10, 5]) => 1\n\n\n\n\n\n\n\n\n\n\n    If you have a", "::\nUse Call-Based format\n\n\nUse Call-Based format\n:\n\n\n\n\n:\n\n\n\n\n\n:\n\nUse Call-Based format\n\n    gimme(input_array, 2, 10) => 0\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\t\n\n\nA function that returns the index of a numerical element that", ":\n:\n\n\n\n:\n\n\n\n\n:\n\nUse Call-Based format\n\n   \n\t\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    gimme([2, 10, 10]) => 0\n\n    gimme([5, 10, 3]) => 1\n\n\n\n\n\n\n\n\n* This Kata,", ":\nUse Call-Based format:\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n    gimme([2, 10, 1, 5], [1, 2, 2]) => 0\n\n    gimme([2, 10]) => 1\n\n\n\n\n\n\n\n\n\n\tAs a"], "prompt": "\nQUESTION:\nAs a part of this Kata, you need to create a function that when provided with a triplet, returns the index of the numerical element that lies between the other two elements.\n\nThe input to the function will be an array of three distinct numbers (Haskell: a tuple).\n\nFor example:\n\n    gimme([2, 3, 1]) => 0\n\n*2* is the number that fits between *1* and *3* and the index of *2* in the input array is *0*.\n\nAnother example (just to make sure it is clear):\n\n    gimme([5, 10, 14]) => 1\n    \n*10* is the number that fits between *5* and *14* and the index of *10* in the input array is *1*.\ndef gimme(input_array):\n\t\nUse Call-Based format\nANSWER:\n"}}