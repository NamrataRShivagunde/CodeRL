{"1748": {"code": ["\n\n\n\n\n\nAlien Wave Stats: An array of integers representing the number of health points for an attack\n\nAlien Wave Stats: An array of integers representing the number of health points for an attack\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n target.\n\n\nAlien", "\n\n\n\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n breach.\n\n   ", "\n\nTower Defense\n\nTower Defense Map\n\nAlien Wave Stats\n\nBattle Wave Stats\n\nBattle Wave Stats\n\nD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map\n\nAlien\n\n\n\n first t", "\n\nAlien Wave Stats: An array/dict containing the target positions.\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map: An array of strings representing the target positions of our breach\n\nTower Defense Map:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map: An array second", "\n\n\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nD: turret positions\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\nAlien\n\n\n target. The", "\n\n\nTower Defense Map:\n\nThe image above shows the number of targets on the attacked path\n\nTower Defense Map:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n next target.\n", "\n\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\nAlien\n\n\n first t", "\n\n\n\n\n\n\n\n\n\n\nAlien Wave Map: An array/dict of integers representing each alien in sequence\nAlien Wave Stats: An array of integers representing each target position on attack.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlien\n\n\n\n\n player's turret", "\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n target.\n\nTech", "\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\nAlien Wave Stats:\n\n def", "\n\n\n\nAlien Wave Map: An array/dict of integers representing the target positions in the image above\n\nAlien Wave Stats: An array of integers representing the target positions in the image above\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n turret.\n\n", "\n\nTower Defense:\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n target.\n\nAlien Wave Stats", "\n\n\nAlien Wave Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n target.\n\nTechical", "\n\n\n\n\nTower Defense Map: A function to calculate the health points of the breaching path\n\nTower Defense Map: A function to calculate the health points\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n\n\n\n turret.\n\n\nA", "\n\n\nAlien Wave Map: An object/dict where keys are upper-case characters\nAlien Wave Stats: An array of integers\nAlien Wave Stats: An array of integers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n target.\n\nThe t", "\n\n\n\n\nBattle Area Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense\n\n\n\n\n\nTower Defense\n second", "\n\n\n\nAlien Wave Map: An object/dict where keys are upper-case characters.\nThe red square labeled D represents the target position.\nThe blue square labeled C represents the target position.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower\n\n\n\n\n first position on the target", "\n\n\nTower Defense Map:\nAlien Wave Stats:\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n player\n\n\n\nThe image above shows", "\n\n\n\nAlien Wave Stats: An array/dict representing an array of integers representing an integer representing a number of target points.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\n\n\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\nAlien Wave Stats: last", "\n\n\n\n\n\n\n\n\n\nTower Defense Map:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nAlien Wave Stats:\n\nD: target\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n target.\n\nAli"], "prompt": "\nQUESTION:\nThis kata is inspired by Tower Defense (TD), a subgenre of strategy video games where the goal is to defend a player's territories or possessions by obstructing enemy attackers, usually by placing defensive structures on or along their path of attack.\n\nObjective\nIt's the future, and hostile aliens are attacking our planet. We've set up a defense system in the planet's outer perimeter. You're tasked with calculating the severity of a breach.\nInput\nYour function will receive three arguments:\n\nBattle Area Map: An array/list of strings representing an n x n battle area.\n        Each string will consist of any of the following characters:\n\n0: entrance point (starting position on alien path)\n1: alien path\n\" \"(space character): not alien path\nA - Z: turret positions\n\n\nTurret Stats: An object/dict where keys are upper-case characters from the English alphabet (A - Z) and the values are subarrays in the following format:\n[n,m] - where n is the attack range of a turret, and m is its shot frequency per move\nAlien Wave Stats: An array of integers representing each individual alien in sequence. Each value is an integer representing the health points of each alien; health points are the number of turret shots required to take down a given alien. Integer zero (0) counts as a gap in sequence.\n\nOutput\nReturn the integer sum of total health points of all aliens that successfully penetrate our defense.\n\n\n\nThe image above shows the game state for the test example (below) at the 11th move.\nThe green square in the north-west quadrant represents the starting position of the alien wave, and the red square in the south-east quadrant represents the last position before breaching the defensive perimeter.\nThe blue circles represent the turret positions and are labeled A,B,C, and D.\nThe red alien is the first alien in the sequence.\nTechnical Details\n\nThere is only one path and it maintains a width of 1.\nAliens move one square per turn\nTurrets only fire toward enemies in range.\n        In the image above, the turret labeled A has the value [3,2], meaning it can fire at aliens that occupy any position within 3 squares' length in Euclidean distance (the pink squares). Turret A will fire 2 times per move.\n        The turret labeled D with the value [1,3] can fire at targets that enter the square above it and the square to the right of it (the blue shaded squares) at a rate of 3 times per move.\nTurret target priority is toward the enemy within shooting range that is furthest along on the path.\n        In the image above, turret A will target the red alien because it is the alien furthest along the path that is also within shooting range. This reduces the alien's health from 8 to 6.\n        The next alien will die from damage taken from turret B, which reduced its health from 4 to 0.\n        \nTurret shooting timing: All turrets with a target will fire their first shot in alphabetical order. The remaining turrets that still have more shots available will fire their next shot in alphabetical order once again. This repeats until there are no more shots to fire. This marks the end of the move.\nMatrix size: n x n where 20 >= n >= 7\nAlien list max length: 80\nFull Test Suite: 10 Fixed Tests, 100 Random Tests\nInput will always be valid.\n\nTest Example\n\n```python\nbattlefield = [\n        '0111111',\n        '  A  B1',\n        ' 111111',\n        ' 1     ',\n        ' 1C1111',\n        ' 111 D1',\n        '      1'\n]\nturrets = {'A':[3,2],'B':[1,4],'C':[2,2],'D':[1,3]}\nwave = [30,14,27,21,13,0,15,17,0,18,26]\ntower_defense(battlefield,turrets,wave); #10\n'''\nThe aliens that survive are the alien at wave[7] with an ending health of 2\nand the alien at wave[8] with an ending health of 8.'''\n```\nFor another Tower Defense-style challenge, check out Plants and Zombies\n\n\nIf you enjoyed this kata, be sure to check out [my other katas](https://www.codewars.com/users/docgunthrop/authored).\ndef __init__(self):\n\t\nUse Call-Based format\nANSWER:\n"}}