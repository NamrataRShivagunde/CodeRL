{"1942": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n    pass\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPerson with index=1 \n\n\n\n\nGiven the array favoriteCompanies where favoriteComp", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample:\n\nUse Call-Based format\n\n\n\n   \n        \"\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe number of people that are not in the array favoriteCompanies.\n\n", "\nUse Call-Based format\nUse Call-Based format\n\nExplanation:\n\u00a0\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n   \n    peopleIndexes(self, favoriteCompanies) -> List[int]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the array favoriteCompanies where favoriteCompanies", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n    def peopleIndexes(self, favoriteCompanies: List[str]):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns indices of the people\n\n\nGiven the array", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n        pass\n        \nUse Call-Based format\n\n\n\n\n\n        self.peopleIndexes(favoriteCompanies)\n\n\n\n\n\n\n\n\n\n\n\n\nThe answer is always in ascending order\n\nExample 4:\n\nExplanation:\n\n\n\n\nGiven the array favoriteComp", "\nUse Call-Based format\nUse Call-Based format\nExplanation:\n\n    Users are not a subset of people.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n   \n       \n\n\n\n\n\n\n\n\n\n\n\n[1] \nPerson with index=1 \n\n\nGiven the array favoriteCompanies where favoriteCompanies", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample 4:\n\nUse Call-Based format\n\nExample 5:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n\nGiven the array", "\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n    personsIndexes(self, favoriteCompanies) -> List[int]\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex of the person with index", "\n\nUse Call-Based format\n\n\n\n    peopleIndexes(self, favoriteCompanies: List[List[str]):\n        return self.peopleIndexes(favorites)\n\n\n\n\n\n\n\n\n\n   \n       \n\n\n\n\n\n\n\n\n\n\nExplanation:\n\n1 <=\u00a0favorites.length <= 100\n\n\nGiven the", "\nUse Call-Based format\n\n\n    \"\"\"\n\n\n\n\n\n\n   \n        peopleIndexes(self, favoriteCompanies) -> List[int]\n\n    \"\"\"\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nExample 1:\n\n\nGiven", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nPerson with index=0\n\nUse Call-Based format\n\nExample 4:\n\nUse Call-Based format\n\nExample 5:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the array favoriteCompanies where favoriteCompanies[", "\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample:\n\n   \n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nOutput: [0,1,2,3]\n\n\n\n\n\nGiven the array favoriteCompanies where favoriteCompanies", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n    def people(self, favoriteCompanies: List[List[str]]):\n        return [0,0,0]\n        \nUse Call-Based format\n\nEXAMPLE:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the array favoriteCompanies where", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n    def peopleIndexes(self, favoriteCompanies: List[List[str]]):\n        return favoriteCompanies\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the array favoriteCompanies where favoriteCompanies", "\nUse Call-Based format\nUse Call-Based format\n\nExample 1:\n    def peopleIndexes(self, favoriteCompanies: List[str]):\n\n\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the array favoriteCompanies where favoriteCompanies[", "\nUse Call-Based format\n\n\n\n    def peopleIndexes(self, favoriteCompanies: List[List[str]):\n        \"\"\"\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n1 <=\u00a0favoriteCompanies.length <= 100\n\n\n\n\n\nGiven the array", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n[1,2,3]\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample 1:\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the array favoriteCompanies where favoriteComp", "\nUse Call-Based format\nUse Call-Based format\nExplanation:\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample 0:\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1]\nThis is a call-based format\n\nGiven the", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nExample 3:\n\nUse Call-Based format\n\nExample 1:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 <=\u00a0#\n\nGiven the array favoriteComp", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nExample 1:\n   \n\n\n\n   \n       \n\n\n\n\n\n\n\n\n\n\n0 <=\u00a01 <=\u00a02 <=\u00a03\n\n\n\n\nGiven the array"], "prompt": "\nQUESTION:\nGiven the array favoriteCompanies where favoriteCompanies[i] is the list of favorites companies for the ith person (indexed from 0).\nReturn the indices of people whose list of favorite companies is not a subset of any other list of favorites companies. You must return the indices\u00a0in increasing order.\n\u00a0\nExample 1:\nInput: favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"google\",\"microsoft\"],[\"google\",\"facebook\"],[\"google\"],[\"amazon\"]]\nOutput: [0,1,4] \nExplanation: \nPerson with index=2 has favoriteCompanies[2]=[\"google\",\"facebook\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] corresponding to the person with index 0. \nPerson with index=3 has favoriteCompanies[3]=[\"google\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] and favoriteCompanies[1]=[\"google\",\"microsoft\"]. \nOther lists of favorite companies are not a subset of another list, therefore, the answer is [0,1,4].\n\nExample 2:\nInput: favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"leetcode\",\"amazon\"],[\"facebook\",\"google\"]]\nOutput: [0,1] \nExplanation: In this case favoriteCompanies[2]=[\"facebook\",\"google\"] is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"], therefore, the answer is [0,1].\n\nExample 3:\nInput: favoriteCompanies = [[\"leetcode\"],[\"google\"],[\"facebook\"],[\"amazon\"]]\nOutput: [0,1,2,3]\n\n\u00a0\nConstraints:\n\n1 <=\u00a0favoriteCompanies.length <= 100\n1 <=\u00a0favoriteCompanies[i].length <= 500\n1 <=\u00a0favoriteCompanies[i][j].length <= 20\nAll strings in favoriteCompanies[i] are distinct.\nAll lists of favorite companies are distinct, that is, If we sort alphabetically each list then favoriteCompanies[i] != favoriteCompanies[j].\nAll strings consist of lowercase English letters only.\nclass Solution:\n    def peopleIndexes(self, favoriteCompanies: List[List[str]]) -> List[int]:\n        \nUse Call-Based format\nANSWER:\n"}}