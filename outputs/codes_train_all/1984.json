{"1984": {"code": ["\nUse Call-Based format\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n   \n    3   9  20\n    /  \\  \\  3   20\n\n\n 3   20\n    \n    \n\n\n       \n\nGiven preorder and inorder traversal of a tree, construct the binary tree\n\n\n\n\n", "\nUse Call-Based format\n\n\n        \nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n  3   9\n   \n\n\n 3   15\n     \n   ...\n\n\n\n\n\n\n\ngiven preorder and inorder traversal of a tree, construct the binary tree.\n\n\n\n\n\n\n\n\n\nGiven preorder and in", "\n\n\n   \n    # Definition for a binary tree node.\n    # Definition for a binary tree node.\n\n\n\n\n   \n\n\n  3   15\n   \n\n\n\nUse Call-Based format\n  3   20\n    \n\n\n\n   \n\nUse Call-Based format\n\n\nGiven preorder and inorder traversal of a tree\n   \n\nGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n   / \\  \\  \\  \\  3\n   / \\  \\  \\  \\  \\  \\\n  \n        \n\n  3\n\n   \n       ...\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven preorder and inorder traversal of", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n   \n     \n\n\n\n\n    >>> buildTree(preorder, inorder)\n\n\n  3  15\n    \n        \nUse Call-Based format\n\n\n        \n\n\nGiven preorder and inorder traversal of a tree\n\n\n\n\nGiven preorder and", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n  3   9  20\n    / \\ \\  \\  \\  3   20\n   \n\n\n 3   20\n   \n   \n\n\n\n        # Definition for a binary tree node.\n\n\n\n\n\n\nGiven preorder and inorder traversal", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\nUse Call-Based format\n\n \n      \nGiven preorder and inorder traversal of a tree, construct the binary tree.\n\n 3   15\n\n   \n    val = 0\n\n\n\n        # Definition for a binary tree node.\n\n\n\n\n\ngiven preorder and inorder traversal of a tree\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n  \n\n\n\n\n\nUse Call-Based format\n\n  3\n   \n   \n        self.val = 0\n        \nUse Call-Based format\n\n\n   \n\n\nGiven preorder and inorder traversal of a tree\n\n\n\n", "\nUse Call-Based format\n\n   \n    # Definition for a binary tree node.\n\n\nUse Call-Based format\n\n       \n    # Definition for a binary tree node.\n\n\n\n\n   \n\nUse Call-Based format\n\n\n   \n   \n        \nUse Call-Based format\n\n\n   \n\n\n\n\n\n\n\n\nGiven preorder and inorder", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n   \n    3  9  20  3\n      /  \\  \\\n  3  15   7\n        \n\n  3   20\n    \n   ...\n\n\n\n# Definition for a binary tree node.\n\n\n\n\n\nGiven preorder and inorder traversal\n\n\nGiven preorder", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n  \n\nUse Call-Based format\nGiven preorder and inorder traversal of a tree, construct the binary tree.\n\n  3   20\n\n  \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nGiven preorder and inorder traversal", "\nUse Call-Based format\n\n\n    return self.buildTree(preorder, inorder)\n\nUse Call-Based format\n\n\n\n\n\n\n\n  3\n  \n\n\nUse Call-Based format\n\n 3\n  \n   \n       ...\n\n\nUse Call-Based format\n\n   \n\n\n\n\n\n\n\n\nGiven preorder and inorder traversal", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Recursive Call-Based format\n\n\n    9   3\n    20   15\n    \n\n    7\n        \n\n\n\nUse Call-Based format  3\n   \n   \n       \n\n\n   \n\nGiven preorder and inorder traversal of a tree, construct the binary tree\n\n\n\n\n", "\nUse Call-Based format\n\n   \n       \nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n  3  20\n   \n    9  3   15   7\n\n\n 3   15\n    \n\n\nUse Call-Based format\n\n   \n\n\n\n\n\nGiven preorder and inorder traversal of a tree:\n\n\n", "\nUse Call-Based format\n\n\n    \n\n\n\n\n\n\n\n\n  \n    3  9  3  20\n    \nUse Call-Based format\nGiven preorder and inorder traversal of a tree, construct the binary tree.\n 3   20\n   \n   \n\n\n\n\n\n\nGiven preorder and inorder traversal of a tree.\n\n\n\n\nGiven preorder", "\n\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n \n\n\nUse Call-Based format\n  3  20\n   \n   \n    val = 0\n    left = None\n    right = None\n    val = 0\n\n\n\n\n\n\nGiven preorder and inorder traversal of a tree, construct the binary tree\n\n\n", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n  \n\nGiven preorder and inorder traversal of a tree, construct the binary tree from the topological ordering.\n\n  3  9\n    /  \\\n \n\n\n\n\n       \n\nGiven preorder and inorder traversal\n\n\n\n\nGiven preorder and inorder", "\nUse Call-Based format\n\n\n       \n\n\nUse Call-Based format\n\n\n\n\n\n\n  3   20\n    /  \\  \\  \\  \\  \\  / \\\n\n\n\n 3  15\n    \n        self.val\n\n\n\n\n\n\nGiven preorder and inorder traversal of a tree, construct the tree\n\n\n\n\n", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n  3  15\n   \n\nGiven preorder and inorder traversal of a tree, construct the binary tree.\n\n  3   20\n   \n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven preorder and inorder traversal of a tree", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n  3   15\n   \n    9   3   20\n    3   15   7\n        \n\n  3   20\n   \n\n   ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven preorder and inorder traversal of"], "prompt": "\nQUESTION:\nGiven preorder and inorder traversal of a tree, construct the binary tree.\n\nNote:\nYou may assume that duplicates do not exist in the tree.\n\nFor example, given\n\n\npreorder =\u00a0[3,9,20,15,7]\ninorder = [9,3,15,20,7]\n\nReturn the following binary tree:\n\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n    self.val = val\n    self.left = left\n    self.right = right\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        \nUse Call-Based format\nANSWER:\n"}}