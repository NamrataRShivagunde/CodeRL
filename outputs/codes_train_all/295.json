{"295": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n    def isCrossing(self, x: List[int]) -> bool:\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n    def isCrossing(self, x: List[int]) -> bool:\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n\nYou are given an array x of n positive numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Use a Call-Based format", "\nUse Call-Based format\nUse Call-Based format\n\n\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x\n\n\n\n\nYou are", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def isCrossing(self, x: List[int]) -> bool:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    isSelfCrossing(self, x: List[int]) -> bool:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are", "\nUse Call-Based format\n\n\n\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n    return self.isSelfCrossing(x)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers.\n\n\n\n\n\nYou are", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n    pass\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nYou are given", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \n       \nYou are given an array x of n positive numbers.\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers.\n\n\n\n\nYou are given", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n    def isCrossing(self, x: List[int]) -> bool:\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers\n\n\n\n\nYou", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\nYou are given an array x of n positive numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou are given an array x of n positive numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers\n\n\n\n\n\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n        pass\n\n\n\nYou are given an array x of n positive numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you are given", "\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x\n\n\n\n\nYou are given an array", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nYou are given an array x of n positive numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        pass\n        \n\n\n\n\n\n\n\nYou are given an array x of n positive numbers.\n\n\n\n\n\n\n\n\n\n\n   \nYou are", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n   ?\n\n\n\n\n\n\n\n\n    isSelfCrossing(self, x: List[int]) -> bool:\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x\n\n\n\n\nYou are", "Use Call-Based format\nUse Call-Based format\n\n\n\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers.\n\n\n\n\nYou are given an", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nYou are given an array x of n positive numbers.\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    def isCrossing(self, x):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou are", "\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nYou are given an array x of n positive numbers.\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\nYou are given an array x of n positive numbers\n\n\n\n\n\n\n\n\n\n\n\nYou are"], "prompt": "\nQUESTION:\nYou are given an array x of n positive numbers. You start at point (0,0) and moves x[0] metres to the north, then x[1] metres to the west,\n    x[2] metres to the south,\n    x[3] metres to the east and so on. In other words, after each move your direction changes\n    counter-clockwise.\n\n\n    Write a one-pass algorithm with O(1) extra space to determine, if your path crosses itself, or not.\n\n\n\nExample 1:\n\nGiven x = [2, 1, 1, 2],\n?????\n?   ?\n???????>\n    ?\n\nReturn true (self crossing)\n\n\n\n\nExample 2:\n\nGiven x = [1, 2, 3, 4],\n????????\n?      ?\n?\n?\n?????????????>\n\nReturn false (not self crossing)\n\n\n\n\nExample 3:\n\nGiven x = [1, 1, 1, 1],\n?????\n?   ?\n?????>\n\nReturn true (self crossing)\n\n\n\nCredits:Special thanks to @dietpepsi for adding this problem and creating all test cases.\nclass Solution:\n    def isSelfCrossing(self, x: List[int]) -> bool:\n        \nUse Call-Based format\nANSWER:\n"}}