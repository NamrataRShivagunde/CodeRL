{"1826": {"code": ["\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n   \n       ...\n\n\nGiven a m * n matrix\u00a0mat and an integer K, return a list of answer\n\n\nUse Call-Based format\n\n\n\n\n\n\n]\n\n\n\n\u00a0\n\n\n\n\n\nGiven a m * n matrix:", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based formatm, n, K = 2\n\n\n   \n       \n\n\nGiven a m * n matrix and an integer K, return a matrix answer\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a m * n matrix and an integer K:\n\n\nGiven", "\n\nUse Call-Based format\n\n\n\n\n\n\n   \n\nGiven a m * n matrix and an integer K, return a list of lists of the block sums in the given order\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\nGiven a m * n matrix, return a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\nUse Call-Based format\n\n   :\n        raise NotImplementedError\n\nUse Call-Based format\n\nGiven a m * n matrix and an integer K, return a matrix answer\n\n\n\n\n\n\n\n\n45,45,45]\n\n\n\n\n\n\nGiven a m * n matrix, return a m", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        return mat\n\n\n\nGiven a m * n matrix, return a list of answer.\n\n\n\nUse Python-based format\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\nm * n matrix\nn = m\n\n\n\nGiven a m *", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.matrixBlockSum(mat, K)\n\n\n\n\n\n\nUse Call-Based format\n\nUse Python-based format\n\n\nUse Python-based format\n\n\n45, 45, 45]\n\n\n\n\n\n\nGiven a m * n matrix:\n", "\nUse Call-Based format\n\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n   :\n        return mat\n\nUse Method-Based format\n\nGiven a m * n matrix and an integer K, return a matrix answer\n   \n\n\n\n\n\n\n\n45, 45, 45\n\n\n\n\n\n\nGiven a m * n matrix, return an", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\nUse Call-Based format\n\n\n   \n\n\nGiven a m * n matrix, return a matrix block sum with a integer K:\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nGiven a m * n matrix, return an answer\n\n\n\nGiven a m", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n        pass\n\nUse Call-Only format\n\n1 <= mat[i][j] <= mat[r][c] <= mat[r][c][]\n\n\n\nUse Python-Based format\n\n\n\n\n\n\n\n\n\nGiven a m * n matrix, return an answer\n\n\nGiven a m", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        return mat\n        \n\n\nGiven a m * n matrix, and an integer K, return a list of matrix answer\n\n\nUse Call-Based format\n\n\n\n\n\n\n45, 45, 45\n\n\n\n\nGiven a m * n matrix,\n\nGiven a m *", "\nUse Call-Based format\n\n\n\n\ni == i\nj == j\nK == K\n\n\n    def matrixBlockSum(self, mat, K) -> List[List[int]]:\n        \nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n]\n\n\n\n\n\n\n\n\n\nGiven a m * n matrix, return a", "\nUse Call-Based format\n\n\n\n\nm, n, K\n\n\n   :\n        pass\n\n\nUse Method-Based format\n\nGiven a m * n matrix, return a list of answer\n\n\n\n\nUse Call-Based format\n\n\n\n\n45, 45, 45]\n\n\n\n\nGiven a m * n matrix\n\n\nGiven a m *", "\nUse Call-Based format\n\n\n\n\n\n\n\n   :\n        \nUse Call-Based format\nGiven a m * n matrix, return a list of all elements in the block.\n\n\n\n\n\nUse Python-based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nGiven a m * n matrix mat and an integer K:\n\n\nGiven a", "\n\n\n\nUse Call-Based format\n\n\n\n\n   \n       ...\n\n\nGiven a m * n matrix and an integer K, return a matrix answer\n\n\n\n\nUse Python-based format\nUse Python-Call-Based format\n\n\n\nUse Python-Based format45,45,45]\n\n\n\n\n\n\nGiven a m * n matrix\u00a0mat", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n   :\n    pass\n\n\n\nGiven a m * n matrix, return a list of lists of the summed block elements in the same order as the input matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a m * n matrix, return a listGiven", "\nUse Call-Based format\nUse Call-Based format\n\n\n\n\n\n   :\n    pass\n\nUse Call-Based format\nUse Call-Based format\nGiven a m * n matrix and an integer K, return a matrix answer.\n\n\n\n\n\n\n\n\n\n45,45,45]\n\n\n\n\n\n\n\n\nGiven a m * n matrix and", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.matrixBlockSum(mat, K)\n        \nUse Call-Based format\n\nGiven a m * n matrix and an integer K, return a matrix answer.\n\n\n        \n\n\n\n\n\n\n\n\n\n\nGiven a m * n matrix, return a m", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        return self.matrixBlockSum(mat, K)\n\n\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n, 45, 45]\n\n\n\nA sum of all elements in a matrix\n\n\n\nGiven a m * n matrix,", "\nUse Call-Based format\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n   \n        # Do something with mat\n        return mat\n\n\nGiven a m * n matrix, return an answer\n\n\n\nUse Call-Based format\n\n\n\n\n\u00a0\n\n\n\nGiven a m * n matrix, return a answer\n\n\nGiven a", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n   \n        pass\n\n\n\n\nGiven a m * n matrix, and an integer K, return a list of lists of integers\n\n\n\n\n\n\n\n\n45,45,45,45]\n\n\n\n\n\nGiven a m * n matrix mat, K:\n\n\nGiven"], "prompt": "\nQUESTION:\nGiven a m * n matrix\u00a0mat\u00a0and an integer K, return a matrix answer where each answer[i][j]\u00a0is the sum of all elements mat[r][c] for i - K <= r <= i + K, j - K <= c <= j + K, and (r, c) is a valid position in the matrix.\n\u00a0\nExample 1:\nInput: mat = [[1,2,3],[4,5,6],[7,8,9]], K = 1\nOutput: [[12,21,16],[27,45,33],[24,39,28]]\n\nExample 2:\nInput: mat = [[1,2,3],[4,5,6],[7,8,9]], K = 2\nOutput: [[45,45,45],[45,45,45],[45,45,45]]\n\n\u00a0\nConstraints:\n\nm ==\u00a0mat.length\nn ==\u00a0mat[i].length\n1 <= m, n, K <= 100\n1 <= mat[i][j] <= 100\nclass Solution:\n    def matrixBlockSum(self, mat: List[List[int]], K: int) -> List[List[int]]:\n        \nUse Call-Based format\nANSWER:\n"}}