{"2509": {"code": ["\nUse Call-Based format\n\n\n    minMoves(self, nums: List[int])\n\n\n\n\n\n\n\n\n\n\n   \n    minMoves(self, nums: List[int]):\n       \n\n\n\n\n\nUse Call-Based format\n\n\n elements by 1.\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of size", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\nUse Call-Based format\n\nUse Call-Based format\n\nOutput:\n3\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n          \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a non-empty", "\nUse Call-Based format\n\n\n    minMoves(self, nums: List[int])\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n1. Use Call-Based format\n\n\n\n\nGiven an array of size n,", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n    minMoves(self, nums: List[int])\n    minMoves(self, nums: List[int])\n\nUse Call-Based format\n\nUse Call-Based format\n        \n        \n\n\n\n\n\n\n\n\n\n\nGiven a", "\n\n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n[1,2,3]\n\nUse Call-Based format\n\n\n\n   \n    minMoves(nums: List[int])\n\n\n\n\n\n\n\n\n.\n\n\n\n\n\n\n\n\n\n\n    n = 2\n\n   \n    n = 3\n\n", "\nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n\n\n    \nUse Call-Based format\n\nOutput:\n3\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n   \n\n\n\n\n\n\n\n elements by 1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1,2,3", "\nUse Call-Based format\n\n\nminMoves()\n\n\n\n\n\n\n\n\n1\n2\n3\n\n\n\n\n    minMoves(self, nums: List[int])\n    minMoves(self, nums: List[int])\n\nOutput:\n2\n\n                        \n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n    minMoves(self, nums: List[int])\n\n\n\n\n\n\nOutput:\n3\n\n\n\n\n\n\n\n\nMin\n\nUse Call-Based format\n\n\n\n\n\n\n\n elements by 1.\n\n\n\n\n\n\n\nN = 2\n\nUse Call-Based format\n\n\n\n\nGiven", "\nUse Call-Based format\n\n\nminMoves(nums: List[int])\n\n\n\n\n\n   \n[1,2,3]\n\nOutput: 3\n\n\n\n\nMin    minMoves(nums: List[int])\n\n\n\n\n\nUse Call-Based format\n.\n\n\n\n\n\nGiven an array of size n,\n\n\nGiven a", "\nUse Call-Based format\n\n\n    minMoves(self, nums: List[int])\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n          \n\nUse Call-Based format\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n2 n - 1 elements by 1\n\n\n2 n - 1 elements by 1\n\n\n\nGiven", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n   \nminMoves(nums: List[int])\n\n\n\n\n   \n\n\n\nUse Call-Based format\n\n\nUse Call-Based format\n\n elements by 1.\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n[1,2,3]\n\n\n\nGiven an array", "\n\n\n\n\n\n\n\n\nUse Call-Based format\n    minMoves(self, nums: List[int]) -> int:\n\nminMoves(self, nums: List[int])\n\nUse Call-Based format\n\n\n\n   \n\n\n\n\n\n\n\n.\n\n\n\n\n\n\n\n\nn - 1 elements by 1\n\n\n\nGiven a", "\nUse Call-Based format\n\n\nUse Call-Based format\n\n\n\n\n\n\nOutput:\n3\n\nUse Call-Based format\n\nUse Call-Based format\n\n\n\n\n\n           \n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn - 1 elements by 1\n\nUse\nGiven a", "\nUse Call-Based format\n\n\n\n\n\n\n\n\n1\n\n2\n\n3\n\n4\n\n\n\n\n\n\n   \n    minMoves(self, nums) -> int:\n        \nUse Call-Based format\n\n\n\n\n\nUse Call-Based format\n elements by 1.\n\n\n\n\n\n\n\n\nGiven an array of size n,", "\n\n\n\n    minMoves(self, nums: List[int])\n\n\n\n\n\n    minMoves(self, nums: List[int]):\n   \n\n\n\n    minMoves(self, nums: List[int])\n        \nUse Call-Based format\n\nReturns:\n3\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\nGiven an", "\nUse Call-Based format\n\n    \n\n\n\n\n\n\n\nInput:\n[1,2,3]\n\nOutput:\n2\n\n\n\nUse Call-Based format\n\n\n           \n\n\n\n\n\n\nUse Call-Based format\n\n.\n\n\n\n\n\n\n\n\n\nn - 1 elements by 1\n\nn -\n\nGiven", "\nUse Call-Based format\n\n\nminMoves(self, nums: List[int]) -> int:\n\n\n\n\n\n\n\n\n\n\n    \nUse Call-Based format\n\nClass Solution:\n   \n    \n\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n1)\n\n2)\n3)\n\n\n   \n\nGiven", "\nUse Call-Based format\n\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\nUse Python-Based format\n\n\n\n   \n    minMoves(self, nums: List[int])\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n = len(nums)\n\n\n\n\nGiven an array of", "\nUse Call-Based format\n\n\n\n\n\n\n\n   \n\nUse Call-Based format\n\n\n\n    \nUse Call-Based format\n\nOutput:\n3\n\n\n        \n\nUse Python 3-based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n[1,2,", "\nUse Call-Based format\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n\n       minMoves(self, nums: List[int])\n\n\n\n\n\n\n\n\nUse Call-Based format\n\n elements by 1.\n\n\n\n\n\n\n\n2.\n\n\n\n\n[1,2"], "prompt": "\nQUESTION:\nGiven a non-empty integer array of size n, find the minimum number of moves required to make all array elements equal, where a move is incrementing n - 1 elements by 1.\n\nExample:\n\nInput:\n[1,2,3]\n\nOutput:\n3\n\nExplanation:\nOnly three moves are needed (remember each move increments two elements):\n\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\nclass Solution:\n    def minMoves(self, nums: List[int]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}