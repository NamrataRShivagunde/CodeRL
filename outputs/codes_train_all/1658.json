{"1658": {"code": ["\n\n\n\n\nUse Call-Based format\n\n\n\n\n\nexpand(x, digits)\n\n**Note**\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x, digit) --> [65, 24]\n\nexp(x, digits) --> []\n\n\n\n\n", "\n\n\n\n\n\n\nUse Call-Based format\n\n:\n\n\n\n\n\n\n\n\nTaylor expansion\n\n\n#Parameters:\n\n#Digit:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Examples:\n\n# Example:\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n#", "\n\n\n\n\n:\n\nexp(x, 2)\n\n\n\n\n\n#Example:\n\nexpand(x, 2)\n\n#Method:\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\nexp(x)\n\n\n\n#", "\n\n\n\nExpansion:\n\nuse Call-Based format\n\n#Example:\n\nexp(x, 2)\n\nExp(x, 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\nexp(x, 2)\n\n\n", "\n\n\n\n\n\n\n\n# The format:\n\n# Example:\nexp(x)\n\nexpand(x, digits)\n\n# Example:\n\nexp(x, 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x, 2) --> 65/24\n\n\n\n\n# Example", "\n\n\n\n\n#Method:\n\nUse Call-Based format\n\n:\n\nexpand(1, digit)\n\n#Example:\n\nexp(x, digit)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x, digits)\n\n\n\n\n# Method:\n\n", "\n\n\n\n\n\nUse Call-Based format\n\n\n\nexp(x) --> [1, 1]\n\nexp(x, 2) --> [1, 1]\n\n# Examples:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\n\n\n# Example:\n\n# Example", "\n\n\n\n\n\n\n\n\n\n\nTaylor expansion\n\n\nTaylor expansion\n\n\n\n\n\n**Note**\n\n\n\nUse Call-Based format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n# 1.5 --> 1.", "\n\n\n\nTaylor expansion\n\nTaylor expansion\n\nTaylor expansion\n\nTaylor expansion\n\n\nNOTE:\n\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x, digits)\n\n\n\n\n\nx = 1.0 /", "\n\n\n\nTaylor expansion\n\n#Method:\n\nExpand function\n\nexpand(x, digit):\n\nTaylor expansion\n\n#Method:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x) --> [x, 1]\n\n\n", "\n\n\n\n\n# Example:\n\n# The function `expand` takes two parameters\n\n:\n\n\n\n\n#Method:\n\n# Example:\n\n# Example:\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x)\n\n\n\n\n\n\n\n\n\n# Example:\n\nexp(x)\n\n\n", "\n\n\nexpand(x, digit)\n\n\n# Method:\n\nUse Call-Based format\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\nexpand(1, 3) --> [65, 24]\n\n\n\n\n\n\n\n\n\n\n\n\nx = exp(x)\n\n# Example:\n", "\n\n\n\n# Number:\n# Number of digits\n# Number of digits\n\n# Examples:\n#\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\nexp(x) --> [65, 24]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x, digits)\n\n\n\n\n# Parameters:\n", "\n\n\n\n\n# Note:\n\n\n\n\n\n# Example:\n\n# Use Call-Based format\n\n\n# Example:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x) --> 1/24\n\n\n\n\n\n\n\n\n\n\n\n# The aim is calculate `exp(", "\n\n\n\n\nUse Call-Based format\n\n:\n\n# Example:\n\nexp(x)\n\n\n\n\n\n\n\nUse Call-Based format\n\n**Note**\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexp(x) --> 0\n\n\n\n\n\n# Example:", "\n\n\n\nexpand(x, digit) --> [x, x]\n\n\n\n\n\n:\n\n\n\n\n\n\nTaylor expansion\n\n\n# Arguments:\n\ndigits = 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n# Example:\n\n\n# Example", "\n\n#Example:\n#expand(x, digits) --> [65, 24]\n\n#Method:\n#Example:\n#Example:\n#Example:\n#Example:\n\n\n\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n# Example:\n\n# The aim is calculate", "\n\n# Example:\n\n# Example:\n\n# Example:\n# Example:\n# Example:\n\n\n\n\n:\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n#Example:\n\n# Example:\n\n\n\n\n\n\n\n\n\n# Example:\n\n# Example:\n\n\n\n\n\n# Example:\n\n#", "\n\n\nexpand(x, digit)\n\n# Example:\n\nexp(x, digit)\n\n**Note**\n\n\n\n\n\n\n\n\n\nTaylor expansion:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n\n\n\n\n\nexp(x, 2) --> 65/24\n\n\n\n\n# Example", "\n\n\nexpand(x, digit)\n\n# Methods:\n\n# Example:\n# This is an example of an expansion of an exponential function\n\n\n:\n\n\n\n\n\n:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Example:\n# example:\n# 1.5^2\n\n# Example:\n#\n\n#"], "prompt": "\nQUESTION:\nThe aim is to calculate `exponential(x)` (written `exp(x)` in most math libraries) as an irreducible fraction, the numerator of this fraction having a given number of digits.\n\nWe call this function `expand`, it takes two parameters, `x` of which we want to evaluate the exponential, `digits` which is the required number of digits for the numerator. \n\nThe function `expand` will return an array of the form `[numerator, denominator]`; we stop the loop in the Taylor expansion (see references below) when the numerator has a number of digits `>=` the required number of digits\n\n# Examples:\n```\nexpand(1, 2) --> 65/24 (we will write this [65, 24] or (65, 24) in Haskell; \n65/24 ~ 2.708...)\n\nexpand(2, 5) --> [20947, 2835]\n\nexpand(3, 10) --> [7205850259, 358758400]\n\nexpand(1.5, 10) --> [36185315027,8074035200]\n```\n**Note**\n```expand(1,5) = [109601, 40320]``` is the same as ```expand(1, 6)```\n\n#Method:\nAs said above the way here is to use `Taylor expansion` of the exponential function though it is not always the best approximation by a rational.\n\n#References:\nhttps://en.wikipedia.org/wiki/Exponential_function#Formal_definition\n\nhttp://www.efunda.com/math/taylor_series/exponential.cfm\ndef expand(x, digit):\n\t\nUse Call-Based format\nANSWER:\n"}}